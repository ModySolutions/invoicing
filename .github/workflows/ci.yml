name: Build application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy to Mody Cloud
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: Cache Vendors
        id: cache-vendors
        uses: actions/cache@v3
        env:
          cache-name: cache-vendors
        with:
          path: vendors
          key: vendors
          restore-keys: |
            vendors

      - name: Plugins
        id: cache-plugins
        uses: actions/cache@v3
        env:
          cache-name: cache-plugins
        with:
          path: plugins
          key: plugins
          restore-keys: |
            plugins

      - name: Composer Install
        run: composer install --no-dev -o

      - name: Install backend dependencies
        uses: php-actions/composer@v6
        if: steps.cache

      - name: Use Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache Node Modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: node_modules
          restore-keys: |
            node_modules

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ“‚ Sync files to VPS using SSH
        run: |
          rsync -e "ssh -o StrictHostKeyChecking=no" -avz --no-times --delete --exclude='node_modules'  ./* ${{ vars.SSH_USER_SERVER }}:${{ vars.TARGET_DIR }} --verbose
        env:
          TARGET_DIR: ${{ vars.TARGET_DIR }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}