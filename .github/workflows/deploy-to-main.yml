name: Build & Deploy Invoice Module

on:
  push:
    branches: [ "main" ]

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy Invoices Plugin to Mody Cloud
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: Cache Vendors
        id: invoice-deploy-cache-vendor
        uses: actions/cache@v3
        env:
          cache-name: invoice-deploy-cache-vendor
        with:
          path: vendor
          key: invoice-deploy-vendor-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            invoice-deploy-vendor-${{ runner.os }}-

      - name: Composer Install
        run: composer install --no-dev -o
        if: steps.cache-vendor.outputs.cache-hit != 'true'

      - name: Install backend dependencies
        uses: php-actions/composer@v6
        if: steps.invoice-deploy-cache-vendor.outputs.cache-hit != 'true'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        id: invoice-deploy-cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: invoice-deploy-cache-node_modules
        with:
          path: node_modules
          key: invoice-deploy-node_modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            invoice-deploy-node_modules-${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: nvm use ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install --prod
        if: steps.invoice-deploy-cache-node_modules.outputs.cache-hit != 'true'

      - name: pnpm build
        run: pnpm build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸ“‚ Sync files to VPS using SSH
        run: |
          rsync -e "ssh -o StrictHostKeyChecking=no" -avz --no-times --exclude='node_modules' --exclude='.git*' --exclude='composer.lock' --exclude='package.json'  --exclude='pnpm*' --exclude='resources/blocks' --exclude='resources/scripts' --exclude='resources/scss' ./* ${{ vars.SSH_USER_SERVER }}:${{ vars.TARGET_DIR }} --verbose
        env:
          TARGET_DIR: ${{ vars.TARGET_DIR }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}