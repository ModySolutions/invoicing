/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Composite: () => (/* binding */ Composite),
/* harmony export */   CompositeItem: () => (/* binding */ CompositeItem),
/* harmony export */   FloatingArrow: () => (/* binding */ FloatingArrow),
/* harmony export */   FloatingDelayGroup: () => (/* binding */ FloatingDelayGroup),
/* harmony export */   FloatingFocusManager: () => (/* binding */ FloatingFocusManager),
/* harmony export */   FloatingList: () => (/* binding */ FloatingList),
/* harmony export */   FloatingNode: () => (/* binding */ FloatingNode),
/* harmony export */   FloatingOverlay: () => (/* binding */ FloatingOverlay),
/* harmony export */   FloatingPortal: () => (/* binding */ FloatingPortal),
/* harmony export */   FloatingTree: () => (/* binding */ FloatingTree),
/* harmony export */   arrow: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.arrow),
/* harmony export */   autoPlacement: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.autoPlacement),
/* harmony export */   autoUpdate: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.autoUpdate),
/* harmony export */   computePosition: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.computePosition),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow),
/* harmony export */   flip: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors),
/* harmony export */   hide: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.hide),
/* harmony export */   inline: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.inline),
/* harmony export */   inner: () => (/* binding */ inner),
/* harmony export */   limitShift: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.limitShift),
/* harmony export */   offset: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.offset),
/* harmony export */   platform: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.platform),
/* harmony export */   safePolygon: () => (/* binding */ safePolygon),
/* harmony export */   shift: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.shift),
/* harmony export */   size: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.size),
/* harmony export */   useClick: () => (/* binding */ useClick),
/* harmony export */   useClientPoint: () => (/* binding */ useClientPoint),
/* harmony export */   useDelayGroup: () => (/* binding */ useDelayGroup),
/* harmony export */   useDelayGroupContext: () => (/* binding */ useDelayGroupContext),
/* harmony export */   useDismiss: () => (/* binding */ useDismiss),
/* harmony export */   useFloating: () => (/* binding */ useFloating),
/* harmony export */   useFloatingNodeId: () => (/* binding */ useFloatingNodeId),
/* harmony export */   useFloatingParentNodeId: () => (/* binding */ useFloatingParentNodeId),
/* harmony export */   useFloatingPortalNode: () => (/* binding */ useFloatingPortalNode),
/* harmony export */   useFloatingRootContext: () => (/* binding */ useFloatingRootContext),
/* harmony export */   useFloatingTree: () => (/* binding */ useFloatingTree),
/* harmony export */   useFocus: () => (/* binding */ useFocus),
/* harmony export */   useHover: () => (/* binding */ useHover),
/* harmony export */   useId: () => (/* binding */ useId),
/* harmony export */   useInnerOffset: () => (/* binding */ useInnerOffset),
/* harmony export */   useInteractions: () => (/* binding */ useInteractions),
/* harmony export */   useListItem: () => (/* binding */ useListItem),
/* harmony export */   useListNavigation: () => (/* binding */ useListNavigation),
/* harmony export */   useMergeRefs: () => (/* binding */ useMergeRefs),
/* harmony export */   useRole: () => (/* binding */ useRole),
/* harmony export */   useTransitionStatus: () => (/* binding */ useTransitionStatus),
/* harmony export */   useTransitionStyles: () => (/* binding */ useTransitionStyles),
/* harmony export */   useTypeahead: () => (/* binding */ useTypeahead)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @floating-ui/react/utils */ "./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs");
/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @floating-ui/utils */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @floating-ui/react-dom */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");
/* harmony import */ var tabbable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tabbable */ "./node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @floating-ui/react-dom */ "./node_modules/.pnpm/@floating-ui+react-dom@2.1.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs");
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @floating-ui/react-dom */ "./node_modules/.pnpm/@floating-ui+dom@1.6.13/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");











/**
 * Merges an array of refs into a single memoized callback ref or `null`.
 * @see https://floating-ui.com/docs/react-utils#usemergerefs
 */
function useMergeRefs(refs) {
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (refs.every(ref => ref == null)) {
      return null;
    }
    return value => {
      refs.forEach(ref => {
        if (typeof ref === 'function') {
          ref(value);
        } else if (ref != null) {
          ref.current = value;
        }
      });
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, refs);
}

// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379
const SafeReact = {
  ...react__WEBPACK_IMPORTED_MODULE_0__
};

const useInsertionEffect = SafeReact.useInsertionEffect;
const useSafeInsertionEffect = useInsertionEffect || (fn => fn());
function useEffectEvent(callback) {
  const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(() => {
    if (true) {
      throw new Error('Cannot call an event handler while rendering.');
    }
  });
  useSafeInsertionEffect(() => {
    ref.current = callback;
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current(...args);
  }, []);
}

const ARROW_UP = 'ArrowUp';
const ARROW_DOWN = 'ArrowDown';
const ARROW_LEFT = 'ArrowLeft';
const ARROW_RIGHT = 'ArrowRight';
function isDifferentRow(index, cols, prevRow) {
  return Math.floor(index / cols) !== prevRow;
}
function isIndexOutOfBounds(listRef, index) {
  return index < 0 || index >= listRef.current.length;
}
function getMinIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    disabledIndices
  });
}
function getMaxIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    decrement: true,
    startingIndex: listRef.current.length,
    disabledIndices
  });
}
function findNonDisabledIndex(listRef, _temp) {
  let {
    startingIndex = -1,
    decrement = false,
    disabledIndices,
    amount = 1
  } = _temp === void 0 ? {} : _temp;
  const list = listRef.current;
  let index = startingIndex;
  do {
    index += decrement ? -amount : amount;
  } while (index >= 0 && index <= list.length - 1 && isDisabled(list, index, disabledIndices));
  return index;
}
function getGridNavigatedIndex(elementsRef, _ref) {
  let {
    event,
    orientation,
    loop,
    rtl,
    cols,
    disabledIndices,
    minIndex,
    maxIndex,
    prevIndex,
    stopEvent: stop = false
  } = _ref;
  let nextIndex = prevIndex;
  if (event.key === ARROW_UP) {
    stop && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
    if (prevIndex === -1) {
      nextIndex = maxIndex;
    } else {
      nextIndex = findNonDisabledIndex(elementsRef, {
        startingIndex: nextIndex,
        amount: cols,
        decrement: true,
        disabledIndices
      });
      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {
        const col = prevIndex % cols;
        const maxCol = maxIndex % cols;
        const offset = maxIndex - (maxCol - col);
        if (maxCol === col) {
          nextIndex = maxIndex;
        } else {
          nextIndex = maxCol > col ? offset : offset - cols;
        }
      }
    }
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      nextIndex = prevIndex;
    }
  }
  if (event.key === ARROW_DOWN) {
    stop && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
    if (prevIndex === -1) {
      nextIndex = minIndex;
    } else {
      nextIndex = findNonDisabledIndex(elementsRef, {
        startingIndex: prevIndex,
        amount: cols,
        disabledIndices
      });
      if (loop && prevIndex + cols > maxIndex) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex % cols - cols,
          amount: cols,
          disabledIndices
        });
      }
    }
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      nextIndex = prevIndex;
    }
  }

  // Remains on the same row/column.
  if (orientation === 'both') {
    const prevRow = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.floor)(prevIndex / cols);
    if (event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT)) {
      stop && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
      if (prevIndex % cols !== cols - 1) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex,
          disabledIndices
        });
        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {
          nextIndex = findNonDisabledIndex(elementsRef, {
            startingIndex: prevIndex - prevIndex % cols - 1,
            disabledIndices
          });
        }
      } else if (loop) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex - prevIndex % cols - 1,
          disabledIndices
        });
      }
      if (isDifferentRow(nextIndex, cols, prevRow)) {
        nextIndex = prevIndex;
      }
    }
    if (event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT)) {
      stop && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
      if (prevIndex % cols !== 0) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex,
          decrement: true,
          disabledIndices
        });
        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {
          nextIndex = findNonDisabledIndex(elementsRef, {
            startingIndex: prevIndex + (cols - prevIndex % cols),
            decrement: true,
            disabledIndices
          });
        }
      } else if (loop) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex + (cols - prevIndex % cols),
          decrement: true,
          disabledIndices
        });
      }
      if (isDifferentRow(nextIndex, cols, prevRow)) {
        nextIndex = prevIndex;
      }
    }
    const lastRow = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.floor)(maxIndex / cols) === prevRow;
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      if (loop && lastRow) {
        nextIndex = event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT) ? maxIndex : findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex - prevIndex % cols - 1,
          disabledIndices
        });
      } else {
        nextIndex = prevIndex;
      }
    }
  }
  return nextIndex;
}

/** For each cell index, gets the item index that occupies that cell */
function buildCellMap(sizes, cols, dense) {
  const cellMap = [];
  let startIndex = 0;
  sizes.forEach((_ref2, index) => {
    let {
      width,
      height
    } = _ref2;
    if (width > cols) {
      if (true) {
        throw new Error("[Floating UI]: Invalid grid - item width at index " + index + " is greater than grid columns");
      }
    }
    let itemPlaced = false;
    if (dense) {
      startIndex = 0;
    }
    while (!itemPlaced) {
      const targetCells = [];
      for (let i = 0; i < width; i++) {
        for (let j = 0; j < height; j++) {
          targetCells.push(startIndex + i + j * cols);
        }
      }
      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {
        targetCells.forEach(cell => {
          cellMap[cell] = index;
        });
        itemPlaced = true;
      } else {
        startIndex++;
      }
    }
  });

  // convert into a non-sparse array
  return [...cellMap];
}

/** Gets cell index of an item's corner or -1 when index is -1. */
function getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {
  if (index === -1) return -1;
  const firstCellIndex = cellMap.indexOf(index);
  const sizeItem = sizes[index];
  switch (corner) {
    case 'tl':
      return firstCellIndex;
    case 'tr':
      if (!sizeItem) {
        return firstCellIndex;
      }
      return firstCellIndex + sizeItem.width - 1;
    case 'bl':
      if (!sizeItem) {
        return firstCellIndex;
      }
      return firstCellIndex + (sizeItem.height - 1) * cols;
    case 'br':
      return cellMap.lastIndexOf(index);
  }
}

/** Gets all cell indices that correspond to the specified indices */
function getCellIndices(indices, cellMap) {
  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);
}
function isDisabled(list, index, disabledIndices) {
  if (disabledIndices) {
    return disabledIndices.includes(index);
  }
  const element = list[index];
  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';
}

var index = typeof document !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;

function sortByDocumentPosition(a, b) {
  const position = a.compareDocumentPosition(b);
  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {
    return -1;
  }
  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {
    return 1;
  }
  return 0;
}
function areMapsEqual(map1, map2) {
  if (map1.size !== map2.size) {
    return false;
  }
  for (const [key, value] of map1.entries()) {
    if (value !== map2.get(key)) {
      return false;
    }
  }
  return true;
}
const FloatingListContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  register: () => {},
  unregister: () => {},
  map: /*#__PURE__*/new Map(),
  elementsRef: {
    current: []
  }
});
/**
 * Provides context for a list of items within the floating element.
 * @see https://floating-ui.com/docs/FloatingList
 */
function FloatingList(props) {
  const {
    children,
    elementsRef,
    labelsRef
  } = props;
  const [map, setMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => new Map());
  const register = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    setMap(prevMap => new Map(prevMap).set(node, null));
  }, []);
  const unregister = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    setMap(prevMap => {
      const map = new Map(prevMap);
      map.delete(node);
      return map;
    });
  }, []);
  index(() => {
    const newMap = new Map(map);
    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);
    nodes.forEach((node, index) => {
      newMap.set(node, index);
    });
    if (!areMapsEqual(map, newMap)) {
      setMap(newMap);
    }
  }, [map]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FloatingListContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      register,
      unregister,
      map,
      elementsRef,
      labelsRef
    }), [register, unregister, map, elementsRef, labelsRef]),
    children: children
  });
}
/**
 * Used to register a list item and its index (DOM position) in the
 * `FloatingList`.
 * @see https://floating-ui.com/docs/FloatingList#uselistitem
 */
function useListItem(props) {
  if (props === void 0) {
    props = {};
  }
  const {
    label
  } = props;
  const {
    register,
    unregister,
    map,
    elementsRef,
    labelsRef
  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingListContext);
  const [index$1, setIndex] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const componentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const ref = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    componentRef.current = node;
    if (index$1 !== null) {
      elementsRef.current[index$1] = node;
      if (labelsRef) {
        var _node$textContent;
        const isLabelDefined = label !== undefined;
        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;
      }
    }
  }, [index$1, elementsRef, labelsRef, label]);
  index(() => {
    const node = componentRef.current;
    if (node) {
      register(node);
      return () => {
        unregister(node);
      };
    }
  }, [register, unregister]);
  index(() => {
    const index = componentRef.current ? map.get(componentRef.current) : null;
    if (index != null) {
      setIndex(index);
    }
  }, [map]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ref,
    index: index$1 == null ? -1 : index$1
  }), [index$1, ref]);
}

function renderJsx(render, computedProps) {
  if (typeof render === 'function') {
    return render(computedProps);
  }
  if (render) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(render, computedProps);
  }
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
    ...computedProps
  });
}
const CompositeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  activeIndex: 0,
  onNavigate: () => {}
});
const horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];
const verticalKeys = [ARROW_UP, ARROW_DOWN];
const allKeys = [...horizontalKeys, ...verticalKeys];

/**
 * Creates a single tab stop whose items are navigated by arrow keys, which
 * provides list navigation outside of floating element contexts.
 *
 * This is useful to enable navigation of a list of items that aren’t part of a
 * floating element. A menubar is an example of a composite, with each reference
 * element being an item.
 * @see https://floating-ui.com/docs/Composite
 */
const Composite = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function Composite(props, forwardedRef) {
  const {
    render,
    orientation = 'both',
    loop = true,
    rtl = false,
    cols = 1,
    disabledIndices,
    activeIndex: externalActiveIndex,
    onNavigate: externalSetActiveIndex,
    itemSizes,
    dense = false,
    ...domProps
  } = props;
  const [internalActiveIndex, internalSetActiveIndex] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);
  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;
  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);
  const elementsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);
  const renderElementProps = render && typeof render !== 'function' ? render.props : {};
  const contextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    activeIndex,
    onNavigate
  }), [activeIndex, onNavigate]);
  const isGrid = cols > 1;
  function handleKeyDown(event) {
    if (!allKeys.includes(event.key)) return;
    let nextIndex = activeIndex;
    const minIndex = getMinIndex(elementsRef, disabledIndices);
    const maxIndex = getMaxIndex(elementsRef, disabledIndices);
    const horizontalEndKey = rtl ? ARROW_LEFT : ARROW_RIGHT;
    const horizontalStartKey = rtl ? ARROW_RIGHT : ARROW_LEFT;
    if (isGrid) {
      const sizes = itemSizes || Array.from({
        length: elementsRef.current.length
      }, () => ({
        width: 1,
        height: 1
      }));
      // To calculate movements on the grid, we use hypothetical cell indices
      // as if every item was 1x1, then convert back to real indices.
      const cellMap = buildCellMap(sizes, cols, dense);
      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(elementsRef.current, index, disabledIndices));
      // last enabled index
      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(elementsRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);
      const maybeNextIndex = cellMap[getGridNavigatedIndex({
        current: cellMap.map(itemIndex => itemIndex ? elementsRef.current[itemIndex] : null)
      }, {
        event,
        orientation,
        loop,
        rtl,
        cols,
        // treat undefined (empty grid spaces) as disabled indices so we
        // don't end up in them
        disabledIndices: getCellIndices([...(disabledIndices || elementsRef.current.map((_, index) => isDisabled(elementsRef.current, index) ? index : undefined)), undefined], cellMap),
        minIndex: minGridIndex,
        maxIndex: maxGridIndex,
        prevIndex: getCellIndexOfCorner(activeIndex > maxIndex ? minIndex : activeIndex, sizes, cellMap, cols,
        // use a corner matching the edge closest to the direction we're
        // moving in so we don't end up in the same item. Prefer
        // top/left over bottom/right.
        event.key === ARROW_DOWN ? 'bl' : event.key === horizontalEndKey ? 'tr' : 'tl')
      })];
      if (maybeNextIndex != null) {
        nextIndex = maybeNextIndex;
      }
    }
    const toEndKeys = {
      horizontal: [horizontalEndKey],
      vertical: [ARROW_DOWN],
      both: [horizontalEndKey, ARROW_DOWN]
    }[orientation];
    const toStartKeys = {
      horizontal: [horizontalStartKey],
      vertical: [ARROW_UP],
      both: [horizontalStartKey, ARROW_UP]
    }[orientation];
    const preventedKeys = isGrid ? allKeys : {
      horizontal: horizontalKeys,
      vertical: verticalKeys,
      both: allKeys
    }[orientation];
    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {
      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {
        nextIndex = minIndex;
      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {
        nextIndex = maxIndex;
      } else {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: nextIndex,
          decrement: toStartKeys.includes(event.key),
          disabledIndices
        });
      }
    }
    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {
      var _elementsRef$current$;
      event.stopPropagation();
      if (preventedKeys.includes(event.key)) {
        event.preventDefault();
      }
      onNavigate(nextIndex);
      (_elementsRef$current$ = elementsRef.current[nextIndex]) == null || _elementsRef$current$.focus();
    }
  }
  const computedProps = {
    ...domProps,
    ...renderElementProps,
    ref: forwardedRef,
    'aria-orientation': orientation === 'both' ? undefined : orientation,
    onKeyDown(e) {
      domProps.onKeyDown == null || domProps.onKeyDown(e);
      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e);
      handleKeyDown(e);
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CompositeContext.Provider, {
    value: contextValue,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FloatingList, {
      elementsRef: elementsRef,
      children: renderJsx(render, computedProps)
    })
  });
});
/**
 * @see https://floating-ui.com/docs/Composite
 */
const CompositeItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function CompositeItem(props, forwardedRef) {
  const {
    render,
    ...domProps
  } = props;
  const renderElementProps = render && typeof render !== 'function' ? render.props : {};
  const {
    activeIndex,
    onNavigate
  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(CompositeContext);
  const {
    ref,
    index
  } = useListItem();
  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);
  const isActive = activeIndex === index;
  const computedProps = {
    ...domProps,
    ...renderElementProps,
    ref: mergedRef,
    tabIndex: isActive ? 0 : -1,
    'data-active': isActive ? '' : undefined,
    onFocus(e) {
      domProps.onFocus == null || domProps.onFocus(e);
      renderElementProps.onFocus == null || renderElementProps.onFocus(e);
      onNavigate(index);
    }
  };
  return renderJsx(render, computedProps);
});

let serverHandoffComplete = false;
let count = 0;
const genId = () => // Ensure the id is unique with multiple independent versions of Floating UI
// on <React 18
"floating-ui-" + Math.random().toString(36).slice(2, 6) + count++;
function useFloatingId() {
  const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => serverHandoffComplete ? genId() : undefined);
  index(() => {
    if (id == null) {
      setId(genId());
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    serverHandoffComplete = true;
  }, []);
  return id;
}
const useReactId = SafeReact.useId;

/**
 * Uses React 18's built-in `useId()` when available, or falls back to a
 * slightly less performant (requiring a double render) implementation for
 * earlier React versions.
 * @see https://floating-ui.com/docs/react-utils#useid
 */
const useId = useReactId || useFloatingId;

let devMessageSet;
if (true) {
  devMessageSet = /*#__PURE__*/new Set();
}
function warn() {
  var _devMessageSet;
  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {
    messages[_key] = arguments[_key];
  }
  const message = "Floating UI: " + messages.join(' ');
  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {
    var _devMessageSet2;
    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);
    console.warn(message);
  }
}
function error() {
  var _devMessageSet3;
  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    messages[_key2] = arguments[_key2];
  }
  const message = "Floating UI: " + messages.join(' ');
  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {
    var _devMessageSet4;
    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);
    console.error(message);
  }
}

/**
 * Renders a pointing arrow triangle.
 * @see https://floating-ui.com/docs/FloatingArrow
 */
const FloatingArrow = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FloatingArrow(props, ref) {
  const {
    context: {
      placement,
      elements: {
        floating
      },
      middlewareData: {
        arrow,
        shift
      }
    },
    width = 14,
    height = 7,
    tipRadius = 0,
    strokeWidth = 0,
    staticOffset,
    stroke,
    d,
    style: {
      transform,
      ...restStyle
    } = {},
    ...rest
  } = props;
  if (true) {
    if (!ref) {
      warn('The `ref` prop is required for `FloatingArrow`.');
    }
  }
  const clipPathId = useId();
  const [isRTL, setIsRTL] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);

  // https://github.com/floating-ui/floating-ui/issues/2932
  index(() => {
    if (!floating) return;
    const isRTL = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getComputedStyle)(floating).direction === 'rtl';
    if (isRTL) {
      setIsRTL(true);
    }
  }, [floating]);
  if (!floating) {
    return null;
  }
  const [side, alignment] = placement.split('-');
  const isVerticalSide = side === 'top' || side === 'bottom';
  let computedStaticOffset = staticOffset;
  if (isVerticalSide && shift != null && shift.x || !isVerticalSide && shift != null && shift.y) {
    computedStaticOffset = null;
  }

  // Strokes must be double the border width, this ensures the stroke's width
  // works as you'd expect.
  const computedStrokeWidth = strokeWidth * 2;
  const halfStrokeWidth = computedStrokeWidth / 2;
  const svgX = width / 2 * (tipRadius / -8 + 1);
  const svgY = height / 2 * tipRadius / 4;
  const isCustomShape = !!d;
  const yOffsetProp = computedStaticOffset && alignment === 'end' ? 'bottom' : 'top';
  let xOffsetProp = computedStaticOffset && alignment === 'end' ? 'right' : 'left';
  if (computedStaticOffset && isRTL) {
    xOffsetProp = alignment === 'end' ? 'left' : 'right';
  }
  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? computedStaticOffset || arrow.x : '';
  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? computedStaticOffset || arrow.y : '';
  const dValue = d || 'M0,0' + (" H" + width) + (" L" + (width - svgX) + "," + (height - svgY)) + (" Q" + width / 2 + "," + height + " " + svgX + "," + (height - svgY)) + ' Z';
  const rotation = {
    top: isCustomShape ? 'rotate(180deg)' : '',
    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',
    bottom: isCustomShape ? '' : 'rotate(180deg)',
    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'
  }[side];
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    ...rest,
    "aria-hidden": true,
    ref: ref,
    width: isCustomShape ? width : width + computedStrokeWidth,
    height: width,
    viewBox: "0 0 " + width + " " + (height > width ? height : width),
    style: {
      position: 'absolute',
      pointerEvents: 'none',
      [xOffsetProp]: arrowX,
      [yOffsetProp]: arrowY,
      [side]: isVerticalSide || isCustomShape ? '100%' : "calc(100% - " + computedStrokeWidth / 2 + "px)",
      transform: [rotation, transform].filter(t => !!t).join(' '),
      ...restStyle
    },
    children: [computedStrokeWidth > 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      clipPath: "url(#" + clipPathId + ")",
      fill: "none",
      stroke: stroke
      // Account for the stroke on the fill path rendered below.
      ,
      strokeWidth: computedStrokeWidth + (d ? 0 : 1),
      d: dValue
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path", {
      stroke: computedStrokeWidth && !d ? rest.fill : 'none',
      d: dValue
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("clipPath", {
      id: clipPathId,
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("rect", {
        x: -halfStrokeWidth,
        y: halfStrokeWidth * (isCustomShape ? -1 : 1),
        width: width + computedStrokeWidth,
        height: width
      })
    })]
  });
});

function createPubSub() {
  const map = new Map();
  return {
    emit(event, data) {
      var _map$get;
      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));
    },
    on(event, listener) {
      map.set(event, [...(map.get(event) || []), listener]);
    },
    off(event, listener) {
      var _map$get2;
      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);
    }
  };
}

const FloatingNodeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const FloatingTreeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);

/**
 * Returns the parent node id for nested floating elements, if available.
 * Returns `null` for top-level floating elements.
 */
const useFloatingParentNodeId = () => {
  var _React$useContext;
  return ((_React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;
};

/**
 * Returns the nearest floating tree context, if available.
 */
const useFloatingTree = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingTreeContext);

/**
 * Registers a node into the `FloatingTree`, returning its id.
 * @see https://floating-ui.com/docs/FloatingTree
 */
function useFloatingNodeId(customParentId) {
  const id = useId();
  const tree = useFloatingTree();
  const reactParentId = useFloatingParentNodeId();
  const parentId = customParentId || reactParentId;
  index(() => {
    if (!id) return;
    const node = {
      id,
      parentId
    };
    tree == null || tree.addNode(node);
    return () => {
      tree == null || tree.removeNode(node);
    };
  }, [tree, id, parentId]);
  return id;
}
/**
 * Provides parent node context for nested floating elements.
 * @see https://floating-ui.com/docs/FloatingTree
 */
function FloatingNode(props) {
  const {
    children,
    id
  } = props;
  const parentId = useFloatingParentNodeId();
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FloatingNodeContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      id,
      parentId
    }), [id, parentId]),
    children: children
  });
}
/**
 * Provides context for nested floating elements when they are not children of
 * each other on the DOM.
 * This is not necessary in all cases, except when there must be explicit communication between parent and child floating elements. It is necessary for:
 * - The `bubbles` option in the `useDismiss()` Hook
 * - Nested virtual list navigation
 * - Nested floating elements that each open on hover
 * - Custom communication between parent and child floating elements
 * @see https://floating-ui.com/docs/FloatingTree
 */
function FloatingTree(props) {
  const {
    children
  } = props;
  const nodesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);
  const addNode = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    nodesRef.current = [...nodesRef.current, node];
  }, []);
  const removeNode = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    nodesRef.current = nodesRef.current.filter(n => n !== node);
  }, []);
  const events = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createPubSub())[0];
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FloatingTreeContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      nodesRef,
      addNode,
      removeNode,
      events
    }), [addNode, removeNode, events]),
    children: children
  });
}

function createAttribute(name) {
  return "data-floating-ui-" + name;
}

function useLatestRef(value) {
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}

const safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');
function getDelay(value, prop, pointerType) {
  if (pointerType && !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerType)) {
    return 0;
  }
  if (typeof value === 'number') {
    return value;
  }
  return value == null ? void 0 : value[prop];
}
/**
 * Opens the floating element while hovering over the reference element, like
 * CSS `:hover`.
 * @see https://floating-ui.com/docs/useHover
 */
function useHover(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    onOpenChange,
    dataRef,
    events,
    elements
  } = context;
  const {
    enabled = true,
    delay = 0,
    handleClose = null,
    mouseOnly = false,
    restMs = 0,
    move = true
  } = props;
  const tree = useFloatingTree();
  const parentId = useFloatingParentNodeId();
  const handleCloseRef = useLatestRef(handleClose);
  const delayRef = useLatestRef(delay);
  const openRef = useLatestRef(open);
  const pointerTypeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const timeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1);
  const handlerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const restTimeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1);
  const blockMouseMoveRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  const performedPointerEventsMutationRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const unbindMouseMoveRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(() => {});
  const restTimeoutPendingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const isHoverOpen = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    var _dataRef$current$open;
    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;
    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';
  }, [dataRef]);

  // When closing before opening, clear the delay timeouts to cancel it
  // from showing.
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    function onOpenChange(_ref) {
      let {
        open
      } = _ref;
      if (!open) {
        clearTimeout(timeoutRef.current);
        clearTimeout(restTimeoutRef.current);
        blockMouseMoveRef.current = true;
        restTimeoutPendingRef.current = false;
      }
    }
    events.on('openchange', onOpenChange);
    return () => {
      events.off('openchange', onOpenChange);
    };
  }, [enabled, events]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    if (!handleCloseRef.current) return;
    if (!open) return;
    function onLeave(event) {
      if (isHoverOpen()) {
        onOpenChange(false, event, 'hover');
      }
    }
    const html = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating).documentElement;
    html.addEventListener('mouseleave', onLeave);
    return () => {
      html.removeEventListener('mouseleave', onLeave);
    };
  }, [elements.floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);
  const closeWithDelay = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (event, runElseBranch, reason) {
    if (runElseBranch === void 0) {
      runElseBranch = true;
    }
    if (reason === void 0) {
      reason = 'hover';
    }
    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);
    if (closeDelay && !handlerRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = window.setTimeout(() => onOpenChange(false, event, reason), closeDelay);
    } else if (runElseBranch) {
      clearTimeout(timeoutRef.current);
      onOpenChange(false, event, reason);
    }
  }, [delayRef, onOpenChange]);
  const cleanupMouseMoveHandler = useEffectEvent(() => {
    unbindMouseMoveRef.current();
    handlerRef.current = undefined;
  });
  const clearPointerEvents = useEffectEvent(() => {
    if (performedPointerEventsMutationRef.current) {
      const body = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating).body;
      body.style.pointerEvents = '';
      body.removeAttribute(safePolygonIdentifier);
      performedPointerEventsMutationRef.current = false;
    }
  });
  const isClickLikeOpenEvent = useEffectEvent(() => {
    return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;
  });

  // Registering the mouse events on the reference directly to bypass React's
  // delegation system. If the cursor was on a disabled element and then entered
  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    function onMouseEnter(event) {
      clearTimeout(timeoutRef.current);
      blockMouseMoveRef.current = false;
      if (mouseOnly && !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerTypeRef.current) || restMs > 0 && !getDelay(delayRef.current, 'open')) {
        return;
      }
      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);
      if (openDelay) {
        timeoutRef.current = window.setTimeout(() => {
          if (!openRef.current) {
            onOpenChange(true, event, 'hover');
          }
        }, openDelay);
      } else if (!open) {
        onOpenChange(true, event, 'hover');
      }
    }
    function onMouseLeave(event) {
      if (isClickLikeOpenEvent()) return;
      unbindMouseMoveRef.current();
      const doc = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating);
      clearTimeout(restTimeoutRef.current);
      restTimeoutPendingRef.current = false;
      if (handleCloseRef.current && dataRef.current.floatingContext) {
        // Prevent clearing `onScrollMouseLeave` timeout.
        if (!open) {
          clearTimeout(timeoutRef.current);
        }
        handlerRef.current = handleCloseRef.current({
          ...dataRef.current.floatingContext,
          tree,
          x: event.clientX,
          y: event.clientY,
          onClose() {
            clearPointerEvents();
            cleanupMouseMoveHandler();
            if (!isClickLikeOpenEvent()) {
              closeWithDelay(event, true, 'safe-polygon');
            }
          }
        });
        const handler = handlerRef.current;
        doc.addEventListener('mousemove', handler);
        unbindMouseMoveRef.current = () => {
          doc.removeEventListener('mousemove', handler);
        };
        return;
      }

      // Allow interactivity without `safePolygon` on touch devices. With a
      // pointer, a short close delay is an alternative, so it should work
      // consistently.
      const shouldClose = pointerTypeRef.current === 'touch' ? !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(elements.floating, event.relatedTarget) : true;
      if (shouldClose) {
        closeWithDelay(event);
      }
    }

    // Ensure the floating element closes after scrolling even if the pointer
    // did not move.
    // https://github.com/floating-ui/floating-ui/discussions/1692
    function onScrollMouseLeave(event) {
      if (isClickLikeOpenEvent()) return;
      if (!dataRef.current.floatingContext) return;
      handleCloseRef.current == null || handleCloseRef.current({
        ...dataRef.current.floatingContext,
        tree,
        x: event.clientX,
        y: event.clientY,
        onClose() {
          clearPointerEvents();
          cleanupMouseMoveHandler();
          if (!isClickLikeOpenEvent()) {
            closeWithDelay(event);
          }
        }
      })(event);
    }
    if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(elements.domReference)) {
      var _elements$floating;
      const ref = elements.domReference;
      open && ref.addEventListener('mouseleave', onScrollMouseLeave);
      (_elements$floating = elements.floating) == null || _elements$floating.addEventListener('mouseleave', onScrollMouseLeave);
      move && ref.addEventListener('mousemove', onMouseEnter, {
        once: true
      });
      ref.addEventListener('mouseenter', onMouseEnter);
      ref.addEventListener('mouseleave', onMouseLeave);
      return () => {
        var _elements$floating2;
        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);
        (_elements$floating2 = elements.floating) == null || _elements$floating2.removeEventListener('mouseleave', onScrollMouseLeave);
        move && ref.removeEventListener('mousemove', onMouseEnter);
        ref.removeEventListener('mouseenter', onMouseEnter);
        ref.removeEventListener('mouseleave', onMouseLeave);
      };
    }
  }, [elements, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, openRef, tree, delayRef, handleCloseRef, dataRef, isClickLikeOpenEvent]);

  // Block pointer-events of every element other than the reference and floating
  // while the floating element is open and has a `handleClose` handler. Also
  // handles nested floating elements.
  // https://github.com/floating-ui/floating-ui/issues/1722
  index(() => {
    var _handleCloseRef$curre;
    if (!enabled) return;
    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {
      performedPointerEventsMutationRef.current = true;
      const floatingEl = elements.floating;
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(elements.domReference) && floatingEl) {
        var _tree$nodesRef$curren;
        const body = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating).body;
        body.setAttribute(safePolygonIdentifier, '');
        const ref = elements.domReference;
        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;
        if (parentFloating) {
          parentFloating.style.pointerEvents = '';
        }
        body.style.pointerEvents = 'none';
        ref.style.pointerEvents = 'auto';
        floatingEl.style.pointerEvents = 'auto';
        return () => {
          body.style.pointerEvents = '';
          ref.style.pointerEvents = '';
          floatingEl.style.pointerEvents = '';
        };
      }
    }
  }, [enabled, open, parentId, elements, tree, handleCloseRef, isHoverOpen]);
  index(() => {
    if (!open) {
      pointerTypeRef.current = undefined;
      restTimeoutPendingRef.current = false;
      cleanupMouseMoveHandler();
      clearPointerEvents();
    }
  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return () => {
      cleanupMouseMoveHandler();
      clearTimeout(timeoutRef.current);
      clearTimeout(restTimeoutRef.current);
      clearPointerEvents();
    };
  }, [enabled, elements.domReference, cleanupMouseMoveHandler, clearPointerEvents]);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    function setPointerRef(event) {
      pointerTypeRef.current = event.pointerType;
    }
    return {
      onPointerDown: setPointerRef,
      onPointerEnter: setPointerRef,
      onMouseMove(event) {
        const {
          nativeEvent
        } = event;
        function handleMouseMove() {
          if (!blockMouseMoveRef.current && !openRef.current) {
            onOpenChange(true, nativeEvent, 'hover');
          }
        }
        if (mouseOnly && !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerTypeRef.current)) {
          return;
        }
        if (open || restMs === 0) {
          return;
        }

        // Ignore insignificant movements to account for tremors.
        if (restTimeoutPendingRef.current && event.movementX ** 2 + event.movementY ** 2 < 2) {
          return;
        }
        clearTimeout(restTimeoutRef.current);
        if (pointerTypeRef.current === 'touch') {
          handleMouseMove();
        } else {
          restTimeoutPendingRef.current = true;
          restTimeoutRef.current = window.setTimeout(handleMouseMove, restMs);
        }
      }
    };
  }, [mouseOnly, onOpenChange, open, openRef, restMs]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onMouseEnter() {
      clearTimeout(timeoutRef.current);
    },
    onMouseLeave(event) {
      if (!isClickLikeOpenEvent()) {
        closeWithDelay(event.nativeEvent, false);
      }
    }
  }), [closeWithDelay, isClickLikeOpenEvent]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference,
    floating
  } : {}, [enabled, reference, floating]);
}

const NOOP = () => {};
const FloatingDelayGroupContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  delay: 0,
  initialDelay: 0,
  timeoutMs: 0,
  currentId: null,
  setCurrentId: NOOP,
  setState: NOOP,
  isInstantPhase: false
});

/**
 * @deprecated
 * Use the return value of `useDelayGroup()` instead.
 */
const useDelayGroupContext = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingDelayGroupContext);
/**
 * Provides context for a group of floating elements that should share a
 * `delay`.
 * @see https://floating-ui.com/docs/FloatingDelayGroup
 */
function FloatingDelayGroup(props) {
  const {
    children,
    delay,
    timeoutMs = 0
  } = props;
  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer((prev, next) => ({
    ...prev,
    ...next
  }), {
    delay,
    timeoutMs,
    initialDelay: delay,
    currentId: null,
    isInstantPhase: false
  });
  const initialCurrentIdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const setCurrentId = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(currentId => {
    setState({
      currentId
    });
  }, []);
  index(() => {
    if (state.currentId) {
      if (initialCurrentIdRef.current === null) {
        initialCurrentIdRef.current = state.currentId;
      } else if (!state.isInstantPhase) {
        setState({
          isInstantPhase: true
        });
      }
    } else {
      if (state.isInstantPhase) {
        setState({
          isInstantPhase: false
        });
      }
      initialCurrentIdRef.current = null;
    }
  }, [state.currentId, state.isInstantPhase]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FloatingDelayGroupContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      ...state,
      setState,
      setCurrentId
    }), [state, setCurrentId]),
    children: children
  });
}
/**
 * Enables grouping when called inside a component that's a child of a
 * `FloatingDelayGroup`.
 * @see https://floating-ui.com/docs/FloatingDelayGroup
 */
function useDelayGroup(context, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    open,
    onOpenChange,
    floatingId
  } = context;
  const {
    id: optionId,
    enabled = true
  } = options;
  const id = optionId != null ? optionId : floatingId;
  const groupContext = useDelayGroupContext();
  const {
    currentId,
    setCurrentId,
    initialDelay,
    setState,
    timeoutMs
  } = groupContext;
  index(() => {
    if (!enabled) return;
    if (!currentId) return;
    setState({
      delay: {
        open: 1,
        close: getDelay(initialDelay, 'close')
      }
    });
    if (currentId !== id) {
      onOpenChange(false);
    }
  }, [enabled, id, onOpenChange, setState, currentId, initialDelay]);
  index(() => {
    function unset() {
      onOpenChange(false);
      setState({
        delay: initialDelay,
        currentId: null
      });
    }
    if (!enabled) return;
    if (!currentId) return;
    if (!open && currentId === id) {
      if (timeoutMs) {
        const timeout = window.setTimeout(unset, timeoutMs);
        return () => {
          clearTimeout(timeout);
        };
      }
      unset();
    }
  }, [enabled, open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);
  index(() => {
    if (!enabled) return;
    if (setCurrentId === NOOP || !open) return;
    setCurrentId(id);
  }, [enabled, open, setCurrentId, id]);
  return groupContext;
}

let rafId = 0;
function enqueueFocus(el, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    preventScroll = false,
    cancelPrevious = true,
    sync = false
  } = options;
  cancelPrevious && cancelAnimationFrame(rafId);
  const exec = () => el == null ? void 0 : el.focus({
    preventScroll
  });
  if (sync) {
    exec();
  } else {
    rafId = requestAnimationFrame(exec);
  }
}

function getAncestors(nodes, id) {
  var _nodes$find;
  let allAncestors = [];
  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;
  while (currentParentId) {
    const currentNode = nodes.find(node => node.id === currentParentId);
    currentParentId = currentNode == null ? void 0 : currentNode.parentId;
    if (currentNode) {
      allAncestors = allAncestors.concat(currentNode);
    }
  }
  return allAncestors;
}

function getChildren(nodes, id) {
  let allChildren = nodes.filter(node => {
    var _node$context;
    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);
  });
  let currentChildren = allChildren;
  while (currentChildren.length) {
    currentChildren = nodes.filter(node => {
      var _currentChildren;
      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {
        var _node$context2;
        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);
      });
    });
    allChildren = allChildren.concat(currentChildren);
  }
  return allChildren;
}
function getDeepestNode(nodes, id) {
  let deepestNodeId;
  let maxDepth = -1;
  function findDeepest(nodeId, depth) {
    if (depth > maxDepth) {
      deepestNodeId = nodeId;
      maxDepth = depth;
    }
    const children = getChildren(nodes, nodeId);
    children.forEach(child => {
      findDeepest(child.id, depth + 1);
    });
  }
  findDeepest(id, 0);
  return nodes.find(node => node.id === deepestNodeId);
}

// Modified to add conditional `aria-hidden` support:
// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts
let counterMap = /*#__PURE__*/new WeakMap();
let uncontrolledElementsSet = /*#__PURE__*/new WeakSet();
let markerMap = {};
let lockCount$1 = 0;
const supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;
const unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));
const correctElements = (parent, targets) => targets.map(target => {
  if (parent.contains(target)) {
    return target;
  }
  const correctedTarget = unwrapHost(target);
  if (parent.contains(correctedTarget)) {
    return correctedTarget;
  }
  return null;
}).filter(x => x != null);
function applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {
  const markerName = 'data-floating-ui-inert';
  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;
  const avoidElements = correctElements(body, uncorrectedAvoidElements);
  const elementsToKeep = new Set();
  const elementsToStop = new Set(avoidElements);
  const hiddenElements = [];
  if (!markerMap[markerName]) {
    markerMap[markerName] = new WeakMap();
  }
  const markerCounter = markerMap[markerName];
  avoidElements.forEach(keep);
  deep(body);
  elementsToKeep.clear();
  function keep(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    el.parentNode && keep(el.parentNode);
  }
  function deep(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    [].forEach.call(parent.children, node => {
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getNodeName)(node) === 'script') return;
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;
        const alreadyHidden = attr !== null && attr !== 'false';
        const currentCounterValue = counterMap.get(node) || 0;
        const counterValue = controlAttribute ? currentCounterValue + 1 : currentCounterValue;
        const markerValue = (markerCounter.get(node) || 0) + 1;
        counterMap.set(node, counterValue);
        markerCounter.set(node, markerValue);
        hiddenElements.push(node);
        if (counterValue === 1 && alreadyHidden) {
          uncontrolledElementsSet.add(node);
        }
        if (markerValue === 1) {
          node.setAttribute(markerName, '');
        }
        if (!alreadyHidden && controlAttribute) {
          node.setAttribute(controlAttribute, 'true');
        }
      }
    });
  }
  lockCount$1++;
  return () => {
    hiddenElements.forEach(element => {
      const currentCounterValue = counterMap.get(element) || 0;
      const counterValue = controlAttribute ? currentCounterValue - 1 : currentCounterValue;
      const markerValue = (markerCounter.get(element) || 0) - 1;
      counterMap.set(element, counterValue);
      markerCounter.set(element, markerValue);
      if (!counterValue) {
        if (!uncontrolledElementsSet.has(element) && controlAttribute) {
          element.removeAttribute(controlAttribute);
        }
        uncontrolledElementsSet.delete(element);
      }
      if (!markerValue) {
        element.removeAttribute(markerName);
      }
    });
    lockCount$1--;
    if (!lockCount$1) {
      counterMap = new WeakMap();
      counterMap = new WeakMap();
      uncontrolledElementsSet = new WeakSet();
      markerMap = {};
    }
  };
}
function markOthers(avoidElements, ariaHidden, inert) {
  if (ariaHidden === void 0) {
    ariaHidden = false;
  }
  if (inert === void 0) {
    inert = false;
  }
  const body = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(avoidElements[0]).body;
  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);
}

const getTabbableOptions = () => ({
  getShadowRoot: true,
  displayCheck:
  // JSDOM does not support the `tabbable` library. To solve this we can
  // check if `ResizeObserver` is a real function (not polyfilled), which
  // determines if the current environment is JSDOM-like.
  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'
});
function getTabbableIn(container, direction) {
  const allTabbable = (0,tabbable__WEBPACK_IMPORTED_MODULE_8__.tabbable)(container, getTabbableOptions());
  if (direction === 'prev') {
    allTabbable.reverse();
  }
  const activeIndex = allTabbable.indexOf((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(container)));
  const nextTabbableElements = allTabbable.slice(activeIndex + 1);
  return nextTabbableElements[0];
}
function getNextTabbable() {
  return getTabbableIn(document.body, 'next');
}
function getPreviousTabbable() {
  return getTabbableIn(document.body, 'prev');
}
function isOutsideEvent(event, container) {
  const containerElement = container || event.currentTarget;
  const relatedTarget = event.relatedTarget;
  return !relatedTarget || !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(containerElement, relatedTarget);
}
function disableFocusInside(container) {
  const tabbableElements = (0,tabbable__WEBPACK_IMPORTED_MODULE_8__.tabbable)(container, getTabbableOptions());
  tabbableElements.forEach(element => {
    element.dataset.tabindex = element.getAttribute('tabindex') || '';
    element.setAttribute('tabindex', '-1');
  });
}
function enableFocusInside(container) {
  const elements = container.querySelectorAll('[data-tabindex]');
  elements.forEach(element => {
    const tabindex = element.dataset.tabindex;
    delete element.dataset.tabindex;
    if (tabindex) {
      element.setAttribute('tabindex', tabindex);
    } else {
      element.removeAttribute('tabindex');
    }
  });
}

const HIDDEN_STYLES = {
  border: 0,
  clip: 'rect(0 0 0 0)',
  height: '1px',
  margin: '-1px',
  overflow: 'hidden',
  padding: 0,
  position: 'fixed',
  whiteSpace: 'nowrap',
  width: '1px',
  top: 0,
  left: 0
};
let timeoutId;
function setActiveElementOnTab(event) {
  if (event.key === 'Tab') {
    event.target;
    clearTimeout(timeoutId);
  }
}
const FocusGuard = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FocusGuard(props, ref) {
  const [role, setRole] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  index(() => {
    if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isSafari)()) {
      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor
      // on VoiceOver does trigger the onFocus event, so we can use the focus
      // trap element. On Safari, only buttons trigger the onFocus event.
      // NB: "group" role in the Sandbox no longer appears to work, must be a
      // button role.
      setRole('button');
    }
    document.addEventListener('keydown', setActiveElementOnTab);
    return () => {
      document.removeEventListener('keydown', setActiveElementOnTab);
    };
  }, []);
  const restProps = {
    ref,
    tabIndex: 0,
    // Role is only for VoiceOver
    role,
    'aria-hidden': role ? undefined : true,
    [createAttribute('focus-guard')]: '',
    style: HIDDEN_STYLES
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span", {
    ...props,
    ...restProps
  });
});

const PortalContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const attr = /*#__PURE__*/createAttribute('portal');
/**
 * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode
 */
function useFloatingPortalNode(props) {
  if (props === void 0) {
    props = {};
  }
  const {
    id,
    root
  } = props;
  const uniqueId = useId();
  const portalContext = usePortalContext();
  const [portalNode, setPortalNode] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const portalNodeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  index(() => {
    return () => {
      portalNode == null || portalNode.remove();
      // Allow the subsequent layout effects to create a new node on updates.
      // The portal node will still be cleaned up on unmount.
      // https://github.com/floating-ui/floating-ui/issues/2454
      queueMicrotask(() => {
        portalNodeRef.current = null;
      });
    };
  }, [portalNode]);
  index(() => {
    // Wait for the uniqueId to be generated before creating the portal node in
    // React <18 (using `useFloatingId` instead of the native `useId`).
    // https://github.com/floating-ui/floating-ui/issues/2778
    if (!uniqueId) return;
    if (portalNodeRef.current) return;
    const existingIdRoot = id ? document.getElementById(id) : null;
    if (!existingIdRoot) return;
    const subRoot = document.createElement('div');
    subRoot.id = uniqueId;
    subRoot.setAttribute(attr, '');
    existingIdRoot.appendChild(subRoot);
    portalNodeRef.current = subRoot;
    setPortalNode(subRoot);
  }, [id, uniqueId]);
  index(() => {
    // Wait for the root to exist before creating the portal node. The root must
    // be stored in state, not a ref, for this to work reactively.
    if (root === null) return;
    if (!uniqueId) return;
    if (portalNodeRef.current) return;
    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);
    if (container && !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(container)) container = container.current;
    container = container || document.body;
    let idWrapper = null;
    if (id) {
      idWrapper = document.createElement('div');
      idWrapper.id = id;
      container.appendChild(idWrapper);
    }
    const subRoot = document.createElement('div');
    subRoot.id = uniqueId;
    subRoot.setAttribute(attr, '');
    container = idWrapper || container;
    container.appendChild(subRoot);
    portalNodeRef.current = subRoot;
    setPortalNode(subRoot);
  }, [id, root, uniqueId, portalContext]);
  return portalNode;
}
/**
 * Portals the floating element into a given container element — by default,
 * outside of the app root and into the body.
 * This is necessary to ensure the floating element can appear outside any
 * potential parent containers that cause clipping (such as `overflow: hidden`),
 * while retaining its location in the React tree.
 * @see https://floating-ui.com/docs/FloatingPortal
 */
function FloatingPortal(props) {
  const {
    children,
    id,
    root,
    preserveTabOrder = true
  } = props;
  const portalNode = useFloatingPortalNode({
    id,
    root
  });
  const [focusManagerState, setFocusManagerState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const beforeOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const afterOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const beforeInsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const afterInsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const modal = focusManagerState == null ? void 0 : focusManagerState.modal;
  const open = focusManagerState == null ? void 0 : focusManagerState.open;
  const shouldRenderGuards =
  // The FocusManager and therefore floating element are currently open/
  // rendered.
  !!focusManagerState &&
  // Guards are only for non-modal focus management.
  !focusManagerState.modal &&
  // Don't render if unmount is transitioning.
  focusManagerState.open && preserveTabOrder && !!(root || portalNode);

  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!portalNode || !preserveTabOrder || modal) {
      return;
    }

    // Make sure elements inside the portal element are tabbable only when the
    // portal has already been focused, either by tabbing into a focus trap
    // element outside or using the mouse.
    function onFocus(event) {
      if (portalNode && isOutsideEvent(event)) {
        const focusing = event.type === 'focusin';
        const manageFocus = focusing ? enableFocusInside : disableFocusInside;
        manageFocus(portalNode);
      }
    }
    // Listen to the event on the capture phase so they run before the focus
    // trap elements onFocus prop is called.
    portalNode.addEventListener('focusin', onFocus, true);
    portalNode.addEventListener('focusout', onFocus, true);
    return () => {
      portalNode.removeEventListener('focusin', onFocus, true);
      portalNode.removeEventListener('focusout', onFocus, true);
    };
  }, [portalNode, preserveTabOrder, modal]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!portalNode) return;
    if (open) return;
    enableFocusInside(portalNode);
  }, [open, portalNode]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(PortalContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      preserveTabOrder,
      beforeOutsideRef,
      afterOutsideRef,
      beforeInsideRef,
      afterInsideRef,
      portalNode,
      setFocusManagerState
    }), [preserveTabOrder, portalNode]),
    children: [shouldRenderGuards && portalNode && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FocusGuard, {
      "data-type": "outside",
      ref: beforeOutsideRef,
      onFocus: event => {
        if (isOutsideEvent(event, portalNode)) {
          var _beforeInsideRef$curr;
          (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();
        } else {
          const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.domReference);
          prevTabbable == null || prevTabbable.focus();
        }
      }
    }), shouldRenderGuards && portalNode && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span", {
      "aria-owns": portalNode.id,
      style: HIDDEN_STYLES
    }), portalNode && /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FocusGuard, {
      "data-type": "outside",
      ref: afterOutsideRef,
      onFocus: event => {
        if (isOutsideEvent(event, portalNode)) {
          var _afterInsideRef$curre;
          (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();
        } else {
          const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.domReference);
          nextTabbable == null || nextTabbable.focus();
          (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent, 'focus-out'));
        }
      }
    })]
  });
}
const usePortalContext = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(PortalContext);

const FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';
function getFloatingFocusElement(floatingElement) {
  if (!floatingElement) {
    return null;
  }
  // Try to find the element that has `{...getFloatingProps()}` spread on it.
  // This indicates the floating element is acting as a positioning wrapper, and
  // so focus should be managed on the child element with the event handlers and
  // aria props.
  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector("[" + FOCUSABLE_ATTRIBUTE + "]") || floatingElement;
}

const LIST_LIMIT = 20;
let previouslyFocusedElements = [];
function addPreviouslyFocusedElement(element) {
  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);
  if (element && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getNodeName)(element) !== 'body') {
    previouslyFocusedElements.push(element);
    if (previouslyFocusedElements.length > LIST_LIMIT) {
      previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);
    }
  }
}
function getPreviouslyFocusedElement() {
  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);
}
function getFirstTabbableElement(container) {
  const tabbableOptions = getTabbableOptions();
  if ((0,tabbable__WEBPACK_IMPORTED_MODULE_8__.isTabbable)(container, tabbableOptions)) {
    return container;
  }
  return (0,tabbable__WEBPACK_IMPORTED_MODULE_8__.tabbable)(container, tabbableOptions)[0] || container;
}
const VisuallyHiddenDismiss = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function VisuallyHiddenDismiss(props, ref) {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button", {
    ...props,
    type: "button",
    ref: ref,
    tabIndex: -1,
    style: HIDDEN_STYLES
  });
});
/**
 * Provides focus management for the floating element.
 * @see https://floating-ui.com/docs/FloatingFocusManager
 */
function FloatingFocusManager(props) {
  const {
    context,
    children,
    disabled = false,
    order = ['content'],
    guards: _guards = true,
    initialFocus = 0,
    returnFocus = true,
    restoreFocus = false,
    modal = true,
    visuallyHiddenDismiss = false,
    closeOnFocusOut = true,
    outsideElementsInert = false
  } = props;
  const {
    open,
    onOpenChange,
    events,
    dataRef,
    elements: {
      domReference,
      floating
    }
  } = context;
  const getNodeId = useEffectEvent(() => {
    var _dataRef$current$floa;
    return (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;
  });
  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;
  // If the reference is a combobox and is typeable (e.g. input/textarea),
  // there are different focus semantics. The guards should not be rendered, but
  // aria-hidden should be applied to all nodes still. Further, the visually
  // hidden dismiss button should only appear at the end of the list, not the
  // start.
  const isUntrappedTypeableCombobox = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isTypeableCombobox)(domReference) && ignoreInitialFocus;

  // Force the guards to be rendered if the `inert` attribute is not supported.
  const inertSupported = supportsInert();
  const guards = inertSupported ? _guards : true;
  const useInert = !guards || inertSupported && outsideElementsInert;
  const orderRef = useLatestRef(order);
  const initialFocusRef = useLatestRef(initialFocus);
  const returnFocusRef = useLatestRef(returnFocus);
  const tree = useFloatingTree();
  const portalContext = usePortalContext();
  const startDismissButtonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const endDismissButtonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const preventReturnFocusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const isPointerDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const tabbableIndexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1);
  const isInsidePortal = portalContext != null;
  const floatingFocusElement = getFloatingFocusElement(floating);
  const getTabbableContent = useEffectEvent(function (container) {
    if (container === void 0) {
      container = floatingFocusElement;
    }
    return container ? (0,tabbable__WEBPACK_IMPORTED_MODULE_8__.tabbable)(container, getTabbableOptions()) : [];
  });
  const getTabbableElements = useEffectEvent(container => {
    const content = getTabbableContent(container);
    return orderRef.current.map(type => {
      if (domReference && type === 'reference') {
        return domReference;
      }
      if (floatingFocusElement && type === 'floating') {
        return floatingFocusElement;
      }
      return content;
    }).filter(Boolean).flat();
  });
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (disabled) return;
    if (!modal) return;
    function onKeyDown(event) {
      if (event.key === 'Tab') {
        // The focus guards have nothing to focus, so we need to stop the event.
        if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(floatingFocusElement, (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {
          (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
        }
        const els = getTabbableElements();
        const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event);
        if (orderRef.current[0] === 'reference' && target === domReference) {
          (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
          if (event.shiftKey) {
            enqueueFocus(els[els.length - 1]);
          } else {
            enqueueFocus(els[1]);
          }
        }
        if (orderRef.current[1] === 'floating' && target === floatingFocusElement && event.shiftKey) {
          (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
          enqueueFocus(els[0]);
        }
      }
    }
    const doc = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement);
    doc.addEventListener('keydown', onKeyDown);
    return () => {
      doc.removeEventListener('keydown', onKeyDown);
    };
  }, [disabled, domReference, floatingFocusElement, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (disabled) return;
    if (!floating) return;
    function handleFocusIn(event) {
      const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event);
      const tabbableContent = getTabbableContent();
      const tabbableIndex = tabbableContent.indexOf(target);
      if (tabbableIndex !== -1) {
        tabbableIndexRef.current = tabbableIndex;
      }
    }
    floating.addEventListener('focusin', handleFocusIn);
    return () => {
      floating.removeEventListener('focusin', handleFocusIn);
    };
  }, [disabled, floating, getTabbableContent]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (disabled) return;
    if (!closeOnFocusOut) return;

    // In Safari, buttons lose focus when pressing them.
    function handlePointerDown() {
      isPointerDownRef.current = true;
      setTimeout(() => {
        isPointerDownRef.current = false;
      });
    }
    function handleFocusOutside(event) {
      const relatedTarget = event.relatedTarget;
      queueMicrotask(() => {
        const nodeId = getNodeId();
        const movedToUnrelatedNode = !((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(domReference, relatedTarget) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(floating, relatedTarget) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(relatedTarget, floating) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {
          var _node$context, _node$context2;
          return (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);
        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {
          var _node$context3, _node$context4, _node$context5;
          return [(_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating, getFloatingFocusElement((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.floating)].includes(relatedTarget) || ((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.domReference) === relatedTarget;
        })));

        // Restore focus to the previous tabbable element index to prevent
        // focus from being lost outside the floating tree.
        if (restoreFocus && movedToUnrelatedNode && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement)) === (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement).body) {
          // Let `FloatingPortal` effect knows that focus is still inside the
          // floating tree.
          if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(floatingFocusElement)) {
            floatingFocusElement.focus();
          }
          const prevTabbableIndex = tabbableIndexRef.current;
          const tabbableContent = getTabbableContent();
          const nodeToFocus = tabbableContent[prevTabbableIndex] || tabbableContent[tabbableContent.length - 1] || floatingFocusElement;
          if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(nodeToFocus)) {
            nodeToFocus.focus();
          }
        }

        // Focus did not move inside the floating tree, and there are no tabbable
        // portal guards to handle closing.
        if ((isUntrappedTypeableCombobox ? true : !modal) && relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&
        // Fix React 18 Strict Mode returnFocus due to double rendering.
        relatedTarget !== getPreviouslyFocusedElement()) {
          preventReturnFocusRef.current = true;
          onOpenChange(false, event, 'focus-out');
        }
      });
    }
    if (floating && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(domReference)) {
      domReference.addEventListener('focusout', handleFocusOutside);
      domReference.addEventListener('pointerdown', handlePointerDown);
      floating.addEventListener('focusout', handleFocusOutside);
      return () => {
        domReference.removeEventListener('focusout', handleFocusOutside);
        domReference.removeEventListener('pointerdown', handlePointerDown);
        floating.removeEventListener('focusout', handleFocusOutside);
      };
    }
  }, [disabled, domReference, floating, floatingFocusElement, modal, tree, portalContext, onOpenChange, closeOnFocusOut, restoreFocus, getTabbableContent, isUntrappedTypeableCombobox, getNodeId]);
  const beforeGuardRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const afterGuardRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const mergedBeforeGuardRef = useMergeRefs([beforeGuardRef, portalContext == null ? void 0 : portalContext.beforeInsideRef]);
  const mergedAfterGuardRef = useMergeRefs([afterGuardRef, portalContext == null ? void 0 : portalContext.afterInsideRef]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    var _portalContext$portal;
    if (disabled) return;
    if (!floating) return;

    // Don't hide portals nested within the parent portal.
    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll("[" + createAttribute('portal') + "]")) || []);
    const ancestorFloatingNodes = tree && !modal ? getAncestors(tree == null ? void 0 : tree.nodesRef.current, getNodeId()).map(node => {
      var _node$context6;
      return (_node$context6 = node.context) == null ? void 0 : _node$context6.elements.floating;
    }) : [];
    const insideElements = [floating, ...portalNodes, ...ancestorFloatingNodes, startDismissButtonRef.current, endDismissButtonRef.current, beforeGuardRef.current, afterGuardRef.current, portalContext == null ? void 0 : portalContext.beforeOutsideRef.current, portalContext == null ? void 0 : portalContext.afterOutsideRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);
    const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, !useInert, useInert) : markOthers(insideElements);
    return () => {
      cleanup();
    };
  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards, useInert, tree, getNodeId]);
  index(() => {
    if (disabled || !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(floatingFocusElement)) return;
    const doc = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement);
    const previouslyFocusedElement = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)(doc);

    // Wait for any layout effect state setters to execute to set `tabIndex`.
    queueMicrotask(() => {
      const focusableElements = getTabbableElements(floatingFocusElement);
      const initialFocusValue = initialFocusRef.current;
      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floatingFocusElement;
      const focusAlreadyInsideFloatingEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(floatingFocusElement, previouslyFocusedElement);
      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {
        enqueueFocus(elToFocus, {
          preventScroll: elToFocus === floatingFocusElement
        });
      }
    });
  }, [disabled, open, floatingFocusElement, ignoreInitialFocus, getTabbableElements, initialFocusRef]);
  index(() => {
    if (disabled || !floatingFocusElement) return;
    let preventReturnFocusScroll = false;
    const doc = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floatingFocusElement);
    const previouslyFocusedElement = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)(doc);
    const contextData = dataRef.current;
    let openEvent = contextData.openEvent;
    addPreviouslyFocusedElement(previouslyFocusedElement);

    // Dismissing via outside press should always ignore `returnFocus` to
    // prevent unwanted scrolling.
    function onOpenChange(_ref) {
      let {
        open,
        reason,
        event,
        nested
      } = _ref;
      if (open) {
        openEvent = event;
      }
      if (reason === 'escape-key' && domReference) {
        addPreviouslyFocusedElement(domReference);
      }
      if (['hover', 'safe-polygon'].includes(reason) && event.type === 'mouseleave') {
        preventReturnFocusRef.current = true;
      }
      if (reason !== 'outside-press') return;
      if (nested) {
        preventReturnFocusRef.current = false;
        preventReturnFocusScroll = true;
      } else {
        preventReturnFocusRef.current = !((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isVirtualClick)(event) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isVirtualPointerEvent)(event));
      }
    }
    events.on('openchange', onOpenChange);
    const fallbackEl = doc.createElement('span');
    fallbackEl.setAttribute('tabindex', '-1');
    fallbackEl.setAttribute('aria-hidden', 'true');
    Object.assign(fallbackEl.style, HIDDEN_STYLES);
    if (isInsidePortal && domReference) {
      domReference.insertAdjacentElement('afterend', fallbackEl);
    }
    function getReturnElement() {
      if (typeof returnFocusRef.current === 'boolean') {
        return getPreviouslyFocusedElement() || fallbackEl;
      }
      return returnFocusRef.current.current || fallbackEl;
    }
    return () => {
      events.off('openchange', onOpenChange);
      const activeEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)(doc);
      const isFocusInsideFloatingTree = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(floating, activeEl) || tree && getChildren(tree.nodesRef.current, getNodeId()).some(node => {
        var _node$context7;
        return (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)((_node$context7 = node.context) == null ? void 0 : _node$context7.elements.floating, activeEl);
      });
      const shouldFocusReference = isFocusInsideFloatingTree || openEvent && ['click', 'mousedown'].includes(openEvent.type);
      if (shouldFocusReference && domReference) {
        addPreviouslyFocusedElement(domReference);
      }
      const returnElement = getReturnElement();
      queueMicrotask(() => {
        // This is `returnElement`, if it's tabbable, or its first tabbable child.
        const tabbableReturnElement = getFirstTabbableElement(returnElement);
        if (
        // eslint-disable-next-line react-hooks/exhaustive-deps
        returnFocusRef.current && !preventReturnFocusRef.current && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(tabbableReturnElement) && (
        // If the focus moved somewhere else after mount, avoid returning focus
        // since it likely entered a different element which should be
        // respected: https://github.com/floating-ui/floating-ui/issues/2607
        tabbableReturnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {
          tabbableReturnElement.focus({
            preventScroll: preventReturnFocusScroll
          });
        }
        fallbackEl.remove();
      });
    };
  }, [disabled, floating, floatingFocusElement, returnFocusRef, dataRef, events, tree, isInsidePortal, domReference, getNodeId]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    // The `returnFocus` cleanup behavior is inside a microtask; ensure we
    // wait for it to complete before resetting the flag.
    queueMicrotask(() => {
      preventReturnFocusRef.current = false;
    });
  }, [disabled]);

  // Synchronize the `context` & `modal` value to the FloatingPortal context.
  // It will decide whether or not it needs to render its own guards.
  index(() => {
    if (disabled) return;
    if (!portalContext) return;
    portalContext.setFocusManagerState({
      modal,
      closeOnFocusOut,
      open,
      onOpenChange,
      domReference
    });
    return () => {
      portalContext.setFocusManagerState(null);
    };
  }, [disabled, portalContext, modal, open, onOpenChange, closeOnFocusOut, domReference]);
  index(() => {
    if (disabled) return;
    if (!floatingFocusElement) return;
    if (typeof MutationObserver !== 'function') return;
    if (ignoreInitialFocus) return;
    const handleMutation = () => {
      const tabIndex = floatingFocusElement.getAttribute('tabindex');
      const tabbableContent = getTabbableContent();
      const activeEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(floating));
      const tabbableIndex = tabbableContent.indexOf(activeEl);
      if (tabbableIndex !== -1) {
        tabbableIndexRef.current = tabbableIndex;
      }
      if (orderRef.current.includes('floating') || activeEl !== domReference && tabbableContent.length === 0) {
        if (tabIndex !== '0') {
          floatingFocusElement.setAttribute('tabindex', '0');
        }
      } else if (tabIndex !== '-1') {
        floatingFocusElement.setAttribute('tabindex', '-1');
      }
    };
    handleMutation();
    const observer = new MutationObserver(handleMutation);
    observer.observe(floatingFocusElement, {
      childList: true,
      subtree: true,
      attributes: true
    });
    return () => {
      observer.disconnect();
    };
  }, [disabled, floating, floatingFocusElement, domReference, orderRef, getTabbableContent, ignoreInitialFocus]);
  function renderDismissButton(location) {
    if (disabled || !visuallyHiddenDismiss || !modal) {
      return null;
    }
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(VisuallyHiddenDismiss, {
      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,
      onClick: event => onOpenChange(false, event.nativeEvent),
      children: typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss'
    });
  }
  const shouldRenderGuards = !disabled && guards && (modal ? !isUntrappedTypeableCombobox : true) && (isInsidePortal || modal);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
    children: [shouldRenderGuards && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FocusGuard, {
      "data-type": "inside",
      ref: mergedBeforeGuardRef,
      onFocus: event => {
        if (modal) {
          const els = getTabbableElements();
          enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);
        } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
          preventReturnFocusRef.current = false;
          if (isOutsideEvent(event, portalContext.portalNode)) {
            const nextTabbable = getNextTabbable() || domReference;
            nextTabbable == null || nextTabbable.focus();
          } else {
            var _portalContext$before;
            (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();
          }
        }
      }
    }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FocusGuard, {
      "data-type": "inside",
      ref: mergedAfterGuardRef,
      onFocus: event => {
        if (modal) {
          enqueueFocus(getTabbableElements()[0]);
        } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
          if (closeOnFocusOut) {
            preventReturnFocusRef.current = true;
          }
          if (isOutsideEvent(event, portalContext.portalNode)) {
            const prevTabbable = getPreviousTabbable() || domReference;
            prevTabbable == null || prevTabbable.focus();
          } else {
            var _portalContext$afterO;
            (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();
          }
        }
      }
    })]
  });
}

let lockCount = 0;
function enableScrollLock() {
  const isIOS = /iP(hone|ad|od)|iOS/.test((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getPlatform)());
  const bodyStyle = document.body.style;
  // RTL <body> scrollbar
  const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;
  const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';
  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.scrollX;
  const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.scrollY;
  bodyStyle.overflow = 'hidden';
  if (scrollbarWidth) {
    bodyStyle[paddingProp] = scrollbarWidth + "px";
  }

  // Only iOS doesn't respect `overflow: hidden` on document.body, and this
  // technique has fewer side effects.
  if (isIOS) {
    var _window$visualViewpor, _window$visualViewpor2;
    // iOS 12 does not support `visualViewport`.
    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;
    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;
    Object.assign(bodyStyle, {
      position: 'fixed',
      top: -(scrollY - Math.floor(offsetTop)) + "px",
      left: -(scrollX - Math.floor(offsetLeft)) + "px",
      right: '0'
    });
  }
  return () => {
    Object.assign(bodyStyle, {
      overflow: '',
      [paddingProp]: ''
    });
    if (isIOS) {
      Object.assign(bodyStyle, {
        position: '',
        top: '',
        left: '',
        right: ''
      });
      window.scrollTo(scrollX, scrollY);
    }
  };
}
let cleanup = () => {};

/**
 * Provides base styling for a fixed overlay element to dim content or block
 * pointer events behind a floating element.
 * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.
 * @see https://floating-ui.com/docs/FloatingOverlay
 */
const FloatingOverlay = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FloatingOverlay(props, ref) {
  const {
    lockScroll = false,
    ...rest
  } = props;
  index(() => {
    if (!lockScroll) return;
    lockCount++;
    if (lockCount === 1) {
      cleanup = enableScrollLock();
    }
    return () => {
      lockCount--;
      if (lockCount === 0) {
        cleanup();
      }
    };
  }, [lockScroll]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
    ref: ref,
    ...rest,
    style: {
      position: 'fixed',
      overflow: 'auto',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      ...rest.style
    }
  });
});

function isButtonTarget(event) {
  return (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(event.target) && event.target.tagName === 'BUTTON';
}
function isSpaceIgnored(element) {
  return (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isTypeableElement)(element);
}
/**
 * Opens or closes the floating element when clicking the reference element.
 * @see https://floating-ui.com/docs/useClick
 */
function useClick(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    onOpenChange,
    dataRef,
    elements: {
      domReference
    }
  } = context;
  const {
    enabled = true,
    event: eventOption = 'click',
    toggle = true,
    ignoreMouse = false,
    keyboardHandlers = true,
    stickIfOpen = true
  } = props;
  const pointerTypeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const didKeyDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onPointerDown(event) {
      pointerTypeRef.current = event.pointerType;
    },
    onMouseDown(event) {
      const pointerType = pointerTypeRef.current;

      // Ignore all buttons except for the "main" button.
      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button
      if (event.button !== 0) return;
      if (eventOption === 'click') return;
      if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerType, true) && ignoreMouse) return;
      if (open && toggle && (dataRef.current.openEvent && stickIfOpen ? dataRef.current.openEvent.type === 'mousedown' : true)) {
        onOpenChange(false, event.nativeEvent, 'click');
      } else {
        // Prevent stealing focus from the floating element
        event.preventDefault();
        onOpenChange(true, event.nativeEvent, 'click');
      }
    },
    onClick(event) {
      const pointerType = pointerTypeRef.current;
      if (eventOption === 'mousedown' && pointerTypeRef.current) {
        pointerTypeRef.current = undefined;
        return;
      }
      if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerType, true) && ignoreMouse) return;
      if (open && toggle && (dataRef.current.openEvent && stickIfOpen ? dataRef.current.openEvent.type === 'click' : true)) {
        onOpenChange(false, event.nativeEvent, 'click');
      } else {
        onOpenChange(true, event.nativeEvent, 'click');
      }
    },
    onKeyDown(event) {
      pointerTypeRef.current = undefined;
      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {
        return;
      }
      if (event.key === ' ' && !isSpaceIgnored(domReference)) {
        // Prevent scrolling
        event.preventDefault();
        didKeyDownRef.current = true;
      }
      if (event.key === 'Enter') {
        if (open && toggle) {
          onOpenChange(false, event.nativeEvent, 'click');
        } else {
          onOpenChange(true, event.nativeEvent, 'click');
        }
      }
    },
    onKeyUp(event) {
      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {
        return;
      }
      if (event.key === ' ' && didKeyDownRef.current) {
        didKeyDownRef.current = false;
        if (open && toggle) {
          onOpenChange(false, event.nativeEvent, 'click');
        } else {
          onOpenChange(true, event.nativeEvent, 'click');
        }
      }
    }
  }), [dataRef, domReference, eventOption, ignoreMouse, keyboardHandlers, onOpenChange, open, stickIfOpen, toggle]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference
  } : {}, [enabled, reference]);
}

function createVirtualElement(domElement, data) {
  let offsetX = null;
  let offsetY = null;
  let isAutoUpdateEvent = false;
  return {
    contextElement: domElement || undefined,
    getBoundingClientRect() {
      var _data$dataRef$current;
      const domRect = (domElement == null ? void 0 : domElement.getBoundingClientRect()) || {
        width: 0,
        height: 0,
        x: 0,
        y: 0
      };
      const isXAxis = data.axis === 'x' || data.axis === 'both';
      const isYAxis = data.axis === 'y' || data.axis === 'both';
      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';
      let width = domRect.width;
      let height = domRect.height;
      let x = domRect.x;
      let y = domRect.y;
      if (offsetX == null && data.x && isXAxis) {
        offsetX = domRect.x - data.x;
      }
      if (offsetY == null && data.y && isYAxis) {
        offsetY = domRect.y - data.y;
      }
      x -= offsetX || 0;
      y -= offsetY || 0;
      width = 0;
      height = 0;
      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {
        width = data.axis === 'y' ? domRect.width : 0;
        height = data.axis === 'x' ? domRect.height : 0;
        x = isXAxis && data.x != null ? data.x : x;
        y = isYAxis && data.y != null ? data.y : y;
      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {
        height = data.axis === 'x' ? domRect.height : height;
        width = data.axis === 'y' ? domRect.width : width;
      }
      isAutoUpdateEvent = true;
      return {
        width,
        height,
        x,
        y,
        top: y,
        right: x + width,
        bottom: y + height,
        left: x
      };
    }
  };
}
function isMouseBasedEvent(event) {
  return event != null && event.clientX != null;
}
/**
 * Positions the floating element relative to a client point (in the viewport),
 * such as the mouse position. By default, it follows the mouse cursor.
 * @see https://floating-ui.com/docs/useClientPoint
 */
function useClientPoint(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    dataRef,
    elements: {
      floating,
      domReference
    },
    refs
  } = context;
  const {
    enabled = true,
    axis = 'both',
    x = null,
    y = null
  } = props;
  const initialRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const cleanupListenerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const [pointerType, setPointerType] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  const [reactive, setReactive] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);
  const setReference = useEffectEvent((x, y) => {
    if (initialRef.current) return;

    // Prevent setting if the open event was not a mouse-like one
    // (e.g. focus to open, then hover over the reference element).
    // Only apply if the event exists.
    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {
      return;
    }
    refs.setPositionReference(createVirtualElement(domReference, {
      x,
      y,
      axis,
      dataRef,
      pointerType
    }));
  });
  const handleReferenceEnterOrMove = useEffectEvent(event => {
    if (x != null || y != null) return;
    if (!open) {
      setReference(event.clientX, event.clientY);
    } else if (!cleanupListenerRef.current) {
      // If there's no cleanup, there's no listener, but we want to ensure
      // we add the listener if the cursor landed on the floating element and
      // then back on the reference (i.e. it's interactive).
      setReactive([]);
    }
  });

  // If the pointer is a mouse-like pointer, we want to continue following the
  // mouse even if the floating element is transitioning out. On touch
  // devices, this is undesirable because the floating element will move to
  // the dismissal touch point.
  const openCheck = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMouseLikePointerType)(pointerType) ? floating : open;
  const addListener = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.
    if (!openCheck || !enabled || x != null || y != null) return;
    const win = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getWindow)(floating);
    function handleMouseMove(event) {
      const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event);
      if (!(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(floating, target)) {
        setReference(event.clientX, event.clientY);
      } else {
        win.removeEventListener('mousemove', handleMouseMove);
        cleanupListenerRef.current = null;
      }
    }
    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {
      win.addEventListener('mousemove', handleMouseMove);
      const cleanup = () => {
        win.removeEventListener('mousemove', handleMouseMove);
        cleanupListenerRef.current = null;
      };
      cleanupListenerRef.current = cleanup;
      return cleanup;
    }
    refs.setPositionReference(domReference);
  }, [openCheck, enabled, x, y, floating, dataRef, refs, domReference, setReference]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return addListener();
  }, [addListener, reactive]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (enabled && !floating) {
      initialRef.current = false;
    }
  }, [enabled, floating]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled && open) {
      initialRef.current = true;
    }
  }, [enabled, open]);
  index(() => {
    if (enabled && (x != null || y != null)) {
      initialRef.current = false;
      setReference(x, y);
    }
  }, [enabled, x, y, setReference]);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    function setPointerTypeRef(_ref) {
      let {
        pointerType
      } = _ref;
      setPointerType(pointerType);
    }
    return {
      onPointerDown: setPointerTypeRef,
      onPointerEnter: setPointerTypeRef,
      onMouseMove: handleReferenceEnterOrMove,
      onMouseEnter: handleReferenceEnterOrMove
    };
  }, [handleReferenceEnterOrMove]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference
  } : {}, [enabled, reference]);
}

const bubbleHandlerKeys = {
  pointerdown: 'onPointerDown',
  mousedown: 'onMouseDown',
  click: 'onClick'
};
const captureHandlerKeys = {
  pointerdown: 'onPointerDownCapture',
  mousedown: 'onMouseDownCapture',
  click: 'onClickCapture'
};
const normalizeProp = normalizable => {
  var _normalizable$escapeK, _normalizable$outside;
  return {
    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,
    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true
  };
};
/**
 * Closes the floating element when a dismissal is requested — by default, when
 * the user presses the `escape` key or outside of the floating element.
 * @see https://floating-ui.com/docs/useDismiss
 */
function useDismiss(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    onOpenChange,
    elements,
    dataRef
  } = context;
  const {
    enabled = true,
    escapeKey = true,
    outsidePress: unstable_outsidePress = true,
    outsidePressEvent = 'pointerdown',
    referencePress = false,
    referencePressEvent = 'pointerdown',
    ancestorScroll = false,
    bubbles,
    capture
  } = props;
  const tree = useFloatingTree();
  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);
  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;
  const insideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const endedOrStartedInsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const {
    escapeKey: escapeKeyBubbles,
    outsidePress: outsidePressBubbles
  } = normalizeProp(bubbles);
  const {
    escapeKey: escapeKeyCapture,
    outsidePress: outsidePressCapture
  } = normalizeProp(capture);
  const isComposingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const closeOnEscapeKeyDown = useEffectEvent(event => {
    var _dataRef$current$floa;
    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {
      return;
    }

    // Wait until IME is settled. Pressing `Escape` while composing should
    // close the compose menu, but not the floating element.
    if (isComposingRef.current) {
      return;
    }
    const nodeId = (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;
    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
    if (!escapeKeyBubbles) {
      event.stopPropagation();
      if (children.length > 0) {
        let shouldDismiss = true;
        children.forEach(child => {
          var _child$context;
          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {
            shouldDismiss = false;
            return;
          }
        });
        if (!shouldDismiss) {
          return;
        }
      }
    }
    onOpenChange(false, (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isReactEvent)(event) ? event.nativeEvent : event, 'escape-key');
  });
  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {
    var _getTarget2;
    const callback = () => {
      var _getTarget;
      closeOnEscapeKeyDown(event);
      (_getTarget = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event)) == null || _getTarget.removeEventListener('keydown', callback);
    };
    (_getTarget2 = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event)) == null || _getTarget2.addEventListener('keydown', callback);
  });
  const closeOnPressOutside = useEffectEvent(event => {
    var _dataRef$current$floa2;
    // Given developers can stop the propagation of the synthetic event,
    // we can only be confident with a positive value.
    const insideReactTree = insideReactTreeRef.current;
    insideReactTreeRef.current = false;

    // When click outside is lazy (`click` event), handle dragging.
    // Don't close if:
    // - The click started inside the floating element.
    // - The click ended inside the floating element.
    const endedOrStartedInside = endedOrStartedInsideRef.current;
    endedOrStartedInsideRef.current = false;
    if (outsidePressEvent === 'click' && endedOrStartedInside) {
      return;
    }
    if (insideReactTree) {
      return;
    }
    if (typeof outsidePress === 'function' && !outsidePress(event)) {
      return;
    }
    const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event);
    const inertSelector = "[" + createAttribute('inert') + "]";
    const markers = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating).querySelectorAll(inertSelector);
    let targetRootAncestor = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(target) ? target : null;
    while (targetRootAncestor && !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isLastTraversableNode)(targetRootAncestor)) {
      const nextParent = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getParentNode)(targetRootAncestor);
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isLastTraversableNode)(nextParent) || !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(nextParent)) {
        break;
      }
      targetRootAncestor = nextParent;
    }

    // Check if the click occurred on a third-party element injected after the
    // floating element rendered.
    if (markers.length && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(target) && !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isRootElement)(target) &&
    // Clicked on a direct ancestor (e.g. FloatingOverlay).
    !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(target, elements.floating) &&
    // If the target root element contains none of the markers, then the
    // element was injected after the floating element rendered.
    Array.from(markers).every(marker => !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(targetRootAncestor, marker))) {
      return;
    }

    // Check if the click occurred on the scrollbar
    if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(target) && floating) {
      const lastTraversableNode = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isLastTraversableNode)(target);
      const style = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getComputedStyle)(target);
      const scrollRe = /auto|scroll/;
      const isScrollableX = lastTraversableNode || scrollRe.test(style.overflowX);
      const isScrollableY = lastTraversableNode || scrollRe.test(style.overflowY);
      const canScrollX = isScrollableX && target.clientWidth > 0 && target.scrollWidth > target.clientWidth;
      const canScrollY = isScrollableY && target.clientHeight > 0 && target.scrollHeight > target.clientHeight;
      const isRTL = style.direction === 'rtl';

      // Check click position relative to scrollbar.
      // In some browsers it is possible to change the <body> (or window)
      // scrollbar to the left side, but is very rare and is difficult to
      // check for. Plus, for modal dialogs with backdrops, it is more
      // important that the backdrop is checked but not so much the window.
      const pressedVerticalScrollbar = canScrollY && (isRTL ? event.offsetX <= target.offsetWidth - target.clientWidth : event.offsetX > target.clientWidth);
      const pressedHorizontalScrollbar = canScrollX && event.offsetY > target.clientHeight;
      if (pressedVerticalScrollbar || pressedHorizontalScrollbar) {
        return;
      }
    }
    const nodeId = (_dataRef$current$floa2 = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa2.nodeId;
    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {
      var _node$context;
      return (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isEventTargetWithin)(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);
    });
    if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isEventTargetWithin)(event, elements.floating) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isEventTargetWithin)(event, elements.domReference) || targetIsInsideChildren) {
      return;
    }
    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
    if (children.length > 0) {
      let shouldDismiss = true;
      children.forEach(child => {
        var _child$context2;
        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {
          shouldDismiss = false;
          return;
        }
      });
      if (!shouldDismiss) {
        return;
      }
    }
    onOpenChange(false, event, 'outside-press');
  });
  const closeOnPressOutsideCapture = useEffectEvent(event => {
    var _getTarget4;
    const callback = () => {
      var _getTarget3;
      closeOnPressOutside(event);
      (_getTarget3 = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);
    };
    (_getTarget4 = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);
  });
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!open || !enabled) {
      return;
    }
    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;
    dataRef.current.__outsidePressBubbles = outsidePressBubbles;
    let compositionTimeout = -1;
    function onScroll(event) {
      onOpenChange(false, event, 'ancestor-scroll');
    }
    function handleCompositionStart() {
      window.clearTimeout(compositionTimeout);
      isComposingRef.current = true;
    }
    function handleCompositionEnd() {
      // Safari fires `compositionend` before `keydown`, so we need to wait
      // until the next tick to set `isComposing` to `false`.
      // https://bugs.webkit.org/show_bug.cgi?id=165004
      compositionTimeout = window.setTimeout(() => {
        isComposingRef.current = false;
      },
      // 0ms or 1ms don't work in Safari. 5ms appears to consistently work.
      // Only apply to WebKit for the test to remain 0ms.
      (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isWebKit)() ? 5 : 0);
    }
    const doc = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating);
    if (escapeKey) {
      doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);
      doc.addEventListener('compositionstart', handleCompositionStart);
      doc.addEventListener('compositionend', handleCompositionEnd);
    }
    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);
    let ancestors = [];
    if (ancestorScroll) {
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(elements.domReference)) {
        ancestors = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(elements.domReference);
      }
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(elements.floating)) {
        ancestors = ancestors.concat((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(elements.floating));
      }
      if (!(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(elements.reference) && elements.reference && elements.reference.contextElement) {
        ancestors = ancestors.concat((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(elements.reference.contextElement));
      }
    }

    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)
    ancestors = ancestors.filter(ancestor => {
      var _doc$defaultView;
      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);
    });
    ancestors.forEach(ancestor => {
      ancestor.addEventListener('scroll', onScroll, {
        passive: true
      });
    });
    return () => {
      if (escapeKey) {
        doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);
        doc.removeEventListener('compositionstart', handleCompositionStart);
        doc.removeEventListener('compositionend', handleCompositionEnd);
      }
      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);
      ancestors.forEach(ancestor => {
        ancestor.removeEventListener('scroll', onScroll);
      });
      window.clearTimeout(compositionTimeout);
    };
  }, [dataRef, elements, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    insideReactTreeRef.current = false;
  }, [outsidePress, outsidePressEvent]);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onKeyDown: closeOnEscapeKeyDown,
    ...(referencePress && {
      [bubbleHandlerKeys[referencePressEvent]]: event => {
        onOpenChange(false, event.nativeEvent, 'reference-press');
      },
      ...(referencePressEvent !== 'click' && {
        onClick(event) {
          onOpenChange(false, event.nativeEvent, 'reference-press');
        }
      })
    })
  }), [closeOnEscapeKeyDown, onOpenChange, referencePress, referencePressEvent]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onKeyDown: closeOnEscapeKeyDown,
    onMouseDown() {
      endedOrStartedInsideRef.current = true;
    },
    onMouseUp() {
      endedOrStartedInsideRef.current = true;
    },
    [captureHandlerKeys[outsidePressEvent]]: () => {
      insideReactTreeRef.current = true;
    }
  }), [closeOnEscapeKeyDown, outsidePressEvent]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference,
    floating
  } : {}, [enabled, reference, floating]);
}

function useFloatingRootContext(options) {
  const {
    open = false,
    onOpenChange: onOpenChangeProp,
    elements: elementsProp
  } = options;
  const floatingId = useId();
  const dataRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});
  const [events] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createPubSub());
  const nested = useFloatingParentNodeId() != null;
  if (true) {
    const optionDomReference = elementsProp.reference;
    if (optionDomReference && !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(optionDomReference)) {
      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');
    }
  }
  const [positionReference, setPositionReference] = react__WEBPACK_IMPORTED_MODULE_0__.useState(elementsProp.reference);
  const onOpenChange = useEffectEvent((open, event, reason) => {
    dataRef.current.openEvent = open ? event : undefined;
    events.emit('openchange', {
      open,
      event,
      reason,
      nested
    });
    onOpenChangeProp == null || onOpenChangeProp(open, event, reason);
  });
  const refs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    setPositionReference
  }), []);
  const elements = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    reference: positionReference || elementsProp.reference || null,
    floating: elementsProp.floating || null,
    domReference: elementsProp.reference
  }), [positionReference, elementsProp.reference, elementsProp.floating]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    dataRef,
    open,
    onOpenChange,
    elements,
    events,
    floatingId,
    refs
  }), [open, onOpenChange, elements, events, floatingId, refs]);
}

/**
 * Provides data to position a floating element and context to add interactions.
 * @see https://floating-ui.com/docs/useFloating
 */
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    nodeId
  } = options;
  const internalRootContext = useFloatingRootContext({
    ...options,
    elements: {
      reference: null,
      floating: null,
      ...options.elements
    }
  });
  const rootContext = options.rootContext || internalRootContext;
  const computedElements = rootContext.elements;
  const [_domReference, setDomReference] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const [positionReference, _setPositionReference] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const optionDomReference = computedElements == null ? void 0 : computedElements.domReference;
  const domReference = optionDomReference || _domReference;
  const domReferenceRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const tree = useFloatingTree();
  index(() => {
    if (domReference) {
      domReferenceRef.current = domReference;
    }
  }, [domReference]);
  const position = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.useFloating)({
    ...options,
    elements: {
      ...computedElements,
      ...(positionReference && {
        reference: positionReference
      })
    }
  });
  const setPositionReference = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    const computedPositionReference = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(node) ? {
      getBoundingClientRect: () => node.getBoundingClientRect(),
      contextElement: node
    } : node;
    // Store the positionReference in state if the DOM reference is specified externally via the
    // `elements.reference` option. This ensures that it won't be overridden on future renders.
    _setPositionReference(computedPositionReference);
    position.refs.setReference(computedPositionReference);
  }, [position.refs]);
  const setReference = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(node) || node === null) {
      domReferenceRef.current = node;
      setDomReference(node);
    }

    // Backwards-compatibility for passing a virtual element to `reference`
    // after it has set the DOM reference.
    if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(position.refs.reference.current) || position.refs.reference.current === null ||
    // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    node !== null && !(0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(node)) {
      position.refs.setReference(node);
    }
  }, [position.refs]);
  const refs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position.refs,
    setReference,
    setPositionReference,
    domReference: domReferenceRef
  }), [position.refs, setReference, setPositionReference]);
  const elements = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position.elements,
    domReference: domReference
  }), [position.elements, domReference]);
  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position,
    ...rootContext,
    refs,
    elements,
    nodeId
  }), [position, refs, elements, nodeId, rootContext]);
  index(() => {
    rootContext.dataRef.current.floatingContext = context;
    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);
    if (node) {
      node.context = context;
    }
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position,
    context,
    refs,
    elements
  }), [position, refs, elements, context]);
}

/**
 * Opens the floating element while the reference element has focus, like CSS
 * `:focus`.
 * @see https://floating-ui.com/docs/useFocus
 */
function useFocus(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    onOpenChange,
    events,
    dataRef,
    elements
  } = context;
  const {
    enabled = true,
    visibleOnly = true
  } = props;
  const blockFocusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const timeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const keyboardModalityRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    const win = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getWindow)(elements.domReference);

    // If the reference was focused and the user left the tab/window, and the
    // floating element was not open, the focus should be blocked when they
    // return to the tab/window.
    function onBlur() {
      if (!open && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(elements.domReference) && elements.domReference === (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.domReference))) {
        blockFocusRef.current = true;
      }
    }
    function onKeyDown() {
      keyboardModalityRef.current = true;
    }
    win.addEventListener('blur', onBlur);
    win.addEventListener('keydown', onKeyDown, true);
    return () => {
      win.removeEventListener('blur', onBlur);
      win.removeEventListener('keydown', onKeyDown, true);
    };
  }, [elements.domReference, open, enabled]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    function onOpenChange(_ref) {
      let {
        reason
      } = _ref;
      if (reason === 'reference-press' || reason === 'escape-key') {
        blockFocusRef.current = true;
      }
    }
    events.on('openchange', onOpenChange);
    return () => {
      events.off('openchange', onOpenChange);
    };
  }, [events, enabled]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return () => {
      clearTimeout(timeoutRef.current);
    };
  }, []);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onPointerDown(event) {
      if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isVirtualPointerEvent)(event.nativeEvent)) return;
      keyboardModalityRef.current = false;
    },
    onMouseLeave() {
      blockFocusRef.current = false;
    },
    onFocus(event) {
      if (blockFocusRef.current) return;
      const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event.nativeEvent);
      if (visibleOnly && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(target)) {
        try {
          // Mac Safari unreliably matches `:focus-visible` on the reference
          // if focus was outside the page initially - use the fallback
          // instead.
          if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isSafari)() && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isMac)()) throw Error();
          if (!target.matches(':focus-visible')) return;
        } catch (e) {
          // Old browsers will throw an error when using `:focus-visible`.
          if (!keyboardModalityRef.current && !(0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isTypeableElement)(target)) {
            return;
          }
        }
      }
      onOpenChange(true, event.nativeEvent, 'focus');
    },
    onBlur(event) {
      blockFocusRef.current = false;
      const relatedTarget = event.relatedTarget;
      const nativeEvent = event.nativeEvent;

      // Hit the non-modal focus management portal guard. Focus will be
      // moved into the floating element immediately after.
      const movedToFocusGuard = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';

      // Wait for the window blur listener to fire.
      timeoutRef.current = window.setTimeout(() => {
        var _dataRef$current$floa;
        const activeEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)(elements.domReference ? elements.domReference.ownerDocument : document);

        // Focus left the page, keep it open.
        if (!relatedTarget && activeEl === elements.domReference) return;

        // When focusing the reference element (e.g. regular click), then
        // clicking into the floating element, prevent it from hiding.
        // Note: it must be focusable, e.g. `tabindex="-1"`.
        // We can not rely on relatedTarget to point to the correct element
        // as it will only point to the shadow host of the newly focused element
        // and not the element that actually has received focus if it is located
        // inside a shadow root.
        if ((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)((_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.refs.floating.current, activeEl) || (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(elements.domReference, activeEl) || movedToFocusGuard) {
          return;
        }
        onOpenChange(false, nativeEvent, 'focus');
      });
    }
  }), [dataRef, elements.domReference, onOpenChange, visibleOnly]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference
  } : {}, [enabled, reference]);
}

const ACTIVE_KEY = 'active';
const SELECTED_KEY = 'selected';
function mergeProps(userProps, propsList, elementKey) {
  const map = new Map();
  const isItem = elementKey === 'item';
  let domUserProps = userProps;
  if (isItem && userProps) {
    const {
      [ACTIVE_KEY]: _,
      [SELECTED_KEY]: __,
      ...validProps
    } = userProps;
    domUserProps = validProps;
  }
  return {
    ...(elementKey === 'floating' && {
      tabIndex: -1,
      [FOCUSABLE_ATTRIBUTE]: ''
    }),
    ...domUserProps,
    ...propsList.map(value => {
      const propsOrGetProps = value ? value[elementKey] : null;
      if (typeof propsOrGetProps === 'function') {
        return userProps ? propsOrGetProps(userProps) : null;
      }
      return propsOrGetProps;
    }).concat(userProps).reduce((acc, props) => {
      if (!props) {
        return acc;
      }
      Object.entries(props).forEach(_ref => {
        let [key, value] = _ref;
        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {
          return;
        }
        if (key.indexOf('on') === 0) {
          if (!map.has(key)) {
            map.set(key, []);
          }
          if (typeof value === 'function') {
            var _map$get;
            (_map$get = map.get(key)) == null || _map$get.push(value);
            acc[key] = function () {
              var _map$get2;
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);
            };
          }
        } else {
          acc[key] = value;
        }
      });
      return acc;
    }, {})
  };
}
/**
 * Merges an array of interaction hooks' props into prop getters, allowing
 * event handler functions to be composed together without overwriting one
 * another.
 * @see https://floating-ui.com/docs/useInteractions
 */
function useInteractions(propsList) {
  if (propsList === void 0) {
    propsList = [];
  }
  const referenceDeps = propsList.map(key => key == null ? void 0 : key.reference);
  const floatingDeps = propsList.map(key => key == null ? void 0 : key.floating);
  const itemDeps = propsList.map(key => key == null ? void 0 : key.item);
  const getReferenceProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  referenceDeps);
  const getFloatingProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  floatingDeps);
  const getItemProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'item'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  itemDeps);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    getReferenceProps,
    getFloatingProps,
    getItemProps
  }), [getReferenceProps, getFloatingProps, getItemProps]);
}

function doSwitch(orientation, vertical, horizontal) {
  switch (orientation) {
    case 'vertical':
      return vertical;
    case 'horizontal':
      return horizontal;
    default:
      return vertical || horizontal;
  }
}
function isMainOrientationKey(key, orientation) {
  const vertical = key === ARROW_UP || key === ARROW_DOWN;
  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal);
}
function isMainOrientationToEndKey(key, orientation, rtl) {
  const vertical = key === ARROW_DOWN;
  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';
}
function isCrossOrientationOpenKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  const horizontal = key === ARROW_DOWN;
  return doSwitch(orientation, vertical, horizontal);
}
function isCrossOrientationCloseKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;
  const horizontal = key === ARROW_UP;
  return doSwitch(orientation, vertical, horizontal);
}
/**
 * Adds arrow key-based navigation of a list of items, either using real DOM
 * focus or virtual focus.
 * @see https://floating-ui.com/docs/useListNavigation
 */
function useListNavigation(context, props) {
  const {
    open,
    onOpenChange,
    elements
  } = context;
  const {
    listRef,
    activeIndex,
    onNavigate: unstable_onNavigate = () => {},
    enabled = true,
    selectedIndex = null,
    allowEscape = false,
    loop = false,
    nested = false,
    rtl = false,
    virtual = false,
    focusItemOnOpen = 'auto',
    focusItemOnHover = true,
    openOnArrowKeyDown = true,
    disabledIndices = undefined,
    orientation = 'vertical',
    cols = 1,
    scrollItemIntoView = true,
    virtualItemRef,
    itemSizes,
    dense = false
  } = props;
  if (true) {
    if (allowEscape) {
      if (!loop) {
        warn('`useListNavigation` looping must be enabled to allow escaping.');
      }
      if (!virtual) {
        warn('`useListNavigation` must be virtual to allow escaping.');
      }
    }
    if (orientation === 'vertical' && cols > 1) {
      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either "horizontal" or "both".');
    }
  }
  const floatingFocusElement = getFloatingFocusElement(elements.floating);
  const floatingFocusElementRef = useLatestRef(floatingFocusElement);
  const parentId = useFloatingParentNodeId();
  const tree = useFloatingTree();
  const onNavigate = useEffectEvent(() => {
    unstable_onNavigate(indexRef.current === -1 ? null : indexRef.current);
  });
  const typeableComboboxReference = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isTypeableCombobox)(elements.domReference);
  const focusItemOnOpenRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(focusItemOnOpen);
  const indexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(selectedIndex != null ? selectedIndex : -1);
  const keyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const isPointerModalityRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  const previousOnNavigateRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onNavigate);
  const previousMountedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(!!elements.floating);
  const previousOpenRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(open);
  const forceSyncFocusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const forceScrollIntoViewRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const disabledIndicesRef = useLatestRef(disabledIndices);
  const latestOpenRef = useLatestRef(open);
  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);
  const selectedIndexRef = useLatestRef(selectedIndex);
  const [activeId, setActiveId] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  const [virtualId, setVirtualId] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  const focusItem = useEffectEvent(() => {
    function runFocus(item) {
      if (virtual) {
        setActiveId(item.id);
        tree == null || tree.events.emit('virtualfocus', item);
        if (virtualItemRef) {
          virtualItemRef.current = item;
        }
      } else {
        enqueueFocus(item, {
          sync: forceSyncFocusRef.current,
          preventScroll: true
        });
      }
    }
    const initialItem = listRef.current[indexRef.current];
    if (initialItem) {
      runFocus(initialItem);
    }
    const scheduler = forceSyncFocusRef.current ? v => v() : requestAnimationFrame;
    scheduler(() => {
      const waitedItem = listRef.current[indexRef.current] || initialItem;
      if (!waitedItem) return;
      if (!initialItem) {
        runFocus(waitedItem);
      }
      const scrollIntoViewOptions = scrollItemIntoViewRef.current;
      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoViewRef.current || !isPointerModalityRef.current);
      if (shouldScrollIntoView) {
        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported
        // by all browsers.
        waitedItem.scrollIntoView == null || waitedItem.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {
          block: 'nearest',
          inline: 'nearest'
        } : scrollIntoViewOptions);
      }
    });
  });

  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating
  // element. Also, reset `activeIndex` upon closing the floating element.
  index(() => {
    if (!enabled) return;
    if (open && elements.floating) {
      if (focusItemOnOpenRef.current && selectedIndex != null) {
        // Regardless of the pointer modality, we want to ensure the selected
        // item comes into view when the floating element is opened.
        forceScrollIntoViewRef.current = true;
        indexRef.current = selectedIndex;
        onNavigate();
      }
    } else if (previousMountedRef.current) {
      // Since the user can specify `onNavigate` conditionally
      // (onNavigate: open ? setActiveIndex : setSelectedIndex),
      // we store and call the previous function.
      indexRef.current = -1;
      previousOnNavigateRef.current();
    }
  }, [enabled, open, elements.floating, selectedIndex, onNavigate]);

  // Sync `activeIndex` to be the focused item while the floating element is
  // open.
  index(() => {
    if (!enabled) return;
    if (!open) return;
    if (!elements.floating) return;
    if (activeIndex == null) {
      forceSyncFocusRef.current = false;
      if (selectedIndexRef.current != null) {
        return;
      }

      // Reset while the floating element was open (e.g. the list changed).
      if (previousMountedRef.current) {
        indexRef.current = -1;
        focusItem();
      }

      // Initial sync.
      if ((!previousOpenRef.current || !previousMountedRef.current) && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {
        let runs = 0;
        const waitForListPopulated = () => {
          if (listRef.current[0] == null) {
            // Avoid letting the browser paint if possible on the first try,
            // otherwise use rAF. Don't try more than twice, since something
            // is wrong otherwise.
            if (runs < 2) {
              const scheduler = runs ? requestAnimationFrame : queueMicrotask;
              scheduler(waitForListPopulated);
            }
            runs++;
          } else {
            indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);
            keyRef.current = null;
            onNavigate();
          }
        };
        waitForListPopulated();
      }
    } else if (!isIndexOutOfBounds(listRef, activeIndex)) {
      indexRef.current = activeIndex;
      focusItem();
      forceScrollIntoViewRef.current = false;
    }
  }, [enabled, open, elements.floating, activeIndex, selectedIndexRef, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);

  // Ensure the parent floating element has focus when a nested child closes
  // to allow arrow key navigation to work after the pointer leaves the child.
  index(() => {
    var _nodes$find;
    if (!enabled || elements.floating || !tree || virtual || !previousMountedRef.current) {
      return;
    }
    const nodes = tree.nodesRef.current;
    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;
    const activeEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getDocument)(elements.floating));
    const treeContainsActiveEl = nodes.some(node => node.context && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(node.context.elements.floating, activeEl));
    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {
      parent.focus({
        preventScroll: true
      });
    }
  }, [enabled, elements.floating, tree, parentId, virtual]);
  index(() => {
    if (!enabled) return;
    if (!tree) return;
    if (!virtual) return;
    if (parentId) return;
    function handleVirtualFocus(item) {
      setVirtualId(item.id);
      if (virtualItemRef) {
        virtualItemRef.current = item;
      }
    }
    tree.events.on('virtualfocus', handleVirtualFocus);
    return () => {
      tree.events.off('virtualfocus', handleVirtualFocus);
    };
  }, [enabled, tree, virtual, parentId, virtualItemRef]);
  index(() => {
    previousOnNavigateRef.current = onNavigate;
    previousOpenRef.current = open;
    previousMountedRef.current = !!elements.floating;
  });
  index(() => {
    if (!open) {
      keyRef.current = null;
    }
  }, [open]);
  const hasActiveIndex = activeIndex != null;
  const item = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    function syncCurrentTarget(currentTarget) {
      if (!open) return;
      const index = listRef.current.indexOf(currentTarget);
      if (index !== -1 && indexRef.current !== index) {
        indexRef.current = index;
        onNavigate();
      }
    }
    const props = {
      onFocus(_ref) {
        let {
          currentTarget
        } = _ref;
        forceSyncFocusRef.current = true;
        syncCurrentTarget(currentTarget);
      },
      onClick: _ref2 => {
        let {
          currentTarget
        } = _ref2;
        return currentTarget.focus({
          preventScroll: true
        });
      },
      // Safari
      ...(focusItemOnHover && {
        onMouseMove(_ref3) {
          let {
            currentTarget
          } = _ref3;
          forceSyncFocusRef.current = true;
          forceScrollIntoViewRef.current = false;
          syncCurrentTarget(currentTarget);
        },
        onPointerLeave(_ref4) {
          let {
            pointerType
          } = _ref4;
          if (!isPointerModalityRef.current || pointerType === 'touch') {
            return;
          }
          forceSyncFocusRef.current = true;
          indexRef.current = -1;
          onNavigate();
          if (!virtual) {
            var _floatingFocusElement;
            (_floatingFocusElement = floatingFocusElementRef.current) == null || _floatingFocusElement.focus({
              preventScroll: true
            });
          }
        }
      })
    };
    return props;
  }, [open, floatingFocusElementRef, focusItemOnHover, listRef, onNavigate, virtual]);
  const commonOnKeyDown = useEffectEvent(event => {
    isPointerModalityRef.current = false;
    forceSyncFocusRef.current = true;

    // When composing a character, Chrome fires ArrowDown twice. Firefox/Safari
    // don't appear to suffer from this. `event.isComposing` is avoided due to
    // Safari not supporting it properly (although it's not needed in the first
    // place for Safari, just avoiding any possible issues).
    if (event.which === 229) {
      return;
    }

    // If the floating element is animating out, ignore navigation. Otherwise,
    // the `activeIndex` gets set to 0 despite not being open so the next time
    // the user ArrowDowns, the first item won't be focused.
    if (!latestOpenRef.current && event.currentTarget === floatingFocusElementRef.current) {
      return;
    }
    if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {
      (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
      onOpenChange(false, event.nativeEvent, 'list-navigation');
      if ((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isHTMLElement)(elements.domReference)) {
        if (virtual) {
          tree == null || tree.events.emit('virtualfocus', elements.domReference);
        } else {
          elements.domReference.focus();
        }
      }
      return;
    }
    const currentIndex = indexRef.current;
    const minIndex = getMinIndex(listRef, disabledIndices);
    const maxIndex = getMaxIndex(listRef, disabledIndices);
    if (!typeableComboboxReference) {
      if (event.key === 'Home') {
        (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
        indexRef.current = minIndex;
        onNavigate();
      }
      if (event.key === 'End') {
        (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
        indexRef.current = maxIndex;
        onNavigate();
      }
    }

    // Grid navigation.
    if (cols > 1) {
      const sizes = itemSizes || Array.from({
        length: listRef.current.length
      }, () => ({
        width: 1,
        height: 1
      }));
      // To calculate movements on the grid, we use hypothetical cell indices
      // as if every item was 1x1, then convert back to real indices.
      const cellMap = buildCellMap(sizes, cols, dense);
      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(listRef.current, index, disabledIndices));
      // last enabled index
      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(listRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);
      const index = cellMap[getGridNavigatedIndex({
        current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)
      }, {
        event,
        orientation,
        loop,
        rtl,
        cols,
        // treat undefined (empty grid spaces) as disabled indices so we
        // don't end up in them
        disabledIndices: getCellIndices([...(disabledIndices || listRef.current.map((_, index) => isDisabled(listRef.current, index) ? index : undefined)), undefined], cellMap),
        minIndex: minGridIndex,
        maxIndex: maxGridIndex,
        prevIndex: getCellIndexOfCorner(indexRef.current > maxIndex ? minIndex : indexRef.current, sizes, cellMap, cols,
        // use a corner matching the edge closest to the direction
        // we're moving in so we don't end up in the same item. Prefer
        // top/left over bottom/right.
        event.key === ARROW_DOWN ? 'bl' : event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT) ? 'tr' : 'tl'),
        stopEvent: true
      })];
      if (index != null) {
        indexRef.current = index;
        onNavigate();
      }
      if (orientation === 'both') {
        return;
      }
    }
    if (isMainOrientationKey(event.key, orientation)) {
      (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);

      // Reset the index if no item is focused.
      if (open && !virtual && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.activeElement)(event.currentTarget.ownerDocument) === event.currentTarget) {
        indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;
        onNavigate();
        return;
      }
      if (isMainOrientationToEndKey(event.key, orientation, rtl)) {
        if (loop) {
          indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {
            startingIndex: currentIndex,
            disabledIndices
          });
        } else {
          indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {
            startingIndex: currentIndex,
            disabledIndices
          }));
        }
      } else {
        if (loop) {
          indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {
            startingIndex: currentIndex,
            decrement: true,
            disabledIndices
          });
        } else {
          indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {
            startingIndex: currentIndex,
            decrement: true,
            disabledIndices
          }));
        }
      }
      if (isIndexOutOfBounds(listRef, indexRef.current)) {
        indexRef.current = -1;
      }
      onNavigate();
    }
  });
  const ariaActiveDescendantProp = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    return virtual && open && hasActiveIndex && {
      'aria-activedescendant': virtualId || activeId
    };
  }, [virtual, open, hasActiveIndex, virtualId, activeId]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    return {
      'aria-orientation': orientation === 'both' ? undefined : orientation,
      ...(!typeableComboboxReference ? ariaActiveDescendantProp : {}),
      onKeyDown: commonOnKeyDown,
      onPointerMove() {
        isPointerModalityRef.current = true;
      }
    };
  }, [ariaActiveDescendantProp, commonOnKeyDown, orientation, typeableComboboxReference]);
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    function checkVirtualMouse(event) {
      if (focusItemOnOpen === 'auto' && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isVirtualClick)(event.nativeEvent)) {
        focusItemOnOpenRef.current = true;
      }
    }
    function checkVirtualPointer(event) {
      // `pointerdown` fires first, reset the state then perform the checks.
      focusItemOnOpenRef.current = focusItemOnOpen;
      if (focusItemOnOpen === 'auto' && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.isVirtualPointerEvent)(event.nativeEvent)) {
        focusItemOnOpenRef.current = true;
      }
    }
    return {
      ...ariaActiveDescendantProp,
      onKeyDown(event) {
        isPointerModalityRef.current = false;
        const isArrowKey = event.key.startsWith('Arrow');
        const isHomeOrEndKey = ['Home', 'End'].includes(event.key);
        const isMoveKey = isArrowKey || isHomeOrEndKey;
        const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);
        const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);
        const isMainKey = isMainOrientationKey(event.key, orientation);
        const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';
        if (virtual && open) {
          const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);
          const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;
          if (isMoveKey && deepestNode && virtualItemRef) {
            const eventObject = new KeyboardEvent('keydown', {
              key: event.key,
              bubbles: true
            });
            if (isCrossOpenKey || isCrossCloseKey) {
              var _deepestNode$context, _deepestNode$context2;
              const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;
              const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? listRef.current.find(item => (item == null ? void 0 : item.id) === activeId) : null;
              if (dispatchItem) {
                (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
                dispatchItem.dispatchEvent(eventObject);
                setVirtualId(undefined);
              }
            }
            if ((isMainKey || isHomeOrEndKey) && deepestNode.context) {
              if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {
                var _deepestNode$context$;
                (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
                (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);
                return;
              }
            }
          }
          return commonOnKeyDown(event);
        }

        // If a floating element should not open on arrow key down, avoid
        // setting `activeIndex` while it's closed.
        if (!open && !openOnArrowKeyDown && isArrowKey) {
          return;
        }
        if (isNavigationKey) {
          keyRef.current = nested && isMainKey ? null : event.key;
        }
        if (nested) {
          if (isCrossOpenKey) {
            (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
            if (open) {
              indexRef.current = getMinIndex(listRef, disabledIndicesRef.current);
              onNavigate();
            } else {
              onOpenChange(true, event.nativeEvent, 'list-navigation');
            }
          }
          return;
        }
        if (isMainKey) {
          if (selectedIndex != null) {
            indexRef.current = selectedIndex;
          }
          (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
          if (!open && openOnArrowKeyDown) {
            onOpenChange(true, event.nativeEvent, 'list-navigation');
          } else {
            commonOnKeyDown(event);
          }
          if (open) {
            onNavigate();
          }
        }
      },
      onFocus() {
        if (open && !virtual) {
          indexRef.current = -1;
          onNavigate();
        }
      },
      onPointerDown: checkVirtualPointer,
      onPointerEnter: checkVirtualPointer,
      onMouseDown: checkVirtualMouse,
      onClick: checkVirtualMouse
    };
  }, [activeId, ariaActiveDescendantProp, commonOnKeyDown, disabledIndicesRef, focusItemOnOpen, listRef, nested, onNavigate, onOpenChange, open, openOnArrowKeyDown, orientation, rtl, selectedIndex, tree, virtual, virtualItemRef]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference,
    floating,
    item
  } : {}, [enabled, reference, floating, item]);
}

const componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);

/**
 * Adds base screen reader props to the reference and floating elements for a
 * given floating element `role`.
 * @see https://floating-ui.com/docs/useRole
 */
function useRole(context, props) {
  var _componentRoleToAriaR;
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    floatingId
  } = context;
  const {
    enabled = true,
    role = 'dialog'
  } = props;
  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;
  const referenceId = useId();
  const parentId = useFloatingParentNodeId();
  const isNested = parentId != null;
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (ariaRole === 'tooltip' || role === 'label') {
      return {
        ["aria-" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined
      };
    }
    return {
      'aria-expanded': open ? 'true' : 'false',
      'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,
      'aria-controls': open ? floatingId : undefined,
      ...(ariaRole === 'listbox' && {
        role: 'combobox'
      }),
      ...(ariaRole === 'menu' && {
        id: referenceId
      }),
      ...(ariaRole === 'menu' && isNested && {
        role: 'menuitem'
      }),
      ...(role === 'select' && {
        'aria-autocomplete': 'none'
      }),
      ...(role === 'combobox' && {
        'aria-autocomplete': 'list'
      })
    };
  }, [ariaRole, floatingId, isNested, open, referenceId, role]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    const floatingProps = {
      id: floatingId,
      ...(ariaRole && {
        role: ariaRole
      })
    };
    if (ariaRole === 'tooltip' || role === 'label') {
      return floatingProps;
    }
    return {
      ...floatingProps,
      ...(ariaRole === 'menu' && {
        'aria-labelledby': referenceId
      })
    };
  }, [ariaRole, floatingId, referenceId, role]);
  const item = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(_ref => {
    let {
      active,
      selected
    } = _ref;
    const commonProps = {
      role: 'option',
      ...(active && {
        id: floatingId + "-option"
      })
    };

    // For `menu`, we are unable to tell if the item is a `menuitemradio`
    // or `menuitemcheckbox`. For backwards-compatibility reasons, also
    // avoid defaulting to `menuitem` as it may overwrite custom role props.
    switch (role) {
      case 'select':
        return {
          ...commonProps,
          'aria-selected': active && selected
        };
      case 'combobox':
        {
          return {
            ...commonProps,
            ...(active && {
              'aria-selected': true
            })
          };
        }
    }
    return {};
  }, [floatingId, role]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference,
    floating,
    item
  } : {}, [enabled, reference, floating, item]);
}

// Converts a JS style key like `backgroundColor` to a CSS transition-property
// like `background-color`.
const camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());
function execWithArgsOrReturn(valueOrFn, args) {
  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;
}
function useDelayUnmount(open, durationMs) {
  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(open);
  if (open && !isMounted) {
    setIsMounted(true);
  }
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!open && isMounted) {
      const timeout = setTimeout(() => setIsMounted(false), durationMs);
      return () => clearTimeout(timeout);
    }
  }, [open, isMounted, durationMs]);
  return isMounted;
}
/**
 * Provides a status string to apply CSS transitions to a floating element,
 * correctly handling placement-aware transitions.
 * @see https://floating-ui.com/docs/useTransition#usetransitionstatus
 */
function useTransitionStatus(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    open,
    elements: {
      floating
    }
  } = context;
  const {
    duration = 250
  } = props;
  const isNumberDuration = typeof duration === 'number';
  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;
  const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState('unmounted');
  const isMounted = useDelayUnmount(open, closeDuration);
  if (!isMounted && status === 'close') {
    setStatus('unmounted');
  }
  index(() => {
    if (!floating) return;
    if (open) {
      setStatus('initial');
      const frame = requestAnimationFrame(() => {
        setStatus('open');
      });
      return () => {
        cancelAnimationFrame(frame);
      };
    }
    setStatus('close');
  }, [open, floating]);
  return {
    isMounted,
    status
  };
}
/**
 * Provides styles to apply CSS transitions to a floating element, correctly
 * handling placement-aware transitions. Wrapper around `useTransitionStatus`.
 * @see https://floating-ui.com/docs/useTransition#usetransitionstyles
 */
function useTransitionStyles(context, props) {
  if (props === void 0) {
    props = {};
  }
  const {
    initial: unstable_initial = {
      opacity: 0
    },
    open: unstable_open,
    close: unstable_close,
    common: unstable_common,
    duration = 250
  } = props;
  const placement = context.placement;
  const side = placement.split('-')[0];
  const fnArgs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    side,
    placement
  }), [side, placement]);
  const isNumberDuration = typeof duration === 'number';
  const openDuration = (isNumberDuration ? duration : duration.open) || 0;
  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;
  const [styles, setStyles] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => ({
    ...execWithArgsOrReturn(unstable_common, fnArgs),
    ...execWithArgsOrReturn(unstable_initial, fnArgs)
  }));
  const {
    isMounted,
    status
  } = useTransitionStatus(context, {
    duration
  });
  const initialRef = useLatestRef(unstable_initial);
  const openRef = useLatestRef(unstable_open);
  const closeRef = useLatestRef(unstable_close);
  const commonRef = useLatestRef(unstable_common);
  index(() => {
    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);
    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);
    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);
    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {
      acc[key] = '';
      return acc;
    }, {});
    if (status === 'initial') {
      setStyles(styles => ({
        transitionProperty: styles.transitionProperty,
        ...commonStyles,
        ...initialStyles
      }));
    }
    if (status === 'open') {
      setStyles({
        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),
        transitionDuration: openDuration + "ms",
        ...commonStyles,
        ...openStyles
      });
    }
    if (status === 'close') {
      const styles = closeStyles || initialStyles;
      setStyles({
        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),
        transitionDuration: closeDuration + "ms",
        ...commonStyles,
        ...styles
      });
    }
  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);
  return {
    isMounted,
    styles
  };
}

/**
 * Provides a matching callback that can be used to focus an item as the user
 * types, often used in tandem with `useListNavigation()`.
 * @see https://floating-ui.com/docs/useTypeahead
 */
function useTypeahead(context, props) {
  var _ref;
  const {
    open,
    dataRef
  } = context;
  const {
    listRef,
    activeIndex,
    onMatch: unstable_onMatch,
    onTypingChange: unstable_onTypingChange,
    enabled = true,
    findMatch = null,
    resetMs = 750,
    ignoreKeys = [],
    selectedIndex = null
  } = props;
  const timeoutIdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const stringRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef('');
  const prevIndexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);
  const matchIndexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const onMatch = useEffectEvent(unstable_onMatch);
  const onTypingChange = useEffectEvent(unstable_onTypingChange);
  const findMatchRef = useLatestRef(findMatch);
  const ignoreKeysRef = useLatestRef(ignoreKeys);
  index(() => {
    if (open) {
      clearTimeout(timeoutIdRef.current);
      matchIndexRef.current = null;
      stringRef.current = '';
    }
  }, [open]);
  index(() => {
    // Sync arrow key navigation but not typeahead navigation.
    if (open && stringRef.current === '') {
      var _ref2;
      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;
    }
  }, [open, selectedIndex, activeIndex]);
  const setTypingChange = useEffectEvent(value => {
    if (value) {
      if (!dataRef.current.typing) {
        dataRef.current.typing = value;
        onTypingChange(value);
      }
    } else {
      if (dataRef.current.typing) {
        dataRef.current.typing = value;
        onTypingChange(value);
      }
    }
  });
  const onKeyDown = useEffectEvent(event => {
    function getMatchingIndex(list, orderedList, string) {
      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);
      return str ? list.indexOf(str) : -1;
    }
    const listContent = listRef.current;
    if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {
      if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {
        setTypingChange(false);
      } else if (event.key === ' ') {
        (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
      }
    }
    if (listContent == null || ignoreKeysRef.current.includes(event.key) ||
    // Character key.
    event.key.length !== 1 ||
    // Modifier key.
    event.ctrlKey || event.metaKey || event.altKey) {
      return;
    }
    if (open && event.key !== ' ') {
      (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.stopEvent)(event);
      setTypingChange(true);
    }

    // Bail out if the list contains a word like "llama" or "aaron". TODO:
    // allow it in this case, too.
    const allowRapidSuccessionOfFirstLetter = listContent.every(text => {
      var _text$, _text$2;
      return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;
    });

    // Allows the user to cycle through items that start with the same letter
    // in rapid succession.
    if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {
      stringRef.current = '';
      prevIndexRef.current = matchIndexRef.current;
    }
    stringRef.current += event.key;
    clearTimeout(timeoutIdRef.current);
    timeoutIdRef.current = setTimeout(() => {
      stringRef.current = '';
      prevIndexRef.current = matchIndexRef.current;
      setTypingChange(false);
    }, resetMs);
    const prevIndex = prevIndexRef.current;
    const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);
    if (index !== -1) {
      onMatch(index);
      matchIndexRef.current = index;
    } else if (event.key !== ' ') {
      stringRef.current = '';
      setTypingChange(false);
    }
  });
  const reference = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onKeyDown
  }), [onKeyDown]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    return {
      onKeyDown,
      onKeyUp(event) {
        if (event.key === ' ') {
          setTypingChange(false);
        }
      }
    };
  }, [onKeyDown, setTypingChange]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    reference,
    floating
  } : {}, [enabled, reference, floating]);
}

function getArgsWithCustomFloatingHeight(state, height) {
  return {
    ...state,
    rects: {
      ...state.rects,
      floating: {
        ...state.rects.floating,
        height
      }
    }
  };
}
/**
 * Positions the floating element such that an inner element inside of it is
 * anchored to the reference element.
 * @see https://floating-ui.com/docs/inner
 * @deprecated
 */
const inner = props => ({
  name: 'inner',
  options: props,
  async fn(state) {
    const {
      listRef,
      overflowRef,
      onFallbackChange,
      offset: innerOffset = 0,
      index = 0,
      minItemsVisible = 4,
      referenceOverflowThreshold = 0,
      scrollRef,
      ...detectOverflowOptions
    } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.evaluate)(props, state);
    const {
      rects,
      elements: {
        floating
      }
    } = state;
    const item = listRef.current[index];
    const scrollEl = (scrollRef == null ? void 0 : scrollRef.current) || floating;

    // Valid combinations:
    // 1. Floating element is the scrollRef and has a border (default)
    // 2. Floating element is not the scrollRef, floating element has a border
    // 3. Floating element is not the scrollRef, scrollRef has a border
    // Floating > {...getFloatingProps()} wrapper > scrollRef > items is not
    // allowed as VoiceOver doesn't work.
    const clientTop = floating.clientTop || scrollEl.clientTop;
    const floatingIsBordered = floating.clientTop !== 0;
    const scrollElIsBordered = scrollEl.clientTop !== 0;
    const floatingIsScrollEl = floating === scrollEl;
    if (true) {
      if (!state.placement.startsWith('bottom')) {
        warn('`placement` side must be "bottom" when using the `inner`', 'middleware.');
      }
    }
    if (!item) {
      return {};
    }
    const nextArgs = {
      ...state,
      ...(await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_3__.offset)(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))
    };
    const overflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(getArgsWithCustomFloatingHeight(nextArgs, scrollEl.scrollHeight + clientTop + floating.clientTop), detectOverflowOptions);
    const refOverflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(nextArgs, {
      ...detectOverflowOptions,
      elementContext: 'reference'
    });
    const diffY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.max)(0, overflow.top);
    const nextY = nextArgs.y + diffY;
    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight;
    const rounder = isScrollable ? v => v : _floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.round;
    const maxHeight = rounder((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.max)(0, scrollEl.scrollHeight + (floatingIsBordered && floatingIsScrollEl || scrollElIsBordered ? clientTop * 2 : 0) - diffY - (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.max)(0, overflow.bottom)));
    scrollEl.style.maxHeight = maxHeight + "px";
    scrollEl.scrollTop = diffY;

    // There is not enough space, fallback to standard anchored positioning
    if (onFallbackChange) {
      const shouldFallback = scrollEl.offsetHeight < item.offsetHeight * (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_7__.min)(minItemsVisible, listRef.current.length) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold;
      react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync(() => onFallbackChange(shouldFallback));
    }
    if (overflowRef) {
      overflowRef.current = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(getArgsWithCustomFloatingHeight({
        ...nextArgs,
        y: nextY
      }, scrollEl.offsetHeight + clientTop + floating.clientTop), detectOverflowOptions);
    }
    return {
      y: nextY
    };
  }
});
/**
 * Changes the `inner` middleware's `offset` upon a `wheel` event to
 * expand the floating element's height, revealing more list items.
 * @see https://floating-ui.com/docs/inner
 * @deprecated
 */
function useInnerOffset(context, props) {
  const {
    open,
    elements
  } = context;
  const {
    enabled = true,
    overflowRef,
    scrollRef,
    onChange: unstable_onChange
  } = props;
  const onChange = useEffectEvent(unstable_onChange);
  const controlledScrollingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const prevScrollTopRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const initialOverflowRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) return;
    function onWheel(e) {
      if (e.ctrlKey || !el || overflowRef.current == null) {
        return;
      }
      const dY = e.deltaY;
      const isAtTop = overflowRef.current.top >= -0.5;
      const isAtBottom = overflowRef.current.bottom >= -0.5;
      const remainingScroll = el.scrollHeight - el.clientHeight;
      const sign = dY < 0 ? -1 : 1;
      const method = dY < 0 ? 'max' : 'min';
      if (el.scrollHeight <= el.clientHeight) {
        return;
      }
      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {
        e.preventDefault();
        react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync(() => {
          onChange(d => d + Math[method](dY, remainingScroll * sign));
        });
      } else if (/firefox/i.test((0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getUserAgent)())) {
        // Needed to propagate scrolling during momentum scrolling phase once
        // it gets limited by the boundary. UX improvement, not critical.
        el.scrollTop += dY;
      }
    }
    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
    if (open && el) {
      el.addEventListener('wheel', onWheel);

      // Wait for the position to be ready.
      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
        if (overflowRef.current != null) {
          initialOverflowRef.current = {
            ...overflowRef.current
          };
        }
      });
      return () => {
        prevScrollTopRef.current = null;
        initialOverflowRef.current = null;
        el.removeEventListener('wheel', onWheel);
      };
    }
  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);
  const floating = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    onKeyDown() {
      controlledScrollingRef.current = true;
    },
    onWheel() {
      controlledScrollingRef.current = false;
    },
    onPointerMove() {
      controlledScrollingRef.current = false;
    },
    onScroll() {
      const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
      if (!overflowRef.current || !el || !controlledScrollingRef.current) {
        return;
      }
      if (prevScrollTopRef.current !== null) {
        const scrollDiff = el.scrollTop - prevScrollTopRef.current;
        if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {
          react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync(() => onChange(d => d + scrollDiff));
        }
      }

      // [Firefox] Wait for the height change to have been applied.
      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
      });
    }
  }), [elements.floating, onChange, overflowRef, scrollRef]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => enabled ? {
    floating
  } : {}, [enabled, floating]);
}

function isPointInPolygon(point, polygon) {
  const [x, y] = point;
  let isInside = false;
  const length = polygon.length;
  for (let i = 0, j = length - 1; i < length; j = i++) {
    const [xi, yi] = polygon[i] || [0, 0];
    const [xj, yj] = polygon[j] || [0, 0];
    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) {
      isInside = !isInside;
    }
  }
  return isInside;
}
function isInside(point, rect) {
  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;
}
/**
 * Generates a safe polygon area that the user can traverse without closing the
 * floating element once leaving the reference element.
 * @see https://floating-ui.com/docs/useHover#safepolygon
 */
function safePolygon(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    buffer = 0.5,
    blockPointerEvents = false,
    requireIntent = true
  } = options;
  let timeoutId;
  let hasLanded = false;
  let lastX = null;
  let lastY = null;
  let lastCursorTime = performance.now();
  function getCursorSpeed(x, y) {
    const currentTime = performance.now();
    const elapsedTime = currentTime - lastCursorTime;
    if (lastX === null || lastY === null || elapsedTime === 0) {
      lastX = x;
      lastY = y;
      lastCursorTime = currentTime;
      return null;
    }
    const deltaX = x - lastX;
    const deltaY = y - lastY;
    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    const speed = distance / elapsedTime; // px / ms

    lastX = x;
    lastY = y;
    lastCursorTime = currentTime;
    return speed;
  }
  const fn = _ref => {
    let {
      x,
      y,
      placement,
      elements,
      onClose,
      nodeId,
      tree
    } = _ref;
    return function onMouseMove(event) {
      function close() {
        clearTimeout(timeoutId);
        onClose();
      }
      clearTimeout(timeoutId);
      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {
        return;
      }
      const {
        clientX,
        clientY
      } = event;
      const clientPoint = [clientX, clientY];
      const target = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.getTarget)(event);
      const isLeave = event.type === 'mouseleave';
      const isOverFloatingEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(elements.floating, target);
      const isOverReferenceEl = (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(elements.domReference, target);
      const refRect = elements.domReference.getBoundingClientRect();
      const rect = elements.floating.getBoundingClientRect();
      const side = placement.split('-')[0];
      const cursorLeaveFromRight = x > rect.right - rect.width / 2;
      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;
      const isOverReferenceRect = isInside(clientPoint, refRect);
      const isFloatingWider = rect.width > refRect.width;
      const isFloatingTaller = rect.height > refRect.height;
      const left = (isFloatingWider ? refRect : rect).left;
      const right = (isFloatingWider ? refRect : rect).right;
      const top = (isFloatingTaller ? refRect : rect).top;
      const bottom = (isFloatingTaller ? refRect : rect).bottom;
      if (isOverFloatingEl) {
        hasLanded = true;
        if (!isLeave) {
          return;
        }
      }
      if (isOverReferenceEl) {
        hasLanded = false;
      }
      if (isOverReferenceEl && !isLeave) {
        hasLanded = true;
        return;
      }

      // Prevent overlapping floating element from being stuck in an open-close
      // loop: https://github.com/floating-ui/floating-ui/issues/1910
      if (isLeave && (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.isElement)(event.relatedTarget) && (0,_floating_ui_react_utils__WEBPACK_IMPORTED_MODULE_6__.contains)(elements.floating, event.relatedTarget)) {
        return;
      }

      // If any nested child is open, abort.
      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {
        let {
          context
        } = _ref2;
        return context == null ? void 0 : context.open;
      })) {
        return;
      }

      // If the pointer is leaving from the opposite side, the "buffer" logic
      // creates a point where the floating element remains open, but should be
      // ignored.
      // A constant of 1 handles floating point rounding errors.
      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {
        return close();
      }

      // Ignore when the cursor is within the rectangular trough between the
      // two elements. Since the triangle is created from the cursor point,
      // which can start beyond the ref element's edge, traversing back and
      // forth from the ref to the floating element can cause it to close. This
      // ensures it always remains open in that case.
      let rectPoly = [];
      switch (side) {
        case 'top':
          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];
          break;
        case 'bottom':
          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];
          break;
        case 'left':
          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];
          break;
        case 'right':
          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];
          break;
      }
      function getPolygon(_ref3) {
        let [x, y] = _ref3;
        switch (side) {
          case 'top':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'bottom':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'left':
            {
              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];
              return [...commonPoints, cursorPointOne, cursorPointTwo];
            }
          case 'right':
            {
              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
        }
      }
      if (isPointInPolygon([clientX, clientY], rectPoly)) {
        return;
      }
      if (hasLanded && !isOverReferenceRect) {
        return close();
      }
      if (!isLeave && requireIntent) {
        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);
        const cursorSpeedThreshold = 0.1;
        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {
          return close();
        }
      }
      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {
        close();
      } else if (!hasLanded && requireIntent) {
        timeoutId = window.setTimeout(close, 40);
      }
    };
  };
  fn.__options = {
    blockPointerEvents
  };
  return fn;
}




/***/ }),

/***/ "./resources/blocks/invoice/src/components/DropFileInput.jsx":
/*!*******************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/DropFileInput.jsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_3__);





const DropFileInput = props => {
  const wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [fileList, setFileList] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [logo, setLogo] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props?.logo);
  const [className, setClassName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('bg-cultured');
  const [uploading, setUploading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [disabled, setDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props?.disabled);
  const onDragEnter = () => wrapperRef.current.classList.add('dragover');
  const onDragLeave = () => wrapperRef.current.classList.remove('dragover');
  const onDrop = () => wrapperRef.current.classList.remove('dragover');
  (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (props?.logo) {
      setLogo(props?.logo);
      setClassName('bg-white');
    }
  }, [props]);
  const onFileDrop = async e => {
    const newFile = e.target.files[0];
    if (newFile) {
      const updatedList = [newFile];
      setFileList(updatedList);
      setLogo(URL.createObjectURL(newFile));
      setClassName('bg-white');
      props.onFileChange(updatedList);
      const isImage = newFile.type.startsWith('image/');
      if (isImage) {
        setUploading(true);
        const formData = new FormData();
        formData.append('file', newFile);
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
          path: `wp/v2/media`,
          method: 'POST',
          body: formData
        }).then(response => {
          setLogo(response.source_url);
          setClassName('bg-white');
          setFileList([newFile]);
          props.onFileChange(response);
        }).catch(error => {
          console.error('Error uploading the file:', error);
        }).finally(() => {
          setUploading(false);
        });
      } else {
        alert((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Please upload a valid image file', 'app'));
      }
    }
  };
  const fileRemove = event => {
    event.preventDefault();
    const updatedList = [];
    setLogo('');
    setClassName('bg-cultured');
    props.onFileChange(updatedList);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: wrapperRef,
    className: "drop-file-input p-relative",
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDrop: onDrop
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "drop-file-input__label"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `logo w-200 h-100 ${className} p-relative text-grey-40 flex justify-center items-center b-grey-10-1 rounded radius-sm p-0`,
    style: {
      'overflow': 'hidden'
    }
  }, logo ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, !props?.disabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", {
    href: "#",
    onClick: fileRemove,
    className: "close p-absolute top right"
  }, "\xD7"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
    alt: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Invoice logo', 'app'),
    src: logo.toString(),
    className: "w-100-p h-auto object-cover"
  })) : (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Add your logo', 'app'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "file",
    value: "",
    className: "w-150 h-100 p-absolute top center",
    style: {
      'opacity': '0'
    },
    disabled: props?.disabled,
    onChange: onFileDrop
  })));
};
DropFileInput.propTypes = {
  onFileChange: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DropFileInput);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/InvoiceForm.jsx":
/*!*****************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/InvoiceForm.jsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-toastify */ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs");
/* harmony import */ var _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @invoice/tools/Enums */ "./resources/scripts/tools/Enums.js");
/* harmony import */ var _invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @invoice/tools/setInvoiceHeader */ "./resources/scripts/tools/setInvoiceHeader.js");
/* harmony import */ var _invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @invoice/tools/HandleTaxesAndDiscounts */ "./resources/scripts/tools/HandleTaxesAndDiscounts.js");
/* harmony import */ var _contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../contexts/InvoicesContext */ "./resources/blocks/invoice/src/contexts/InvoicesContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _components_invoice_form_InvoiceFormHeader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/invoice-form/InvoiceFormHeader */ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormHeader.jsx");
/* harmony import */ var _components_invoice_form_InvoiceFormDetails__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/invoice-form/InvoiceFormDetails */ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormDetails.jsx");
/* harmony import */ var _components_invoice_form_InvoiceFormItemsTable__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../components/invoice-form/InvoiceFormItemsTable */ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormItemsTable.jsx");
/* harmony import */ var _components_invoice_form_InvoiceFormNotesAndTerms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../components/invoice-form/InvoiceFormNotesAndTerms */ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormNotesAndTerms.jsx");
/* harmony import */ var _components_invoice_form_InvoiceFormSidebar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../components/invoice-form/InvoiceFormSidebar */ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormSidebar.jsx");
/* harmony import */ var _components_invoice_common_InvoiceTotals__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../components/invoice-common/InvoiceTotals */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceTotals.jsx");

















const Container = () => {
  return /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3 form-container p-relative"
  }, /*#__PURE__*/React.createElement(InvoiceFormContainer, null), /*#__PURE__*/React.createElement(_components_invoice_form_InvoiceFormSidebar__WEBPACK_IMPORTED_MODULE_14__["default"], null));
};
const InvoiceFormContainer = ({
  invoice
}) => {
  return /*#__PURE__*/React.createElement("div", {
    className: "form-container p-4 radius-lg rounded bg-white"
  }, /*#__PURE__*/React.createElement(_components_invoice_form_InvoiceFormHeader__WEBPACK_IMPORTED_MODULE_10__["default"], null), /*#__PURE__*/React.createElement(_components_invoice_form_InvoiceFormDetails__WEBPACK_IMPORTED_MODULE_11__["default"], null), /*#__PURE__*/React.createElement("div", {
    className: "mt-4 invoices-table-container"
  }, /*#__PURE__*/React.createElement(_components_invoice_form_InvoiceFormItemsTable__WEBPACK_IMPORTED_MODULE_12__["default"], null), /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-6-4"
  }, /*#__PURE__*/React.createElement(_components_invoice_form_InvoiceFormNotesAndTerms__WEBPACK_IMPORTED_MODULE_13__["default"], null), /*#__PURE__*/React.createElement(_components_invoice_common_InvoiceTotals__WEBPACK_IMPORTED_MODULE_15__["default"], null))));
};
const InvoiceForm = (props = null) => {
  let {
    ID,
    UUID
  } = props;
  const {
    setSettings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_8__.useSettings)();
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_9__.useInvoice)();
  const [currentPath, setCurrentPath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(window.location.path);
  const {
    setFetchNewInvoices
  } = (0,_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_7__.useInvoices)();
  const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_16__.useNavigate)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    (0,_invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_5__["default"])(false);
    setCurrentPath('/invoices/');
    setInvoice(prevState => {
      var _invoice$invoice_tax_, _invoice$invoice_disc;
      return {
        ...prevState,
        ['invoice_tax_amount']: (_invoice$invoice_tax_ = invoice?.invoice_tax_amount) !== null && _invoice$invoice_tax_ !== void 0 ? _invoice$invoice_tax_ : _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].TAXES.IVA,
        ['invoice_discount_amount']: (_invoice$invoice_disc = invoice?.invoice_discount_amount) !== null && _invoice$invoice_disc !== void 0 ? _invoice$invoice_disc : _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].DISCOUNTS.IRPF
      };
    });
    return () => {
      (0,_invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_5__["default"])(true);
    };
  }, []);
  const handleSubmit = event => {
    event.preventDefault();
    let url = 'invoice/v1/invoice';
    if (ID && UUID) {
      url += `/${UUID}`;
    }
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
      path: url,
      method: 'POST',
      data: {
        'acf': {
          ...invoice,
          ...(0,_invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_6__["default"])(invoice)
        }
      }
    }).then(response => {
      if (response.success) {
        react_toastify__WEBPACK_IMPORTED_MODULE_3__.toast.success((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Invoice saved successfully.'), {
          autoClose: 3000
        });
        if (!ID && !UUID) {
          UUID = response.UUID;
        }
        setFetchNewInvoices(true);
        setSettings(prevSettings => ({
          ...prevSettings,
          ['invoice_last_number']: response.invoice_last_number
        }));
        navigate(`/invoices/view/${UUID}`);
      } else {
        var _response$message;
        react_toastify__WEBPACK_IMPORTED_MODULE_3__.toast.error((_response$message = response.message) !== null && _response$message !== void 0 ? _response$message : (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('There was an error saving your invoice'), {
          autoClose: 3000
        });
      }
    });
  };
  return /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit,
    className: 'invoice-form mt-3 mb-5 p-relative',
    encType: "multipart/form-data"
  }, /*#__PURE__*/React.createElement(Container, {
    invoice: props
  }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceForm);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/InvoicePanel.jsx":
/*!******************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/InvoicePanel.jsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @invoice/tools/setInvoiceHeader */ "./resources/scripts/tools/setInvoiceHeader.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _invoice_panel_InvoicePanelHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./invoice-panel/InvoicePanelHeader */ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelHeader.jsx");
/* harmony import */ var _invoice_panel_InvoicePanelDetails__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./invoice-panel/InvoicePanelDetails */ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelDetails.jsx");
/* harmony import */ var _invoice_panel_InvoicePanelItemsTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./invoice-panel/InvoicePanelItemsTable */ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelItemsTable.jsx");
/* harmony import */ var _invoice_panel_InvoicePanelNotesAndTerms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./invoice-panel/InvoicePanelNotesAndTerms */ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelNotesAndTerms.jsx");
/* harmony import */ var _invoice_panel_InvoicePanelSidebar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./invoice-panel/InvoicePanelSidebar */ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelSidebar.jsx");
/* harmony import */ var _invoice_common_InvoiceTotals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./invoice-common/InvoiceTotals */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceTotals.jsx");









const InvoicePanelContainer = () => {
  return /*#__PURE__*/React.createElement("div", {
    className: "form-container p-4 radius-lg rounded bg-white"
  }, /*#__PURE__*/React.createElement(_invoice_panel_InvoicePanelHeader__WEBPACK_IMPORTED_MODULE_3__["default"], null), /*#__PURE__*/React.createElement(_invoice_panel_InvoicePanelDetails__WEBPACK_IMPORTED_MODULE_4__["default"], null), /*#__PURE__*/React.createElement("div", {
    className: "mt-4 invoices-table-container"
  }, /*#__PURE__*/React.createElement(_invoice_panel_InvoicePanelItemsTable__WEBPACK_IMPORTED_MODULE_5__["default"], null), /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-6-4 mt-5"
  }, /*#__PURE__*/React.createElement(_invoice_panel_InvoicePanelNotesAndTerms__WEBPACK_IMPORTED_MODULE_6__["default"], null), /*#__PURE__*/React.createElement(_invoice_common_InvoiceTotals__WEBPACK_IMPORTED_MODULE_8__["default"], null))));
};
const InvoicePanel = (props = null) => {
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__.useInvoice)(props);
  const [currentPath, setCurrentPath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(window.location.path);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    (0,_invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_1__["default"])(false);
    setCurrentPath('/invoices/');
    setInvoice(props);
    return () => {
      (0,_invoice_tools_setInvoiceHeader__WEBPACK_IMPORTED_MODULE_1__["default"])(true);
    };
  }, [props]);
  return /*#__PURE__*/React.createElement("div", {
    className: 'invoice-form invoice-panel mt-3 mb-5 p-relative'
  }, /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3 form-container p-relative"
  }, /*#__PURE__*/React.createElement(InvoicePanelContainer, null), /*#__PURE__*/React.createElement(_invoice_panel_InvoicePanelSidebar__WEBPACK_IMPORTED_MODULE_7__["default"], null)));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanel);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/InvoicesList.jsx":
/*!******************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/InvoicesList.jsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/InvoicesContext */ "./resources/blocks/invoice/src/contexts/InvoicesContext.js");
/* harmony import */ var _components_invoice_list_InvoiceRow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/invoice-list/InvoiceRow */ "./resources/blocks/invoice/src/components/invoice-list/InvoiceRow.jsx");
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}




const InvoicesList = ({
  statuses
}) => {
  const {
    currentStatusLabel,
    currentStatus,
    invoices
  } = (0,_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_2__.useInvoices)();
  const [noInvoicesText, setNoInvoicesText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('You have no invoices', 'app'));
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setNoInvoicesText(currentStatus === 'any' ? (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('You have no invoices', 'app') : (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.sprintf)((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('You have no <strong>%s</strong> invoices', 'app'), currentStatusLabel));
  }, [currentStatus]);
  return /*#__PURE__*/React.createElement("div", {
    className: "mt-4 invoices-table-container"
  }, /*#__PURE__*/React.createElement("table", {
    className: "invoices-table"
  }, /*#__PURE__*/React.createElement("thead", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("th", null, /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "20px",
    viewBox: "0 -960 960 960",
    width: "20px",
    fill: "#333"
  }, /*#__PURE__*/React.createElement("path", {
    d: "m264-192 30-120H144l18-72h150l42-168H192l18-72h162l36-144h72l-36 144h144l36-144h72l-36 144h156l-18 72H642l-42 168h168l-18 72H582l-30 120h-72l30-120H366l-30 120h-72Zm120-192h144l42-168H426l-42 168Z"
  }))), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Client')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Issued')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Due')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Amount')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Status')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Method')), /*#__PURE__*/React.createElement("th", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Actions')))), /*#__PURE__*/React.createElement("tbody", null, invoices && invoices.map(invoice => /*#__PURE__*/React.createElement(_components_invoice_list_InvoiceRow__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({
    statuses: statuses,
    key: invoice.UUID
  }, invoice))), invoices?.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
    colSpan: 8
  }, /*#__PURE__*/React.createElement("em", {
    dangerouslySetInnerHTML: {
      __html: noInvoicesText
    }
  })))))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicesList);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx":
/*!**************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const CurrencyFormatter = ({
  amount,
  currency = 'EUR'
}) => {
  const formatted = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: currency
  }).format(amount);
  return /*#__PURE__*/React.createElement(React.Fragment, null, formatted);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CurrencyFormatter);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/InvoiceItemsTableHeader.jsx":
/*!********************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/InvoiceItemsTableHeader.jsx ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);

const InvoiceItemsTableHeader = () => /*#__PURE__*/React.createElement("thead", {
  className: 'rounded radius-sm'
}, /*#__PURE__*/React.createElement("tr", {
  className: 'rounded radius-sm'
}, /*#__PURE__*/React.createElement("th", {
  className: "w-40-p text-left"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Item')), /*#__PURE__*/React.createElement("th", {
  className: "w-10-p text-center"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Quantity')), /*#__PURE__*/React.createElement("th", {
  className: "w-10-p text-center"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Price')), /*#__PURE__*/React.createElement("th", {
  className: "w-5-p text-center"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Taxable')), /*#__PURE__*/React.createElement("th", {
  className: "w-10-p text-center"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Amount')), /*#__PURE__*/React.createElement("th", {
  className: "w-5-p text-center"
})));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceItemsTableHeader);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusBadge.jsx":
/*!***************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusBadge.jsx ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @invoice/tools/Enums */ "./resources/scripts/tools/Enums.js");

const InvoiceStatusBadge = ({
  status
}) => {
  return /*#__PURE__*/React.createElement("span", {
    className: `btn btn-xs ${_invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_0__["default"].STATUS.COLORS[status]?.join(' ')}`
  }, _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_0__["default"].STATUS.LABELS[status]);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceStatusBadge);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusDropdown.jsx":
/*!******************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusDropdown.jsx ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @invoice/tools/Enums */ "./resources/scripts/tools/Enums.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../contexts/InvoicesContext */ "./resources/blocks/invoice/src/contexts/InvoicesContext.js");







const InvoiceStatusDropdown = ({
  status
}) => {
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_5__.useInvoice)();
  const {
    setFetchNewInvoices
  } = (0,_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_6__.useInvoices)();
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [options, setOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].STATUS);
  const handleOnClick = status => {
    setIsOpen(false);
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_status']: status
    }));
    const {
      UUID
    } = invoice;
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default()({
      path: `invoice/v1/invoice/status/${UUID}`,
      method: 'POST',
      data: {
        'invoice_status': status
      }
    }).then(response => {
      if (response.success) {
        react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.success((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Status updated successfully.'), {
          autoClose: 3000
        });
        setFetchNewInvoices(true);
      } else {
        var _response$message;
        react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error((_response$message = response.message) !== null && _response$message !== void 0 ? _response$message : (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('There was an error updating your invoice status'), {
          autoClose: 3000
        });
      }
    });
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "dropdown"
  }, /*#__PURE__*/React.createElement("button", {
    onClick: () => setIsOpen(!isOpen),
    type: "button",
    className: `btn btn-wide btn-xs ${_invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].STATUS.COLORS[status]?.join(' ')}`
  }, _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].STATUS.LABELS[status], /*#__PURE__*/React.createElement("span", {
    className: "caret"
  }, "\u25BC")), isOpen && /*#__PURE__*/React.createElement("ul", {
    className: "dropdown-menu"
  }, Object.values(options).map((status, index) => {
    if (status?.draft) return '';
    return /*#__PURE__*/React.createElement("li", {
      key: `status-dropdown-${index}`,
      onClick: () => handleOnClick(status)
    }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)(_invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_4__["default"].STATUS.LABELS[status], 'app'));
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceStatusDropdown);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/InvoiceTotals.jsx":
/*!**********************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/InvoiceTotals.jsx ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../invoice-common/CurrencyFormatter */ "./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx");




const InvoiceFormTotals = () => {
  var _invoice$invoice_subt, _invoice$invoice_tax_, _invoice$invoice_taxe, _invoice$invoice_disc, _invoice$invoice_disc2, _invoice$invoice_tota;
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__.useInvoice)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {}, [invoice]);
  return /*#__PURE__*/React.createElement("div", {
    className: "right flex flex-column justify-end pr-2"
  }, /*#__PURE__*/React.createElement("div", {
    className: "invoice-totals flex flex-column gap-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "invoice-subtotal grid grid-cols-4-6 items-center gap-y-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-subtotal",
    className: "text-right pr-2"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Subtotal', 'app')), /*#__PURE__*/React.createElement("strong", {
    className: 'text-right'
  }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
    amount: (_invoice$invoice_subt = invoice?.invoice_subtotal) !== null && _invoice$invoice_subt !== void 0 ? _invoice$invoice_subt : 0
  }))), /*#__PURE__*/React.createElement("div", {
    className: "invoice-taxes grid grid-cols-4-6 items-center gap-y-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-taxes",
    className: "text-right pr-2"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.sprintf)((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('I.V.A. (%s)', 'app'), `${(_invoice$invoice_tax_ = invoice?.invoice_tax_amount) !== null && _invoice$invoice_tax_ !== void 0 ? _invoice$invoice_tax_ : 0}%`)), /*#__PURE__*/React.createElement("strong", {
    className: 'text-right'
  }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
    amount: (_invoice$invoice_taxe = invoice?.invoice_taxes_total) !== null && _invoice$invoice_taxe !== void 0 ? _invoice$invoice_taxe : 0
  }))), /*#__PURE__*/React.createElement("div", {
    className: "invoice-taxes grid grid-cols-4-6 items-center gap-y-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-discounts",
    className: "text-right pr-2"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.sprintf)((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('I.R.P.F. (%s)', 'app'), `${(_invoice$invoice_disc = invoice?.invoice_discount_amount) !== null && _invoice$invoice_disc !== void 0 ? _invoice$invoice_disc : 0}%`)), /*#__PURE__*/React.createElement("strong", {
    className: 'text-right'
  }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
    amount: (_invoice$invoice_disc2 = invoice?.invoice_discount_total) !== null && _invoice$invoice_disc2 !== void 0 ? _invoice$invoice_disc2 : 0
  }))), /*#__PURE__*/React.createElement("div", {
    className: "invoice-taxes grid grid-cols-4-6 items-center gap-y-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-total",
    className: "text-right pr-2"
  }, /*#__PURE__*/React.createElement("strong", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Total', 'app'))), /*#__PURE__*/React.createElement("strong", {
    className: 'text-right'
  }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
    amount: (_invoice$invoice_tota = invoice?.invoice_total) !== null && _invoice$invoice_tota !== void 0 ? _invoice$invoice_tota : 0
  })))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormTotals);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-common/Links.jsx":
/*!**************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-common/Links.jsx ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _invoice_tools_navigate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/navigate */ "./resources/scripts/tools/navigate.js");



const Links = ({
  routes,
  locationPathname = '/invoices/'
}) => {
  if (!routes || Object.keys(routes).length === 0) {
    return '';
  }
  const [currentPath, setCurrentPath] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(locationPathname);
  const routesEntries = Object.entries(routes).map(([key, value]) => ({
    link: key.endsWith('/') ? key : `${key}/`,
    title: value
  }));
  return /*#__PURE__*/React.createElement(React.Fragment, null, routesEntries.map(({
    link,
    title
  }) => {
    return /*#__PURE__*/React.createElement("a", {
      href: link,
      key: link,
      onClick: event => {
        const link = event.currentTarget.getAttribute('href');
        setCurrentPath(link);
        (0,_invoice_tools_navigate__WEBPACK_IMPORTED_MODULE_2__.navigate)(event);
      },
      className: `link${currentPath === link ? ' active' : ''}`
    }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)(title));
  }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Links);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormDetails.jsx":
/*!*************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-form/InvoiceFormDetails.jsx ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_datepicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-datepicker */ "./node_modules/.pnpm/react-datepicker@7.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-datepicker/dist/react-datepicker.min.js");
/* harmony import */ var react_datepicker__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_datepicker__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _invoice_tools_Countries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/Countries */ "./resources/scripts/tools/Countries.js");
/* harmony import */ var _invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @invoice/tools/capitalize */ "./resources/scripts/tools/capitalize.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");







const InvoiceFormDetails = () => {
  var _invoice$invoice_issu, _invoice$invoice_due_, _settings$invoice_dat;
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__.useInvoice)();
  const {
    settings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__.useSettings)();
  const [issuedDate, setIssuedDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_issu = invoice?.invoice_issue_date) !== null && _invoice$invoice_issu !== void 0 ? _invoice$invoice_issu : new Date());
  const [dueDate, setDueDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_due_ = invoice?.invoice_due_date) !== null && _invoice$invoice_due_ !== void 0 ? _invoice$invoice_due_ : new Date());
  const [dateFormat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_settings$invoice_dat = settings?.invoice_date_format) !== null && _settings$invoice_dat !== void 0 ? _settings$invoice_dat : 'MMM d, Y');
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const invoiceSender = [settings?.invoice_business_fni.toString().toUpperCase(), (0,_invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_3__["default"])(settings?.invoice_business_name.toString()), (0,_invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_3__["default"])([settings?.invoice_business_city.toString(), (0,_invoice_tools_Countries__WEBPACK_IMPORTED_MODULE_2__.findCountryByIsoCode)(settings?.invoice_business_country)?.name].join(', '))].join("\n");
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_sender']: invoiceSender,
      ['invoice_sender_address']: invoiceSender,
      ['invoice_issue_date']: issuedDate,
      ['invoice_due_date']: dueDate
    }));
  }, [settings]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_issue_date']: issuedDate,
      ['invoice_due_date']: dueDate
    }));
  }, [issuedDate, dueDate]);
  const handleTextChange = event => {
    const {
      name,
      value
    } = event.target;
    setInvoice(prevState => ({
      ...prevState,
      [name]: value
    }));
    if (name === 'invoice_client') {
      setInvoice(prevState => ({
        ...prevState,
        ['invoice_client_address']: value
      }));
    }
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "left"
  }, /*#__PURE__*/React.createElement("div", {
    className: "sender w-100-p mt-4"
  }, /*#__PURE__*/React.createElement("textarea", {
    required: true,
    className: 'input-lg no-resize',
    placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Who is this from?', 'app'),
    name: "sender",
    id: "sender",
    value: invoice?.invoice_sender,
    onChange: handleTextChange,
    cols: "30",
    rows: "3"
  })), /*#__PURE__*/React.createElement("div", {
    className: "client w-100-p mt-3"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "client"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Bill to:', 'app')), /*#__PURE__*/React.createElement("textarea", {
    required: true,
    className: 'input-lg no-resize',
    placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Who is this to?', 'app'),
    name: "invoice_client",
    onChange: handleTextChange,
    value: invoice?.invoice_client,
    id: "client",
    cols: "30",
    rows: "3"
  }))), /*#__PURE__*/React.createElement("div", {
    className: "right flex flex-column justify-end mt-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "invoice-dates flex flex-column gap-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "invoice-date grid grid-cols-4-6 items-center gap-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-date",
    className: "text-right"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Issued date', 'app')), /*#__PURE__*/React.createElement((react_datepicker__WEBPACK_IMPORTED_MODULE_6___default()), {
    required: true,
    selected: issuedDate,
    dateFormat: dateFormat,
    onChange: date => setIssuedDate(date)
  })), /*#__PURE__*/React.createElement("div", {
    className: "invoice-due-date grid grid-cols-4-6 items-center gap-2"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-due-date",
    className: "text-right"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Due date', 'app')), /*#__PURE__*/React.createElement((react_datepicker__WEBPACK_IMPORTED_MODULE_6___default()), {
    rqeuired: true,
    selected: dueDate,
    dateFormat: dateFormat,
    onChange: date => setDueDate(date)
  })))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormDetails);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormHeader.jsx":
/*!************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-form/InvoiceFormHeader.jsx ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _invoice_tools_setNextInvoiceNumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @invoice/tools/setNextInvoiceNumber */ "./resources/scripts/tools/setNextInvoiceNumber.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var _DropFileInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../DropFileInput */ "./resources/blocks/invoice/src/components/DropFileInput.jsx");







const InvoiceFormHeader = () => {
  var _settings$invoice_log, _invoice$invoice_numb;
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__.useInvoice)();
  const {
    settings,
    setSettings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__.useSettings)();
  const [logo, setLogo] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_settings$invoice_log = settings?.invoice_logo) !== null && _settings$invoice_log !== void 0 ? _settings$invoice_log : '');
  const [invoiceNumber, setInvoiceNumber] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(((_invoice$invoice_numb = invoice?.invoice_number) !== null && _invoice$invoice_numb !== void 0 ? _invoice$invoice_numb : (0,_invoice_tools_setNextInvoiceNumber__WEBPACK_IMPORTED_MODULE_3__["default"])(settings?.invoice_last_number)).toString());
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_number']: invoiceNumber,
      ['invoice_currency']: 'EUR'
    }));
  }, [invoiceNumber]);
  const syncSiteLogo = invoice_logo_id => {
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
      path: 'wp/v2/settings',
      method: 'POST',
      data: {
        'site_logo': invoice_logo_id
      }
    }).then(() => {});
  };
  const handleInvoiceNumberChange = event => {
    const {
      name,
      value
    } = event.target;
    setInvoiceNumber(value);
    setInvoice(prevState => ({
      ...prevState,
      [name]: value
    }));
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3 invoice-header gap-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "left flex flex-column gap-3"
  }, /*#__PURE__*/React.createElement(_DropFileInput__WEBPACK_IMPORTED_MODULE_6__["default"], {
    onFileChange: elem => {
      var _elem$id;
      setSettings(prevSettings => ({
        ...prevSettings,
        'invoice_logo': elem?.source_url,
        'invoice_logo_id': elem?.id
      }));
      syncSiteLogo((_elem$id = elem?.id) !== null && _elem$id !== void 0 ? _elem$id : 0);
      setLogo(elem?.source_url);
    },
    logo: logo !== null && logo !== void 0 ? logo : ''
  })), /*#__PURE__*/React.createElement("div", {
    className: "right flex flex-column justify-space-between gap-2 text-right"
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex justify-end flex-column items-end"
  }, /*#__PURE__*/React.createElement("h1", {
    className: "invoice-title"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Invoice', 'app')), /*#__PURE__*/React.createElement("div", {
    className: "invoice-number flex items-end gap-2 p-relative"
  }, /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "text-right",
    name: "invoice_number",
    id: "invoice_number",
    value: invoiceNumber,
    onChange: handleInvoiceNumberChange
  })))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormHeader);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormItemsTable.jsx":
/*!****************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-form/InvoiceFormItemsTable.jsx ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/HandleTaxesAndDiscounts */ "./resources/scripts/tools/HandleTaxesAndDiscounts.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../invoice-common/CurrencyFormatter */ "./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx");
/* harmony import */ var _invoice_common_InvoiceItemsTableHeader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../invoice-common/InvoiceItemsTableHeader */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceItemsTableHeader.jsx");






const InvoiceFormItemsTable = () => {
  var _invoice$invoice_item;
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_3__.useInvoice)();
  const defaultItemValues = {
    'item_description': '',
    'item_quantity': '',
    'item_price': '',
    'item_taxable': true,
    'item_total': '0'
  };
  const [invoiceItems, setInvoiceItems] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_item = invoice?.invoice_items) !== null && _invoice$invoice_item !== void 0 ? _invoice$invoice_item : [defaultItemValues]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_items']: invoiceItems
    }));
  }, [invoiceItems]);
  const addItem = () => {
    setInvoiceItems([...invoiceItems, {
      ...defaultItemValues
    }]);
  };
  const removeItem = index => {
    const updatedItems = invoiceItems.filter((item, i) => i !== index);
    setInvoiceItems(updatedItems);
  };
  const handleItemInputChange = (index, event) => {
    const {
      name,
      value,
      type,
      checked
    } = event.target;
    const updatedItems = [...invoiceItems];
    if (type === 'checkbox') {
      updatedItems[index][name] = checked;
    } else {
      updatedItems[index][name] = value;
    }
    if (name === 'item_quantity' || name === 'item_price') {
      var _updatedItems$index$i, _updatedItems$index$i2;
      const quantity = parseFloat((_updatedItems$index$i = updatedItems[index].item_quantity) !== null && _updatedItems$index$i !== void 0 ? _updatedItems$index$i : 0);
      const price = parseFloat((_updatedItems$index$i2 = updatedItems[index].item_price) !== null && _updatedItems$index$i2 !== void 0 ? _updatedItems$index$i2 : 0);
      if (quantity && price) {
        var _toFixed;
        updatedItems[index].item_total = (_toFixed = (quantity * price).toFixed(2)) !== null && _toFixed !== void 0 ? _toFixed : 0;
      }
    }
    setInvoiceItems(updatedItems);
    setInvoice(prevState => ({
      ...prevState,
      ...(0,_invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_2__["default"])(invoice)
    }));
  };
  return /*#__PURE__*/React.createElement("table", {
    className: "invoices-table inverse"
  }, /*#__PURE__*/React.createElement(_invoice_common_InvoiceItemsTableHeader__WEBPACK_IMPORTED_MODULE_5__["default"], null), /*#__PURE__*/React.createElement("tbody", null, invoiceItems.map((item, index) => {
    return /*#__PURE__*/React.createElement("tr", {
      key: `invoice-item-${index}`,
      className: "border-0"
    }, /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Description', 'app')
    }, /*#__PURE__*/React.createElement("input", {
      required: true,
      type: 'text',
      name: "item_description",
      value: item.item_description,
      onChange: event => handleItemInputChange(index, event)
    })), /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Quantity', 'app')
    }, /*#__PURE__*/React.createElement("input", {
      required: true,
      type: 'text',
      name: "item_quantity",
      value: item.item_quantity,
      onChange: event => handleItemInputChange(index, event)
    })), /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Price', 'app')
    }, /*#__PURE__*/React.createElement("input", {
      required: true,
      type: 'text',
      name: "item_price",
      value: item.item_price,
      onChange: event => handleItemInputChange(index, event)
    })), /*#__PURE__*/React.createElement("td", {
      className: 'text-center',
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Taxable', 'app')
    }, /*#__PURE__*/React.createElement("input", {
      type: 'checkbox',
      name: "item_taxable",
      checked: item.item_taxable,
      onChange: event => handleItemInputChange(index, event)
    })), /*#__PURE__*/React.createElement("td", {
      className: "text-right",
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Amount', 'app')
    }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_4__["default"], {
      amount: item.item_total
    })), /*#__PURE__*/React.createElement("td", {
      className: 'hidden-action text-right'
    }, index !== 0 && /*#__PURE__*/React.createElement("a", {
      href: "#",
      className: "text-lg",
      onClick: () => removeItem(index)
    }, "\xD7")));
  })), /*#__PURE__*/React.createElement("tfoot", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("button", {
    type: "button",
    className: "btn btn-info btn-text-cultured btn-primary btn-sm",
    onClick: addItem
  }, /*#__PURE__*/React.createElement("span", null, "+"), "\xA0", (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Add item', 'app'))))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormItemsTable);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormNotesAndTerms.jsx":
/*!*******************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-form/InvoiceFormNotesAndTerms.jsx ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");


const InvoiceFormNotesAndTerms = () => {
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__.useInvoice)();
  const handleTextChange = event => {
    const {
      name,
      value
    } = event.target;
    setInvoice(prevState => ({
      ...prevState,
      [name]: value
    }));
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "left"
  }, /*#__PURE__*/React.createElement("div", {
    className: "notes-container container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "form-group col-10"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "notes"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Notes', 'app')), /*#__PURE__*/React.createElement("textarea", {
    className: 'input-lg no-resize',
    placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Notes - any relevant information not already covered', 'app'),
    onChange: handleTextChange,
    name: "invoice_notes",
    value: invoice?.invoice_notes,
    id: "notes",
    cols: "30",
    rows: "3"
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-10"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "terms"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Terms', 'app')), /*#__PURE__*/React.createElement("textarea", {
    className: 'input-lg no-resize',
    placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Terms and conditions - late fees, payment methods, delivery schedule', 'app'),
    onChange: handleTextChange,
    name: "invoice_terms",
    value: invoice?.invoice_terms,
    id: "terms",
    cols: "30",
    rows: "3"
  }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormNotesAndTerms);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-form/InvoiceFormSidebar.jsx":
/*!*************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-form/InvoiceFormSidebar.jsx ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/HandleTaxesAndDiscounts */ "./resources/scripts/tools/HandleTaxesAndDiscounts.js");
/* harmony import */ var _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @invoice/tools/Enums */ "./resources/scripts/tools/Enums.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");






const SubmitButton = () => /*#__PURE__*/React.createElement("button", {
  type: "submit",
  className: "btn btn-wide mt-2"
}, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Save Invoice', 'app'));
const InvoiceSettings = () => {
  var _invoice$invoice_tax_, _invoice$invoice_disc;
  const {
    invoice,
    setInvoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_4__.useInvoice)();
  const {
    settings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__.useSettings)();
  const [invoiceTaxAmount, setInvoiceTaxAmount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_tax_ = invoice?.invoice_tax_amount) !== null && _invoice$invoice_tax_ !== void 0 ? _invoice$invoice_tax_ : _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_3__["default"].TAXES.IVA);
  const [invoiceDiscountAmount, setInvoiceDiscountAmount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_disc = invoice?.invoice_discount_amount) !== null && _invoice$invoice_disc !== void 0 ? _invoice$invoice_disc : _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_3__["default"].DISCOUNTS.IRPF);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setInvoice(prevState => ({
      ...prevState,
      ['invoice_tax_amount']: invoiceTaxAmount,
      ['invoice_discount_amount']: invoiceDiscountAmount,
      ...(0,_invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_2__["default"])(invoice)
    }));
  }, [invoiceTaxAmount, invoiceDiscountAmount]);
  const handleSelectChange = event => {
    const {
      name,
      value
    } = event.target;
    switch (name) {
      case 'invoice_tax_amount':
        setInvoiceTaxAmount(value);
        break;
      case 'invoice_discount_amount':
        setInvoiceDiscountAmount(value);
        break;
    }
    setInvoice(prevState => ({
      ...prevState,
      [name]: value,
      ...(0,_invoice_tools_HandleTaxesAndDiscounts__WEBPACK_IMPORTED_MODULE_2__["default"])(invoice)
    }));
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "flex flex-column gap-1"
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex flex-column"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_tax_amount"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('I.V.A.', 'app')), /*#__PURE__*/React.createElement("select", {
    name: "invoice_tax_amount",
    id: "invoice_tax_amount",
    onChange: handleSelectChange,
    value: invoiceTaxAmount,
    className: 'text-right'
  }, settings?.spain_iva && Object.entries(settings?.spain_iva).map(([value, label]) => /*#__PURE__*/React.createElement("option", {
    key: `option_iva_${value}`,
    value: value
  }, label)))), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-column"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_discount_amount"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('I.R.P.F.', 'app')), /*#__PURE__*/React.createElement("select", {
    name: "invoice_discount_amount",
    id: "invoice_discount_amount",
    className: 'text-right',
    onChange: handleSelectChange,
    value: invoiceDiscountAmount
  }, settings?.spain_irpf && Object.entries(settings?.spain_irpf).map(([value, label]) => /*#__PURE__*/React.createElement("option", {
    key: `option_irpf_${value}`,
    value: value
  }, label)))));
};
const InvoiceFormSidebar = () => {
  return /*#__PURE__*/React.createElement("aside", {
    className: "sidebar pl-4 pr-4 pt-0 flex flex-column gap-4"
  }, /*#__PURE__*/React.createElement(SubmitButton, null), /*#__PURE__*/React.createElement("hr", {
    className: "b-bottom-grey-10-4 mx-4"
  }), /*#__PURE__*/React.createElement(InvoiceSettings, null));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceFormSidebar);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-list/InvoiceRow.jsx":
/*!*****************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-list/InvoiceRow.jsx ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var _invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/DateFormats */ "./resources/scripts/tools/DateFormats.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var _invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../invoice-common/CurrencyFormatter */ "./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx");
/* harmony import */ var _invoice_common_InvoiceStatusBadge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../invoice-common/InvoiceStatusBadge */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusBadge.jsx");







const InvoiceRow = ({
  generated_invoice_number,
  invoice_edit_url,
  invoice_view_url,
  invoice_issue_date,
  invoice_due_date,
  invoice_client,
  invoice_total,
  invoice_status,
  statuses
}) => {
  let navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_6__.useNavigate)();
  const {
    settings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_3__.useSettings)();
  const [showEdit] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(invoice_status === 'invoice_draft');
  const [showView] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(invoice_status !== 'invoice_draft');
  const [clientName, setClientName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(invoice_client);
  const [dateFormat] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(settings?.invoice_date_format);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    const fullName = invoice_client ? invoice_client.split('\n') : [(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('unknown', 'app')];
    if (fullName[0]) {
      setClientName(fullName[0]);
    }
  }, [setClientName]);
  const editButton = () => {
    return /*#__PURE__*/React.createElement("a", {
      href: invoice_edit_url,
      className: "btn btn-xs px-1 btn-info",
      style: {
        padding: '.3rem .6rem',
        borderRadius: '.4rem'
      },
      onClick: event => {
        event.preventDefault();
        navigate(invoice_edit_url);
      }
    }, /*#__PURE__*/React.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      height: "16px",
      viewBox: "0 -960 960 960",
      width: "16px",
      fill: "#f5f5f5"
    }, /*#__PURE__*/React.createElement("path", {
      d: "M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"
    })));
  };
  const viewButton = () => {
    return /*#__PURE__*/React.createElement("a", {
      href: invoice_view_url,
      className: "btn btn-xs px-1 btn-success",
      style: {
        padding: '.3rem .6rem',
        borderRadius: '.4rem'
      },
      onClick: event => {
        event.preventDefault();
        navigate(invoice_view_url);
      }
    }, /*#__PURE__*/React.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      height: "16px",
      viewBox: "0 -960 960 960",
      width: "16px",
      fill: "#f5f5f5"
    }, /*#__PURE__*/React.createElement("path", {
      d: "M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z"
    })));
  };
  return /*#__PURE__*/React.createElement("tr", {
    key: `invoice-row-${generated_invoice_number}`
  }, /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Number', 'app')
  }, /*#__PURE__*/React.createElement("strong", null, generated_invoice_number !== null && generated_invoice_number !== void 0 ? generated_invoice_number : '')), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Client', 'app')
  }, /*#__PURE__*/React.createElement("strong", null, clientName)), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Issued', 'app'),
    className: "text-center"
  }, (0,_invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_2__.formatDate)(dateFormat, new Date(invoice_issue_date))), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Due', 'app'),
    className: "text-center"
  }, (0,_invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_2__.formatDate)(dateFormat, new Date(invoice_due_date))), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Amount', 'app'),
    className: "text-right"
  }, /*#__PURE__*/React.createElement("strong", null, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_4__["default"], {
    currency: "EUR",
    amount: invoice_total
  }))), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Status', 'app'),
    className: "text-center"
  }, /*#__PURE__*/React.createElement(_invoice_common_InvoiceStatusBadge__WEBPACK_IMPORTED_MODULE_5__["default"], {
    status: invoice_status
  })), /*#__PURE__*/React.createElement("td", {
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Method', 'app')
  }, "--"), /*#__PURE__*/React.createElement("td", {
    className: "text-center",
    "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Actions', 'app')
  }, showView && viewButton(), showEdit && editButton()));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceRow);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-list/InvoiceStatuses.jsx":
/*!**********************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-list/InvoiceStatuses.jsx ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/InvoicesContext */ "./resources/blocks/invoice/src/contexts/InvoicesContext.js");
/* harmony import */ var _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/Enums */ "./resources/scripts/tools/Enums.js");



const StatusButton = ({
  textClassName,
  bgClassName,
  status,
  label,
  onClick,
  active
}) => {
  return /*#__PURE__*/React.createElement("button", {
    type: "button",
    onClick: onClick,
    className: `btn btn-sm ${textClassName} ${bgClassName} btn-${status} btn-status-${status}
            ${active ? ' active' : ''}`
  }, label);
};
const InvoiceStatuses = ({
  statuses
}) => {
  const {
    currentStatus,
    setCurrentStatus,
    setCurrentStatusLabel,
    setFetchNewInvoices
  } = (0,_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_1__.useInvoices)();
  const handleSetStatus = (status, label) => {
    console.log(status, label);
    setCurrentStatus(status);
    setCurrentStatusLabel(label);
    setFetchNewInvoices(true);
  };
  return /*#__PURE__*/React.createElement("div", {
    className: 'flex gap-1 justify-start'
  }, /*#__PURE__*/React.createElement(StatusButton, {
    textClassName: "text-charcoal",
    bgClassName: "btn-grey-80",
    onClick: () => handleSetStatus('any', 'Any'),
    active: currentStatus === 'any',
    status: "any",
    label: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Any')
  }), statuses && Object.entries(statuses).map(([status, data]) => {
    const [textClassName, bgClassName] = _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_2__["default"].STATUS.COLORS[status];
    return /*#__PURE__*/React.createElement(StatusButton, {
      textClassName: textClassName,
      bgClassName: bgClassName,
      status: status,
      onClick: () => handleSetStatus(status, _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_2__["default"].STATUS.LABELS[status]),
      active: currentStatus === status,
      label: _invoice_tools_Enums__WEBPACK_IMPORTED_MODULE_2__["default"].STATUS.LABELS[status],
      key: `invoice-status-filter-btn-${status}`
    });
  }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceStatuses);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelDetails.jsx":
/*!***************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelDetails.jsx ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _invoice_tools_Countries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @invoice/tools/Countries */ "./resources/scripts/tools/Countries.js");
/* harmony import */ var _invoice_tools_nl2br__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @invoice/tools/nl2br */ "./resources/scripts/tools/nl2br.js");
/* harmony import */ var _invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @invoice/tools/capitalize */ "./resources/scripts/tools/capitalize.js");
/* harmony import */ var _invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @invoice/tools/DateFormats */ "./resources/scripts/tools/DateFormats.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");








const InvoicePanelDetails = () => {
  var _invoice$invoice_issu, _invoice$invoice_due_, _settings$invoice_dat, _settings$invoice_bus, _settings$invoice_bus2, _findCountryByIsoCode, _invoice$invoice_clie;
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_6__.useInvoice)();
  const {
    settings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_7__.useSettings)();
  const [issuedDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_issu = invoice?.invoice_issue_date) !== null && _invoice$invoice_issu !== void 0 ? _invoice$invoice_issu : new Date());
  const [dueDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$invoice_due_ = invoice?.invoice_due_date) !== null && _invoice$invoice_due_ !== void 0 ? _invoice$invoice_due_ : new Date());
  const [dateFormat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_settings$invoice_dat = settings?.invoice_date_format) !== null && _settings$invoice_dat !== void 0 ? _settings$invoice_dat : 'MMM d, Y');
  const [invoiceSender, setInvoiceSender] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([settings?.invoice_business_fni.toString().toUpperCase(), (0,_invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_4__["default"])((_settings$invoice_bus = settings?.invoice_business_name?.toString()) !== null && _settings$invoice_bus !== void 0 ? _settings$invoice_bus : ''), (0,_invoice_tools_capitalize__WEBPACK_IMPORTED_MODULE_4__["default"])([(_settings$invoice_bus2 = settings?.invoice_business_city?.toString()) !== null && _settings$invoice_bus2 !== void 0 ? _settings$invoice_bus2 : '', (_findCountryByIsoCode = (0,_invoice_tools_Countries__WEBPACK_IMPORTED_MODULE_2__.findCountryByIsoCode)(settings?.invoice_business_country)?.name) !== null && _findCountryByIsoCode !== void 0 ? _findCountryByIsoCode : ''].join(', '))].join("\n"));
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {}, [invoice, settings]);
  return /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "left"
  }, /*#__PURE__*/React.createElement("div", {
    className: "sender w-100-p mt-4 d-block"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "client",
    className: 'd-block'
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Invoice From:', 'app')), /*#__PURE__*/React.createElement("span", {
    dangerouslySetInnerHTML: {
      __html: (0,_invoice_tools_nl2br__WEBPACK_IMPORTED_MODULE_3__["default"])(invoiceSender !== null && invoiceSender !== void 0 ? invoiceSender : '')
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "client w-100-p mt-3"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "client",
    className: 'd-block'
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Invoice to:', 'app')), /*#__PURE__*/React.createElement("span", {
    className: 'capitalize',
    dangerouslySetInnerHTML: {
      __html: (0,_invoice_tools_nl2br__WEBPACK_IMPORTED_MODULE_3__["default"])((_invoice$invoice_clie = invoice?.invoice_client) !== null && _invoice$invoice_clie !== void 0 ? _invoice$invoice_clie : '')
    }
  }))), /*#__PURE__*/React.createElement("div", {
    className: "right flex flex-column justify-end mt-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "invoice-dates flex flex-column gap-1"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-date",
    className: "text-right"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Issued on', 'app')), /*#__PURE__*/React.createElement("span", {
    className: 'text-right'
  }, (0,_invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_5__.formatDate)(dateFormat, new Date(issuedDate))), /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice-due-date",
    className: "text-right mt-3"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Due on', 'app')), /*#__PURE__*/React.createElement("span", {
    className: 'text-right'
  }, (0,_invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_5__.formatDate)(dateFormat, new Date(dueDate))))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanelDetails);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelHeader.jsx":
/*!**************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelHeader.jsx ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var qrcode_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! qrcode.react */ "./node_modules/.pnpm/qrcode.react@4.2.0_react@18.3.1/node_modules/qrcode.react/lib/esm/index.js");
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var _DropFileInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../DropFileInput */ "./resources/blocks/invoice/src/components/DropFileInput.jsx");






const InvoicePanelHeader = () => {
  var _invoice$logo, _invoice$invoice_numb;
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_3__.useInvoice)();
  const {
    settings
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_4__.useSettings)();
  const [logo] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_invoice$logo = invoice?.logo) !== null && _invoice$logo !== void 0 ? _invoice$logo : settings?.invoice_logo);
  const [invoiceUrl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(window.location.href);
  return /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-7-3 invoice-header gap-3"
  }, /*#__PURE__*/React.createElement("div", {
    className: "left flex flex-column gap-3"
  }, /*#__PURE__*/React.createElement(_DropFileInput__WEBPACK_IMPORTED_MODULE_5__["default"], {
    onFileChange: elem => {},
    logo: logo !== null && logo !== void 0 ? logo : '',
    disabled: true
  })), /*#__PURE__*/React.createElement("div", {
    className: "right flex flex-column justify-space-between gap-2 text-right"
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex justify-end flex-column items-end"
  }, /*#__PURE__*/React.createElement("h2", {
    className: "invoice-title uppercase"
  }, sprintf((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Invoice %s', 'app'), (_invoice$invoice_numb = invoice?.invoice_number) !== null && _invoice$invoice_numb !== void 0 ? _invoice$invoice_numb : '')), /*#__PURE__*/React.createElement("div", {
    className: "invoice-qr-code"
  }, /*#__PURE__*/React.createElement(qrcode_react__WEBPACK_IMPORTED_MODULE_2__.QRCodeSVG, {
    value: invoiceUrl,
    size: 75,
    level: 'H'
  })))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanelHeader);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelItemsTable.jsx":
/*!******************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelItemsTable.jsx ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../invoice-common/CurrencyFormatter */ "./resources/blocks/invoice/src/components/invoice-common/CurrencyFormatter.jsx");
/* harmony import */ var _invoice_common_InvoiceItemsTableHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../invoice-common/InvoiceItemsTableHeader */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceItemsTableHeader.jsx");





const InvoicePanelItemsTable = () => {
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_2__.useInvoice)();
  const defaultItemValues = {
    'item_description': '',
    'item_quantity': '',
    'item_price': '',
    'item_taxable': true,
    'item_total': '0'
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {}, [invoice]);
  return /*#__PURE__*/React.createElement("table", {
    className: "invoices-table inverse"
  }, /*#__PURE__*/React.createElement(_invoice_common_InvoiceItemsTableHeader__WEBPACK_IMPORTED_MODULE_4__["default"], null), /*#__PURE__*/React.createElement("tbody", null, invoice?.invoice_items?.map((item, index) => {
    return /*#__PURE__*/React.createElement("tr", {
      key: `invoice-item-${index}`,
      className: "border-0"
    }, /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Description', 'app')
    }, item.item_description), /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Quantity', 'app')
    }, item.item_quantity), /*#__PURE__*/React.createElement("td", {
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Price', 'app')
    }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
      amount: item.item_price
    })), /*#__PURE__*/React.createElement("td", {
      className: 'text-center',
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Taxable', 'app')
    }, item.item_taxable && `X`), /*#__PURE__*/React.createElement("td", {
      className: "text-right",
      "data-title": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Amount', 'app')
    }, /*#__PURE__*/React.createElement(_invoice_common_CurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__["default"], {
      amount: item.item_total
    })), /*#__PURE__*/React.createElement("td", {
      className: 'hidden-action text-right'
    }));
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanelItemsTable);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelNotesAndTerms.jsx":
/*!*********************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelNotesAndTerms.jsx ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");


const InvoicePanelNotesAndTerms = () => {
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__.useInvoice)();
  return /*#__PURE__*/React.createElement("div", {
    className: "left"
  }, /*#__PURE__*/React.createElement("div", {
    className: "notes-container container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "form-group col-8"
  }, invoice?.invoice_notes && /*#__PURE__*/React.createElement("label", {
    htmlFor: "notes"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Notes', 'app')), /*#__PURE__*/React.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: invoice?.invoice_notes
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: "col-4"
  }), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-8"
  }, invoice?.invoice_terms && /*#__PURE__*/React.createElement("label", {
    htmlFor: "terms"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Terms', 'app')), /*#__PURE__*/React.createElement("div", {
    dangerouslySetInnerHTML: {
      __html: invoice?.invoice_terms
    }
  }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanelNotesAndTerms);

/***/ }),

/***/ "./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelSidebar.jsx":
/*!***************************************************************************************!*\
  !*** ./resources/blocks/invoice/src/components/invoice-panel/InvoicePanelSidebar.jsx ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");
/* harmony import */ var _invoice_common_InvoiceStatusDropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../invoice-common/InvoiceStatusDropdown */ "./resources/blocks/invoice/src/components/invoice-common/InvoiceStatusDropdown.jsx");




const InvoicePanelEditButton = () => {
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__.useInvoice)();
  const navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();
  return /*#__PURE__*/React.createElement("a", {
    href: `#`,
    onClick: event => {
      event.preventDefault();
      navigate(`/invoices/edit/${invoice?.UUID}/`);
    },
    className: "btn btn-wide mt-2"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Edit Invoice', 'app'));
};
const InvoicePanelPrintButton = () => {
  const handlePrint = event => {
    event.preventDefault();
    window.print();
  };
  return /*#__PURE__*/React.createElement("a", {
    href: "#",
    onClick: handlePrint,
    className: "btn btn-white text-charcoal mt-4"
  }, /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "24px",
    viewBox: "0 -960 960 960",
    width: "24px",
    style: {
      fill: '#666666'
    },
    fill: "#666666"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M640-640v-120H320v120h-80v-200h480v200h-80Zm-480 80h640-640Zm560 100q17 0 28.5-11.5T760-500q0-17-11.5-28.5T720-540q-17 0-28.5 11.5T680-500q0 17 11.5 28.5T720-460Zm-80 260v-160H320v160h320Zm80 80H240v-160H80v-240q0-51 35-85.5t85-34.5h560q51 0 85.5 34.5T880-520v240H720v160Zm80-240v-160q0-17-11.5-28.5T760-560H200q-17 0-28.5 11.5T160-520v160h80v-80h480v80h80Z"
  })));
};
const InvoicePanelToPDFButton = () => {
  return /*#__PURE__*/React.createElement("a", {
    href: "#",
    onClick: event => {
      event.preventDefault();
    },
    className: "btn btn-danger-light text-charcoal mt-4"
  }, /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "24px",
    viewBox: "0 -960 960 960",
    width: "24px",
    style: {
      fill: '#992424'
    },
    fill: "#666666"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M360-460h40v-80h40q17 0 28.5-11.5T480-580v-40q0-17-11.5-28.5T440-660h-80v200Zm40-120v-40h40v40h-40Zm120 120h80q17 0 28.5-11.5T640-500v-120q0-17-11.5-28.5T600-660h-80v200Zm40-40v-120h40v120h-40Zm120 40h40v-80h40v-40h-40v-40h40v-40h-80v200ZM320-240q-33 0-56.5-23.5T240-320v-480q0-33 23.5-56.5T320-880h480q33 0 56.5 23.5T880-800v480q0 33-23.5 56.5T800-240H320Zm0-80h480v-480H320v480ZM160-80q-33 0-56.5-23.5T80-160v-560h80v560h560v80H160Zm160-720v480-480Z"
  })));
};
const InvoicePanelSidebar = () => {
  const {
    invoice
  } = (0,_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_1__.useInvoice)();
  return /*#__PURE__*/React.createElement("aside", {
    className: "sidebar pl-4 pr-4 pt-0 flex flex-column gap-4"
  }, /*#__PURE__*/React.createElement(InvoicePanelEditButton, null), /*#__PURE__*/React.createElement("hr", {
    className: "b-bottom-grey-10-4 mx-4"
  }), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-column"
  }, /*#__PURE__*/React.createElement(_invoice_common_InvoiceStatusDropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
    status: invoice?.invoice_status
  }), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-row gap-3"
  }, /*#__PURE__*/React.createElement(InvoicePanelPrintButton, null), /*#__PURE__*/React.createElement(InvoicePanelToPDFButton, null))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoicePanelSidebar);

/***/ }),

/***/ "./resources/blocks/invoice/src/contexts/InvoiceContext.js":
/*!*****************************************************************!*\
  !*** ./resources/blocks/invoice/src/contexts/InvoiceContext.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvoiceProvider: () => (/* binding */ InvoiceProvider),
/* harmony export */   useInvoice: () => (/* binding */ useInvoice)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const InvoiceContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const InvoiceProvider = ({
  children
}) => {
  const [invoice, setInvoice] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [invoiceUuid, setInvoiceUuid] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {}, [invoiceUuid, invoice]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(InvoiceContext.Provider, {
    value: {
      invoice,
      invoiceUuid,
      setInvoice,
      setInvoiceUuid
    }
  }, children);
};
const useInvoice = () => {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(InvoiceContext);
};

/***/ }),

/***/ "./resources/blocks/invoice/src/contexts/InvoicesContext.js":
/*!******************************************************************!*\
  !*** ./resources/blocks/invoice/src/contexts/InvoicesContext.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvoicesProvider: () => (/* binding */ InvoicesProvider),
/* harmony export */   useInvoices: () => (/* binding */ useInvoices)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);



const InvoicesContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const InvoicesProvider = ({
  children
}) => {
  const [invoices, setInvoices] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [currentStatus, setCurrentStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('any');
  const [fetchNewInvoices, setFetchNewInvoices] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const [currentStatusLabel, setCurrentStatusLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Any', 'app'));
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (fetchNewInvoices) {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
        path: `/wp/v2/invoice?status=${currentStatus}&orderby=date&order=desc`
      }).then(response => {
        setInvoices(response);
        setFetchNewInvoices(false);
      });
    }
  }, [currentStatus, currentStatusLabel, fetchNewInvoices]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(InvoicesContext.Provider, {
    value: {
      invoices,
      setInvoices,
      currentStatus,
      setCurrentStatus,
      currentStatusLabel,
      setCurrentStatusLabel,
      setFetchNewInvoices
    }
  }, children);
};
const useInvoices = () => {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(InvoicesContext);
};

/***/ }),

/***/ "./resources/blocks/invoice/src/contexts/SettingsContext.js":
/*!******************************************************************!*\
  !*** ./resources/blocks/invoice/src/contexts/SettingsContext.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SettingsProvider: () => (/* binding */ SettingsProvider),
/* harmony export */   useSettings: () => (/* binding */ useSettings)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var country_state_city__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! country-state-city */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/country.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _invoice_tools_EuropeCountries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @invoice/tools/EuropeCountries */ "./resources/scripts/tools/EuropeCountries.js");
/* harmony import */ var _invoice_tools_navigate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @invoice/tools/navigate */ "./resources/scripts/tools/navigate.js");
/* harmony import */ var _components_invoice_common_Links__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/invoice-common/Links */ "./resources/blocks/invoice/src/components/invoice-common/Links.jsx");







const SettingsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const SettingsProvider = ({
  children
}) => {
  var _Object$fromEntries;
  const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Invoice.settings);
  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [europeCountries, setEuropeCountries] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [currentPath, setCurrentPath] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(window.location.pathname);
  const [statuses] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_Object$fromEntries = Object.fromEntries(Object.entries(Invoice.statuses).filter(([key]) => key.includes('invoice') || key === 'draft'))) !== null && _Object$fromEntries !== void 0 ? _Object$fromEntries : []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const allCountries = country_state_city__WEBPACK_IMPORTED_MODULE_6__["default"].getAllCountries();
    setEuropeCountries(allCountries.filter(country => _invoice_tools_EuropeCountries__WEBPACK_IMPORTED_MODULE_3__["default"].includes(country.name)));
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
      path: `/wp/v2/pages/${Invoice.invoice_page_id}`
    }).then(page => {
      if (page?.routes) {
        const nav = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createRoot)(document.getElementById('dynamic-sidebar-nav'));
        nav.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_invoice_common_Links__WEBPACK_IMPORTED_MODULE_5__["default"], {
          routes: page.routes
        }));
      }
      if (page?.call_to_action) {
        const call_to_action = document.getElementById('dynamic-sidebar-button');
        call_to_action.addEventListener('click', event => {
          event.preventDefault();
          (0,_invoice_tools_navigate__WEBPACK_IMPORTED_MODULE_4__.navigate)(event);
        });
      }
    }).catch(error => {
      console.log(error);
    });
    setLoading(false);
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SettingsContext.Provider, {
    value: {
      settings,
      setSettings,
      europeCountries,
      currentPath,
      setCurrentPath,
      loading,
      error,
      statuses
    }
  }, children);
};
const useSettings = () => {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SettingsContext);
};

/***/ }),

/***/ "./resources/blocks/invoice/src/views/Business.jsx":
/*!*********************************************************!*\
  !*** ./resources/blocks/invoice/src/views/Business.jsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var country_state_city__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! country-state-city */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/state.js");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-toastify */ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs");
/* harmony import */ var _invoice_tools_kebabcase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @invoice/tools/kebabcase */ "./resources/scripts/tools/kebabcase.js");







const Business = () => {
  const {
    settings,
    setSettings,
    europeCountries,
    loading,
    error
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_1__.useSettings)();
  const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(settings);
  const [updating, setUpdating] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);
  const [countries, setCountries] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);
  const [states, setStates] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);
  const [selectedCountryCode, setSelectedCountryCode] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('ES');
  const [selectedCountry, setSelectedCountry] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('ES');
  const [selectedState, setSelectedState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    if (!formData && null !== settings) {
      setFormData(settings);
      setSelectedCountryCode(selectedCountryCode !== null && selectedCountryCode !== void 0 ? selectedCountryCode : settings?.invoice_business_fni_country_code);
      setSelectedCountry(selectedCountry !== null && selectedCountry !== void 0 ? selectedCountry : settings?.invoice_business_country);
      setSelectedState(selectedState !== null && selectedState !== void 0 ? selectedState : settings?.invoice_business_state);
      setCountries(europeCountries);
    }
  }, [formData, settings, europeCountries]);
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    if (selectedCountry) {
      var _formData$invoice_bus;
      const countryStates = country_state_city__WEBPACK_IMPORTED_MODULE_6__["default"].getStatesOfCountry(selectedCountry) || [];
      setStates(countryStates);
      setSelectedState((_formData$invoice_bus = formData?.invoice_business_state) !== null && _formData$invoice_bus !== void 0 ? _formData$invoice_bus : '');
    }
  }, [selectedCountry, setStates, setSelectedState, formData]);
  const handleInputChange = event => {
    const {
      name,
      value
    } = event.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };
  const handleSelectChange = event => {
    const {
      name,
      value
    } = event.target;
    if (name === 'invoice_business_fni_country_code') {
      setSelectedCountryCode(value);
    }
    if (name === 'invoice_business_country') {
      setSelectedCountry(value);
      const countryStates = country_state_city__WEBPACK_IMPORTED_MODULE_6__["default"].getStatesOfCountry(value);
      setStates(countryStates);
      setSelectedState('');
    }
    if (name === 'invoice_business_state') {
      setSelectedState(value);
      setFormData(prevState => ({
        ...prevState,
        [name]: value
      }));
    }
  };
  const handleSubmit = event => {
    event.preventDefault();
    setUpdating(true);
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default()({
      path: `invoice/v1/settings/business`,
      method: 'PUT',
      data: {
        ...formData,
        ...{
          'invoice_business_fni_country_code': selectedCountryCode,
          'invoice_business_country': selectedCountry,
          'invoice_business_state': selectedState
        }
      }
    }).then(response => {
      const {
        success,
        message,
        data
      } = response;
      if (success) {
        setSettings(prevState => ({
          ...prevState,
          ...data
        }));
        react_toastify__WEBPACK_IMPORTED_MODULE_4__.toast.success(message || (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Business data update successfully.'), {
          autoClose: 3000
        });
      } else {
        react_toastify__WEBPACK_IMPORTED_MODULE_4__.toast.error(message || (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('There was an error updating business data.'), {
          autoClose: 10000
        });
      }
      setUpdating(false);
    }).catch(error => {
      console.error(error);
    });
  };
  if (loading) {
    return /*#__PURE__*/React.createElement("div", {
      className: 'loading-icon-primary-2'
    });
  }
  if (error) {
    return /*#__PURE__*/React.createElement("h2", null, error);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, formData && /*#__PURE__*/React.createElement("form", {
    className: 'container',
    onSubmit: handleSubmit,
    noValidate: true
  }, /*#__PURE__*/React.createElement("h3", {
    className: "col-12"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Business information')), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_fni"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Fiscal Identification Number (NIF / VAT)'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("div", {
    className: "grid grid-cols-2-8 gap-1 mt-3 mx-0 px-0"
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_fni_country_code",
    className: 'text-sm',
    title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Country code')
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('CID'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("select", {
    name: "invoice_business_fni_country_code",
    placeholder: 'ES',
    id: "invoice_business_fni_country_code",
    className: 'input-lg',
    value: selectedCountryCode,
    onChange: handleSelectChange
  }, europeCountries && europeCountries.map(country => /*#__PURE__*/React.createElement("option", {
    value: country.isoCode,
    key: `${country.isoCode}-${(0,_invoice_tools_kebabcase__WEBPACK_IMPORTED_MODULE_5__["default"])(country.name)}`
  }, country.isoCode.toUpperCase())))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_fni",
    className: 'text-sm'
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('NIF/VAT'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg uppercase",
    maxLength: "16",
    required: true,
    value: formData.invoice_business_fni,
    id: "invoice_business_fni",
    name: "invoice_business_fni",
    placeholder: 'Y123456789C',
    disabled: updating,
    onChange: handleInputChange
  })))), /*#__PURE__*/React.createElement("div", {
    className: "col-6 p-relative"
  }, updating && /*#__PURE__*/React.createElement("div", {
    className: "loading-icon-primary-2 p-absolute top right"
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-12"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_name"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Business Name (Legal name for individuals or company)'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg",
    required: true,
    value: formData.invoice_business_name,
    id: "invoice_business_name",
    name: "invoice_business_name",
    disabled: updating,
    onChange: handleInputChange
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_country"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Country'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("select", {
    className: "input-lg",
    required: true,
    value: selectedCountry,
    id: "invoice_business_country",
    name: "invoice_business_country",
    disabled: updating,
    onChange: handleSelectChange
  }, /*#__PURE__*/React.createElement("option", {
    value: ""
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Select a country')), europeCountries && europeCountries.map(data => /*#__PURE__*/React.createElement("option", {
    value: data.isoCode,
    key: data.isoCode
  }, data.name)))), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_state"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('State'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("select", {
    className: "input-lg",
    required: true,
    value: selectedState,
    id: "invoice_business_state",
    name: "invoice_business_state",
    disabled: updating,
    onChange: handleSelectChange
  }, /*#__PURE__*/React.createElement("option", {
    value: ""
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Select a state')), states?.map(state => /*#__PURE__*/React.createElement("option", {
    value: state.isoCode,
    key: state.isoCode
  }, state.name)))), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_address"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Address'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg",
    required: true,
    value: formData.invoice_business_address,
    id: "invoice_business_address",
    name: "invoice_business_address",
    disabled: updating,
    onChange: handleInputChange
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_address_cont",
    dangerouslySetInnerHTML: {
      __html: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Address <small>(cont)</small>')
    }
  }), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg",
    value: formData.invoice_business_address_cont,
    id: "invoice_business_address_cont",
    name: "invoice_business_address_cont",
    disabled: updating,
    onChange: handleInputChange
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_city"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('City'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg",
    required: true,
    value: formData.invoice_business_city,
    id: "invoice_business_city",
    name: "invoice_business_city",
    disabled: updating,
    onChange: handleInputChange
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_business_postal_code"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Postal code'), /*#__PURE__*/React.createElement("span", {
    className: "text-danger ml-2"
  }, "*")), /*#__PURE__*/React.createElement("input", {
    type: "text",
    className: "input-lg",
    required: true,
    value: formData.invoice_business_postal_code,
    id: "invoice_business_postal_code",
    name: "invoice_business_postal_code",
    disabled: updating,
    onChange: handleInputChange
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-12"
  }, /*#__PURE__*/React.createElement("span", {
    className: "text-danger"
  }, "*"), " Required fields"), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-12"
  }, /*#__PURE__*/React.createElement("button", {
    type: "submit",
    className: "btn btn-primary text-white",
    disabled: updating
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Save business information')))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Business);

/***/ }),

/***/ "./resources/blocks/invoice/src/views/InvoiceEdit.jsx":
/*!************************************************************!*\
  !*** ./resources/blocks/invoice/src/views/InvoiceEdit.jsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_InvoiceForm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/InvoiceForm */ "./resources/blocks/invoice/src/components/InvoiceForm.jsx");





const InvoiceEdit = () => {
  const {
    uuid
  } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useParams)();
  const [invoiceData, setInvoiceData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
      path: `invoice/v1/invoice/${uuid}`
    }).then(response => {
      setInvoiceData(response);
    }).catch(error => {
      console.error(error);
    });
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, invoiceData ? /*#__PURE__*/React.createElement(_components_InvoiceForm__WEBPACK_IMPORTED_MODULE_3__["default"], invoiceData) : /*#__PURE__*/React.createElement("em", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Loading', 'app')));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceEdit);

/***/ }),

/***/ "./resources/blocks/invoice/src/views/InvoiceNew.jsx":
/*!***********************************************************!*\
  !*** ./resources/blocks/invoice/src/views/InvoiceNew.jsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_InvoiceForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/InvoiceForm */ "./resources/blocks/invoice/src/components/InvoiceForm.jsx");

const InvoiceNew = () => {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_components_InvoiceForm__WEBPACK_IMPORTED_MODULE_0__["default"], null));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceNew);

/***/ }),

/***/ "./resources/blocks/invoice/src/views/InvoiceView.jsx":
/*!************************************************************!*\
  !*** ./resources/blocks/invoice/src/views/InvoiceView.jsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_InvoicePanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/InvoicePanel */ "./resources/blocks/invoice/src/components/InvoicePanel.jsx");





const InvoiceView = () => {
  const {
    uuid
  } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useParams)();
  const [invoiceData, setInvoiceData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default()({
      path: `invoice/v1/invoice/${uuid}`
    }).then(response => {
      setInvoiceData(response);
    }).catch(error => {
      console.error(error);
    });
  }, []);
  return /*#__PURE__*/React.createElement(React.Fragment, null, invoiceData ? /*#__PURE__*/React.createElement(_components_InvoicePanel__WEBPACK_IMPORTED_MODULE_3__["default"], invoiceData) : /*#__PURE__*/React.createElement("em", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__.__)('Loading', 'app')));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InvoiceView);

/***/ }),

/***/ "./resources/blocks/invoice/src/views/Invoices.jsx":
/*!*********************************************************!*\
  !*** ./resources/blocks/invoice/src/views/Invoices.jsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_invoice_list_InvoiceStatuses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/invoice-list/InvoiceStatuses */ "./resources/blocks/invoice/src/components/invoice-list/InvoiceStatuses.jsx");
/* harmony import */ var _components_InvoicesList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/InvoicesList */ "./resources/blocks/invoice/src/components/InvoicesList.jsx");



const Invoices = () => {
  const [statuses] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Invoice.statuses);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_components_invoice_list_InvoiceStatuses__WEBPACK_IMPORTED_MODULE_1__["default"], {
    statuses: statuses
  }), /*#__PURE__*/React.createElement(_components_InvoicesList__WEBPACK_IMPORTED_MODULE_2__["default"], {
    statuses: statuses
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Invoices);

/***/ }),

/***/ "./resources/blocks/invoice/src/views/Settings.jsx":
/*!*********************************************************!*\
  !*** ./resources/blocks/invoice/src/views/Settings.jsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-toastify */ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @invoice/tools/DateFormats */ "./resources/scripts/tools/DateFormats.js");
/* harmony import */ var _contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");






const Settings = () => {
  var _formData$invoice_dat, _formData$invoice_las;
  const {
    settings,
    setSettings,
    loading,
    error
  } = (0,_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_5__.useSettings)();
  const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(settings);
  const [dateFormats, setDateFormats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_invoice_tools_DateFormats__WEBPACK_IMPORTED_MODULE_4__["default"]);
  const [updating, setUpdating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [selectedDateFormat, setSelectedDateFormat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_formData$invoice_dat = formData?.invoice_date_format) !== null && _formData$invoice_dat !== void 0 ? _formData$invoice_dat : 'F j, Y');
  const [lastInvoiceNumber, setLastInvoiceNumber] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_formData$invoice_las = formData?.invoice_last_number) !== null && _formData$invoice_las !== void 0 ? _formData$invoice_las : 0);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (null !== settings) {
      var _formData$invoice_las2, _formData$invoice_dat2;
      setFormData(formData !== null && formData !== void 0 ? formData : settings);
      setLastInvoiceNumber((_formData$invoice_las2 = formData?.invoice_last_number) !== null && _formData$invoice_las2 !== void 0 ? _formData$invoice_las2 : settings?.invoice_last_number);
      setSelectedDateFormat((_formData$invoice_dat2 = formData?.invoice_date_format) !== null && _formData$invoice_dat2 !== void 0 ? _formData$invoice_dat2 : settings?.invoice_date_format);
    }
  }, [formData, settings]);
  const handleInputChange = event => {
    const {
      name,
      value
    } = event.target;
    if (name === 'invoice_last_number') {
      setFormData(prevState => ({
        ...prevState,
        [name]: value
      }));
      setLastInvoiceNumber(value);
    }
  };
  const handleSelectChange = event => {
    const {
      name,
      value
    } = event.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };
  const handleSubmit = event => {
    event.preventDefault();
    setUpdating(true);
    _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default()({
      path: `invoice/v1/settings/invoice`,
      method: 'PUT',
      data: {
        ...formData,
        ...{
          'invoice_last_number': lastInvoiceNumber,
          'invoice_date_format': selectedDateFormat
        }
      }
    }).then(response => {
      const {
        success,
        message,
        data
      } = response;
      if (success) {
        setSettings(prevState => ({
          ...prevState,
          ...data
        }));
        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.success(message || (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Invoice settings updated successfully.'), {
          autoClose: 3000
        });
      } else {
        react_toastify__WEBPACK_IMPORTED_MODULE_1__.toast.error(message || (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('There was an error updating invoice settings.'), {
          autoClose: 10000
        });
      }
      setUpdating(false);
    }).catch(error => {
      console.error(error);
    });
  };
  if (loading) {
    return /*#__PURE__*/React.createElement("div", {
      className: 'loading-icon-primary-2'
    });
  }
  if (error) {
    return /*#__PURE__*/React.createElement("h2", null, error);
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, formData && /*#__PURE__*/React.createElement("form", {
    className: 'container',
    onSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement("div", {
    className: "col-6"
  }, /*#__PURE__*/React.createElement("h3", null, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Invoice number.'))), /*#__PURE__*/React.createElement("div", {
    className: "col-6 justify-end items-start p-relative"
  }, updating && /*#__PURE__*/React.createElement("div", {
    className: "loading-icon-primary-2 p-absolute top right"
  })), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_last_number"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Last invoice number')), /*#__PURE__*/React.createElement("input", {
    type: "number",
    className: "input-lg",
    value: lastInvoiceNumber,
    id: "invoice_last_number",
    name: "invoice_last_number",
    disabled: updating,
    onChange: handleInputChange
  }), /*#__PURE__*/React.createElement("em", {
    className: "text-gray-60 text-sm"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('The last invoice number you have used.'), " ", /*#__PURE__*/React.createElement("br", null), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('We automatically will keep your next invoice number updated.'))), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_date_format"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Date format')), /*#__PURE__*/React.createElement("select", {
    className: "input-lg",
    value: selectedDateFormat,
    id: "invoice_date_format",
    name: "invoice_date_format",
    disabled: updating,
    onChange: handleSelectChange
  }, dateFormats && dateFormats.map(dateFormat => /*#__PURE__*/React.createElement("option", {
    value: dateFormat?.value,
    key: dateFormat?.value
  }, dateFormat.label)))), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "invoice_currrency"
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Currency')), /*#__PURE__*/React.createElement("select", {
    className: "input-lg",
    value: formData.invoice_currency,
    id: "invoice_currrency",
    name: "invoice_currrency",
    disabled: updating,
    onChange: handleSelectChange
  }, /*#__PURE__*/React.createElement("option", {
    value: "EUR",
    key: "EUR"
  }, "EUR"))), /*#__PURE__*/React.createElement("div", {
    className: "form-group col-12"
  }, /*#__PURE__*/React.createElement("button", {
    type: "submit",
    className: "btn btn-primary text-white",
    disabled: updating
  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Save invoice settings')))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Settings);

/***/ }),

/***/ "./resources/scripts/tools/Countries.js":
/*!**********************************************!*\
  !*** ./resources/scripts/tools/Countries.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   findCountryByIsoCode: () => (/* binding */ findCountryByIsoCode)
/* harmony export */ });
/* harmony import */ var country_state_city__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! country-state-city */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/country.js");
/* harmony import */ var _invoice_tools_EuropeCountries__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @invoice/tools/EuropeCountries */ "./resources/scripts/tools/EuropeCountries.js");


const allCountries = country_state_city__WEBPACK_IMPORTED_MODULE_1__["default"].getAllCountries();
const countries = allCountries.filter(country => _invoice_tools_EuropeCountries__WEBPACK_IMPORTED_MODULE_0__["default"].includes(country.name));
const findCountryByIsoCode = isoCode => {
  const country = countries.find(c => c.isoCode === isoCode);
  return country ? country : {};
};

/***/ }),

/***/ "./resources/scripts/tools/DateFormats.js":
/*!************************************************!*\
  !*** ./resources/scripts/tools/DateFormats.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   formatDate: () => (/* binding */ formatDate)
/* harmony export */ });
const formatDate = (format, date) => {
  date = date !== null && date !== void 0 ? date : new Date();
  let options = {};
  switch (format) {
    case 'MMM d, Y':
      options = {
        year: 'numeric',
        month: 'short',
        day: 'numeric'
      };
      break;
    case 'd/M/Y':
      options = {
        day: '2-digit',
        month: '2-digit',
        year: '2-digit'
      };
      break;
    default:
      options = {
        year: 'numeric',
        month: 'short',
        day: 'numeric'
      };
  }
  return new Intl.DateTimeFormat('en-US', options).format(date);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([{
  'value': 'MMM d, Y',
  'label': formatDate('MMM d, Y')
}, {
  'value': 'd/M/Y',
  'label': formatDate('d/M/Y')
}]);

/***/ }),

/***/ "./resources/scripts/tools/Enums.js":
/*!******************************************!*\
  !*** ./resources/scripts/tools/Enums.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  "STATUS": {
    "DRAFT": "draft",
    "ISSUED": "invoice_issued",
    "SENT": "invoice_sent",
    "EXPIRED": "invoice_expired",
    "PAID": "invoice_paid",
    "CANCELLED": "invoice_cancelled",
    "LABELS": {
      "draft": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Draft', 'app'),
      "invoice_issued": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Issued', 'app'),
      "invoice_sent": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Sent', 'app'),
      "invoice_expired": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Expired', 'app'),
      "invoice_paid": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Paid', 'app'),
      "invoice_cancelled": (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Cancelled', 'app')
    },
    "COLORS": {
      "draft": ['btn-text-charcoal', 'btn-chinese-white'],
      "invoice_issued": ['btn-text-charcoal-inverse', 'btn-secondary'],
      "invoice_sent": ['btn-text-info-dark', 'btn-info-light'],
      "invoice_expired": ['btn-text-success-dark', 'btn-success-light'],
      "invoice_paid": ['btn-text-warning-dark', 'btn-warning-light'],
      "invoice_cancelled": ['btn-text-danger-dark', 'btn-danger-light']
    }
  },
  "TAXES": {
    "IVA": 21
  },
  "DISCOUNTS": {
    "IRPF": 15
  }
});

/***/ }),

/***/ "./resources/scripts/tools/EuropeCountries.js":
/*!****************************************************!*\
  !*** ./resources/scripts/tools/EuropeCountries.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Albania'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Andorra'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Armenia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Austria'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Azerbaijan'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Belarus'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Belgium'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Bosnia and Herzegovina'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Bulgaria'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Croatia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Cyprus'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Czech Republic'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Denmark'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Estonia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Finland'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('France'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Georgia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Germany'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Greece'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Hungary'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Iceland'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Ireland'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Italy'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Kazakhstan'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Kosovo'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Latvia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Liechtenstein'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Lithuania'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Luxembourg'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Malta'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Moldova'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Monaco'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Montenegro'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Netherlands'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('North Macedonia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Norway'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Poland'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Portugal'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Romania'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Russia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('San Marino'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Serbia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Slovakia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Slovenia'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Spain'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Sweden'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Switzerland'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Turkey'), (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)('Ukraine')]);

/***/ }),

/***/ "./resources/scripts/tools/HandleTaxesAndDiscounts.js":
/*!************************************************************!*\
  !*** ./resources/scripts/tools/HandleTaxesAndDiscounts.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const HandleTaxesAndDiscounts = invoice => {
  let subtotal = 0;
  let taxes = 0;
  let discounts = 0;
  invoice?.invoice_items?.forEach(item => {
    var _parseFloat;
    const itemAmount = (_parseFloat = parseFloat(item.item_total)) !== null && _parseFloat !== void 0 ? _parseFloat : 0;
    subtotal += itemAmount;
    if (item.item_taxable && invoice?.invoice_tax_amount) {
      var _ref;
      taxes += (_ref = itemAmount * invoice?.invoice_tax_amount / 100) !== null && _ref !== void 0 ? _ref : 0;
    }
  });
  if (invoice?.invoice_discount_amount && invoice?.invoice_discount_amount > 0) {
    var _ref2;
    discounts = (_ref2 = subtotal * invoice?.invoice_discount_amount / 100) !== null && _ref2 !== void 0 ? _ref2 : 0;
  }
  return {
    ['invoice_subtotal']: parseFloat(subtotal !== null && subtotal !== void 0 ? subtotal : 0),
    ['invoice_taxes_total']: parseFloat(taxes !== null && taxes !== void 0 ? taxes : 0),
    ['invoice_tax_subtotal']: parseFloat(taxes !== null && taxes !== void 0 ? taxes : 0),
    ['invoice_discount_total']: discounts !== null && discounts !== void 0 ? discounts : 0,
    ['invoice_discount_subtotal']: discounts !== null && discounts !== void 0 ? discounts : 0,
    ['invoice_total']: subtotal - discounts + taxes !== null && subtotal - discounts + taxes !== void 0 ? subtotal - discounts + taxes : 0
  };
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HandleTaxesAndDiscounts);

/***/ }),

/***/ "./resources/scripts/tools/capitalize.js":
/*!***********************************************!*\
  !*** ./resources/scripts/tools/capitalize.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (text => text.toLowerCase().replace(/\b\w/g, char => char.toUpperCase()));

/***/ }),

/***/ "./resources/scripts/tools/kebabcase.js":
/*!**********************************************!*\
  !*** ./resources/scripts/tools/kebabcase.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ toKebabCase)
/* harmony export */ });
function toKebabCase(str) {
  return str.toString().replace(/([a-z0-9])([A-Z])/g, '$1-$2').replace(/\s+/g, '-').toLowerCase();
}

/***/ }),

/***/ "./resources/scripts/tools/navigate.js":
/*!*********************************************!*\
  !*** ./resources/scripts/tools/navigate.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   navigate: () => (/* binding */ navigate)
/* harmony export */ });
const navigate = event => {
  event.preventDefault();
  const link = event.currentTarget.getAttribute('href');
  window.history.pushState({}, '', link);
  window.dispatchEvent(new PopStateEvent('popstate'));
};

/***/ }),

/***/ "./resources/scripts/tools/nl2br.js":
/*!******************************************!*\
  !*** ./resources/scripts/tools/nl2br.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(string) {
  return string.replace(/\n/g, '<br>');
}

/***/ }),

/***/ "./resources/scripts/tools/setInvoiceHeader.js":
/*!*****************************************************!*\
  !*** ./resources/scripts/tools/setInvoiceHeader.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(visible) {
  const header = document.querySelector('.header');
  const content = document.querySelector('.content');
  const main = document.querySelector('main');
  if (!visible) {
    if (header) {
      header.style.display = 'none';
    }
    if (main) {
      main.style.padding = 0;
      main.style.marginTop = '-1rem';
    }
    if (content) {
      content.style.backgroundColor = 'transparent';
    }
  } else {
    header.style = false;
    main.style = false;
    content.style = false;
  }
}

/***/ }),

/***/ "./resources/scripts/tools/setNextInvoiceNumber.js":
/*!*********************************************************!*\
  !*** ./resources/scripts/tools/setNextInvoiceNumber.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(currentNumber) {
  currentNumber = currentNumber !== null && currentNumber !== void 0 ? currentNumber : 0;
  currentNumber++;
  return currentNumber;
}

/***/ }),

/***/ "./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.js ***!
  \**********************************************************************/
/***/ ((module) => {

function r(e){var o,t,f="";if("string"==typeof e||"number"==typeof e)f+=e;else if("object"==typeof e)if(Array.isArray(e)){var n=e.length;for(o=0;o<n;o++)e[o]&&(t=r(e[o]))&&(f&&(f+=" "),f+=t)}else for(t in e)e[t]&&(f&&(f+=" "),f+=t);return f}function e(){for(var e,o,t=0,f="",n=arguments.length;t<n;t++)(e=arguments[t])&&(o=r(e))&&(f&&(f+=" "),f+=o);return f}module.exports=e,module.exports.clsx=e;

/***/ }),

/***/ "./node_modules/.pnpm/cookie@1.0.2/node_modules/cookie/dist/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/cookie@1.0.2/node_modules/cookie/dist/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parse = parse;
exports.serialize = serialize;
/**
 * RegExp to match cookie-name in RFC 6265 sec 4.1.1
 * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
 * which has been replaced by the token definition in RFC 7230 appendix B.
 *
 * cookie-name       = token
 * token             = 1*tchar
 * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
 *                     "*" / "+" / "-" / "." / "^" / "_" /
 *                     "`" / "|" / "~" / DIGIT / ALPHA
 *
 * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191
 * Allow same range as cookie value, except `=`, which delimits end of name.
 */
const cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
/**
 * RegExp to match cookie-value in RFC 6265 sec 4.1.1
 *
 * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
 *                     ; US-ASCII characters excluding CTLs,
 *                     ; whitespace DQUOTE, comma, semicolon,
 *                     ; and backslash
 *
 * Allowing more characters: https://github.com/jshttp/cookie/issues/191
 * Comma, backslash, and DQUOTE are not part of the parsing algorithm.
 */
const cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
/**
 * RegExp to match domain-value in RFC 6265 sec 4.1.1
 *
 * domain-value      = <subdomain>
 *                     ; defined in [RFC1034], Section 3.5, as
 *                     ; enhanced by [RFC1123], Section 2.1
 * <subdomain>       = <label> | <subdomain> "." <label>
 * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
 *                     Labels must be 63 characters or less.
 *                     'let-dig' not 'letter' in the first char, per RFC1123
 * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
 * <let-dig-hyp>     = <let-dig> | "-"
 * <let-dig>         = <letter> | <digit>
 * <letter>          = any one of the 52 alphabetic characters A through Z in
 *                     upper case and a through z in lower case
 * <digit>           = any one of the ten digits 0 through 9
 *
 * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
 *
 * > (Note that a leading %x2E ("."), if present, is ignored even though that
 * character is not permitted, but a trailing %x2E ("."), if present, will
 * cause the user agent to ignore the attribute.)
 */
const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
/**
 * RegExp to match path-value in RFC 6265 sec 4.1.1
 *
 * path-value        = <any CHAR except CTLs or ";">
 * CHAR              = %x01-7F
 *                     ; defined in RFC 5234 appendix B.1
 */
const pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
const __toString = Object.prototype.toString;
const NullObject = /* @__PURE__ */ (() => {
    const C = function () { };
    C.prototype = Object.create(null);
    return C;
})();
/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 */
function parse(str, options) {
    const obj = new NullObject();
    const len = str.length;
    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
    if (len < 2)
        return obj;
    const dec = options?.decode || decode;
    let index = 0;
    do {
        const eqIdx = str.indexOf("=", index);
        if (eqIdx === -1)
            break; // No more cookie pairs.
        const colonIdx = str.indexOf(";", index);
        const endIdx = colonIdx === -1 ? len : colonIdx;
        if (eqIdx > endIdx) {
            // backtrack on prior semicolon
            index = str.lastIndexOf(";", eqIdx - 1) + 1;
            continue;
        }
        const keyStartIdx = startIndex(str, index, eqIdx);
        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
        const key = str.slice(keyStartIdx, keyEndIdx);
        // only assign once
        if (obj[key] === undefined) {
            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
            let valEndIdx = endIndex(str, endIdx, valStartIdx);
            const value = dec(str.slice(valStartIdx, valEndIdx));
            obj[key] = value;
        }
        index = endIdx + 1;
    } while (index < len);
    return obj;
}
function startIndex(str, index, max) {
    do {
        const code = str.charCodeAt(index);
        if (code !== 0x20 /*   */ && code !== 0x09 /* \t */)
            return index;
    } while (++index < max);
    return max;
}
function endIndex(str, index, min) {
    while (index > min) {
        const code = str.charCodeAt(--index);
        if (code !== 0x20 /*   */ && code !== 0x09 /* \t */)
            return index + 1;
    }
    return min;
}
/**
 * Serialize data into a cookie header.
 *
 * Serialize a name value pair into a cookie string suitable for
 * http headers. An optional options object specifies cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 */
function serialize(name, val, options) {
    const enc = options?.encode || encodeURIComponent;
    if (!cookieNameRegExp.test(name)) {
        throw new TypeError(`argument name is invalid: ${name}`);
    }
    const value = enc(val);
    if (!cookieValueRegExp.test(value)) {
        throw new TypeError(`argument val is invalid: ${val}`);
    }
    let str = name + "=" + value;
    if (!options)
        return str;
    if (options.maxAge !== undefined) {
        if (!Number.isInteger(options.maxAge)) {
            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
        }
        str += "; Max-Age=" + options.maxAge;
    }
    if (options.domain) {
        if (!domainValueRegExp.test(options.domain)) {
            throw new TypeError(`option domain is invalid: ${options.domain}`);
        }
        str += "; Domain=" + options.domain;
    }
    if (options.path) {
        if (!pathValueRegExp.test(options.path)) {
            throw new TypeError(`option path is invalid: ${options.path}`);
        }
        str += "; Path=" + options.path;
    }
    if (options.expires) {
        if (!isDate(options.expires) ||
            !Number.isFinite(options.expires.valueOf())) {
            throw new TypeError(`option expires is invalid: ${options.expires}`);
        }
        str += "; Expires=" + options.expires.toUTCString();
    }
    if (options.httpOnly) {
        str += "; HttpOnly";
    }
    if (options.secure) {
        str += "; Secure";
    }
    if (options.partitioned) {
        str += "; Partitioned";
    }
    if (options.priority) {
        const priority = typeof options.priority === "string"
            ? options.priority.toLowerCase()
            : undefined;
        switch (priority) {
            case "low":
                str += "; Priority=Low";
                break;
            case "medium":
                str += "; Priority=Medium";
                break;
            case "high":
                str += "; Priority=High";
                break;
            default:
                throw new TypeError(`option priority is invalid: ${options.priority}`);
        }
    }
    if (options.sameSite) {
        const sameSite = typeof options.sameSite === "string"
            ? options.sameSite.toLowerCase()
            : options.sameSite;
        switch (sameSite) {
            case true:
            case "strict":
                str += "; SameSite=Strict";
                break;
            case "lax":
                str += "; SameSite=Lax";
                break;
            case "none":
                str += "; SameSite=None";
                break;
            default:
                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
        }
    }
    return str;
}
/**
 * URL-decode string value. Optimized to skip native call when no %.
 */
function decode(str) {
    if (str.indexOf("%") === -1)
        return str;
    try {
        return decodeURIComponent(str);
    }
    catch (e) {
        return str;
    }
}
/**
 * Determine if value is a Date.
 */
function isDate(val) {
    return __toString.call(val) === "[object Date]";
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/country.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/country.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _assets_country_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assets/country.json */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/country.json");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/utils/index.js");


// Get a country by isoCode.
function getCountryByCode(isoCode) {
    if (!isoCode)
        return undefined;
    return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.findEntryByCode)(_assets_country_json__WEBPACK_IMPORTED_MODULE_1__, isoCode);
}
// Get a list of all countries.
function getAllCountries() {
    return _assets_country_json__WEBPACK_IMPORTED_MODULE_1__;
}
function sortByIsoCode(countries) {
    return countries.sort((a, b) => {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.compare)(a, b, (entity) => {
            return entity.isoCode;
        });
    });
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    getCountryByCode,
    getAllCountries,
    sortByIsoCode,
});


/***/ }),

/***/ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/state.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/state.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getAllStates: () => (/* binding */ getAllStates),
/* harmony export */   getStateByCode: () => (/* binding */ getStateByCode),
/* harmony export */   getStateByCodeAndCountry: () => (/* binding */ getStateByCodeAndCountry),
/* harmony export */   getStatesOfCountry: () => (/* binding */ getStatesOfCountry)
/* harmony export */ });
/* harmony import */ var _assets_state_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assets/state.json */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/state.json");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/utils/index.js");


// Get a list of all states.
function getAllStates() {
    return _assets_state_json__WEBPACK_IMPORTED_MODULE_0__;
}
// Get a list of states belonging to a specific country.
function getStatesOfCountry(countryCode = '') {
    if (!countryCode)
        return [];
    // get data from file or cache
    const states = _assets_state_json__WEBPACK_IMPORTED_MODULE_0__.filter((value) => {
        return value.countryCode === countryCode;
    });
    return states.sort(_utils__WEBPACK_IMPORTED_MODULE_1__.compare);
}
function getStateByCodeAndCountry(stateCode, countryCode) {
    if (!stateCode)
        return undefined;
    if (!countryCode)
        return undefined;
    return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.findStateByCodeAndCountryCode)(_assets_state_json__WEBPACK_IMPORTED_MODULE_0__, stateCode, countryCode);
}
// to be deprecate
function getStateByCode(isoCode) {
    // eslint-disable-next-line no-console
    console.warn(`WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!`);
    if (!isoCode)
        return undefined;
    return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.findEntryByCode)(_assets_state_json__WEBPACK_IMPORTED_MODULE_0__, isoCode);
}
function sortByIsoCode(countries) {
    return countries.sort((a, b) => {
        return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.compare)(a, b, (entity) => {
            return `${entity.countryCode}-${entity.isoCode}`;
        });
    });
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    getAllStates,
    getStatesOfCountry,
    getStateByCodeAndCountry,
    getStateByCode,
    sortByIsoCode,
});


/***/ }),

/***/ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/utils/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/utils/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compare: () => (/* binding */ compare),
/* harmony export */   convertArrayToObject: () => (/* binding */ convertArrayToObject),
/* harmony export */   defaultKeyToCompare: () => (/* binding */ defaultKeyToCompare),
/* harmony export */   findEntryByCode: () => (/* binding */ findEntryByCode),
/* harmony export */   findStateByCodeAndCountryCode: () => (/* binding */ findStateByCodeAndCountryCode)
/* harmony export */ });
const findEntryByCode = (source, code) => {
    if (code && source != null) {
        const codex = source.findIndex((c) => {
            return c.isoCode === code;
        });
        return codex !== -1 ? source[codex] : undefined;
    }
    return undefined;
};
const findStateByCodeAndCountryCode = (source, code, countryCode) => {
    if (code && countryCode && source != null) {
        const codex = source.findIndex((c) => {
            return c.isoCode === code && c.countryCode === countryCode;
        });
        return codex !== -1 ? source[codex] : undefined;
    }
    return undefined;
};
function defaultKeyToCompare(entity) {
    return entity.name;
}
const compare = (a, b, 
// eslint-disable-next-line no-unused-vars
keyToCompare = defaultKeyToCompare) => {
    if (keyToCompare(a) < keyToCompare(b))
        return -1;
    if (keyToCompare(a) > keyToCompare(b))
        return 1;
    return 0;
};
const convertArrayToObject = (keys, arr) => {
    const result = arr.map((subArr) => {
        return Object.fromEntries(keys.map((key, index) => [key, subArr[index]]));
    });
    return result;
};


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.addLeadingZeros = addLeadingZeros;
function addLeadingZeros(number, targetLength) {
  const sign = number < 0 ? "-" : "";
  const output = Math.abs(number).toString().padStart(targetLength, "0");
  return sign + output;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "defaultLocale", ({
  enumerable: true,
  get: function () {
    return _index.enUS;
  },
}));
var _index = __webpack_require__(/*! ../locale/en-US.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US.js");


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.getDefaultOptions = getDefaultOptions;
exports.setDefaultOptions = setDefaultOptions;

let defaultOptions = {};

function getDefaultOptions() {
  return defaultOptions;
}

function setDefaultOptions(newOptions) {
  defaultOptions = newOptions;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/formatters.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/formatters.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatters = void 0;
var _index = __webpack_require__(/*! ../../getDayOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDayOfYear.js");
var _index2 = __webpack_require__(/*! ../../getISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js");
var _index3 = __webpack_require__(/*! ../../getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
var _index4 = __webpack_require__(/*! ../../getWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeek.js");
var _index5 = __webpack_require__(/*! ../../getWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js");

var _index6 = __webpack_require__(/*! ../addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");
var _index7 = __webpack_require__(/*! ./lightFormatters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/lightFormatters.js");

const dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night",
};

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

const formatters = (exports.formatters = {
  // Era
  G: function (date, token, localize) {
    const era = date.getFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return localize.era(era, { width: "abbreviated" });
      // A, B
      case "GGGGG":
        return localize.era(era, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return localize.era(era, { width: "wide" });
    }
  },

  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === "yo") {
      const signedYear = date.getFullYear();
      // Returns 1 for 1 BC (which is year 0 in JavaScript)
      const year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, { unit: "year" });
    }

    return _index7.lightFormatters.y(date, token);
  },

  // Local week-numbering year
  Y: function (date, token, localize, options) {
    const signedWeekYear = (0, _index5.getWeekYear)(date, options);
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === "YY") {
      const twoDigitYear = weekYear % 100;
      return (0, _index6.addLeadingZeros)(twoDigitYear, 2);
    }

    // Ordinal number
    if (token === "Yo") {
      return localize.ordinalNumber(weekYear, { unit: "year" });
    }

    // Padding
    return (0, _index6.addLeadingZeros)(weekYear, token.length);
  },

  // ISO week-numbering year
  R: function (date, token) {
    const isoWeekYear = (0, _index3.getISOWeekYear)(date);

    // Padding
    return (0, _index6.addLeadingZeros)(isoWeekYear, token.length);
  },

  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    const year = date.getFullYear();
    return (0, _index6.addLeadingZeros)(year, token.length);
  },

  // Quarter
  Q: function (date, token, localize) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "Q":
        return String(quarter);
      // 01, 02, 03, 04
      case "QQ":
        return (0, _index6.addLeadingZeros)(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return localize.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return localize.quarter(quarter, {
          width: "abbreviated",
          context: "formatting",
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return localize.quarter(quarter, {
          width: "narrow",
          context: "formatting",
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return localize.quarter(quarter, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Stand-alone quarter
  q: function (date, token, localize) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "q":
        return String(quarter);
      // 01, 02, 03, 04
      case "qq":
        return (0, _index6.addLeadingZeros)(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return localize.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return localize.quarter(quarter, {
          width: "abbreviated",
          context: "standalone",
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return localize.quarter(quarter, {
          width: "narrow",
          context: "standalone",
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return localize.quarter(quarter, {
          width: "wide",
          context: "standalone",
        });
    }
  },

  // Month
  M: function (date, token, localize) {
    const month = date.getMonth();
    switch (token) {
      case "M":
      case "MM":
        return _index7.lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th
      case "Mo":
        return localize.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "MMM":
        return localize.month(month, {
          width: "abbreviated",
          context: "formatting",
        });
      // J, F, ..., D
      case "MMMMM":
        return localize.month(month, {
          width: "narrow",
          context: "formatting",
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return localize.month(month, { width: "wide", context: "formatting" });
    }
  },

  // Stand-alone month
  L: function (date, token, localize) {
    const month = date.getMonth();
    switch (token) {
      // 1, 2, ..., 12
      case "L":
        return String(month + 1);
      // 01, 02, ..., 12
      case "LL":
        return (0, _index6.addLeadingZeros)(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case "Lo":
        return localize.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "LLL":
        return localize.month(month, {
          width: "abbreviated",
          context: "standalone",
        });
      // J, F, ..., D
      case "LLLLL":
        return localize.month(month, {
          width: "narrow",
          context: "standalone",
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return localize.month(month, { width: "wide", context: "standalone" });
    }
  },

  // Local week of year
  w: function (date, token, localize, options) {
    const week = (0, _index4.getWeek)(date, options);

    if (token === "wo") {
      return localize.ordinalNumber(week, { unit: "week" });
    }

    return (0, _index6.addLeadingZeros)(week, token.length);
  },

  // ISO week of year
  I: function (date, token, localize) {
    const isoWeek = (0, _index2.getISOWeek)(date);

    if (token === "Io") {
      return localize.ordinalNumber(isoWeek, { unit: "week" });
    }

    return (0, _index6.addLeadingZeros)(isoWeek, token.length);
  },

  // Day of the month
  d: function (date, token, localize) {
    if (token === "do") {
      return localize.ordinalNumber(date.getDate(), { unit: "date" });
    }

    return _index7.lightFormatters.d(date, token);
  },

  // Day of year
  D: function (date, token, localize) {
    const dayOfYear = (0, _index.getDayOfYear)(date);

    if (token === "Do") {
      return localize.ordinalNumber(dayOfYear, { unit: "dayOfYear" });
    }

    return (0, _index6.addLeadingZeros)(dayOfYear, token.length);
  },

  // Day of week
  E: function (date, token, localize) {
    const dayOfWeek = date.getDay();
    switch (token) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "EEEEE":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "EEEEEE":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "EEEE":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Local day of week
  e: function (date, token, localize, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case "e":
        return String(localDayOfWeek);
      // Padded numerical value
      case "ee":
        return (0, _index6.addLeadingZeros)(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case "eo":
        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "eee":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "eeeee":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "eeeeee":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "eeee":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case "c":
        return String(localDayOfWeek);
      // Padded numerical value
      case "cc":
        return (0, _index6.addLeadingZeros)(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case "co":
        return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "ccc":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone",
        });
      // T
      case "ccccc":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "standalone",
        });
      // Tu
      case "cccccc":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "standalone",
        });
      // Tuesday
      case "cccc":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "standalone",
        });
    }
  },

  // ISO day of week
  i: function (date, token, localize) {
    const dayOfWeek = date.getDay();
    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case "i":
        return String(isoDayOfWeek);
      // 02
      case "ii":
        return (0, _index6.addLeadingZeros)(isoDayOfWeek, token.length);
      // 2nd
      case "io":
        return localize.ordinalNumber(isoDayOfWeek, { unit: "day" });
      // Tue
      case "iii":
        return localize.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting",
        });
      // T
      case "iiiii":
        return localize.day(dayOfWeek, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "iiiiii":
        return localize.day(dayOfWeek, {
          width: "short",
          context: "formatting",
        });
      // Tuesday
      case "iiii":
      default:
        return localize.day(dayOfWeek, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // AM or PM
  a: function (date, token, localize) {
    const hours = date.getHours();
    const dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";

    switch (token) {
      case "a":
      case "aa":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "aaa":
        return localize
          .dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting",
          })
          .toLowerCase();
      case "aaaaa":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "aaaa":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }

    switch (token) {
      case "b":
      case "bb":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "bbb":
        return localize
          .dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting",
          })
          .toLowerCase();
      case "bbbbb":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "bbbb":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting",
        });
      case "BBBBB":
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting",
        });
      case "BBBB":
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting",
        });
    }
  },

  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === "ho") {
      let hours = date.getHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return _index7.lightFormatters.h(date, token);
  },

  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === "Ho") {
      return localize.ordinalNumber(date.getHours(), { unit: "hour" });
    }

    return _index7.lightFormatters.H(date, token);
  },

  // Hour [0-11]
  K: function (date, token, localize) {
    const hours = date.getHours() % 12;

    if (token === "Ko") {
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return (0, _index6.addLeadingZeros)(hours, token.length);
  },

  // Hour [1-24]
  k: function (date, token, localize) {
    let hours = date.getHours();
    if (hours === 0) hours = 24;

    if (token === "ko") {
      return localize.ordinalNumber(hours, { unit: "hour" });
    }

    return (0, _index6.addLeadingZeros)(hours, token.length);
  },

  // Minute
  m: function (date, token, localize) {
    if (token === "mo") {
      return localize.ordinalNumber(date.getMinutes(), { unit: "minute" });
    }

    return _index7.lightFormatters.m(date, token);
  },

  // Second
  s: function (date, token, localize) {
    if (token === "so") {
      return localize.ordinalNumber(date.getSeconds(), { unit: "second" });
    }

    return _index7.lightFormatters.s(date, token);
  },

  // Fraction of second
  S: function (date, token) {
    return _index7.lightFormatters.S(date, token);
  },

  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return "Z";
    }

    switch (token) {
      // Hours and optional minutes
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case "XXXX":
      case "XX": // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case "XXXXX":
      case "XXX": // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case "xxxx":
      case "xx": // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case "xxxxx":
      case "xxx": // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (GMT)
  O: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Short
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },

  // Timezone (specific non-location)
  z: function (date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();

    switch (token) {
      // Short
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },

  // Seconds timestamp
  t: function (date, token, _localize) {
    const timestamp = Math.trunc(date.getTime() / 1000);
    return (0, _index6.addLeadingZeros)(timestamp, token.length);
  },

  // Milliseconds timestamp
  T: function (date, token, _localize) {
    const timestamp = date.getTime();
    return (0, _index6.addLeadingZeros)(timestamp, token.length);
  },
});

function formatTimezoneShort(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = Math.trunc(absOffset / 60);
  const minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  return (
    sign + String(hours) + delimiter + (0, _index6.addLeadingZeros)(minutes, 2)
  );
}

function formatTimezoneWithOptionalMinutes(offset, delimiter) {
  if (offset % 60 === 0) {
    const sign = offset > 0 ? "-" : "+";
    return sign + (0, _index6.addLeadingZeros)(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, delimiter);
}

function formatTimezone(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = (0, _index6.addLeadingZeros)(Math.trunc(absOffset / 60), 2);
  const minutes = (0, _index6.addLeadingZeros)(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/lightFormatters.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/lightFormatters.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lightFormatters = void 0;
var _index = __webpack_require__(/*! ../addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

const lightFormatters = (exports.lightFormatters = {
  // Year
  y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    const signedYear = date.getFullYear();
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    const year = signedYear > 0 ? signedYear : 1 - signedYear;
    return (0, _index.addLeadingZeros)(
      token === "yy" ? year % 100 : year,
      token.length,
    );
  },

  // Month
  M(date, token) {
    const month = date.getMonth();
    return token === "M"
      ? String(month + 1)
      : (0, _index.addLeadingZeros)(month + 1, 2);
  },

  // Day of the month
  d(date, token) {
    return (0, _index.addLeadingZeros)(date.getDate(), token.length);
  },

  // AM or PM
  a(date, token) {
    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am";

    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },

  // Hour [1-12]
  h(date, token) {
    return (0, _index.addLeadingZeros)(
      date.getHours() % 12 || 12,
      token.length,
    );
  },

  // Hour [0-23]
  H(date, token) {
    return (0, _index.addLeadingZeros)(date.getHours(), token.length);
  },

  // Minute
  m(date, token) {
    return (0, _index.addLeadingZeros)(date.getMinutes(), token.length);
  },

  // Second
  s(date, token) {
    return (0, _index.addLeadingZeros)(date.getSeconds(), token.length);
  },

  // Fraction of second
  S(date, token) {
    const numberOfDigits = token.length;
    const milliseconds = date.getMilliseconds();
    const fractionalSeconds = Math.trunc(
      milliseconds * Math.pow(10, numberOfDigits - 3),
    );
    return (0, _index.addLeadingZeros)(fractionalSeconds, token.length);
  },
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/longFormatters.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/longFormatters.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.longFormatters = void 0;

const dateLongFormatter = (pattern, formatLong) => {
  switch (pattern) {
    case "P":
      return formatLong.date({ width: "short" });
    case "PP":
      return formatLong.date({ width: "medium" });
    case "PPP":
      return formatLong.date({ width: "long" });
    case "PPPP":
    default:
      return formatLong.date({ width: "full" });
  }
};

const timeLongFormatter = (pattern, formatLong) => {
  switch (pattern) {
    case "p":
      return formatLong.time({ width: "short" });
    case "pp":
      return formatLong.time({ width: "medium" });
    case "ppp":
      return formatLong.time({ width: "long" });
    case "pppp":
    default:
      return formatLong.time({ width: "full" });
  }
};

const dateTimeLongFormatter = (pattern, formatLong) => {
  const matchResult = pattern.match(/(P+)(p+)?/) || [];
  const datePattern = matchResult[1];
  const timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }

  let dateTimeFormat;

  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong.dateTime({ width: "short" });
      break;
    case "PP":
      dateTimeFormat = formatLong.dateTime({ width: "medium" });
      break;
    case "PPP":
      dateTimeFormat = formatLong.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong.dateTime({ width: "full" });
      break;
  }

  return dateTimeFormat
    .replace("{{date}}", dateLongFormatter(datePattern, formatLong))
    .replace("{{time}}", timeLongFormatter(timePattern, formatLong));
};

const longFormatters = (exports.longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter,
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.getRoundingMethod = getRoundingMethod;

function getRoundingMethod(method) {
  return (number) => {
    const round = method ? Math[method] : Math.trunc;
    const result = round(number);
    // Prevent negative zero
    return result === 0 ? 0 : result;
  };
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getTimezoneOffsetInMilliseconds = getTimezoneOffsetInMilliseconds;
var _index = __webpack_require__(/*! ../toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  const _date = (0, _index.toDate)(date);
  const utcDate = new Date(
    Date.UTC(
      _date.getFullYear(),
      _date.getMonth(),
      _date.getDate(),
      _date.getHours(),
      _date.getMinutes(),
      _date.getSeconds(),
      _date.getMilliseconds(),
    ),
  );
  utcDate.setUTCFullYear(_date.getFullYear());
  return +date - +utcDate;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/protectedTokens.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/protectedTokens.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
exports.isProtectedWeekYearToken = isProtectedWeekYearToken;
exports.warnOrThrowProtectedError = warnOrThrowProtectedError;
const dayOfYearTokenRE = /^D+$/;
const weekYearTokenRE = /^Y+$/;

const throwTokens = ["D", "DD", "YY", "YYYY"];

function isProtectedDayOfYearToken(token) {
  return dayOfYearTokenRE.test(token);
}

function isProtectedWeekYearToken(token) {
  return weekYearTokenRE.test(token);
}

function warnOrThrowProtectedError(token, format, input) {
  const _message = message(token, format, input);
  console.warn(_message);
  if (throwTokens.includes(token)) throw new RangeError(_message);
}

function message(token, format, input) {
  const subject = token[0] === "Y" ? "years" : "days of the month";
  return `Use \`${token.toLowerCase()}\` instead of \`${token}\` (in \`${format}\`) for formatting ${subject} to the input \`${input}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/add.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/add.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.add = add;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./addMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js");
var _index3 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name add
 * @category Common Helpers
 * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @description
 * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.
 *
 * | Key            | Description                        |
 * |----------------|------------------------------------|
 * | years          | Amount of years to be added        |
 * | months         | Amount of months to be added       |
 * | weeks          | Amount of weeks to be added        |
 * | days           | Amount of days to be added         |
 * | hours          | Amount of hours to be added        |
 * | minutes        | Amount of minutes to be added      |
 * | seconds        | Amount of seconds to be added      |
 *
 * All values default to 0
 *
 * @returns The new date with the seconds added
 *
 * @example
 * // Add the following duration to 1 September 2014, 10:19:50
 * const result = add(new Date(2014, 8, 1, 10, 19, 50), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,\\-7
 *   minutes: 9,
 *   seconds: 30,
 * })
 * //=> Thu Jun 15 2017 15:29:20
 */
function add(date, duration) {
  const {
    years = 0,
    months = 0,
    weeks = 0,
    days = 0,
    hours = 0,
    minutes = 0,
    seconds = 0,
  } = duration;

  // Add years and months
  const _date = (0, _index4.toDate)(date);
  const dateWithMonths =
    months || years
      ? (0, _index2.addMonths)(_date, months + years * 12)
      : _date;

  // Add weeks and days
  const dateWithDays =
    days || weeks
      ? (0, _index.addDays)(dateWithMonths, days + weeks * 7)
      : dateWithMonths;

  // Add days, hours, minutes and seconds
  const minutesToAdd = minutes + hours * 60;
  const secondsToAdd = seconds + minutesToAdd * 60;
  const msToAdd = secondsToAdd * 1000;
  const finalDate = (0, _index3.constructFrom)(
    date,
    dateWithDays.getTime() + msToAdd,
  );

  return finalDate;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addBusinessDays.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addBusinessDays.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addBusinessDays = addBusinessDays;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./isSaturday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSaturday.js");
var _index3 = __webpack_require__(/*! ./isSunday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSunday.js");
var _index4 = __webpack_require__(/*! ./isWeekend.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js");
var _index5 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name addBusinessDays
 * @category Date Extension Helpers
 * @summary Add the specified number of business days (mon - fri) to the given date.
 *
 * @description
 * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of business days to be added.
 *
 * @returns The new date with the business days added
 *
 * @example
 * // Add 10 business days to 1 September 2014:
 * const result = addBusinessDays(new Date(2014, 8, 1), 10)
 * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)
 */
function addBusinessDays(date, amount) {
  const _date = (0, _index5.toDate)(date);
  const startedOnWeekend = (0, _index4.isWeekend)(_date);

  if (isNaN(amount)) return (0, _index.constructFrom)(date, NaN);

  const hours = _date.getHours();
  const sign = amount < 0 ? -1 : 1;
  const fullWeeks = Math.trunc(amount / 5);

  _date.setDate(_date.getDate() + fullWeeks * 7);

  // Get remaining days not part of a full week
  let restDays = Math.abs(amount % 5);

  // Loops over remaining days
  while (restDays > 0) {
    _date.setDate(_date.getDate() + sign);
    if (!(0, _index4.isWeekend)(_date)) restDays -= 1;
  }

  // If the date is a weekend day and we reduce a dividable of
  // 5 from it, we land on a weekend date.
  // To counter this, we add days accordingly to land on the next business day
  if (startedOnWeekend && (0, _index4.isWeekend)(_date) && amount !== 0) {
    // If we're reducing days, we want to add days until we land on a weekday
    // If we're adding days we want to reduce days until we land on a weekday
    if ((0, _index2.isSaturday)(_date))
      _date.setDate(_date.getDate() + (sign < 0 ? 2 : -1));
    if ((0, _index3.isSunday)(_date))
      _date.setDate(_date.getDate() + (sign < 0 ? 1 : -2));
  }

  // Restore hours to avoid DST lag
  _date.setHours(hours);

  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addDays = addDays;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of days to be added.
 *
 * @returns The new date with the days added
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function addDays(date, amount) {
  const _date = (0, _index.toDate)(date);
  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return _date;
  }
  _date.setDate(_date.getDate() + amount);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addHours = addHours;
var _index = __webpack_require__(/*! ./addMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of hours to be added.
 *
 * @returns The new date with the hours added
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */
function addHours(date, amount) {
  return (0, _index.addMilliseconds)(date, amount * _index2.millisecondsInHour);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addISOWeekYears.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addISOWeekYears.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addISOWeekYears = addISOWeekYears;
var _index = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
var _index2 = __webpack_require__(/*! ./setISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeekYear.js");

/**
 * @name addISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Add the specified number of ISO week-numbering years to the given date.
 *
 * @description
 * Add the specified number of ISO week-numbering years to the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of ISO week-numbering years to be added.
 *
 * @returns The new date with the ISO week-numbering years added
 *
 * @example
 * // Add 5 ISO week-numbering years to 2 July 2010:
 * const result = addISOWeekYears(new Date(2010, 6, 2), 5)
 * //=> Fri Jn 26 2015 00:00:00
 */
function addISOWeekYears(date, amount) {
  return (0, _index2.setISOWeekYear)(
    date,
    (0, _index.getISOWeekYear)(date) + amount,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addMilliseconds = addMilliseconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of milliseconds to be added.
 *
 * @returns The new date with the milliseconds added
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */
function addMilliseconds(date, amount) {
  const timestamp = +(0, _index.toDate)(date);
  return (0, _index2.constructFrom)(date, timestamp + amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addMinutes = addMinutes;
var _index = __webpack_require__(/*! ./addMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name addMinutes
 * @category Minute Helpers
 * @summary Add the specified number of minutes to the given date.
 *
 * @description
 * Add the specified number of minutes to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of minutes to be added.
 *
 * @returns The new date with the minutes added
 *
 * @example
 * // Add 30 minutes to 10 July 2014 12:00:00:
 * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 12:30:00
 */
function addMinutes(date, amount) {
  return (0, _index.addMilliseconds)(
    date,
    amount * _index2.millisecondsInMinute,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addMonths = addMonths;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of months to be added.
 *
 * @returns The new date with the months added
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 *
 * // Add one month to 30 January 2023:
 * const result = addMonths(new Date(2023, 0, 30), 1)
 * //=> Tue Feb 28 2023 00:00:00
 */
function addMonths(date, amount) {
  const _date = (0, _index.toDate)(date);
  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);
  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return _date;
  }
  const dayOfMonth = _date.getDate();

  // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.
  const endOfDesiredMonth = (0, _index2.constructFrom)(date, _date.getTime());
  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);
  const daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    _date.setFullYear(
      endOfDesiredMonth.getFullYear(),
      endOfDesiredMonth.getMonth(),
      dayOfMonth,
    );
    return _date;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addQuarters = addQuarters;
var _index = __webpack_require__(/*! ./addMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js");

/**
 * @name addQuarters
 * @category Quarter Helpers
 * @summary Add the specified number of year quarters to the given date.
 *
 * @description
 * Add the specified number of year quarters to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of quarters to be added.
 *
 * @returns The new date with the quarters added
 *
 * @example
 * // Add 1 quarter to 1 September 2014:
 * const result = addQuarters(new Date(2014, 8, 1), 1)
 * //=> Mon Dec 01 2014 00:00:00
 */
function addQuarters(date, amount) {
  const months = amount * 3;
  return (0, _index.addMonths)(date, months);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addSeconds.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addSeconds.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addSeconds = addSeconds;
var _index = __webpack_require__(/*! ./addMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js");

/**
 * @name addSeconds
 * @category Second Helpers
 * @summary Add the specified number of seconds to the given date.
 *
 * @description
 * Add the specified number of seconds to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of seconds to be added.
 *
 * @returns The new date with the seconds added
 *
 * @example
 * // Add 30 seconds to 10 July 2014 12:45:00:
 * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:45:30
 */
function addSeconds(date, amount) {
  return (0, _index.addMilliseconds)(date, amount * 1000);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addWeeks = addWeeks;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");

/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of weeks to be added.
 *
 * @returns The new date with the weeks added
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * const result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */
function addWeeks(date, amount) {
  const days = amount * 7;
  return (0, _index.addDays)(date, days);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addYears.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addYears.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.addYears = addYears;
var _index = __webpack_require__(/*! ./addMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js");

/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of years to be added.
 *
 * @returns The new date with the years added
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * const result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */
function addYears(date, amount) {
  return (0, _index.addMonths)(date, amount * 12);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/areIntervalsOverlapping.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/areIntervalsOverlapping.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.areIntervalsOverlapping = areIntervalsOverlapping;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link areIntervalsOverlapping} function options.
 */

/**
 * @name areIntervalsOverlapping
 * @category Interval Helpers
 * @summary Is the given time interval overlapping with another time interval?
 *
 * @description
 * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping unless `inclusive` is set to `true`.
 *
 * @param intervalLeft - The first interval to compare.
 * @param intervalRight - The second interval to compare.
 * @param options - The object with options
 *
 * @returns Whether the time intervals are overlapping
 *
 * @example
 * // For overlapping time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 * )
 * //=> true
 *
 * @example
 * // For non-overlapping time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
 * )
 * //=> false
 *
 * @example
 * // For adjacent time intervals:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }
 * )
 * //=> false
 *
 * @example
 * // Using the inclusive option:
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }
 * )
 * //=> false
 *
 * @example
 * areIntervalsOverlapping(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },
 *   { inclusive: true }
 * )
 * //=> true
 */
function areIntervalsOverlapping(intervalLeft, intervalRight, options) {
  const [leftStartTime, leftEndTime] = [
    +(0, _index.toDate)(intervalLeft.start),
    +(0, _index.toDate)(intervalLeft.end),
  ].sort((a, b) => a - b);
  const [rightStartTime, rightEndTime] = [
    +(0, _index.toDate)(intervalRight.start),
    +(0, _index.toDate)(intervalRight.end),
  ].sort((a, b) => a - b);

  if (options?.inclusive)
    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;

  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/clamp.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/clamp.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.clamp = clamp;
var _index = __webpack_require__(/*! ./max.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/max.js");
var _index2 = __webpack_require__(/*! ./min.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/min.js");

/**
 * @name clamp
 * @category Interval Helpers
 * @summary Return a date bounded by the start and the end of the given interval
 *
 * @description
 * Clamps a date to the lower bound with the start of the interval and the upper
 * bound with the end of the interval.
 *
 * - When the date is less than the start of the interval, the start is returned.
 * - When the date is greater than the end of the interval, the end is returned.
 * - Otherwise the date is returned.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be bounded
 * @param interval - The interval to bound to
 *
 * @returns The date bounded by the start and the end of the interval
 *
 * @example
 * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021
 * const result = clamp(new Date(2021, 2, 21), {
 *   start: new Date(2021, 2, 22),
 *   end: new Date(2021, 3, 1),
 * })
 * //=> Mon Mar 22 2021 00:00:00
 */
function clamp(date, interval) {
  return (0, _index2.min)([
    (0, _index.max)([date, interval.start]),
    interval.end,
  ]);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestIndexTo.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestIndexTo.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.closestIndexTo = closestIndexTo;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name closestIndexTo
 * @category Common Helpers
 * @summary Return an index of the closest date from the array comparing to the given date.
 *
 * @description
 * Return an index of the closest date from the array comparing to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateToCompare - The date to compare with
 * @param dates - The array to search
 *
 * @returns An index of the date closest to the given date or undefined if no valid value is given
 *
 * @example
 * // Which date is closer to 6 September 2015?
 * const dateToCompare = new Date(2015, 8, 6)
 * const datesArray = [
 *   new Date(2015, 0, 1),
 *   new Date(2016, 0, 1),
 *   new Date(2017, 0, 1)
 * ]
 * const result = closestIndexTo(dateToCompare, datesArray)
 * //=> 1
 */
function closestIndexTo(dateToCompare, dates) {
  const date = (0, _index.toDate)(dateToCompare);

  if (isNaN(Number(date))) return NaN;

  const timeToCompare = date.getTime();

  let result;
  let minDistance;
  dates.forEach(function (dirtyDate, index) {
    const currentDate = (0, _index.toDate)(dirtyDate);

    if (isNaN(Number(currentDate))) {
      result = NaN;
      minDistance = NaN;
      return;
    }

    const distance = Math.abs(timeToCompare - currentDate.getTime());
    if (result == null || distance < minDistance) {
      result = index;
      minDistance = distance;
    }
  });

  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestTo.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestTo.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.closestTo = closestTo;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name closestTo
 * @category Common Helpers
 * @summary Return a date from the array closest to the given date.
 *
 * @description
 * Return a date from the array closest to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateToCompare - The date to compare with
 * @param dates - The array to search
 *
 * @returns The date from the array closest to the given date or undefined if no valid value is given
 *
 * @example
 * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?
 * const dateToCompare = new Date(2015, 8, 6)
 * const result = closestTo(dateToCompare, [
 *   new Date(2000, 0, 1),
 *   new Date(2030, 0, 1)
 * ])
 * //=> Tue Jan 01 2030 00:00:00
 */
function closestTo(dateToCompare, dates) {
  const date = (0, _index2.toDate)(dateToCompare);

  if (isNaN(Number(date))) return (0, _index.constructFrom)(dateToCompare, NaN);

  const timeToCompare = date.getTime();

  let result;
  let minDistance;
  dates.forEach((dirtyDate) => {
    const currentDate = (0, _index2.toDate)(dirtyDate);

    if (isNaN(Number(currentDate))) {
      result = (0, _index.constructFrom)(dateToCompare, NaN);
      minDistance = NaN;
      return;
    }

    const distance = Math.abs(timeToCompare - currentDate.getTime());
    if (result == null || distance < minDistance) {
      result = currentDate;
      minDistance = distance;
    }
  });

  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.compareAsc = compareAsc;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name compareAsc
 * @category Common Helpers
 * @summary Compare the two dates and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return 1 if the first date is after the second,
 * -1 if the first date is before the second or 0 if dates are equal.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to compare
 * @param dateRight - The second date to compare
 *
 * @returns The result of the comparison
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989:
 * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> -1
 *
 * @example
 * // Sort the array of dates:
 * const result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareAsc)
 * //=> [
 * //   Wed Feb 11 1987 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Sun Jul 02 1995 00:00:00
 * // ]
 */
function compareAsc(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);

  const diff = _dateLeft.getTime() - _dateRight.getTime();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
    // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareDesc.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareDesc.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.compareDesc = compareDesc;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name compareDesc
 * @category Common Helpers
 * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return -1 if the first date is after the second,
 * 1 if the first date is before the second or 0 if dates are equal.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to compare
 * @param dateRight - The second date to compare
 *
 * @returns The result of the comparison
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
 * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> 1
 *
 * @example
 * // Sort the array of dates in reverse chronological order:
 * const result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareDesc)
 * //=> [
 * //   Sun Jul 02 1995 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Wed Feb 11 1987 00:00:00
 * // ]
 */
function compareDesc(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);

  const diff = _dateLeft.getTime() - _dateRight.getTime();

  if (diff > 0) {
    return -1;
  } else if (diff < 0) {
    return 1;
    // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.secondsInYear =
  exports.secondsInWeek =
  exports.secondsInQuarter =
  exports.secondsInMonth =
  exports.secondsInMinute =
  exports.secondsInHour =
  exports.secondsInDay =
  exports.quartersInYear =
  exports.monthsInYear =
  exports.monthsInQuarter =
  exports.minutesInYear =
  exports.minutesInMonth =
  exports.minutesInHour =
  exports.minutesInDay =
  exports.minTime =
  exports.millisecondsInWeek =
  exports.millisecondsInSecond =
  exports.millisecondsInMinute =
  exports.millisecondsInHour =
  exports.millisecondsInDay =
  exports.maxTime =
  exports.daysInYear =
  exports.daysInWeek =
    void 0; /**
 * @module constants
 * @summary Useful constants
 * @description
 * Collection of useful date constants.
 *
 * The constants could be imported from `date-fns/constants`:
 *
 * ```ts
 * import { maxTime, minTime } from "date-fns/constants";
 *
 * function isAllowedTime(time) {
 *   return time <= maxTime && time >= minTime;
 * }
 * ```
 */

/**
 * @constant
 * @name daysInWeek
 * @summary Days in 1 week.
 */
const daysInWeek = (exports.daysInWeek = 7);

/**
 * @constant
 * @name daysInYear
 * @summary Days in 1 year.
 *
 * @description
 * How many days in a year.
 *
 * One years equals 365.2425 days according to the formula:
 *
 * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
 * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
 */
const daysInYear = (exports.daysInYear = 365.2425);

/**
 * @constant
 * @name maxTime
 * @summary Maximum allowed time.
 *
 * @example
 * import { maxTime } from "date-fns/constants";
 *
 * const isValid = 8640000000000001 <= maxTime;
 * //=> false
 *
 * new Date(8640000000000001);
 * //=> Invalid Date
 */
const maxTime = (exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000);

/**
 * @constant
 * @name minTime
 * @summary Minimum allowed time.
 *
 * @example
 * import { minTime } from "date-fns/constants";
 *
 * const isValid = -8640000000000001 >= minTime;
 * //=> false
 *
 * new Date(-8640000000000001)
 * //=> Invalid Date
 */
const minTime = (exports.minTime = -maxTime);

/**
 * @constant
 * @name millisecondsInWeek
 * @summary Milliseconds in 1 week.
 */
const millisecondsInWeek = (exports.millisecondsInWeek = 604800000);

/**
 * @constant
 * @name millisecondsInDay
 * @summary Milliseconds in 1 day.
 */
const millisecondsInDay = (exports.millisecondsInDay = 86400000);

/**
 * @constant
 * @name millisecondsInMinute
 * @summary Milliseconds in 1 minute
 */
const millisecondsInMinute = (exports.millisecondsInMinute = 60000);

/**
 * @constant
 * @name millisecondsInHour
 * @summary Milliseconds in 1 hour
 */
const millisecondsInHour = (exports.millisecondsInHour = 3600000);

/**
 * @constant
 * @name millisecondsInSecond
 * @summary Milliseconds in 1 second
 */
const millisecondsInSecond = (exports.millisecondsInSecond = 1000);

/**
 * @constant
 * @name minutesInYear
 * @summary Minutes in 1 year.
 */
const minutesInYear = (exports.minutesInYear = 525600);

/**
 * @constant
 * @name minutesInMonth
 * @summary Minutes in 1 month.
 */
const minutesInMonth = (exports.minutesInMonth = 43200);

/**
 * @constant
 * @name minutesInDay
 * @summary Minutes in 1 day.
 */
const minutesInDay = (exports.minutesInDay = 1440);

/**
 * @constant
 * @name minutesInHour
 * @summary Minutes in 1 hour.
 */
const minutesInHour = (exports.minutesInHour = 60);

/**
 * @constant
 * @name monthsInQuarter
 * @summary Months in 1 quarter.
 */
const monthsInQuarter = (exports.monthsInQuarter = 3);

/**
 * @constant
 * @name monthsInYear
 * @summary Months in 1 year.
 */
const monthsInYear = (exports.monthsInYear = 12);

/**
 * @constant
 * @name quartersInYear
 * @summary Quarters in 1 year
 */
const quartersInYear = (exports.quartersInYear = 4);

/**
 * @constant
 * @name secondsInHour
 * @summary Seconds in 1 hour.
 */
const secondsInHour = (exports.secondsInHour = 3600);

/**
 * @constant
 * @name secondsInMinute
 * @summary Seconds in 1 minute.
 */
const secondsInMinute = (exports.secondsInMinute = 60);

/**
 * @constant
 * @name secondsInDay
 * @summary Seconds in 1 day.
 */
const secondsInDay = (exports.secondsInDay = secondsInHour * 24);

/**
 * @constant
 * @name secondsInWeek
 * @summary Seconds in 1 week.
 */
const secondsInWeek = (exports.secondsInWeek = secondsInDay * 7);

/**
 * @constant
 * @name secondsInYear
 * @summary Seconds in 1 year.
 */
const secondsInYear = (exports.secondsInYear = secondsInDay * daysInYear);

/**
 * @constant
 * @name secondsInMonth
 * @summary Seconds in 1 month
 */
const secondsInMonth = (exports.secondsInMonth = secondsInYear / 12);

/**
 * @constant
 * @name secondsInQuarter
 * @summary Seconds in 1 quarter.
 */
const secondsInQuarter = (exports.secondsInQuarter = secondsInMonth * 3);


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.constructFrom = constructFrom;

/**
 * @name constructFrom
 * @category Generic Helpers
 * @summary Constructs a date using the reference date and the value
 *
 * @description
 * The function constructs a new date using the constructor from the reference
 * date and the given value. It helps to build generic functions that accept
 * date extensions.
 *
 * It defaults to `Date` if the passed reference date is a number or a string.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The reference date to take constructor from
 * @param value - The value to create the date
 *
 * @returns Date initialized using the given date and value
 *
 * @example
 * import { constructFrom } from 'date-fns'
 *
 * // A function that clones a date preserving the original type
 * function cloneDate<DateType extends Date(date: DateType): DateType {
 *   return constructFrom(
 *     date, // Use contrustor from the given date
 *     date.getTime() // Use the date value to create a new date
 *   )
 * }
 */
function constructFrom(date, value) {
  if (date instanceof Date) {
    return new date.constructor(value);
  } else {
    return new Date(value);
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.constructNow = constructNow;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name constructNow
 * @category Generic Helpers
 * @summary Constructs a new current date using the passed value constructor.
 * @pure false
 *
 * @description
 * The function constructs a new current date using the constructor from
 * the reference date. It helps to build generic functions that accept date
 * extensions and use the current date.
 *
 * It defaults to `Date` if the passed reference date is a number or a string.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The reference date to take constructor from
 *
 * @returns Current date initialized using the given date constructor
 *
 * @example
 * import { constructNow, isSameDay } from 'date-fns'
 *
 * function isToday<DateType extends Date>(
 *   date: DateType | number | string,
 * ): boolean {
 *   // If we were to use `new Date()` directly, the function would  behave
 *   // differently in different timezones and return false for the same date.
 *   return isSameDay(date, constructNow(date));
 * }
 */
function constructNow(date) {
  return (0, _index.constructFrom)(date, Date.now());
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/daysToWeeks.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/daysToWeeks.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.daysToWeeks = daysToWeeks;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name daysToWeeks
 * @category Conversion Helpers
 * @summary Convert days to weeks.
 *
 * @description
 * Convert a number of days to a full number of weeks.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param days - The number of days to be converted
 *
 * @returns The number of days converted in weeks
 *
 * @example
 * // Convert 14 days to weeks:
 * const result = daysToWeeks(14)
 * //=> 2
 *
 * @example
 * // It uses trunc rounding:
 * const result = daysToWeeks(13)
 * //=> 1
 */
function daysToWeeks(days) {
  const weeks = days / _index.daysInWeek;
  const result = Math.trunc(weeks);
  // Prevent negative zero
  return result === 0 ? 0 : result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInBusinessDays.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInBusinessDays.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInBusinessDays = differenceInBusinessDays;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index3 = __webpack_require__(/*! ./isSameDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js");
var _index4 = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index5 = __webpack_require__(/*! ./isWeekend.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js");
var _index6 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInBusinessDays
 * @category Day Helpers
 * @summary Get the number of business days between the given dates.
 *
 * @description
 * Get the number of business day periods between the given dates.
 * Business days being days that arent in the weekend.
 * Like `differenceInCalendarDays`, the function removes the times from
 * the dates before calculating the difference.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of business days
 *
 * @example
 * // How many business days are between
 * // 10 January 2014 and 20 July 2014?
 * const result = differenceInBusinessDays(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 0, 10)
 * )
 * //=> 136
 *
 * // How many business days are between
 * // 30 November 2021 and 1 November 2021?
 * const result = differenceInBusinessDays(
 *   new Date(2021, 10, 30),
 *   new Date(2021, 10, 1)
 * )
 * //=> 21
 *
 * // How many business days are between
 * // 1 November 2021 and 1 December 2021?
 * const result = differenceInBusinessDays(
 *   new Date(2021, 10, 1),
 *   new Date(2021, 11, 1)
 * )
 * //=> -22
 *
 * // How many business days are between
 * // 1 November 2021 and 1 November 2021 ?
 * const result = differenceInBusinessDays(
 *   new Date(2021, 10, 1),
 *   new Date(2021, 10, 1)
 * )
 * //=> 0
 */
function differenceInBusinessDays(dateLeft, dateRight) {
  const _dateLeft = (0, _index6.toDate)(dateLeft);
  let _dateRight = (0, _index6.toDate)(dateRight);

  if (!(0, _index4.isValid)(_dateLeft) || !(0, _index4.isValid)(_dateRight))
    return NaN;

  const calendarDifference = (0, _index2.differenceInCalendarDays)(
    _dateLeft,
    _dateRight,
  );
  const sign = calendarDifference < 0 ? -1 : 1;

  const weeks = Math.trunc(calendarDifference / 7);

  let result = weeks * 5;
  _dateRight = (0, _index.addDays)(_dateRight, weeks * 7);

  // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week
  while (!(0, _index3.isSameDay)(_dateLeft, _dateRight)) {
    // sign is used to account for both negative and positive differences
    result += (0, _index5.isWeekend)(_dateRight) ? 0 : sign;
    _dateRight = (0, _index.addDays)(_dateRight, sign);
  }

  // Prevent negative zero
  return result === 0 ? 0 : result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarDays = differenceInCalendarDays;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index2 = __webpack_require__(/*! ./startOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js");
var _index3 = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");

/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of calendar days
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */
function differenceInCalendarDays(dateLeft, dateRight) {
  const startOfDayLeft = (0, _index2.startOfDay)(dateLeft);
  const startOfDayRight = (0, _index2.startOfDay)(dateRight);

  const timestampLeft =
    +startOfDayLeft -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfDayLeft);
  const timestampRight =
    +startOfDayRight -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfDayRight);

  // Round the number of days to the nearest integer because the number of
  // milliseconds in a day is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(
    (timestampLeft - timestampRight) / _index.millisecondsInDay,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeekYears.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeekYears.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarISOWeekYears = differenceInCalendarISOWeekYears;
var _index = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");

/**
 * @name differenceInCalendarISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of calendar ISO week-numbering years between the given dates.
 *
 * @description
 * Get the number of calendar ISO week-numbering years between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of calendar ISO week-numbering years
 *
 * @example
 * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?
 * const result = differenceInCalendarISOWeekYears(
 *   new Date(2012, 0, 1),
 *   new Date(2010, 0, 1)
 * )
 * //=> 2
 */
function differenceInCalendarISOWeekYears(dateLeft, dateRight) {
  return (
    (0, _index.getISOWeekYear)(dateLeft) - (0, _index.getISOWeekYear)(dateRight)
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeeks.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeeks.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarISOWeeks = differenceInCalendarISOWeeks;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");

/**
 * @name differenceInCalendarISOWeeks
 * @category ISO Week Helpers
 * @summary Get the number of calendar ISO weeks between the given dates.
 *
 * @description
 * Get the number of calendar ISO weeks between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of calendar ISO weeks
 *
 * @example
 * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?
 * const result = differenceInCalendarISOWeeks(
 *   new Date(2014, 6, 21),
 *   new Date(2014, 6, 6)
 * )
 * //=> 3
 */
function differenceInCalendarISOWeeks(dateLeft, dateRight) {
  const startOfISOWeekLeft = (0, _index2.startOfISOWeek)(dateLeft);
  const startOfISOWeekRight = (0, _index2.startOfISOWeek)(dateRight);

  const timestampLeft =
    +startOfISOWeekLeft -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfISOWeekLeft);
  const timestampRight =
    +startOfISOWeekRight -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfISOWeekRight);

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(
    (timestampLeft - timestampRight) / _index.millisecondsInWeek,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarMonths = differenceInCalendarMonths;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of calendar months
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */
function differenceInCalendarMonths(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);

  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();
  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();

  return yearDiff * 12 + monthDiff;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarQuarters.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarQuarters.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarQuarters = differenceInCalendarQuarters;
var _index = __webpack_require__(/*! ./getQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getQuarter.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInCalendarQuarters
 * @category Quarter Helpers
 * @summary Get the number of calendar quarters between the given dates.
 *
 * @description
 * Get the number of calendar quarters between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date

 * @returns The number of calendar quarters
 *
 * @example
 * // How many calendar quarters are between 31 December 2013 and 2 July 2014?
 * const result = differenceInCalendarQuarters(
 *   new Date(2014, 6, 2),
 *   new Date(2013, 11, 31)
 * )
 * //=> 3
 */
function differenceInCalendarQuarters(dateLeft, dateRight) {
  const _dateLeft = (0, _index2.toDate)(dateLeft);
  const _dateRight = (0, _index2.toDate)(dateRight);

  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();
  const quarterDiff =
    (0, _index.getQuarter)(_dateLeft) - (0, _index.getQuarter)(_dateRight);

  return yearDiff * 4 + quarterDiff;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarWeeks.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarWeeks.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarWeeks = differenceInCalendarWeeks;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index2 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");

var _index3 = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");

/**
 * The {@link differenceInCalendarWeeks} function options.
 */

/**
 * @name differenceInCalendarWeeks
 * @category Week Helpers
 * @summary Get the number of calendar weeks between the given dates.
 *
 * @description
 * Get the number of calendar weeks between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options.
 *
 * @returns The number of calendar weeks
 *
 * @example
 * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
 * const result = differenceInCalendarWeeks(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 6, 5)
 * )
 * //=> 3
 *
 * @example
 * // If the week starts on Monday,
 * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
 * const result = differenceInCalendarWeeks(
 *   new Date(2014, 6, 20),
 *   new Date(2014, 6, 5),
 *   { weekStartsOn: 1 }
 * )
 * //=> 2
 */
function differenceInCalendarWeeks(dateLeft, dateRight, options) {
  const startOfWeekLeft = (0, _index2.startOfWeek)(dateLeft, options);
  const startOfWeekRight = (0, _index2.startOfWeek)(dateRight, options);

  const timestampLeft =
    +startOfWeekLeft -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfWeekLeft);
  const timestampRight =
    +startOfWeekRight -
    (0, _index3.getTimezoneOffsetInMilliseconds)(startOfWeekRight);

  // Round the number of days to the nearest integer because the number of
  // milliseconds in a days is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(
    (timestampLeft - timestampRight) / _index.millisecondsInWeek,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInCalendarYears = differenceInCalendarYears;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInCalendarYears
 * @category Year Helpers
 * @summary Get the number of calendar years between the given dates.
 *
 * @description
 * Get the number of calendar years between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date

 * @returns The number of calendar years
 *
 * @example
 * // How many calendar years are between 31 December 2013 and 11 February 2015?
 * const result = differenceInCalendarYears(
 *   new Date(2015, 1, 11),
 *   new Date(2013, 11, 31)
 * )
 * //=> 2
 */
function differenceInCalendarYears(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);

  return _dateLeft.getFullYear() - _dateRight.getFullYear();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInDays.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInDays.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInDays = differenceInDays;
var _index = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInDays
 * @category Day Helpers
 * @summary Get the number of full days between the given dates.
 *
 * @description
 * Get the number of full day periods between two dates. Fractional days are
 * truncated towards zero.
 *
 * One "full day" is the distance between a local time in one day to the same
 * local time on the next or previous day. A full day can sometimes be less than
 * or more than 24 hours if a daylight savings change happens between two dates.
 *
 * To ignore DST and only measure exact 24-hour periods, use this instead:
 * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of full days according to the local timezone
 *
 * @example
 * // How many full days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 365
 *
 * @example
 * // How many full days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 0
 *
 * @example
 * // How many full days are between
 * // 1 March 2020 0:00 and 1 June 2020 0:00 ?
 * // Note: because local time is used, the
 * // result will always be 92 days, even in
 * // time zones where DST starts and the
 * // period has only 92*24-1 hours.
 * const result = differenceInDays(
 *   new Date(2020, 5, 1),
 *   new Date(2020, 2, 1)
 * )
 * //=> 92
 */
function differenceInDays(dateLeft, dateRight) {
  const _dateLeft = (0, _index2.toDate)(dateLeft);
  const _dateRight = (0, _index2.toDate)(dateRight);

  const sign = compareLocalAsc(_dateLeft, _dateRight);
  const difference = Math.abs(
    (0, _index.differenceInCalendarDays)(_dateLeft, _dateRight),
  );

  _dateLeft.setDate(_dateLeft.getDate() - sign * difference);

  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
  // If so, result must be decreased by 1 in absolute value
  const isLastDayNotFull = Number(
    compareLocalAsc(_dateLeft, _dateRight) === -sign,
  );
  const result = sign * (difference - isLastDayNotFull);
  // Prevent negative zero
  return result === 0 ? 0 : result;
}

// Like `compareAsc` but uses local time not UTC, which is needed
// for accurate equality comparisons of UTC timestamps that end up
// having the same representation in local time, e.g. one hour before
// DST ends vs. the instant that DST ends.
function compareLocalAsc(dateLeft, dateRight) {
  const diff =
    dateLeft.getFullYear() - dateRight.getFullYear() ||
    dateLeft.getMonth() - dateRight.getMonth() ||
    dateLeft.getDate() - dateRight.getDate() ||
    dateLeft.getHours() - dateRight.getHours() ||
    dateLeft.getMinutes() - dateRight.getMinutes() ||
    dateLeft.getSeconds() - dateRight.getSeconds() ||
    dateLeft.getMilliseconds() - dateRight.getMilliseconds();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
    // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInHours.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInHours.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInHours = differenceInHours;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index3 = __webpack_require__(/*! ./differenceInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js");

/**
 * The {@link differenceInHours} function options.
 */

/**
 * @name differenceInHours
 * @category Hour Helpers
 * @summary Get the number of hours between the given dates.
 *
 * @description
 * Get the number of hours between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options.
 *
 * @returns The number of hours
 *
 * @example
 * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
 * const result = differenceInHours(
 *   new Date(2014, 6, 2, 19, 0),
 *   new Date(2014, 6, 2, 6, 50)
 * )
 * //=> 12
 */
function differenceInHours(dateLeft, dateRight, options) {
  const diff =
    (0, _index3.differenceInMilliseconds)(dateLeft, dateRight) /
    _index2.millisecondsInHour;
  return (0, _index.getRoundingMethod)(options?.roundingMethod)(diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInISOWeekYears.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInISOWeekYears.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInISOWeekYears = differenceInISOWeekYears;
var _index = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeekYears.js");
var _index3 = __webpack_require__(/*! ./subISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subISOWeekYears.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of full ISO week-numbering years between the given dates.
 *
 * @description
 * Get the number of full ISO week-numbering years between the given dates.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of full ISO week-numbering years
 *
 * @example
 * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?
 * const result = differenceInISOWeekYears(
 *   new Date(2012, 0, 1),
 *   new Date(2010, 0, 1)
 * )
 * //=> 1
 */
function differenceInISOWeekYears(dateLeft, dateRight) {
  let _dateLeft = (0, _index4.toDate)(dateLeft);
  const _dateRight = (0, _index4.toDate)(dateRight);

  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);
  const difference = Math.abs(
    (0, _index2.differenceInCalendarISOWeekYears)(_dateLeft, _dateRight),
  );
  _dateLeft = (0, _index3.subISOWeekYears)(_dateLeft, sign * difference);

  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
  // if last calendar ISO year is not full
  // If so, result must be decreased by 1 in absolute value
  const isLastISOWeekYearNotFull = Number(
    (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign,
  );
  const result = sign * (difference - isLastISOWeekYearNotFull);
  // Prevent negative zero
  return result === 0 ? 0 : result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInMilliseconds = differenceInMilliseconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInMilliseconds
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of milliseconds
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * const result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */
function differenceInMilliseconds(dateLeft, dateRight) {
  return +(0, _index.toDate)(dateLeft) - +(0, _index.toDate)(dateRight);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMinutes.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMinutes.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInMinutes = differenceInMinutes;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index3 = __webpack_require__(/*! ./differenceInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js");

/**
 * The {@link differenceInMinutes} function options.
 */

/**
 * @name differenceInMinutes
 * @category Minute Helpers
 * @summary Get the number of minutes between the given dates.
 *
 * @description
 * Get the signed number of full (rounded towards 0) minutes between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options.
 *
 * @returns The number of minutes
 *
 * @example
 * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
 * const result = differenceInMinutes(
 *   new Date(2014, 6, 2, 12, 20, 0),
 *   new Date(2014, 6, 2, 12, 7, 59)
 * )
 * //=> 12
 *
 * @example
 * // How many minutes are between 10:01:59 and 10:00:00
 * const result = differenceInMinutes(
 *   new Date(2000, 0, 1, 10, 0, 0),
 *   new Date(2000, 0, 1, 10, 1, 59)
 * )
 * //=> -1
 */
function differenceInMinutes(dateLeft, dateRight, options) {
  const diff =
    (0, _index3.differenceInMilliseconds)(dateLeft, dateRight) /
    _index2.millisecondsInMinute;
  return (0, _index.getRoundingMethod)(options?.roundingMethod)(diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInMonths = differenceInMonths;
var _index = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js");
var _index3 = __webpack_require__(/*! ./isLastDayOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLastDayOfMonth.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInMonths
 * @category Month Helpers
 * @summary Get the number of full months between the given dates.
 *
 * @description
 * Get the number of full months between the given dates using trunc as a default rounding method.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of full months
 *
 * @example
 * // How many full months are between 31 January 2014 and 1 September 2014?
 * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
 * //=> 7
 */
function differenceInMonths(dateLeft, dateRight) {
  const _dateLeft = (0, _index4.toDate)(dateLeft);
  const _dateRight = (0, _index4.toDate)(dateRight);

  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);
  const difference = Math.abs(
    (0, _index2.differenceInCalendarMonths)(_dateLeft, _dateRight),
  );
  let result;

  // Check for the difference of less than month
  if (difference < 1) {
    result = 0;
  } else {
    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {
      // This will check if the date is end of Feb and assign a higher end of month date
      // to compare it with Jan
      _dateLeft.setDate(30);
    }

    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);

    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
    // If so, result must be decreased by 1 in absolute value
    let isLastMonthNotFull =
      (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign;

    // Check for cases of one full calendar month
    if (
      (0, _index3.isLastDayOfMonth)((0, _index4.toDate)(dateLeft)) &&
      difference === 1 &&
      (0, _index.compareAsc)(dateLeft, _dateRight) === 1
    ) {
      isLastMonthNotFull = false;
    }

    result = sign * (difference - Number(isLastMonthNotFull));
  }

  // Prevent negative zero
  return result === 0 ? 0 : result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInQuarters.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInQuarters.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInQuarters = differenceInQuarters;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./differenceInMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js");

/**
 * The {@link differenceInQuarters} function options.
 */

/**
 * @name differenceInQuarters
 * @category Quarter Helpers
 * @summary Get the number of quarters between the given dates.
 *
 * @description
 * Get the number of quarters between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options.
 *
 * @returns The number of full quarters
 *
 * @example
 * // How many full quarters are between 31 December 2013 and 2 July 2014?
 * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))
 * //=> 2
 */
function differenceInQuarters(dateLeft, dateRight, options) {
  const diff = (0, _index2.differenceInMonths)(dateLeft, dateRight) / 3;
  return (0, _index.getRoundingMethod)(options?.roundingMethod)(diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInSeconds = differenceInSeconds;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./differenceInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js");

/**
 * The {@link differenceInSeconds} function options.
 */

/**
 * @name differenceInSeconds
 * @category Second Helpers
 * @summary Get the number of seconds between the given dates.
 *
 * @description
 * Get the number of seconds between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options.
 *
 * @returns The number of seconds
 *
 * @example
 * // How many seconds are between
 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
 * const result = differenceInSeconds(
 *   new Date(2014, 6, 2, 12, 30, 20, 0),
 *   new Date(2014, 6, 2, 12, 30, 7, 999)
 * )
 * //=> 12
 */
function differenceInSeconds(dateLeft, dateRight, options) {
  const diff =
    (0, _index2.differenceInMilliseconds)(dateLeft, dateRight) / 1000;
  return (0, _index.getRoundingMethod)(options?.roundingMethod)(diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInWeeks.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInWeeks.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInWeeks = differenceInWeeks;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./differenceInDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInDays.js");

/**
 * The {@link differenceInWeeks} function options.
 */

/**
 * @name differenceInWeeks
 * @category Week Helpers
 * @summary Get the number of full weeks between the given dates.
 *
 * @description
 * Get the number of full weeks between two dates. Fractional weeks are
 * truncated towards zero by default.
 *
 * One "full week" is the distance between a local time in one day to the same
 * local time 7 days earlier or later. A full week can sometimes be less than
 * or more than 7*24 hours if a daylight savings change happens between two dates.
 *
 * To ignore DST and only measure exact 7*24-hour periods, use this instead:
 * `Math.trunc(differenceInHours(dateLeft, dateRight)/(7*24))|0`.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 * @param options - An object with options
 *
 * @returns The number of full weeks
 *
 * @example
 * // How many full weeks are between 5 July 2014 and 20 July 2014?
 * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))
 * //=> 2
 *
 * @example
 * // How many full weeks are between
 * // 1 March 2020 0:00 and 6 June 2020 0:00 ?
 * // Note: because local time is used, the
 * // result will always be 8 weeks (54 days),
 * // even if DST starts and the period has
 * // only 54*24-1 hours.
 * const result = differenceInWeeks(
 *   new Date(2020, 5, 1),
 *   new Date(2020, 2, 6)
 * )
 * //=> 8
 */
function differenceInWeeks(dateLeft, dateRight, options) {
  const diff = (0, _index2.differenceInDays)(dateLeft, dateRight) / 7;
  return (0, _index.getRoundingMethod)(options?.roundingMethod)(diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInYears.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInYears.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.differenceInYears = differenceInYears;
var _index = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name differenceInYears
 * @category Year Helpers
 * @summary Get the number of full years between the given dates.
 *
 * @description
 * Get the number of full years between the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The later date
 * @param dateRight - The earlier date
 *
 * @returns The number of full years
 *
 * @example
 * // How many full years are between 31 December 2013 and 11 February 2015?
 * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
 * //=> 1
 */
function differenceInYears(dateLeft, dateRight) {
  const _dateLeft = (0, _index3.toDate)(dateLeft);
  const _dateRight = (0, _index3.toDate)(dateRight);

  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);
  const difference = Math.abs(
    (0, _index2.differenceInCalendarYears)(_dateLeft, _dateRight),
  );

  // Set both dates to a valid leap year for accurate comparison when dealing
  // with leap days
  _dateLeft.setFullYear(1584);
  _dateRight.setFullYear(1584);

  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
  // If so, result must be decreased by 1 in absolute value
  const isLastYearNotFull =
    (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign;
  const result = sign * (difference - +isLastYearNotFull);

  // Prevent negative zero
  return result === 0 ? 0 : result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachDayOfInterval.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachDayOfInterval.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachDayOfInterval = eachDayOfInterval;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachDayOfInterval} function options.
 */

/**
 * @name eachDayOfInterval
 * @category Interval Helpers
 * @summary Return the array of dates within the specified time interval.
 *
 * @description
 * Return the array of dates within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval.
 * @param options - An object with options.
 *
 * @returns The array with starts of days from the day of the interval start to the day of the interval end
 *
 * @example
 * // Each day between 6 October 2014 and 10 October 2014:
 * const result = eachDayOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 9, 10)
 * })
 * //=> [
 * //   Mon Oct 06 2014 00:00:00,
 * //   Tue Oct 07 2014 00:00:00,
 * //   Wed Oct 08 2014 00:00:00,
 * //   Thu Oct 09 2014 00:00:00,
 * //   Fri Oct 10 2014 00:00:00
 * // ]
 */
function eachDayOfInterval(interval, options) {
  const startDate = (0, _index.toDate)(interval.start);
  const endDate = (0, _index.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed ? +startDate : +endDate;
  const currentDate = reversed ? endDate : startDate;
  currentDate.setHours(0, 0, 0, 0);

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index.toDate)(currentDate));
    currentDate.setDate(currentDate.getDate() + step);
    currentDate.setHours(0, 0, 0, 0);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachHourOfInterval.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachHourOfInterval.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachHourOfInterval = eachHourOfInterval;
var _index = __webpack_require__(/*! ./addHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachHourOfInterval} function options.
 */

/**
 * @name eachHourOfInterval
 * @category Interval Helpers
 * @summary Return the array of hours within the specified time interval.
 *
 * @description
 * Return the array of hours within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval.
 * @param options - An object with options.
 *
 * @returns The array with starts of hours from the hour of the interval start to the hour of the interval end
 *
 * @example
 * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00
 * const result = eachHourOfInterval({
 *   start: new Date(2014, 9, 6, 12),
 *   end: new Date(2014, 9, 6, 15)
 * })
 * //=> [
 * //   Mon Oct 06 2014 12:00:00,
 * //   Mon Oct 06 2014 13:00:00,
 * //   Mon Oct 06 2014 14:00:00,
 * //   Mon Oct 06 2014 15:00:00
 * // ]
 */
function eachHourOfInterval(interval, options) {
  const startDate = (0, _index2.toDate)(interval.start);
  const endDate = (0, _index2.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed ? +startDate : +endDate;
  let currentDate = reversed ? endDate : startDate;
  currentDate.setMinutes(0, 0, 0);

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index2.toDate)(currentDate));
    currentDate = (0, _index.addHours)(currentDate, step);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMinuteOfInterval.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMinuteOfInterval.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachMinuteOfInterval = eachMinuteOfInterval;
var _index = __webpack_require__(/*! ./addMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js");
var _index2 = __webpack_require__(/*! ./startOfMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMinute.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachMinuteOfInterval} function options.
 */

/**
 * @name eachMinuteOfInterval
 * @category Interval Helpers
 * @summary Return the array of minutes within the specified time interval.
 *
 * @description
 * Returns the array of minutes within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval.
 * @param options - An object with options.
 *
 * @returns The array with starts of minutes from the minute of the interval start to the minute of the interval end
 *
 * @example
 * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03
 * const result = eachMinuteOfInterval({
 *   start: new Date(2014, 9, 14, 13),
 *   end: new Date(2014, 9, 14, 13, 3)
 * })
 * //=> [
 * //   Wed Oct 14 2014 13:00:00,
 * //   Wed Oct 14 2014 13:01:00,
 * //   Wed Oct 14 2014 13:02:00,
 * //   Wed Oct 14 2014 13:03:00
 * // ]
 */
function eachMinuteOfInterval(interval, options) {
  const startDate = (0, _index2.startOfMinute)(
    (0, _index3.toDate)(interval.start),
  );
  const endDate = (0, _index3.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed ? +startDate : +endDate;
  let currentDate = reversed ? endDate : startDate;

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index3.toDate)(currentDate));
    currentDate = (0, _index.addMinutes)(currentDate, step);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMonthOfInterval.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMonthOfInterval.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachMonthOfInterval = eachMonthOfInterval;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachMonthOfInterval} function options.
 */

/**
 * @name eachMonthOfInterval
 * @category Interval Helpers
 * @summary Return the array of months within the specified time interval.
 *
 * @description
 * Return the array of months within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval
 *
 * @returns The array with starts of months from the month of the interval start to the month of the interval end
 *
 * @example
 * // Each month between 6 February 2014 and 10 August 2014:
 * const result = eachMonthOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2014, 7, 10)
 * })
 * //=> [
 * //   Sat Feb 01 2014 00:00:00,
 * //   Sat Mar 01 2014 00:00:00,
 * //   Tue Apr 01 2014 00:00:00,
 * //   Thu May 01 2014 00:00:00,
 * //   Sun Jun 01 2014 00:00:00,
 * //   Tue Jul 01 2014 00:00:00,
 * //   Fri Aug 01 2014 00:00:00
 * // ]
 */
function eachMonthOfInterval(interval, options) {
  const startDate = (0, _index.toDate)(interval.start);
  const endDate = (0, _index.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed ? +startDate : +endDate;
  const currentDate = reversed ? endDate : startDate;
  currentDate.setHours(0, 0, 0, 0);
  currentDate.setDate(1);

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index.toDate)(currentDate));
    currentDate.setMonth(currentDate.getMonth() + step);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachQuarterOfInterval.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachQuarterOfInterval.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachQuarterOfInterval = eachQuarterOfInterval;
var _index = __webpack_require__(/*! ./addQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js");
var _index2 = __webpack_require__(/*! ./startOfQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachQuarterOfInterval} function options.
 */

/**
 * @name eachQuarterOfInterval
 * @category Interval Helpers
 * @summary Return the array of quarters within the specified time interval.
 *
 * @description
 * Return the array of quarters within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval
 *
 * @returns The array with starts of quarters from the quarter of the interval start to the quarter of the interval end
 *
 * @example
 * // Each quarter within interval 6 February 2014 - 10 August 2014:
 * const result = eachQuarterOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2014, 7, 10)
 * })
 * //=> [
 * //   Wed Jan 01 2014 00:00:00,
 * //   Tue Apr 01 2014 00:00:00,
 * //   Tue Jul 01 2014 00:00:00,
 * // ]
 */
function eachQuarterOfInterval(interval, options) {
  const startDate = (0, _index3.toDate)(interval.start);
  const endDate = (0, _index3.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed
    ? +(0, _index2.startOfQuarter)(startDate)
    : +(0, _index2.startOfQuarter)(endDate);
  let currentDate = reversed
    ? (0, _index2.startOfQuarter)(endDate)
    : (0, _index2.startOfQuarter)(startDate);

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index3.toDate)(currentDate));
    currentDate = (0, _index.addQuarters)(currentDate, step);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekOfInterval.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekOfInterval.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachWeekOfInterval = eachWeekOfInterval;
var _index = __webpack_require__(/*! ./addWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js");
var _index2 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachWeekOfInterval} function options.
 */

/**
 * @name eachWeekOfInterval
 * @category Interval Helpers
 * @summary Return the array of weeks within the specified time interval.
 *
 * @description
 * Return the array of weeks within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval.
 * @param options - An object with options.
 *
 * @returns The array with starts of weeks from the week of the interval start to the week of the interval end
 *
 * @example
 * // Each week within interval 6 October 2014 - 23 November 2014:
 * const result = eachWeekOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 10, 23)
 * })
 * //=> [
 * //   Sun Oct 05 2014 00:00:00,
 * //   Sun Oct 12 2014 00:00:00,
 * //   Sun Oct 19 2014 00:00:00,
 * //   Sun Oct 26 2014 00:00:00,
 * //   Sun Nov 02 2014 00:00:00,
 * //   Sun Nov 09 2014 00:00:00,
 * //   Sun Nov 16 2014 00:00:00,
 * //   Sun Nov 23 2014 00:00:00
 * // ]
 */
function eachWeekOfInterval(interval, options) {
  const startDate = (0, _index3.toDate)(interval.start);
  const endDate = (0, _index3.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const startDateWeek = reversed
    ? (0, _index2.startOfWeek)(endDate, options)
    : (0, _index2.startOfWeek)(startDate, options);
  const endDateWeek = reversed
    ? (0, _index2.startOfWeek)(startDate, options)
    : (0, _index2.startOfWeek)(endDate, options);

  // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet
  startDateWeek.setHours(15);
  endDateWeek.setHours(15);

  const endTime = +endDateWeek.getTime();
  let currentDate = startDateWeek;

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    currentDate.setHours(0);
    dates.push((0, _index3.toDate)(currentDate));
    currentDate = (0, _index.addWeeks)(currentDate, step);
    currentDate.setHours(15);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfInterval.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfInterval.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachWeekendOfInterval = eachWeekendOfInterval;
var _index = __webpack_require__(/*! ./eachDayOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachDayOfInterval.js");
var _index2 = __webpack_require__(/*! ./isWeekend.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js");

/**
 * @name eachWeekendOfInterval
 * @category Interval Helpers
 * @summary List all the Saturdays and Sundays in the given date interval.
 *
 * @description
 * Get all the Saturdays and Sundays in the given date interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The given interval
 *
 * @returns An array containing all the Saturdays and Sundays
 *
 * @example
 * // Lists all Saturdays and Sundays in the given date interval
 * const result = eachWeekendOfInterval({
 *   start: new Date(2018, 8, 17),
 *   end: new Date(2018, 8, 30)
 * })
 * //=> [
 * //   Sat Sep 22 2018 00:00:00,
 * //   Sun Sep 23 2018 00:00:00,
 * //   Sat Sep 29 2018 00:00:00,
 * //   Sun Sep 30 2018 00:00:00
 * // ]
 */
function eachWeekendOfInterval(interval) {
  const dateInterval = (0, _index.eachDayOfInterval)(interval);
  const weekends = [];
  let index = 0;
  while (index < dateInterval.length) {
    const date = dateInterval[index++];
    if ((0, _index2.isWeekend)(date)) weekends.push(date);
  }
  return weekends;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfMonth.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfMonth.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachWeekendOfMonth = eachWeekendOfMonth;
var _index = __webpack_require__(/*! ./eachWeekendOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfInterval.js");
var _index2 = __webpack_require__(/*! ./endOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js");
var _index3 = __webpack_require__(/*! ./startOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js");

/**
 * @name eachWeekendOfMonth
 * @category Month Helpers
 * @summary List all the Saturdays and Sundays in the given month.
 *
 * @description
 * Get all the Saturdays and Sundays in the given month.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given month
 *
 * @returns An array containing all the Saturdays and Sundays
 *
 * @example
 * // Lists all Saturdays and Sundays in the given month
 * const result = eachWeekendOfMonth(new Date(2022, 1, 1))
 * //=> [
 * //   Sat Feb 05 2022 00:00:00,
 * //   Sun Feb 06 2022 00:00:00,
 * //   Sat Feb 12 2022 00:00:00,
 * //   Sun Feb 13 2022 00:00:00,
 * //   Sat Feb 19 2022 00:00:00,
 * //   Sun Feb 20 2022 00:00:00,
 * //   Sat Feb 26 2022 00:00:00,
 * //   Sun Feb 27 2022 00:00:00
 * // ]
 */
function eachWeekendOfMonth(date) {
  const start = (0, _index3.startOfMonth)(date);
  const end = (0, _index2.endOfMonth)(date);
  return (0, _index.eachWeekendOfInterval)({ start, end });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfYear.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfYear.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachWeekendOfYear = eachWeekendOfYear;
var _index = __webpack_require__(/*! ./eachWeekendOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfInterval.js");
var _index2 = __webpack_require__(/*! ./endOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYear.js");
var _index3 = __webpack_require__(/*! ./startOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js");

/**
 * @name eachWeekendOfYear
 * @category Year Helpers
 * @summary List all the Saturdays and Sundays in the year.
 *
 * @description
 * Get all the Saturdays and Sundays in the year.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given year
 *
 * @returns An array containing all the Saturdays and Sundays
 *
 * @example
 * // Lists all Saturdays and Sundays in the year
 * const result = eachWeekendOfYear(new Date(2020, 1, 1))
 * //=> [
 * //   Sat Jan 03 2020 00:00:00,
 * //   Sun Jan 04 2020 00:00:00,
 * //   ...
 * //   Sun Dec 27 2020 00:00:00
 * // ]
 * ]
 */
function eachWeekendOfYear(date) {
  const start = (0, _index3.startOfYear)(date);
  const end = (0, _index2.endOfYear)(date);
  return (0, _index.eachWeekendOfInterval)({ start, end });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachYearOfInterval.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachYearOfInterval.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.eachYearOfInterval = eachYearOfInterval;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link eachYearOfInterval} function options.
 */

/**
 * @name eachYearOfInterval
 * @category Interval Helpers
 * @summary Return the array of yearly timestamps within the specified time interval.
 *
 * @description
 * Return the array of yearly timestamps within the specified time interval.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval.
 *
 * @returns The array with starts of yearly timestamps from the month of the interval start to the month of the interval end
 *
 * @example
 * // Each year between 6 February 2014 and 10 August 2017:
 * const result = eachYearOfInterval({
 *   start: new Date(2014, 1, 6),
 *   end: new Date(2017, 7, 10)
 * })
 * //=> [
 * //   Wed Jan 01 2014 00:00:00,
 * //   Thu Jan 01 2015 00:00:00,
 * //   Fri Jan 01 2016 00:00:00,
 * //   Sun Jan 01 2017 00:00:00
 * // ]
 */
function eachYearOfInterval(interval, options) {
  const startDate = (0, _index.toDate)(interval.start);
  const endDate = (0, _index.toDate)(interval.end);

  let reversed = +startDate > +endDate;
  const endTime = reversed ? +startDate : +endDate;
  const currentDate = reversed ? endDate : startDate;
  currentDate.setHours(0, 0, 0, 0);
  currentDate.setMonth(0, 1);

  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }

  const dates = [];

  while (+currentDate <= endTime) {
    dates.push((0, _index.toDate)(currentDate));
    currentDate.setFullYear(currentDate.getFullYear() + step);
  }

  return reversed ? dates.reverse() : dates;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfDay = endOfDay;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfDay
 * @category Day Helpers
 * @summary Return the end of a day for the given date.
 *
 * @description
 * Return the end of a day for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a day
 *
 * @example
 * // The end of a day for 2 September 2014 11:55:00:
 * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 23:59:59.999
 */
function endOfDay(date) {
  const _date = (0, _index.toDate)(date);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDecade.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDecade.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfDecade = endOfDecade;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfDecade
 * @category Decade Helpers
 * @summary Return the end of a decade for the given date.
 *
 * @description
 * Return the end of a decade for the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a decade
 *
 * @example
 * // The end of a decade for 12 May 1984 00:00:00:
 * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))
 * //=> Dec 31 1989 23:59:59.999
 */
function endOfDecade(date) {
  // TODO: Switch to more technical definition in of decades that start with 1
  // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking
  // change, so it can only be done in 4.0.
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  const decade = 9 + Math.floor(year / 10) * 10;
  _date.setFullYear(decade, 11, 31);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfHour.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfHour.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfHour = endOfHour;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfHour
 * @category Hour Helpers
 * @summary Return the end of an hour for the given date.
 *
 * @description
 * Return the end of an hour for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of an hour
 *
 * @example
 * // The end of an hour for 2 September 2014 11:55:00:
 * const result = endOfHour(new Date(2014, 8, 2, 11, 55))
 * //=> Tue Sep 02 2014 11:59:59.999
 */
function endOfHour(date) {
  const _date = (0, _index.toDate)(date);
  _date.setMinutes(59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeek.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeek.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfISOWeek = endOfISOWeek;
var _index = __webpack_require__(/*! ./endOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfWeek.js");

/**
 * @name endOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the end of an ISO week for the given date.
 *
 * @description
 * Return the end of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of an ISO week
 *
 * @example
 * // The end of an ISO week for 2 September 2014 11:55:00:
 * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Sep 07 2014 23:59:59.999
 */
function endOfISOWeek(date) {
  return (0, _index.endOfWeek)(date, { weekStartsOn: 1 });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeekYear.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeekYear.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfISOWeekYear = endOfISOWeekYear;
var _index = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name endOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the end of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the end of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of an ISO week-numbering year
 *
 * @example
 * // The end of an ISO week-numbering year for 2 July 2005:
 * const result = endOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Sun Jan 01 2006 23:59:59.999
 */
function endOfISOWeekYear(date) {
  const year = (0, _index.getISOWeekYear)(date);
  const fourthOfJanuaryOfNextYear = (0, _index3.constructFrom)(date, 0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuaryOfNextYear);
  _date.setMilliseconds(_date.getMilliseconds() - 1);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMinute.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMinute.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfMinute = endOfMinute;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfMinute
 * @category Minute Helpers
 * @summary Return the end of a minute for the given date.
 *
 * @description
 * Return the end of a minute for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a minute
 *
 * @example
 * // The end of a minute for 1 December 2014 22:15:45.400:
 * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:59.999
 */
function endOfMinute(date) {
  const _date = (0, _index.toDate)(date);
  _date.setSeconds(59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfMonth = endOfMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfMonth
 * @category Month Helpers
 * @summary Return the end of a month for the given date.
 *
 * @description
 * Return the end of a month for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a month
 *
 * @example
 * // The end of a month for 2 September 2014 11:55:00:
 * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */
function endOfMonth(date) {
  const _date = (0, _index.toDate)(date);
  const month = _date.getMonth();
  _date.setFullYear(_date.getFullYear(), month + 1, 0);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfQuarter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfQuarter.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfQuarter = endOfQuarter;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfQuarter
 * @category Quarter Helpers
 * @summary Return the end of a year quarter for the given date.
 *
 * @description
 * Return the end of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a quarter
 *
 * @example
 * // The end of a quarter for 2 September 2014 11:55:00:
 * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 23:59:59.999
 */
function endOfQuarter(date) {
  const _date = (0, _index.toDate)(date);
  const currentMonth = _date.getMonth();
  const month = currentMonth - (currentMonth % 3) + 3;
  _date.setMonth(month, 0);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfSecond.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfSecond.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfSecond = endOfSecond;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfSecond
 * @category Second Helpers
 * @summary Return the end of a second for the given date.
 *
 * @description
 * Return the end of a second for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a second
 *
 * @example
 * // The end of a second for 1 December 2014 22:15:45.400:
 * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:45.999
 */
function endOfSecond(date) {
  const _date = (0, _index.toDate)(date);
  _date.setMilliseconds(999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfToday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfToday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfToday = endOfToday;
var _index = __webpack_require__(/*! ./endOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js");

/**
 * @name endOfToday
 * @category Day Helpers
 * @summary Return the end of today.
 * @pure false
 *
 * @description
 * Return the end of today.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @returns The end of today
 *
 * @example
 * // If today is 6 October 2014:
 * const result = endOfToday()
 * //=> Mon Oct 6 2014 23:59:59.999
 */
function endOfToday() {
  return (0, _index.endOfDay)(Date.now());
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfTomorrow.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfTomorrow.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.endOfTomorrow = endOfTomorrow; /**
 * @name endOfTomorrow
 * @category Day Helpers
 * @summary Return the end of tomorrow.
 * @pure false
 *
 * @description
 * Return the end of tomorrow.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @returns The end of tomorrow
 *
 * @example
 * // If today is 6 October 2014:
 * const result = endOfTomorrow()
 * //=> Tue Oct 7 2014 23:59:59.999
 */
function endOfTomorrow() {
  const now = new Date();
  const year = now.getFullYear();
  const month = now.getMonth();
  const day = now.getDate();

  const date = new Date(0);
  date.setFullYear(year, month, day + 1);
  date.setHours(23, 59, 59, 999);
  return date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfWeek.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfWeek.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfWeek = endOfWeek;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link endOfWeek} function options.
 */

/**
 * @name endOfWeek
 * @category Week Helpers
 * @summary Return the end of a week for the given date.
 *
 * @description
 * Return the end of a week for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The end of a week
 *
 * @example
 * // The end of a week for 2 September 2014 11:55:00:
 * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 23:59:59.999
 *
 * @example
 * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
 * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 23:59:59.999
 */
function endOfWeek(date, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const _date = (0, _index.toDate)(date);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);

  _date.setDate(_date.getDate() + diff);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYear.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYear.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.endOfYear = endOfYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name endOfYear
 * @category Year Helpers
 * @summary Return the end of a year for the given date.
 *
 * @description
 * Return the end of a year for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of a year
 *
 * @example
 * // The end of a year for 2 September 2014 11:55:00:
 * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 23:59:59.999
 */
function endOfYear(date) {
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  _date.setFullYear(year + 1, 0, 0);
  _date.setHours(23, 59, 59, 999);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYesterday.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYesterday.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.endOfYesterday = endOfYesterday; /**
 * @name endOfYesterday
 * @category Day Helpers
 * @summary Return the end of yesterday.
 * @pure false
 *
 * @description
 * Return the end of yesterday.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @returns The end of yesterday
 *
 * @example
 * // If today is 6 October 2014:
 * const result = endOfYesterday()
 * //=> Sun Oct 5 2014 23:59:59.999
 */
function endOfYesterday() {
  const now = new Date();
  const year = now.getFullYear();
  const month = now.getMonth();
  const day = now.getDate();

  const date = new Date(0);
  date.setFullYear(year, month, day - 1);
  date.setHours(23, 59, 59, 999);
  return date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/format.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/format.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.format = exports.formatDate = format;
Object.defineProperty(exports, "formatters", ({
  enumerable: true,
  get: function () {
    return _index3.formatters;
  },
}));
Object.defineProperty(exports, "longFormatters", ({
  enumerable: true,
  get: function () {
    return _index4.longFormatters;
  },
}));
var _index = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");
var _index3 = __webpack_require__(/*! ./_lib/format/formatters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/formatters.js");
var _index4 = __webpack_require__(/*! ./_lib/format/longFormatters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/longFormatters.js");
var _index5 = __webpack_require__(/*! ./_lib/protectedTokens.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/protectedTokens.js");

var _index6 = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index7 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

// Rexports of internal for libraries to use.
// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874

// This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
const formattingTokensRegExp =
  /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
const longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;

const escapedStringRegExp = /^'([^]*?)'?$/;
const doubleQuoteRegExp = /''/g;
const unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * The {@link format} function options.
 */

/**
 * @name format
 * @alias formatDate
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)
 *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param format - The string of tokens
 * @param options - An object with options
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 * @throws `options.locale` must contain `localize` property
 * @throws `options.locale` must contain `formatLong` property
 * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */
function format(date, formatStr, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index.defaultLocale;

  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const originalDate = (0, _index7.toDate)(date);

  if (!(0, _index6.isValid)(originalDate)) {
    throw new RangeError("Invalid time value");
  }

  let parts = formatStr
    .match(longFormattingTokensRegExp)
    .map((substring) => {
      const firstCharacter = substring[0];
      if (firstCharacter === "p" || firstCharacter === "P") {
        const longFormatter = _index4.longFormatters[firstCharacter];
        return longFormatter(substring, locale.formatLong);
      }
      return substring;
    })
    .join("")
    .match(formattingTokensRegExp)
    .map((substring) => {
      // Replace two single quote characters with one single quote character
      if (substring === "''") {
        return { isToken: false, value: "'" };
      }

      const firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return { isToken: false, value: cleanEscapedString(substring) };
      }

      if (_index3.formatters[firstCharacter]) {
        return { isToken: true, value: substring };
      }

      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            firstCharacter +
            "`",
        );
      }

      return { isToken: false, value: substring };
    });

  // invoke localize preprocessor (only for french locales at the moment)
  if (locale.localize.preprocessor) {
    parts = locale.localize.preprocessor(originalDate, parts);
  }

  const formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale,
  };

  return parts
    .map((part) => {
      if (!part.isToken) return part.value;

      const token = part.value;

      if (
        (!options?.useAdditionalWeekYearTokens &&
          (0, _index5.isProtectedWeekYearToken)(token)) ||
        (!options?.useAdditionalDayOfYearTokens &&
          (0, _index5.isProtectedDayOfYearToken)(token))
      ) {
        (0, _index5.warnOrThrowProtectedError)(token, formatStr, String(date));
      }

      const formatter = _index3.formatters[token[0]];
      return formatter(originalDate, token, locale.localize, formatterOptions);
    })
    .join("");
}

function cleanEscapedString(input) {
  const matched = input.match(escapedStringRegExp);

  if (!matched) {
    return input;
  }

  return matched[1].replace(doubleQuoteRegExp, "'");
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistance.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistance.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatDistance = formatDistance;
var _index = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index3 = __webpack_require__(/*! ./differenceInMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js");
var _index4 = __webpack_require__(/*! ./differenceInSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js");
var _index5 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index6 = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index7 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");
var _index8 = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");

/**
 * The {@link formatDistance} function options.
 */

/**
 * @name formatDistance
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words.
 *
 * | Distance between dates                                            | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance between dates | Result               |
 * |------------------------|----------------------|
 * | 0 secs ... 5 secs      | less than 5 seconds  |
 * | 5 secs ... 10 secs     | less than 10 seconds |
 * | 10 secs ... 20 secs    | less than 20 seconds |
 * | 20 secs ... 40 secs    | half a minute        |
 * | 40 secs ... 60 secs    | less than a minute   |
 * | 60 secs ... 90 secs    | 1 minute             |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date
 * @param baseDate - The date to compare with
 * @param options - An object with options
 *
 * @returns The distance in words
 *
 * @throws `date` must not be Invalid Date
 * @throws `baseDate` must not be Invalid Date
 * @throws `options.locale` must contain `formatDistance` property
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00, including seconds?
 * const result = formatDistance(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0),
 *   { includeSeconds: true }
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
 *   addSuffix: true
 * })
 * //=> 'about 1 year ago'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
 *   locale: eoLocale
 * })
 * //=> 'pli ol 1 jaro'
 */

function formatDistance(date, baseDate, options) {
  const defaultOptions = (0, _index7.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index6.defaultLocale;
  const minutesInAlmostTwoDays = 2520;

  const comparison = (0, _index.compareAsc)(date, baseDate);

  if (isNaN(comparison)) {
    throw new RangeError("Invalid time value");
  }

  const localizeOptions = Object.assign({}, options, {
    addSuffix: options?.addSuffix,
    comparison: comparison,
  });

  let dateLeft;
  let dateRight;
  if (comparison > 0) {
    dateLeft = (0, _index5.toDate)(baseDate);
    dateRight = (0, _index5.toDate)(date);
  } else {
    dateLeft = (0, _index5.toDate)(date);
    dateRight = (0, _index5.toDate)(baseDate);
  }

  const seconds = (0, _index4.differenceInSeconds)(dateRight, dateLeft);
  const offsetInSeconds =
    ((0, _index8.getTimezoneOffsetInMilliseconds)(dateRight) -
      (0, _index8.getTimezoneOffsetInMilliseconds)(dateLeft)) /
    1000;
  const minutes = Math.round((seconds - offsetInSeconds) / 60);
  let months;

  // 0 up to 2 mins
  if (minutes < 2) {
    if (options?.includeSeconds) {
      if (seconds < 5) {
        return locale.formatDistance("lessThanXSeconds", 5, localizeOptions);
      } else if (seconds < 10) {
        return locale.formatDistance("lessThanXSeconds", 10, localizeOptions);
      } else if (seconds < 20) {
        return locale.formatDistance("lessThanXSeconds", 20, localizeOptions);
      } else if (seconds < 40) {
        return locale.formatDistance("halfAMinute", 0, localizeOptions);
      } else if (seconds < 60) {
        return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale.formatDistance("xMinutes", 1, localizeOptions);
      }
    } else {
      if (minutes === 0) {
        return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
      } else {
        return locale.formatDistance("xMinutes", minutes, localizeOptions);
      }
    }

    // 2 mins up to 0.75 hrs
  } else if (minutes < 45) {
    return locale.formatDistance("xMinutes", minutes, localizeOptions);

    // 0.75 hrs up to 1.5 hrs
  } else if (minutes < 90) {
    return locale.formatDistance("aboutXHours", 1, localizeOptions);

    // 1.5 hrs up to 24 hrs
  } else if (minutes < _index2.minutesInDay) {
    const hours = Math.round(minutes / 60);
    return locale.formatDistance("aboutXHours", hours, localizeOptions);

    // 1 day up to 1.75 days
  } else if (minutes < minutesInAlmostTwoDays) {
    return locale.formatDistance("xDays", 1, localizeOptions);

    // 1.75 days up to 30 days
  } else if (minutes < _index2.minutesInMonth) {
    const days = Math.round(minutes / _index2.minutesInDay);
    return locale.formatDistance("xDays", days, localizeOptions);

    // 1 month up to 2 months
  } else if (minutes < _index2.minutesInMonth * 2) {
    months = Math.round(minutes / _index2.minutesInMonth);
    return locale.formatDistance("aboutXMonths", months, localizeOptions);
  }

  months = (0, _index3.differenceInMonths)(dateRight, dateLeft);

  // 2 months up to 12 months
  if (months < 12) {
    const nearestMonth = Math.round(minutes / _index2.minutesInMonth);
    return locale.formatDistance("xMonths", nearestMonth, localizeOptions);

    // 1 year up to max Date
  } else {
    const monthsSinceStartOfYear = months % 12;
    const years = Math.trunc(months / 12);

    // N years up to 1 years 3 months
    if (monthsSinceStartOfYear < 3) {
      return locale.formatDistance("aboutXYears", years, localizeOptions);

      // N years 3 months up to N years 9 months
    } else if (monthsSinceStartOfYear < 9) {
      return locale.formatDistance("overXYears", years, localizeOptions);

      // N years 9 months up to N year 12 months
    } else {
      return locale.formatDistance("almostXYears", years + 1, localizeOptions);
    }
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceStrict.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceStrict.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatDistanceStrict = formatDistanceStrict;
var _index = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");
var _index3 = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index4 = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");
var _index5 = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
var _index6 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

var _index7 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link formatDistanceStrict} function options.
 */

/**
 * The unit used to format the distance in {@link formatDistanceStrict}.
 */

/**
 * @name formatDistanceStrict
 * @category Common Helpers
 * @summary Return the distance between the given dates in words.
 *
 * @description
 * Return the distance between the given dates in words, using strict units.
 * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
 * 'less than' and the like.
 *
 * | Distance between dates | Result              |
 * |------------------------|---------------------|
 * | 0 ... 59 secs          | [0..59] seconds     |
 * | 1 ... 59 mins          | [1..59] minutes     |
 * | 1 ... 23 hrs           | [1..23] hours       |
 * | 1 ... 29 days          | [1..29] days        |
 * | 1 ... 11 months        | [1..11] months      |
 * | 1 ... N years          | [1..N]  years       |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date
 * @param baseDate - The date to compare with
 * @param options - An object with options
 *
 * @returns The distance in words
 *
 * @throws `date` must not be Invalid Date
 * @throws `baseDate` must not be Invalid Date
 * @throws `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'
 * @throws `options.locale` must contain `formatDistance` property
 *
 * @example
 * // What is the distance between 2 July 2014 and 1 January 2015?
 * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))
 * //=> '6 months'
 *
 * @example
 * // What is the distance between 1 January 2015 00:00:15
 * // and 1 January 2015 00:00:00?
 * const result = formatDistanceStrict(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   new Date(2015, 0, 1, 0, 0, 0)
 * )
 * //=> '15 seconds'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, with a suffix?
 * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {
 *   addSuffix: true
 * })
 * //=> '1 year ago'
 *
 * @example
 * // What is the distance from 1 January 2016
 * // to 1 January 2015, in minutes?
 * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {
 *   unit: 'minute'
 * })
 * //=> '525600 minutes'
 *
 * @example
 * // What is the distance from 1 January 2015
 * // to 28 January 2015, in months, rounded up?
 * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {
 *   unit: 'month',
 *   roundingMethod: 'ceil'
 * })
 * //=> '1 month'
 *
 * @example
 * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {
 *   locale: eoLocale
 * })
 * //=> '1 jaro'
 */

function formatDistanceStrict(date, baseDate, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index.defaultLocale;

  const comparison = (0, _index5.compareAsc)(date, baseDate);

  if (isNaN(comparison)) {
    throw new RangeError("Invalid time value");
  }

  const localizeOptions = Object.assign({}, options, {
    addSuffix: options?.addSuffix,
    comparison: comparison,
  });

  let dateLeft;
  let dateRight;
  if (comparison > 0) {
    dateLeft = (0, _index7.toDate)(baseDate);
    dateRight = (0, _index7.toDate)(date);
  } else {
    dateLeft = (0, _index7.toDate)(date);
    dateRight = (0, _index7.toDate)(baseDate);
  }

  const roundingMethod = (0, _index3.getRoundingMethod)(
    options?.roundingMethod ?? "round",
  );

  const milliseconds = dateRight.getTime() - dateLeft.getTime();
  const minutes = milliseconds / _index6.millisecondsInMinute;

  const timezoneOffset =
    (0, _index4.getTimezoneOffsetInMilliseconds)(dateRight) -
    (0, _index4.getTimezoneOffsetInMilliseconds)(dateLeft);

  // Use DST-normalized difference in minutes for years, months and days;
  // use regular difference in minutes for hours, minutes and seconds.
  const dstNormalizedMinutes =
    (milliseconds - timezoneOffset) / _index6.millisecondsInMinute;

  const defaultUnit = options?.unit;
  let unit;
  if (!defaultUnit) {
    if (minutes < 1) {
      unit = "second";
    } else if (minutes < 60) {
      unit = "minute";
    } else if (minutes < _index6.minutesInDay) {
      unit = "hour";
    } else if (dstNormalizedMinutes < _index6.minutesInMonth) {
      unit = "day";
    } else if (dstNormalizedMinutes < _index6.minutesInYear) {
      unit = "month";
    } else {
      unit = "year";
    }
  } else {
    unit = defaultUnit;
  }

  // 0 up to 60 seconds
  if (unit === "second") {
    const seconds = roundingMethod(milliseconds / 1000);
    return locale.formatDistance("xSeconds", seconds, localizeOptions);

    // 1 up to 60 mins
  } else if (unit === "minute") {
    const roundedMinutes = roundingMethod(minutes);
    return locale.formatDistance("xMinutes", roundedMinutes, localizeOptions);

    // 1 up to 24 hours
  } else if (unit === "hour") {
    const hours = roundingMethod(minutes / 60);
    return locale.formatDistance("xHours", hours, localizeOptions);

    // 1 up to 30 days
  } else if (unit === "day") {
    const days = roundingMethod(dstNormalizedMinutes / _index6.minutesInDay);
    return locale.formatDistance("xDays", days, localizeOptions);

    // 1 up to 12 months
  } else if (unit === "month") {
    const months = roundingMethod(
      dstNormalizedMinutes / _index6.minutesInMonth,
    );
    return months === 12 && defaultUnit !== "month"
      ? locale.formatDistance("xYears", 1, localizeOptions)
      : locale.formatDistance("xMonths", months, localizeOptions);

    // 1 year up to max Date
  } else {
    const years = roundingMethod(dstNormalizedMinutes / _index6.minutesInYear);
    return locale.formatDistance("xYears", years, localizeOptions);
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNow.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNow.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatDistanceToNow = formatDistanceToNow;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");

var _index2 = __webpack_require__(/*! ./formatDistance.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistance.js");

/**
 * The {@link formatDistanceToNow} function options.
 */

/**
 * @name formatDistanceToNow
 * @category Common Helpers
 * @summary Return the distance between the given date and now in words.
 * @pure false
 *
 * @description
 * Return the distance between the given date and now in words.
 *
 * | Distance to now                                                   | Result              |
 * |-------------------------------------------------------------------|---------------------|
 * | 0 ... 30 secs                                                     | less than a minute  |
 * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
 * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
 * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
 * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
 * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
 * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
 * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
 * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
 * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
 * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
 * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
 * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
 * | N yrs ... N yrs 3 months                                          | about N years       |
 * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
 * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
 *
 * With `options.includeSeconds == true`:
 * | Distance to now     | Result               |
 * |---------------------|----------------------|
 * | 0 secs ... 5 secs   | less than 5 seconds  |
 * | 5 secs ... 10 secs  | less than 10 seconds |
 * | 10 secs ... 20 secs | less than 20 seconds |
 * | 20 secs ... 40 secs | half a minute        |
 * | 40 secs ... 60 secs | less than a minute   |
 * | 60 secs ... 90 secs | 1 minute             |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - The object with options
 *
 * @returns The distance in words
 *
 * @throws `date` must not be Invalid Date
 * @throws `options.locale` must contain `formatDistance` property
 *
 * @example
 * // If today is 1 January 2015, what is the distance to 2 July 2014?
 * const result = formatDistanceToNow(
 *   new Date(2014, 6, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // If now is 1 January 2015 00:00:00,
 * // what is the distance to 1 January 2015 00:00:15, including seconds?
 * const result = formatDistanceToNow(
 *   new Date(2015, 0, 1, 0, 0, 15),
 *   {includeSeconds: true}
 * )
 * //=> 'less than 20 seconds'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016, with a suffix?
 * const result = formatDistanceToNow(
 *   new Date(2016, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'in about 1 year'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 August 2016 in Esperanto?
 * const eoLocale = require('date-fns/locale/eo')
 * const result = formatDistanceToNow(
 *   new Date(2016, 7, 1),
 *   {locale: eoLocale}
 * )
 * //=> 'pli ol 1 jaro'
 */
function formatDistanceToNow(date, options) {
  return (0, _index2.formatDistance)(
    date,
    (0, _index.constructNow)(date),
    options,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNowStrict.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNowStrict.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatDistanceToNowStrict = formatDistanceToNowStrict;
var _index = __webpack_require__(/*! ./formatDistanceStrict.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceStrict.js");
var _index2 = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");

/**
 * The {@link formatDistanceToNowStrict} function options.
 */

/**
 * @name formatDistanceToNowStrict
 * @category Common Helpers
 * @summary Return the distance between the given date and now in words.
 * @pure false
 *
 * @description
 * Return the distance between the given dates in words, using strict units.
 * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
 * 'less than' and the like.
 *
 * | Distance between dates | Result              |
 * |------------------------|---------------------|
 * | 0 ... 59 secs          | [0..59] seconds     |
 * | 1 ... 59 mins          | [1..59] minutes     |
 * | 1 ... 23 hrs           | [1..23] hours       |
 * | 1 ... 29 days          | [1..29] days        |
 * | 1 ... 11 months        | [1..11] months      |
 * | 1 ... N years          | [1..N]  years       |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options.
 *
 * @returns The distance in words
 *
 * @throws `date` must not be Invalid Date
 * @throws `options.locale` must contain `formatDistance` property
 *
 * @example
 * // If today is 1 January 2015, what is the distance to 2 July 2014?
 * const result = formatDistanceToNowStrict(
 *   new Date(2014, 6, 2)
 * )
 * //=> '6 months'
 *
 * @example
 * // If now is 1 January 2015 00:00:00,
 * // what is the distance to 1 January 2015 00:00:15, including seconds?
 * const result = formatDistanceToNowStrict(
 *   new Date(2015, 0, 1, 0, 0, 15)
 * )
 * //=> '15 seconds'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016, with a suffix?
 * const result = formatDistanceToNowStrict(
 *   new Date(2016, 0, 1),
 *   {addSuffix: true}
 * )
 * //=> 'in 1 year'
 *
 * @example
 * // If today is 28 January 2015,
 * // what is the distance to 1 January 2015, in months, rounded up??
 * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {
 *   unit: 'month',
 *   roundingMethod: 'ceil'
 * })
 * //=> '1 month'
 *
 * @example
 * // If today is 1 January 2015,
 * // what is the distance to 1 January 2016 in Esperanto?
 * const eoLocale = require('date-fns/locale/eo')
 * const result = formatDistanceToNowStrict(
 *   new Date(2016, 0, 1),
 *   {locale: eoLocale}
 * )
 * //=> '1 jaro'
 */
function formatDistanceToNowStrict(date, options) {
  return (0, _index.formatDistanceStrict)(
    date,
    (0, _index2.constructNow)(date),
    options,
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDuration.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDuration.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatDuration = formatDuration;

var _index = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link formatDuration} function options.
 */

const defaultFormat = [
  "years",
  "months",
  "weeks",
  "days",
  "hours",
  "minutes",
  "seconds",
];

/**
 * @name formatDuration
 * @category Common Helpers
 * @summary Formats a duration in human-readable format
 *
 * @description
 * Return human-readable duration string i.e. "9 months 2 days"
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param duration - The duration to format
 * @param options - An object with options.
 *
 * @returns The formatted date string
 *
 * @example
 * // Format full duration
 * formatDuration({
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds'
 *
 * @example
 * // Format partial duration
 * formatDuration({ months: 9, days: 2 })
 * //=> '9 months 2 days'
 *
 * @example
 * // Customize the format
 * formatDuration(
 *   {
 *     years: 2,
 *     months: 9,
 *     weeks: 1,
 *     days: 7,
 *     hours: 5,
 *     minutes: 9,
 *     seconds: 30
 *   },
 *   { format: ['months', 'weeks'] }
 * ) === '9 months 1 week'
 *
 * @example
 * // Customize the zeros presence
 * formatDuration({ years: 0, months: 9 })
 * //=> '9 months'
 * formatDuration({ years: 0, months: 9 }, { zero: true })
 * //=> '0 years 9 months'
 *
 * @example
 * // Customize the delimiter
 * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })
 * //=> '2 years, 9 months, 3 weeks'
 */
function formatDuration(duration, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index.defaultLocale;
  const format = options?.format ?? defaultFormat;
  const zero = options?.zero ?? false;
  const delimiter = options?.delimiter ?? " ";

  if (!locale.formatDistance) {
    return "";
  }

  const result = format
    .reduce((acc, unit) => {
      const token = `x${unit.replace(/(^.)/, (m) => m.toUpperCase())}`;
      const value = duration[unit];
      if (value !== undefined && (zero || duration[unit])) {
        return acc.concat(locale.formatDistance(token, value));
      }
      return acc;
    }, [])
    .join(delimiter);

  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatISO = formatISO;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index2 = __webpack_require__(/*! ./_lib/addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");

/**
 * The {@link formatISO} function options.
 */

/**
 * @name formatISO
 * @category Common Helpers
 * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
 *
 * @description
 * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options.
 *
 * @returns The formatted date string (in loca.l time zone)
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18T19:00:52Z'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
 * //=> '20190918T190052'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, date only:
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
 * //=> '2019-09-18'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
 * //=> '19:00:52Z'
 */
function formatISO(date, options) {
  const _date = (0, _index.toDate)(date);

  if (isNaN(_date.getTime())) {
    throw new RangeError("Invalid time value");
  }

  const format = options?.format ?? "extended";
  const representation = options?.representation ?? "complete";

  let result = "";
  let tzOffset = "";

  const dateDelimiter = format === "extended" ? "-" : "";
  const timeDelimiter = format === "extended" ? ":" : "";

  // Representation is either 'date' or 'complete'
  if (representation !== "time") {
    const day = (0, _index2.addLeadingZeros)(_date.getDate(), 2);
    const month = (0, _index2.addLeadingZeros)(_date.getMonth() + 1, 2);
    const year = (0, _index2.addLeadingZeros)(_date.getFullYear(), 4);

    // yyyyMMdd or yyyy-MM-dd.
    result = `${year}${dateDelimiter}${month}${dateDelimiter}${day}`;
  }

  // Representation is either 'time' or 'complete'
  if (representation !== "date") {
    // Add the timezone.
    const offset = _date.getTimezoneOffset();

    if (offset !== 0) {
      const absoluteOffset = Math.abs(offset);
      const hourOffset = (0, _index2.addLeadingZeros)(
        Math.trunc(absoluteOffset / 60),
        2,
      );
      const minuteOffset = (0, _index2.addLeadingZeros)(absoluteOffset % 60, 2);
      // If less than 0, the sign is +, because it is ahead of time.
      const sign = offset < 0 ? "+" : "-";

      tzOffset = `${sign}${hourOffset}:${minuteOffset}`;
    } else {
      tzOffset = "Z";
    }

    const hour = (0, _index2.addLeadingZeros)(_date.getHours(), 2);
    const minute = (0, _index2.addLeadingZeros)(_date.getMinutes(), 2);
    const second = (0, _index2.addLeadingZeros)(_date.getSeconds(), 2);

    // If there's also date, separate it with time with 'T'
    const separator = result === "" ? "" : "T";

    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.
    const time = [hour, minute, second].join(timeDelimiter);

    // HHmmss or HH:mm:ss.
    result = `${result}${separator}${time}${tzOffset}`;
  }

  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO9075.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO9075.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatISO9075 = formatISO9075;
var _index = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index3 = __webpack_require__(/*! ./_lib/addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");

/**
 * The {@link formatISO9075} function options.
 */

/**
 * @name formatISO9075
 * @category Common Helpers
 * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).
 *
 * @description
 * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options.
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18 19:00:52'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075, short format:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
 * //=> '20190918 190052'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format, date only:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
 * //=> '2019-09-18'
 *
 * @example
 * // Represent 18 September 2019 in ISO 9075 format, time only:
 * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
 * //=> '19:00:52'
 */
function formatISO9075(date, options) {
  const _date = (0, _index2.toDate)(date);

  if (!(0, _index.isValid)(_date)) {
    throw new RangeError("Invalid time value");
  }

  const format = options?.format ?? "extended";
  const representation = options?.representation ?? "complete";

  let result = "";

  const dateDelimiter = format === "extended" ? "-" : "";
  const timeDelimiter = format === "extended" ? ":" : "";

  // Representation is either 'date' or 'complete'
  if (representation !== "time") {
    const day = (0, _index3.addLeadingZeros)(_date.getDate(), 2);
    const month = (0, _index3.addLeadingZeros)(_date.getMonth() + 1, 2);
    const year = (0, _index3.addLeadingZeros)(_date.getFullYear(), 4);

    // yyyyMMdd or yyyy-MM-dd.
    result = `${year}${dateDelimiter}${month}${dateDelimiter}${day}`;
  }

  // Representation is either 'time' or 'complete'
  if (representation !== "date") {
    const hour = (0, _index3.addLeadingZeros)(_date.getHours(), 2);
    const minute = (0, _index3.addLeadingZeros)(_date.getMinutes(), 2);
    const second = (0, _index3.addLeadingZeros)(_date.getSeconds(), 2);

    // If there's also date, separate it with time with a space
    const separator = result === "" ? "" : " ";

    // HHmmss or HH:mm:ss.
    result = `${result}${separator}${hour}${timeDelimiter}${minute}${timeDelimiter}${second}`;
  }

  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISODuration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISODuration.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.formatISODuration = formatISODuration;

/**
 * @name formatISODuration
 * @category Common Helpers
 * @summary Format a duration object according as ISO 8601 duration string
 *
 * @description
 * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs//90001488-13/reference/r_iso_8601_duration_format.htm)
 *
 * @param duration - The duration to format
 *
 * @returns The ISO 8601 duration string
 *
 * @example
 * // Format the given duration as ISO 8601 string
 * const result = formatISODuration({
 *   years: 39,
 *   months: 2,
 *   days: 20,
 *   hours: 7,
 *   minutes: 5,
 *   seconds: 0
 * })
 * //=> 'P39Y2M20DT0H0M0S'
 */
function formatISODuration(duration) {
  const {
    years = 0,
    months = 0,
    days = 0,
    hours = 0,
    minutes = 0,
    seconds = 0,
  } = duration;

  return `P${years}Y${months}M${days}DT${hours}H${minutes}M${seconds}S`;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC3339.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC3339.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatRFC3339 = formatRFC3339;
var _index = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index3 = __webpack_require__(/*! ./_lib/addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");

/**
 * The {@link formatRFC3339} function options.
 */

/**
 * @name formatRFC3339
 * @category Common Helpers
 * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).
 *
 * @description
 * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options.
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 18 September 2019 in RFC 3339 format:
 * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18T19:00:52Z'
 *
 * @example
 * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction
 * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), {
 *   fractionDigits: 3
 * })
 * //=> '2019-09-18T19:00:52.234Z'
 */
function formatRFC3339(date, options) {
  const _date = (0, _index2.toDate)(date);

  if (!(0, _index.isValid)(_date)) {
    throw new RangeError("Invalid time value");
  }

  const fractionDigits = options?.fractionDigits ?? 0;

  const day = (0, _index3.addLeadingZeros)(_date.getDate(), 2);
  const month = (0, _index3.addLeadingZeros)(_date.getMonth() + 1, 2);
  const year = _date.getFullYear();

  const hour = (0, _index3.addLeadingZeros)(_date.getHours(), 2);
  const minute = (0, _index3.addLeadingZeros)(_date.getMinutes(), 2);
  const second = (0, _index3.addLeadingZeros)(_date.getSeconds(), 2);

  let fractionalSecond = "";
  if (fractionDigits > 0) {
    const milliseconds = _date.getMilliseconds();
    const fractionalSeconds = Math.trunc(
      milliseconds * Math.pow(10, fractionDigits - 3),
    );
    fractionalSecond =
      "." + (0, _index3.addLeadingZeros)(fractionalSeconds, fractionDigits);
  }

  let offset = "";
  const tzOffset = _date.getTimezoneOffset();

  if (tzOffset !== 0) {
    const absoluteOffset = Math.abs(tzOffset);
    const hourOffset = (0, _index3.addLeadingZeros)(
      Math.trunc(absoluteOffset / 60),
      2,
    );
    const minuteOffset = (0, _index3.addLeadingZeros)(absoluteOffset % 60, 2);
    // If less than 0, the sign is +, because it is ahead of time.
    const sign = tzOffset < 0 ? "+" : "-";

    offset = `${sign}${hourOffset}:${minuteOffset}`;
  } else {
    offset = "Z";
  }

  return `${year}-${month}-${day}T${hour}:${minute}:${second}${fractionalSecond}${offset}`;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC7231.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC7231.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatRFC7231 = formatRFC7231;
var _index = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index3 = __webpack_require__(/*! ./_lib/addLeadingZeros.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/addLeadingZeros.js");

const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

const months = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec",
];

/**
 * @name formatRFC7231
 * @category Common Helpers
 * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
 *
 * @description
 * Return the formatted date string in RFC 7231 format.
 * The result will always be in UTC timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 18 September 2019 in RFC 7231 format:
 * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))
 * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'
 */
function formatRFC7231(date) {
  const _date = (0, _index2.toDate)(date);

  if (!(0, _index.isValid)(_date)) {
    throw new RangeError("Invalid time value");
  }

  const dayName = days[_date.getUTCDay()];
  const dayOfMonth = (0, _index3.addLeadingZeros)(_date.getUTCDate(), 2);
  const monthName = months[_date.getUTCMonth()];
  const year = _date.getUTCFullYear();

  const hour = (0, _index3.addLeadingZeros)(_date.getUTCHours(), 2);
  const minute = (0, _index3.addLeadingZeros)(_date.getUTCMinutes(), 2);
  const second = (0, _index3.addLeadingZeros)(_date.getUTCSeconds(), 2);

  // Result variables.
  return `${dayName}, ${dayOfMonth} ${monthName} ${year} ${hour}:${minute}:${second} GMT`;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRelative.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRelative.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatRelative = formatRelative;
var _index = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index2 = __webpack_require__(/*! ./format.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/format.js");

var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index4 = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index5 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link formatRelative} function options.
 */

/**
 * @name formatRelative
 * @category Common Helpers
 * @summary Represent the date in words relative to the given base date.
 *
 * @description
 * Represent the date in words relative to the given base date.
 *
 * | Distance to the base date | Result                    |
 * |---------------------------|---------------------------|
 * | Previous 6 days           | last Sunday at 04:30 AM   |
 * | Last day                  | yesterday at 04:30 AM     |
 * | Same day                  | today at 04:30 AM         |
 * | Next day                  | tomorrow at 04:30 AM      |
 * | Next 6 days               | Sunday at 04:30 AM        |
 * | Other                     | 12/31/2017                |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to format
 * @param baseDate - The date to compare with
 * @param options - An object with options
 *
 * @returns The date in words
 *
 * @throws `date` must not be Invalid Date
 * @throws `baseDate` must not be Invalid Date
 * @throws `options.locale` must contain `localize` property
 * @throws `options.locale` must contain `formatLong` property
 * @throws `options.locale` must contain `formatRelative` property
 *
 * @example
 * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday
 * const result = formatRelative(subDays(new Date(), 6), new Date())
 * //=> "last Thursday at 12:45 AM"
 */
function formatRelative(date, baseDate, options) {
  const _date = (0, _index3.toDate)(date);
  const _baseDate = (0, _index3.toDate)(baseDate);

  const defaultOptions = (0, _index5.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index4.defaultLocale;
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const diff = (0, _index.differenceInCalendarDays)(_date, _baseDate);

  if (isNaN(diff)) {
    throw new RangeError("Invalid time value");
  }

  let token;
  if (diff < -6) {
    token = "other";
  } else if (diff < -1) {
    token = "lastWeek";
  } else if (diff < 0) {
    token = "yesterday";
  } else if (diff < 1) {
    token = "today";
  } else if (diff < 2) {
    token = "tomorrow";
  } else if (diff < 7) {
    token = "nextWeek";
  } else {
    token = "other";
  }

  const formatStr = locale.formatRelative(token, _date, _baseDate, {
    locale,
    weekStartsOn,
  });
  return (0, _index2.format)(_date, formatStr, { locale, weekStartsOn });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/fromUnixTime.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/fromUnixTime.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.fromUnixTime = fromUnixTime;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name fromUnixTime
 * @category Timestamp Helpers
 * @summary Create a date from a Unix timestamp.
 *
 * @description
 * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.
 *
 * @param unixTime - The given Unix timestamp (in seconds)
 *
 * @returns The date
 *
 * @example
 * // Create the date 29 February 2012 11:45:05:
 * const result = fromUnixTime(1330515905)
 * //=> Wed Feb 29 2012 11:45:05
 */
function fromUnixTime(unixTime) {
  return (0, _index.toDate)(unixTime * 1000);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDate.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDate = getDate;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getDate
 * @category Day Helpers
 * @summary Get the day of the month of the given date.
 *
 * @description
 * Get the day of the month of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The day of month
 *
 * @example
 * // Which day of the month is 29 February 2012?
 * const result = getDate(new Date(2012, 1, 29))
 * //=> 29
 */
function getDate(date) {
  const _date = (0, _index.toDate)(date);
  const dayOfMonth = _date.getDate();
  return dayOfMonth;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDay = getDay;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getDay
 * @category Weekday Helpers
 * @summary Get the day of the week of the given date.
 *
 * @description
 * Get the day of the week of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The day of week, 0 represents Sunday
 *
 * @example
 * // Which day of the week is 29 February 2012?
 * const result = getDay(new Date(2012, 1, 29))
 * //=> 3
 */
function getDay(date) {
  const _date = (0, _index.toDate)(date);
  const day = _date.getDay();
  return day;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDayOfYear.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDayOfYear.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDayOfYear = getDayOfYear;
var _index = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index2 = __webpack_require__(/*! ./startOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getDayOfYear
 * @category Day Helpers
 * @summary Get the day of the year of the given date.
 *
 * @description
 * Get the day of the year of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The day of year
 *
 * @example
 * // Which day of the year is 2 July 2014?
 * const result = getDayOfYear(new Date(2014, 6, 2))
 * //=> 183
 */
function getDayOfYear(date) {
  const _date = (0, _index3.toDate)(date);
  const diff = (0, _index.differenceInCalendarDays)(
    _date,
    (0, _index2.startOfYear)(_date),
  );
  const dayOfYear = diff + 1;
  return dayOfYear;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInMonth.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInMonth.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDaysInMonth = getDaysInMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The number of days in a month
 *
 * @example
 * // How many days are in February 2000?
 * const result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */
function getDaysInMonth(date) {
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  const monthIndex = _date.getMonth();
  const lastDayOfMonth = (0, _index2.constructFrom)(date, 0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInYear.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInYear.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDaysInYear = getDaysInYear;
var _index = __webpack_require__(/*! ./isLeapYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLeapYear.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getDaysInYear
 * @category Year Helpers
 * @summary Get the number of days in a year of the given date.
 *
 * @description
 * Get the number of days in a year of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The number of days in a year
 *
 * @example
 * // How many days are in 2012?
 * const result = getDaysInYear(new Date(2012, 0, 1))
 * //=> 366
 */
function getDaysInYear(date) {
  const _date = (0, _index2.toDate)(date);

  if (String(new Date(_date)) === "Invalid Date") {
    return NaN;
  }

  return (0, _index.isLeapYear)(_date) ? 366 : 365;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDecade.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDecade.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDecade = getDecade;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getDecade
 * @category Decade Helpers
 * @summary Get the decade of the given date.
 *
 * @description
 * Get the decade of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The year of decade
 *
 * @example
 * // Which decade belongs 27 November 1942?
 * const result = getDecade(new Date(1942, 10, 27))
 * //=> 1940
 */
function getDecade(date) {
  // TODO: Switch to more technical definition in of decades that start with 1
  // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking
  // change, so it can only be done in 4.0.
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  const decade = Math.floor(year / 10) * 10;
  return decade;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDefaultOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDefaultOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getDefaultOptions = getDefaultOptions;

var _index = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * @name getDefaultOptions
 * @category Common Helpers
 * @summary Get default options.
 * @pure false
 *
 * @description
 * Returns an object that contains defaults for
 * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`
 * arguments for all functions.
 *
 * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).
 *
 * @returns The default options
 *
 * @example
 * const result = getDefaultOptions()
 * //=> {}
 *
 * @example
 * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })
 * const result = getDefaultOptions()
 * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }
 */
function getDefaultOptions() {
  return Object.assign({}, (0, _index.getDefaultOptions)());
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getHours.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getHours.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getHours = getHours;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getHours
 * @category Hour Helpers
 * @summary Get the hours of the given date.
 *
 * @description
 * Get the hours of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The hours
 *
 * @example
 * // Get the hours of 29 February 2012 11:45:00:
 * const result = getHours(new Date(2012, 1, 29, 11, 45))
 * //=> 11
 */
function getHours(date) {
  const _date = (0, _index.toDate)(date);
  const hours = _date.getHours();
  return hours;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISODay.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISODay.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getISODay = getISODay;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getISODay
 * @category Weekday Helpers
 * @summary Get the day of the ISO week of the given date.
 *
 * @description
 * Get the day of the ISO week of the given date,
 * which is 7 for Sunday, 1 for Monday etc.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The day of ISO week
 *
 * @example
 * // Which day of the ISO week is 26 February 2012?
 * const result = getISODay(new Date(2012, 1, 26))
 * //=> 7
 */
function getISODay(date) {
  const _date = (0, _index.toDate)(date);
  let day = _date.getDay();

  if (day === 0) {
    day = 7;
  }

  return day;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getISOWeek = getISOWeek;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./startOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getISOWeek
 * @category ISO Week Helpers
 * @summary Get the ISO week of the given date.
 *
 * @description
 * Get the ISO week of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The ISO week
 *
 * @example
 * // Which week of the ISO-week numbering year is 2 January 2005?
 * const result = getISOWeek(new Date(2005, 0, 2))
 * //=> 53
 */
function getISOWeek(date) {
  const _date = (0, _index4.toDate)(date);
  const diff =
    +(0, _index2.startOfISOWeek)(_date) -
    +(0, _index3.startOfISOWeekYear)(_date);

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(diff / _index.millisecondsInWeek) + 1;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getISOWeekYear = getISOWeekYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the ISO week-numbering year of the given date.
 *
 * @description
 * Get the ISO week-numbering year of the given date,
 * which always starts 3 days before the year's first Thursday.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The ISO week-numbering year
 *
 * @example
 * // Which ISO-week numbering year is 2 January 2005?
 * const result = getISOWeekYear(new Date(2005, 0, 2))
 * //=> 2004
 */
function getISOWeekYear(date) {
  const _date = (0, _index3.toDate)(date);
  const year = _date.getFullYear();

  const fourthOfJanuaryOfNextYear = (0, _index.constructFrom)(date, 0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = (0, _index2.startOfISOWeek)(
    fourthOfJanuaryOfNextYear,
  );

  const fourthOfJanuaryOfThisYear = (0, _index.constructFrom)(date, 0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = (0, _index2.startOfISOWeek)(
    fourthOfJanuaryOfThisYear,
  );

  if (_date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (_date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeeksInYear.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeeksInYear.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getISOWeeksInYear = getISOWeeksInYear;
var _index = __webpack_require__(/*! ./addWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index3 = __webpack_require__(/*! ./startOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js");

/**
 * @name getISOWeeksInYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Get the number of weeks in an ISO week-numbering year of the given date.
 *
 * @description
 * Get the number of weeks in an ISO week-numbering year of the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The number of ISO weeks in a year
 *
 * @example
 * // How many weeks are in ISO week-numbering year 2015?
 * const result = getISOWeeksInYear(new Date(2015, 1, 11))
 * //=> 53
 */
function getISOWeeksInYear(date) {
  const thisYear = (0, _index3.startOfISOWeekYear)(date);
  const nextYear = (0, _index3.startOfISOWeekYear)(
    (0, _index.addWeeks)(thisYear, 60),
  );
  const diff = +nextYear - +thisYear;

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(diff / _index2.millisecondsInWeek);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMilliseconds.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMilliseconds.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getMilliseconds = getMilliseconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getMilliseconds
 * @category Millisecond Helpers
 * @summary Get the milliseconds of the given date.
 *
 * @description
 * Get the milliseconds of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The milliseconds
 *
 * @example
 * // Get the milliseconds of 29 February 2012 11:45:05.123:
 * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 123
 */
function getMilliseconds(date) {
  const _date = (0, _index.toDate)(date);
  const milliseconds = _date.getMilliseconds();
  return milliseconds;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMinutes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMinutes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getMinutes = getMinutes;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getMinutes
 * @category Minute Helpers
 * @summary Get the minutes of the given date.
 *
 * @description
 * Get the minutes of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The minutes
 *
 * @example
 * // Get the minutes of 29 February 2012 11:45:05:
 * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 45
 */
function getMinutes(date) {
  const _date = (0, _index.toDate)(date);
  const minutes = _date.getMinutes();
  return minutes;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMonth.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMonth.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getMonth = getMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getMonth
 * @category Month Helpers
 * @summary Get the month of the given date.
 *
 * @description
 * Get the month of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The month index (0-11)
 *
 * @example
 * // Which month is 29 February 2012?
 * const result = getMonth(new Date(2012, 1, 29))
 * //=> 1
 */
function getMonth(date) {
  const _date = (0, _index.toDate)(date);
  const month = _date.getMonth();
  return month;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getOverlappingDaysInIntervals.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getOverlappingDaysInIntervals.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getOverlappingDaysInIntervals = getOverlappingDaysInIntervals;
var _index = __webpack_require__(/*! ./_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");
var _index2 = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getOverlappingDaysInIntervals
 * @category Interval Helpers
 * @summary Get the number of days that overlap in two time intervals
 *
 * @description
 * Get the number of days that overlap in two time intervals. It uses the time
 * between dates to calculate the number of days, rounding it up to include
 * partial days.
 *
 * Two equal 0-length intervals will result in 0. Two equal 1ms intervals will
 * result in 1.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param intervalLeft - The first interval to compare.
 * @param intervalRight - The second interval to compare.
 *
 * @returns The number of days that overlap in two time intervals
 *
 * @example
 * // For overlapping time intervals adds 1 for each started overlapping day:
 * getOverlappingDaysInIntervals(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
 * )
 * //=> 3
 *
 * @example
 * // For non-overlapping time intervals returns 0:
 * getOverlappingDaysInIntervals(
 *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
 *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
 * )
 * //=> 0
 */

function getOverlappingDaysInIntervals(intervalLeft, intervalRight) {
  const [leftStart, leftEnd] = [
    +(0, _index3.toDate)(intervalLeft.start),
    +(0, _index3.toDate)(intervalLeft.end),
  ].sort((a, b) => a - b);
  const [rightStart, rightEnd] = [
    +(0, _index3.toDate)(intervalRight.start),
    +(0, _index3.toDate)(intervalRight.end),
  ].sort((a, b) => a - b);

  // Prevent NaN result if intervals don't overlap at all.
  const isOverlapping = leftStart < rightEnd && rightStart < leftEnd;
  if (!isOverlapping) return 0;

  // Remove the timezone offset to negate the DST effect on calculations.
  const overlapLeft = rightStart < leftStart ? leftStart : rightStart;
  const left =
    overlapLeft - (0, _index.getTimezoneOffsetInMilliseconds)(overlapLeft);
  const overlapRight = rightEnd > leftEnd ? leftEnd : rightEnd;
  const right =
    overlapRight - (0, _index.getTimezoneOffsetInMilliseconds)(overlapRight);

  // Ceil the number to include partial days too.
  return Math.ceil((right - left) / _index2.millisecondsInDay);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getQuarter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getQuarter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getQuarter = getQuarter;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getQuarter
 * @category Quarter Helpers
 * @summary Get the year quarter of the given date.
 *
 * @description
 * Get the year quarter of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The quarter
 *
 * @example
 * // Which quarter is 2 July 2014?
 * const result = getQuarter(new Date(2014, 6, 2))
 * //=> 3
 */
function getQuarter(date) {
  const _date = (0, _index.toDate)(date);
  const quarter = Math.trunc(_date.getMonth() / 3) + 1;
  return quarter;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getSeconds.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getSeconds.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getSeconds = getSeconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getSeconds
 * @category Second Helpers
 * @summary Get the seconds of the given date.
 *
 * @description
 * Get the seconds of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The seconds
 *
 * @example
 * // Get the seconds of 29 February 2012 11:45:05.123:
 * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 5
 */
function getSeconds(date) {
  const _date = (0, _index.toDate)(date);
  const seconds = _date.getSeconds();
  return seconds;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getTime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getTime.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getTime = getTime;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getTime
 * @category Timestamp Helpers
 * @summary Get the milliseconds timestamp of the given date.
 *
 * @description
 * Get the milliseconds timestamp of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The timestamp
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05.123:
 * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
 * //=> 1330515905123
 */
function getTime(date) {
  const _date = (0, _index.toDate)(date);
  const timestamp = _date.getTime();
  return timestamp;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getUnixTime.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getUnixTime.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getUnixTime = getUnixTime;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getUnixTime
 * @category Timestamp Helpers
 * @summary Get the seconds timestamp of the given date.
 *
 * @description
 * Get the seconds timestamp of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The timestamp
 *
 * @example
 * // Get the timestamp of 29 February 2012 11:45:05 CET:
 * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
 * //=> 1330512305
 */
function getUnixTime(date) {
  return Math.trunc(+(0, _index.toDate)(date) / 1000);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeek.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeek.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getWeek = getWeek;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");
var _index2 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
var _index3 = __webpack_require__(/*! ./startOfWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeekYear.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link getWeek} function options.
 */

/**
 * @name getWeek
 * @category Week Helpers
 * @summary Get the local week index of the given date.
 *
 * @description
 * Get the local week index of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options
 *
 * @returns The week
 *
 * @example
 * // Which week of the local week numbering year is 2 January 2005 with default options?
 * const result = getWeek(new Date(2005, 0, 2))
 * //=> 2
 *
 * @example
 * // Which week of the local week numbering year is 2 January 2005,
 * // if Monday is the first day of the week,
 * // and the first week of the year always contains 4 January?
 * const result = getWeek(new Date(2005, 0, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> 53
 */

function getWeek(date, options) {
  const _date = (0, _index4.toDate)(date);
  const diff =
    +(0, _index2.startOfWeek)(_date, options) -
    +(0, _index3.startOfWeekYear)(_date, options);

  // Round the number of weeks to the nearest integer because the number of
  // milliseconds in a week is not constant (e.g. it's different in the week of
  // the daylight saving time clock shift).
  return Math.round(diff / _index.millisecondsInWeek) + 1;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekOfMonth.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekOfMonth.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getWeekOfMonth = getWeekOfMonth;
var _index = __webpack_require__(/*! ./getDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDate.js");
var _index2 = __webpack_require__(/*! ./getDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js");
var _index3 = __webpack_require__(/*! ./startOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js");

var _index4 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link getWeekOfMonth} function options.
 */

/**
 * @name getWeekOfMonth
 * @category Week Helpers
 * @summary Get the week of the month of the given date.
 *
 * @description
 * Get the week of the month of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options.
 *
 * @returns The week of month
 *
 * @example
 * // Which week of the month is 9 November 2017?
 * const result = getWeekOfMonth(new Date(2017, 10, 9))
 * //=> 2
 */
function getWeekOfMonth(date, options) {
  const defaultOptions = (0, _index4.getDefaultOptions)();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const currentDayOfMonth = (0, _index.getDate)(date);
  if (isNaN(currentDayOfMonth)) return NaN;

  const startWeekDay = (0, _index2.getDay)((0, _index3.startOfMonth)(date));

  let lastDayOfFirstWeek = weekStartsOn - startWeekDay;
  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;

  const remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getWeekYear = getWeekYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index4 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link getWeekYear} function options.
 */

/**
 * @name getWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Get the local week-numbering year of the given date.
 *
 * @description
 * Get the local week-numbering year of the given date.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options.
 *
 * @returns The local week-numbering year
 *
 * @example
 * // Which week numbering year is 26 December 2004 with the default settings?
 * const result = getWeekYear(new Date(2004, 11, 26))
 * //=> 2005
 *
 * @example
 * // Which week numbering year is 26 December 2004 if week starts on Saturday?
 * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
 * //=> 2004
 *
 * @example
 * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
 * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
 * //=> 2004
 */
function getWeekYear(date, options) {
  const _date = (0, _index3.toDate)(date);
  const year = _date.getFullYear();

  const defaultOptions = (0, _index4.getDefaultOptions)();
  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const firstWeekOfNextYear = (0, _index.constructFrom)(date, 0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = (0, _index2.startOfWeek)(
    firstWeekOfNextYear,
    options,
  );

  const firstWeekOfThisYear = (0, _index.constructFrom)(date, 0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = (0, _index2.startOfWeek)(
    firstWeekOfThisYear,
    options,
  );

  if (_date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (_date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeeksInMonth.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeeksInMonth.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getWeeksInMonth = getWeeksInMonth;
var _index = __webpack_require__(/*! ./differenceInCalendarWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarWeeks.js");
var _index2 = __webpack_require__(/*! ./lastDayOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfMonth.js");
var _index3 = __webpack_require__(/*! ./startOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js");

/**
 * The {@link getWeeksInMonth} function options.
 */

/**
 * @name getWeeksInMonth
 * @category Week Helpers
 * @summary Get the number of calendar weeks a month spans.
 *
 * @description
 * Get the number of calendar weeks the month in the given date spans.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 * @param options - An object with options.
 *
 * @returns The number of calendar weeks
 *
 * @example
 * // How many calendar weeks does February 2015 span?
 * const result = getWeeksInMonth(new Date(2015, 1, 8))
 * //=> 4
 *
 * @example
 * // If the week starts on Monday,
 * // how many calendar weeks does July 2017 span?
 * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })
 * //=> 6
 */
function getWeeksInMonth(date, options) {
  return (
    (0, _index.differenceInCalendarWeeks)(
      (0, _index2.lastDayOfMonth)(date),
      (0, _index3.startOfMonth)(date),
      options,
    ) + 1
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getYear.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getYear.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.getYear = getYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name getYear
 * @category Year Helpers
 * @summary Get the year of the given date.
 *
 * @description
 * Get the year of the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The given date
 *
 * @returns The year
 *
 * @example
 * // Which year is 2 July 2014?
 * const result = getYear(new Date(2014, 6, 2))
 * //=> 2014
 */
function getYear(date) {
  return (0, _index.toDate)(date).getFullYear();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMilliseconds.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMilliseconds.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.hoursToMilliseconds = hoursToMilliseconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name hoursToMilliseconds
 * @category  Conversion Helpers
 * @summary Convert hours to milliseconds.
 *
 * @description
 * Convert a number of hours to a full number of milliseconds.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param hours - number of hours to be converted
 *
 * @returns The number of hours converted to milliseconds
 *
 * @example
 * // Convert 2 hours to milliseconds:
 * const result = hoursToMilliseconds(2)
 * //=> 7200000
 */
function hoursToMilliseconds(hours) {
  return Math.trunc(hours * _index.millisecondsInHour);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMinutes.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMinutes.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.hoursToMinutes = hoursToMinutes;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name hoursToMinutes
 * @category Conversion Helpers
 * @summary Convert hours to minutes.
 *
 * @description
 * Convert a number of hours to a full number of minutes.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param hours - number of hours to be converted
 *
 * @returns The number of hours converted in minutes
 *
 * @example
 * // Convert 2 hours to minutes:
 * const result = hoursToMinutes(2)
 * //=> 120
 */
function hoursToMinutes(hours) {
  return Math.trunc(hours * _index.minutesInHour);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToSeconds.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToSeconds.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.hoursToSeconds = hoursToSeconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name hoursToSeconds
 * @category Conversion Helpers
 * @summary Convert hours to seconds.
 *
 * @description
 * Convert a number of hours to a full number of seconds.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param hours - The number of hours to be converted
 *
 * @returns The number of hours converted in seconds
 *
 * @example
 * // Convert 2 hours to seconds:
 * const result = hoursToSeconds(2)
 * //=> 7200
 */
function hoursToSeconds(hours) {
  return Math.trunc(hours * _index.secondsInHour);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var _index = __webpack_require__(/*! ./add.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/add.js");
Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    },
  });
});
var _index2 = __webpack_require__(/*! ./addBusinessDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addBusinessDays.js");
Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    },
  });
});
var _index3 = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    },
  });
});
var _index4 = __webpack_require__(/*! ./addHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js");
Object.keys(_index4).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index4[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index4[key];
    },
  });
});
var _index5 = __webpack_require__(/*! ./addISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addISOWeekYears.js");
Object.keys(_index5).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index5[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index5[key];
    },
  });
});
var _index6 = __webpack_require__(/*! ./addMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js");
Object.keys(_index6).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index6[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index6[key];
    },
  });
});
var _index7 = __webpack_require__(/*! ./addMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js");
Object.keys(_index7).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index7[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index7[key];
    },
  });
});
var _index8 = __webpack_require__(/*! ./addMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js");
Object.keys(_index8).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index8[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index8[key];
    },
  });
});
var _index9 = __webpack_require__(/*! ./addQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js");
Object.keys(_index9).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index9[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index9[key];
    },
  });
});
var _index10 = __webpack_require__(/*! ./addSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addSeconds.js");
Object.keys(_index10).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index10[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index10[key];
    },
  });
});
var _index11 = __webpack_require__(/*! ./addWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js");
Object.keys(_index11).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index11[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index11[key];
    },
  });
});
var _index12 = __webpack_require__(/*! ./addYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addYears.js");
Object.keys(_index12).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index12[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index12[key];
    },
  });
});
var _index13 = __webpack_require__(/*! ./areIntervalsOverlapping.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/areIntervalsOverlapping.js");
Object.keys(_index13).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index13[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index13[key];
    },
  });
});
var _index14 = __webpack_require__(/*! ./clamp.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/clamp.js");
Object.keys(_index14).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index14[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index14[key];
    },
  });
});
var _index15 = __webpack_require__(/*! ./closestIndexTo.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestIndexTo.js");
Object.keys(_index15).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index15[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index15[key];
    },
  });
});
var _index16 = __webpack_require__(/*! ./closestTo.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/closestTo.js");
Object.keys(_index16).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index16[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index16[key];
    },
  });
});
var _index17 = __webpack_require__(/*! ./compareAsc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.js");
Object.keys(_index17).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index17[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index17[key];
    },
  });
});
var _index18 = __webpack_require__(/*! ./compareDesc.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareDesc.js");
Object.keys(_index18).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index18[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index18[key];
    },
  });
});
var _index19 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
Object.keys(_index19).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index19[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index19[key];
    },
  });
});
var _index20 = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
Object.keys(_index20).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index20[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index20[key];
    },
  });
});
var _index21 = __webpack_require__(/*! ./daysToWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/daysToWeeks.js");
Object.keys(_index21).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index21[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index21[key];
    },
  });
});
var _index22 = __webpack_require__(/*! ./differenceInBusinessDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInBusinessDays.js");
Object.keys(_index22).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index22[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index22[key];
    },
  });
});
var _index23 = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
Object.keys(_index23).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index23[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index23[key];
    },
  });
});
var _index24 = __webpack_require__(/*! ./differenceInCalendarISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeekYears.js");
Object.keys(_index24).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index24[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index24[key];
    },
  });
});
var _index25 = __webpack_require__(/*! ./differenceInCalendarISOWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarISOWeeks.js");
Object.keys(_index25).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index25[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index25[key];
    },
  });
});
var _index26 = __webpack_require__(/*! ./differenceInCalendarMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js");
Object.keys(_index26).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index26[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index26[key];
    },
  });
});
var _index27 = __webpack_require__(/*! ./differenceInCalendarQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarQuarters.js");
Object.keys(_index27).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index27[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index27[key];
    },
  });
});
var _index28 = __webpack_require__(/*! ./differenceInCalendarWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarWeeks.js");
Object.keys(_index28).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index28[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index28[key];
    },
  });
});
var _index29 = __webpack_require__(/*! ./differenceInCalendarYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js");
Object.keys(_index29).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index29[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index29[key];
    },
  });
});
var _index30 = __webpack_require__(/*! ./differenceInDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInDays.js");
Object.keys(_index30).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index30[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index30[key];
    },
  });
});
var _index31 = __webpack_require__(/*! ./differenceInHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInHours.js");
Object.keys(_index31).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index31[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index31[key];
    },
  });
});
var _index32 = __webpack_require__(/*! ./differenceInISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInISOWeekYears.js");
Object.keys(_index32).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index32[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index32[key];
    },
  });
});
var _index33 = __webpack_require__(/*! ./differenceInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMilliseconds.js");
Object.keys(_index33).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index33[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index33[key];
    },
  });
});
var _index34 = __webpack_require__(/*! ./differenceInMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMinutes.js");
Object.keys(_index34).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index34[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index34[key];
    },
  });
});
var _index35 = __webpack_require__(/*! ./differenceInMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js");
Object.keys(_index35).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index35[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index35[key];
    },
  });
});
var _index36 = __webpack_require__(/*! ./differenceInQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInQuarters.js");
Object.keys(_index36).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index36[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index36[key];
    },
  });
});
var _index37 = __webpack_require__(/*! ./differenceInSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js");
Object.keys(_index37).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index37[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index37[key];
    },
  });
});
var _index38 = __webpack_require__(/*! ./differenceInWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInWeeks.js");
Object.keys(_index38).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index38[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index38[key];
    },
  });
});
var _index39 = __webpack_require__(/*! ./differenceInYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInYears.js");
Object.keys(_index39).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index39[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index39[key];
    },
  });
});
var _index40 = __webpack_require__(/*! ./eachDayOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachDayOfInterval.js");
Object.keys(_index40).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index40[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index40[key];
    },
  });
});
var _index41 = __webpack_require__(/*! ./eachHourOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachHourOfInterval.js");
Object.keys(_index41).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index41[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index41[key];
    },
  });
});
var _index42 = __webpack_require__(/*! ./eachMinuteOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMinuteOfInterval.js");
Object.keys(_index42).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index42[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index42[key];
    },
  });
});
var _index43 = __webpack_require__(/*! ./eachMonthOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachMonthOfInterval.js");
Object.keys(_index43).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index43[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index43[key];
    },
  });
});
var _index44 = __webpack_require__(/*! ./eachQuarterOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachQuarterOfInterval.js");
Object.keys(_index44).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index44[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index44[key];
    },
  });
});
var _index45 = __webpack_require__(/*! ./eachWeekOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekOfInterval.js");
Object.keys(_index45).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index45[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index45[key];
    },
  });
});
var _index46 = __webpack_require__(/*! ./eachWeekendOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfInterval.js");
Object.keys(_index46).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index46[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index46[key];
    },
  });
});
var _index47 = __webpack_require__(/*! ./eachWeekendOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfMonth.js");
Object.keys(_index47).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index47[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index47[key];
    },
  });
});
var _index48 = __webpack_require__(/*! ./eachWeekendOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachWeekendOfYear.js");
Object.keys(_index48).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index48[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index48[key];
    },
  });
});
var _index49 = __webpack_require__(/*! ./eachYearOfInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/eachYearOfInterval.js");
Object.keys(_index49).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index49[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index49[key];
    },
  });
});
var _index50 = __webpack_require__(/*! ./endOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js");
Object.keys(_index50).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index50[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index50[key];
    },
  });
});
var _index51 = __webpack_require__(/*! ./endOfDecade.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDecade.js");
Object.keys(_index51).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index51[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index51[key];
    },
  });
});
var _index52 = __webpack_require__(/*! ./endOfHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfHour.js");
Object.keys(_index52).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index52[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index52[key];
    },
  });
});
var _index53 = __webpack_require__(/*! ./endOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeek.js");
Object.keys(_index53).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index53[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index53[key];
    },
  });
});
var _index54 = __webpack_require__(/*! ./endOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfISOWeekYear.js");
Object.keys(_index54).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index54[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index54[key];
    },
  });
});
var _index55 = __webpack_require__(/*! ./endOfMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMinute.js");
Object.keys(_index55).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index55[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index55[key];
    },
  });
});
var _index56 = __webpack_require__(/*! ./endOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js");
Object.keys(_index56).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index56[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index56[key];
    },
  });
});
var _index57 = __webpack_require__(/*! ./endOfQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfQuarter.js");
Object.keys(_index57).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index57[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index57[key];
    },
  });
});
var _index58 = __webpack_require__(/*! ./endOfSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfSecond.js");
Object.keys(_index58).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index58[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index58[key];
    },
  });
});
var _index59 = __webpack_require__(/*! ./endOfToday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfToday.js");
Object.keys(_index59).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index59[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index59[key];
    },
  });
});
var _index60 = __webpack_require__(/*! ./endOfTomorrow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfTomorrow.js");
Object.keys(_index60).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index60[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index60[key];
    },
  });
});
var _index61 = __webpack_require__(/*! ./endOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfWeek.js");
Object.keys(_index61).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index61[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index61[key];
    },
  });
});
var _index62 = __webpack_require__(/*! ./endOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYear.js");
Object.keys(_index62).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index62[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index62[key];
    },
  });
});
var _index63 = __webpack_require__(/*! ./endOfYesterday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYesterday.js");
Object.keys(_index63).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index63[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index63[key];
    },
  });
});
var _index64 = __webpack_require__(/*! ./format.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/format.js");
Object.keys(_index64).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index64[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index64[key];
    },
  });
});
var _index65 = __webpack_require__(/*! ./formatDistance.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistance.js");
Object.keys(_index65).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index65[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index65[key];
    },
  });
});
var _index66 = __webpack_require__(/*! ./formatDistanceStrict.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceStrict.js");
Object.keys(_index66).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index66[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index66[key];
    },
  });
});
var _index67 = __webpack_require__(/*! ./formatDistanceToNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNow.js");
Object.keys(_index67).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index67[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index67[key];
    },
  });
});
var _index68 = __webpack_require__(/*! ./formatDistanceToNowStrict.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceToNowStrict.js");
Object.keys(_index68).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index68[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index68[key];
    },
  });
});
var _index69 = __webpack_require__(/*! ./formatDuration.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDuration.js");
Object.keys(_index69).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index69[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index69[key];
    },
  });
});
var _index70 = __webpack_require__(/*! ./formatISO.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO.js");
Object.keys(_index70).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index70[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index70[key];
    },
  });
});
var _index71 = __webpack_require__(/*! ./formatISO9075.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISO9075.js");
Object.keys(_index71).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index71[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index71[key];
    },
  });
});
var _index72 = __webpack_require__(/*! ./formatISODuration.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatISODuration.js");
Object.keys(_index72).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index72[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index72[key];
    },
  });
});
var _index73 = __webpack_require__(/*! ./formatRFC3339.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC3339.js");
Object.keys(_index73).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index73[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index73[key];
    },
  });
});
var _index74 = __webpack_require__(/*! ./formatRFC7231.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRFC7231.js");
Object.keys(_index74).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index74[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index74[key];
    },
  });
});
var _index75 = __webpack_require__(/*! ./formatRelative.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatRelative.js");
Object.keys(_index75).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index75[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index75[key];
    },
  });
});
var _index76 = __webpack_require__(/*! ./fromUnixTime.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/fromUnixTime.js");
Object.keys(_index76).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index76[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index76[key];
    },
  });
});
var _index77 = __webpack_require__(/*! ./getDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDate.js");
Object.keys(_index77).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index77[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index77[key];
    },
  });
});
var _index78 = __webpack_require__(/*! ./getDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js");
Object.keys(_index78).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index78[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index78[key];
    },
  });
});
var _index79 = __webpack_require__(/*! ./getDayOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDayOfYear.js");
Object.keys(_index79).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index79[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index79[key];
    },
  });
});
var _index80 = __webpack_require__(/*! ./getDaysInMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInMonth.js");
Object.keys(_index80).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index80[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index80[key];
    },
  });
});
var _index81 = __webpack_require__(/*! ./getDaysInYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInYear.js");
Object.keys(_index81).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index81[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index81[key];
    },
  });
});
var _index82 = __webpack_require__(/*! ./getDecade.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDecade.js");
Object.keys(_index82).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index82[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index82[key];
    },
  });
});
var _index83 = __webpack_require__(/*! ./getDefaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDefaultOptions.js");
Object.keys(_index83).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index83[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index83[key];
    },
  });
});
var _index84 = __webpack_require__(/*! ./getHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getHours.js");
Object.keys(_index84).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index84[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index84[key];
    },
  });
});
var _index85 = __webpack_require__(/*! ./getISODay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISODay.js");
Object.keys(_index85).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index85[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index85[key];
    },
  });
});
var _index86 = __webpack_require__(/*! ./getISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js");
Object.keys(_index86).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index86[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index86[key];
    },
  });
});
var _index87 = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
Object.keys(_index87).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index87[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index87[key];
    },
  });
});
var _index88 = __webpack_require__(/*! ./getISOWeeksInYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeeksInYear.js");
Object.keys(_index88).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index88[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index88[key];
    },
  });
});
var _index89 = __webpack_require__(/*! ./getMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMilliseconds.js");
Object.keys(_index89).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index89[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index89[key];
    },
  });
});
var _index90 = __webpack_require__(/*! ./getMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMinutes.js");
Object.keys(_index90).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index90[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index90[key];
    },
  });
});
var _index91 = __webpack_require__(/*! ./getMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMonth.js");
Object.keys(_index91).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index91[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index91[key];
    },
  });
});
var _index92 = __webpack_require__(/*! ./getOverlappingDaysInIntervals.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getOverlappingDaysInIntervals.js");
Object.keys(_index92).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index92[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index92[key];
    },
  });
});
var _index93 = __webpack_require__(/*! ./getQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getQuarter.js");
Object.keys(_index93).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index93[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index93[key];
    },
  });
});
var _index94 = __webpack_require__(/*! ./getSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getSeconds.js");
Object.keys(_index94).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index94[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index94[key];
    },
  });
});
var _index95 = __webpack_require__(/*! ./getTime.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getTime.js");
Object.keys(_index95).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index95[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index95[key];
    },
  });
});
var _index96 = __webpack_require__(/*! ./getUnixTime.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getUnixTime.js");
Object.keys(_index96).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index96[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index96[key];
    },
  });
});
var _index97 = __webpack_require__(/*! ./getWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeek.js");
Object.keys(_index97).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index97[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index97[key];
    },
  });
});
var _index98 = __webpack_require__(/*! ./getWeekOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekOfMonth.js");
Object.keys(_index98).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index98[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index98[key];
    },
  });
});
var _index99 = __webpack_require__(/*! ./getWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js");
Object.keys(_index99).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index99[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index99[key];
    },
  });
});
var _index100 = __webpack_require__(/*! ./getWeeksInMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeeksInMonth.js");
Object.keys(_index100).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index100[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index100[key];
    },
  });
});
var _index101 = __webpack_require__(/*! ./getYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getYear.js");
Object.keys(_index101).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index101[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index101[key];
    },
  });
});
var _index102 = __webpack_require__(/*! ./hoursToMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMilliseconds.js");
Object.keys(_index102).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index102[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index102[key];
    },
  });
});
var _index103 = __webpack_require__(/*! ./hoursToMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToMinutes.js");
Object.keys(_index103).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index103[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index103[key];
    },
  });
});
var _index104 = __webpack_require__(/*! ./hoursToSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/hoursToSeconds.js");
Object.keys(_index104).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index104[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index104[key];
    },
  });
});
var _index105 = __webpack_require__(/*! ./interval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/interval.js");
Object.keys(_index105).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index105[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index105[key];
    },
  });
});
var _index106 = __webpack_require__(/*! ./intervalToDuration.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intervalToDuration.js");
Object.keys(_index106).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index106[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index106[key];
    },
  });
});
var _index107 = __webpack_require__(/*! ./intlFormat.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormat.js");
Object.keys(_index107).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index107[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index107[key];
    },
  });
});
var _index108 = __webpack_require__(/*! ./intlFormatDistance.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormatDistance.js");
Object.keys(_index108).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index108[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index108[key];
    },
  });
});
var _index109 = __webpack_require__(/*! ./isAfter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isAfter.js");
Object.keys(_index109).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index109[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index109[key];
    },
  });
});
var _index110 = __webpack_require__(/*! ./isBefore.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isBefore.js");
Object.keys(_index110).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index110[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index110[key];
    },
  });
});
var _index111 = __webpack_require__(/*! ./isDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isDate.js");
Object.keys(_index111).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index111[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index111[key];
    },
  });
});
var _index112 = __webpack_require__(/*! ./isEqual.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isEqual.js");
Object.keys(_index112).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index112[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index112[key];
    },
  });
});
var _index113 = __webpack_require__(/*! ./isExists.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isExists.js");
Object.keys(_index113).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index113[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index113[key];
    },
  });
});
var _index114 = __webpack_require__(/*! ./isFirstDayOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFirstDayOfMonth.js");
Object.keys(_index114).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index114[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index114[key];
    },
  });
});
var _index115 = __webpack_require__(/*! ./isFriday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFriday.js");
Object.keys(_index115).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index115[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index115[key];
    },
  });
});
var _index116 = __webpack_require__(/*! ./isFuture.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFuture.js");
Object.keys(_index116).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index116[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index116[key];
    },
  });
});
var _index117 = __webpack_require__(/*! ./isLastDayOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLastDayOfMonth.js");
Object.keys(_index117).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index117[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index117[key];
    },
  });
});
var _index118 = __webpack_require__(/*! ./isLeapYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLeapYear.js");
Object.keys(_index118).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index118[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index118[key];
    },
  });
});
var _index119 = __webpack_require__(/*! ./isMatch.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMatch.js");
Object.keys(_index119).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index119[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index119[key];
    },
  });
});
var _index120 = __webpack_require__(/*! ./isMonday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMonday.js");
Object.keys(_index120).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index120[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index120[key];
    },
  });
});
var _index121 = __webpack_require__(/*! ./isPast.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isPast.js");
Object.keys(_index121).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index121[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index121[key];
    },
  });
});
var _index122 = __webpack_require__(/*! ./isSameDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js");
Object.keys(_index122).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index122[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index122[key];
    },
  });
});
var _index123 = __webpack_require__(/*! ./isSameHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameHour.js");
Object.keys(_index123).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index123[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index123[key];
    },
  });
});
var _index124 = __webpack_require__(/*! ./isSameISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeek.js");
Object.keys(_index124).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index124[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index124[key];
    },
  });
});
var _index125 = __webpack_require__(/*! ./isSameISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeekYear.js");
Object.keys(_index125).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index125[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index125[key];
    },
  });
});
var _index126 = __webpack_require__(/*! ./isSameMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMinute.js");
Object.keys(_index126).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index126[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index126[key];
    },
  });
});
var _index127 = __webpack_require__(/*! ./isSameMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMonth.js");
Object.keys(_index127).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index127[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index127[key];
    },
  });
});
var _index128 = __webpack_require__(/*! ./isSameQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameQuarter.js");
Object.keys(_index128).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index128[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index128[key];
    },
  });
});
var _index129 = __webpack_require__(/*! ./isSameSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameSecond.js");
Object.keys(_index129).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index129[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index129[key];
    },
  });
});
var _index130 = __webpack_require__(/*! ./isSameWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameWeek.js");
Object.keys(_index130).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index130[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index130[key];
    },
  });
});
var _index131 = __webpack_require__(/*! ./isSameYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameYear.js");
Object.keys(_index131).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index131[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index131[key];
    },
  });
});
var _index132 = __webpack_require__(/*! ./isSaturday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSaturday.js");
Object.keys(_index132).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index132[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index132[key];
    },
  });
});
var _index133 = __webpack_require__(/*! ./isSunday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSunday.js");
Object.keys(_index133).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index133[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index133[key];
    },
  });
});
var _index134 = __webpack_require__(/*! ./isThisHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisHour.js");
Object.keys(_index134).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index134[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index134[key];
    },
  });
});
var _index135 = __webpack_require__(/*! ./isThisISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisISOWeek.js");
Object.keys(_index135).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index135[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index135[key];
    },
  });
});
var _index136 = __webpack_require__(/*! ./isThisMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMinute.js");
Object.keys(_index136).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index136[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index136[key];
    },
  });
});
var _index137 = __webpack_require__(/*! ./isThisMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMonth.js");
Object.keys(_index137).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index137[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index137[key];
    },
  });
});
var _index138 = __webpack_require__(/*! ./isThisQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisQuarter.js");
Object.keys(_index138).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index138[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index138[key];
    },
  });
});
var _index139 = __webpack_require__(/*! ./isThisSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisSecond.js");
Object.keys(_index139).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index139[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index139[key];
    },
  });
});
var _index140 = __webpack_require__(/*! ./isThisWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisWeek.js");
Object.keys(_index140).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index140[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index140[key];
    },
  });
});
var _index141 = __webpack_require__(/*! ./isThisYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisYear.js");
Object.keys(_index141).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index141[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index141[key];
    },
  });
});
var _index142 = __webpack_require__(/*! ./isThursday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThursday.js");
Object.keys(_index142).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index142[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index142[key];
    },
  });
});
var _index143 = __webpack_require__(/*! ./isToday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isToday.js");
Object.keys(_index143).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index143[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index143[key];
    },
  });
});
var _index144 = __webpack_require__(/*! ./isTomorrow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTomorrow.js");
Object.keys(_index144).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index144[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index144[key];
    },
  });
});
var _index145 = __webpack_require__(/*! ./isTuesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTuesday.js");
Object.keys(_index145).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index145[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index145[key];
    },
  });
});
var _index146 = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
Object.keys(_index146).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index146[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index146[key];
    },
  });
});
var _index147 = __webpack_require__(/*! ./isWednesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWednesday.js");
Object.keys(_index147).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index147[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index147[key];
    },
  });
});
var _index148 = __webpack_require__(/*! ./isWeekend.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js");
Object.keys(_index148).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index148[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index148[key];
    },
  });
});
var _index149 = __webpack_require__(/*! ./isWithinInterval.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWithinInterval.js");
Object.keys(_index149).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index149[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index149[key];
    },
  });
});
var _index150 = __webpack_require__(/*! ./isYesterday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isYesterday.js");
Object.keys(_index150).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index150[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index150[key];
    },
  });
});
var _index151 = __webpack_require__(/*! ./lastDayOfDecade.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfDecade.js");
Object.keys(_index151).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index151[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index151[key];
    },
  });
});
var _index152 = __webpack_require__(/*! ./lastDayOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeek.js");
Object.keys(_index152).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index152[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index152[key];
    },
  });
});
var _index153 = __webpack_require__(/*! ./lastDayOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeekYear.js");
Object.keys(_index153).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index153[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index153[key];
    },
  });
});
var _index154 = __webpack_require__(/*! ./lastDayOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfMonth.js");
Object.keys(_index154).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index154[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index154[key];
    },
  });
});
var _index155 = __webpack_require__(/*! ./lastDayOfQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfQuarter.js");
Object.keys(_index155).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index155[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index155[key];
    },
  });
});
var _index156 = __webpack_require__(/*! ./lastDayOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfWeek.js");
Object.keys(_index156).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index156[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index156[key];
    },
  });
});
var _index157 = __webpack_require__(/*! ./lastDayOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfYear.js");
Object.keys(_index157).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index157[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index157[key];
    },
  });
});
var _index158 = __webpack_require__(/*! ./lightFormat.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lightFormat.js");
Object.keys(_index158).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index158[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index158[key];
    },
  });
});
var _index159 = __webpack_require__(/*! ./max.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/max.js");
Object.keys(_index159).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index159[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index159[key];
    },
  });
});
var _index160 = __webpack_require__(/*! ./milliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/milliseconds.js");
Object.keys(_index160).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index160[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index160[key];
    },
  });
});
var _index161 = __webpack_require__(/*! ./millisecondsToHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToHours.js");
Object.keys(_index161).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index161[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index161[key];
    },
  });
});
var _index162 = __webpack_require__(/*! ./millisecondsToMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToMinutes.js");
Object.keys(_index162).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index162[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index162[key];
    },
  });
});
var _index163 = __webpack_require__(/*! ./millisecondsToSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToSeconds.js");
Object.keys(_index163).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index163[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index163[key];
    },
  });
});
var _index164 = __webpack_require__(/*! ./min.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/min.js");
Object.keys(_index164).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index164[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index164[key];
    },
  });
});
var _index165 = __webpack_require__(/*! ./minutesToHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToHours.js");
Object.keys(_index165).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index165[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index165[key];
    },
  });
});
var _index166 = __webpack_require__(/*! ./minutesToMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToMilliseconds.js");
Object.keys(_index166).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index166[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index166[key];
    },
  });
});
var _index167 = __webpack_require__(/*! ./minutesToSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToSeconds.js");
Object.keys(_index167).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index167[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index167[key];
    },
  });
});
var _index168 = __webpack_require__(/*! ./monthsToQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToQuarters.js");
Object.keys(_index168).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index168[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index168[key];
    },
  });
});
var _index169 = __webpack_require__(/*! ./monthsToYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToYears.js");
Object.keys(_index169).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index169[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index169[key];
    },
  });
});
var _index170 = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");
Object.keys(_index170).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index170[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index170[key];
    },
  });
});
var _index171 = __webpack_require__(/*! ./nextFriday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextFriday.js");
Object.keys(_index171).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index171[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index171[key];
    },
  });
});
var _index172 = __webpack_require__(/*! ./nextMonday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextMonday.js");
Object.keys(_index172).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index172[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index172[key];
    },
  });
});
var _index173 = __webpack_require__(/*! ./nextSaturday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSaturday.js");
Object.keys(_index173).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index173[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index173[key];
    },
  });
});
var _index174 = __webpack_require__(/*! ./nextSunday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSunday.js");
Object.keys(_index174).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index174[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index174[key];
    },
  });
});
var _index175 = __webpack_require__(/*! ./nextThursday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextThursday.js");
Object.keys(_index175).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index175[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index175[key];
    },
  });
});
var _index176 = __webpack_require__(/*! ./nextTuesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextTuesday.js");
Object.keys(_index176).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index176[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index176[key];
    },
  });
});
var _index177 = __webpack_require__(/*! ./nextWednesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextWednesday.js");
Object.keys(_index177).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index177[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index177[key];
    },
  });
});
var _index178 = __webpack_require__(/*! ./parse.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse.js");
Object.keys(_index178).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index178[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index178[key];
    },
  });
});
var _index179 = __webpack_require__(/*! ./parseISO.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseISO.js");
Object.keys(_index179).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index179[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index179[key];
    },
  });
});
var _index180 = __webpack_require__(/*! ./parseJSON.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseJSON.js");
Object.keys(_index180).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index180[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index180[key];
    },
  });
});
var _index181 = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");
Object.keys(_index181).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index181[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index181[key];
    },
  });
});
var _index182 = __webpack_require__(/*! ./previousFriday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousFriday.js");
Object.keys(_index182).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index182[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index182[key];
    },
  });
});
var _index183 = __webpack_require__(/*! ./previousMonday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousMonday.js");
Object.keys(_index183).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index183[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index183[key];
    },
  });
});
var _index184 = __webpack_require__(/*! ./previousSaturday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSaturday.js");
Object.keys(_index184).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index184[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index184[key];
    },
  });
});
var _index185 = __webpack_require__(/*! ./previousSunday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSunday.js");
Object.keys(_index185).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index185[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index185[key];
    },
  });
});
var _index186 = __webpack_require__(/*! ./previousThursday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousThursday.js");
Object.keys(_index186).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index186[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index186[key];
    },
  });
});
var _index187 = __webpack_require__(/*! ./previousTuesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousTuesday.js");
Object.keys(_index187).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index187[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index187[key];
    },
  });
});
var _index188 = __webpack_require__(/*! ./previousWednesday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousWednesday.js");
Object.keys(_index188).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index188[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index188[key];
    },
  });
});
var _index189 = __webpack_require__(/*! ./quartersToMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToMonths.js");
Object.keys(_index189).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index189[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index189[key];
    },
  });
});
var _index190 = __webpack_require__(/*! ./quartersToYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToYears.js");
Object.keys(_index190).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index190[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index190[key];
    },
  });
});
var _index191 = __webpack_require__(/*! ./roundToNearestHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestHours.js");
Object.keys(_index191).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index191[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index191[key];
    },
  });
});
var _index192 = __webpack_require__(/*! ./roundToNearestMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestMinutes.js");
Object.keys(_index192).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index192[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index192[key];
    },
  });
});
var _index193 = __webpack_require__(/*! ./secondsToHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToHours.js");
Object.keys(_index193).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index193[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index193[key];
    },
  });
});
var _index194 = __webpack_require__(/*! ./secondsToMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMilliseconds.js");
Object.keys(_index194).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index194[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index194[key];
    },
  });
});
var _index195 = __webpack_require__(/*! ./secondsToMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMinutes.js");
Object.keys(_index195).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index195[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index195[key];
    },
  });
});
var _index196 = __webpack_require__(/*! ./set.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/set.js");
Object.keys(_index196).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index196[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index196[key];
    },
  });
});
var _index197 = __webpack_require__(/*! ./setDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDate.js");
Object.keys(_index197).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index197[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index197[key];
    },
  });
});
var _index198 = __webpack_require__(/*! ./setDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js");
Object.keys(_index198).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index198[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index198[key];
    },
  });
});
var _index199 = __webpack_require__(/*! ./setDayOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDayOfYear.js");
Object.keys(_index199).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index199[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index199[key];
    },
  });
});
var _index200 = __webpack_require__(/*! ./setDefaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDefaultOptions.js");
Object.keys(_index200).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index200[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index200[key];
    },
  });
});
var _index201 = __webpack_require__(/*! ./setHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setHours.js");
Object.keys(_index201).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index201[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index201[key];
    },
  });
});
var _index202 = __webpack_require__(/*! ./setISODay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISODay.js");
Object.keys(_index202).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index202[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index202[key];
    },
  });
});
var _index203 = __webpack_require__(/*! ./setISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeek.js");
Object.keys(_index203).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index203[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index203[key];
    },
  });
});
var _index204 = __webpack_require__(/*! ./setISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeekYear.js");
Object.keys(_index204).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index204[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index204[key];
    },
  });
});
var _index205 = __webpack_require__(/*! ./setMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMilliseconds.js");
Object.keys(_index205).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index205[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index205[key];
    },
  });
});
var _index206 = __webpack_require__(/*! ./setMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMinutes.js");
Object.keys(_index206).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index206[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index206[key];
    },
  });
});
var _index207 = __webpack_require__(/*! ./setMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js");
Object.keys(_index207).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index207[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index207[key];
    },
  });
});
var _index208 = __webpack_require__(/*! ./setQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setQuarter.js");
Object.keys(_index208).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index208[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index208[key];
    },
  });
});
var _index209 = __webpack_require__(/*! ./setSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setSeconds.js");
Object.keys(_index209).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index209[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index209[key];
    },
  });
});
var _index210 = __webpack_require__(/*! ./setWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeek.js");
Object.keys(_index210).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index210[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index210[key];
    },
  });
});
var _index211 = __webpack_require__(/*! ./setWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeekYear.js");
Object.keys(_index211).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index211[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index211[key];
    },
  });
});
var _index212 = __webpack_require__(/*! ./setYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setYear.js");
Object.keys(_index212).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index212[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index212[key];
    },
  });
});
var _index213 = __webpack_require__(/*! ./startOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js");
Object.keys(_index213).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index213[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index213[key];
    },
  });
});
var _index214 = __webpack_require__(/*! ./startOfDecade.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDecade.js");
Object.keys(_index214).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index214[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index214[key];
    },
  });
});
var _index215 = __webpack_require__(/*! ./startOfHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfHour.js");
Object.keys(_index215).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index215[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index215[key];
    },
  });
});
var _index216 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
Object.keys(_index216).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index216[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index216[key];
    },
  });
});
var _index217 = __webpack_require__(/*! ./startOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js");
Object.keys(_index217).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index217[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index217[key];
    },
  });
});
var _index218 = __webpack_require__(/*! ./startOfMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMinute.js");
Object.keys(_index218).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index218[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index218[key];
    },
  });
});
var _index219 = __webpack_require__(/*! ./startOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js");
Object.keys(_index219).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index219[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index219[key];
    },
  });
});
var _index220 = __webpack_require__(/*! ./startOfQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js");
Object.keys(_index220).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index220[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index220[key];
    },
  });
});
var _index221 = __webpack_require__(/*! ./startOfSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfSecond.js");
Object.keys(_index221).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index221[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index221[key];
    },
  });
});
var _index222 = __webpack_require__(/*! ./startOfToday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfToday.js");
Object.keys(_index222).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index222[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index222[key];
    },
  });
});
var _index223 = __webpack_require__(/*! ./startOfTomorrow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfTomorrow.js");
Object.keys(_index223).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index223[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index223[key];
    },
  });
});
var _index224 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
Object.keys(_index224).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index224[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index224[key];
    },
  });
});
var _index225 = __webpack_require__(/*! ./startOfWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeekYear.js");
Object.keys(_index225).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index225[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index225[key];
    },
  });
});
var _index226 = __webpack_require__(/*! ./startOfYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js");
Object.keys(_index226).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index226[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index226[key];
    },
  });
});
var _index227 = __webpack_require__(/*! ./startOfYesterday.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYesterday.js");
Object.keys(_index227).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index227[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index227[key];
    },
  });
});
var _index228 = __webpack_require__(/*! ./sub.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/sub.js");
Object.keys(_index228).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index228[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index228[key];
    },
  });
});
var _index229 = __webpack_require__(/*! ./subBusinessDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subBusinessDays.js");
Object.keys(_index229).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index229[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index229[key];
    },
  });
});
var _index230 = __webpack_require__(/*! ./subDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js");
Object.keys(_index230).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index230[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index230[key];
    },
  });
});
var _index231 = __webpack_require__(/*! ./subHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subHours.js");
Object.keys(_index231).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index231[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index231[key];
    },
  });
});
var _index232 = __webpack_require__(/*! ./subISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subISOWeekYears.js");
Object.keys(_index232).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index232[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index232[key];
    },
  });
});
var _index233 = __webpack_require__(/*! ./subMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMilliseconds.js");
Object.keys(_index233).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index233[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index233[key];
    },
  });
});
var _index234 = __webpack_require__(/*! ./subMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMinutes.js");
Object.keys(_index234).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index234[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index234[key];
    },
  });
});
var _index235 = __webpack_require__(/*! ./subMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMonths.js");
Object.keys(_index235).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index235[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index235[key];
    },
  });
});
var _index236 = __webpack_require__(/*! ./subQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subQuarters.js");
Object.keys(_index236).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index236[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index236[key];
    },
  });
});
var _index237 = __webpack_require__(/*! ./subSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subSeconds.js");
Object.keys(_index237).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index237[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index237[key];
    },
  });
});
var _index238 = __webpack_require__(/*! ./subWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subWeeks.js");
Object.keys(_index238).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index238[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index238[key];
    },
  });
});
var _index239 = __webpack_require__(/*! ./subYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subYears.js");
Object.keys(_index239).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index239[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index239[key];
    },
  });
});
var _index240 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
Object.keys(_index240).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index240[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index240[key];
    },
  });
});
var _index241 = __webpack_require__(/*! ./transpose.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/transpose.js");
Object.keys(_index241).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index241[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index241[key];
    },
  });
});
var _index242 = __webpack_require__(/*! ./weeksToDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/weeksToDays.js");
Object.keys(_index242).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index242[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index242[key];
    },
  });
});
var _index243 = __webpack_require__(/*! ./yearsToDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToDays.js");
Object.keys(_index243).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index243[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index243[key];
    },
  });
});
var _index244 = __webpack_require__(/*! ./yearsToMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToMonths.js");
Object.keys(_index244).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index244[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index244[key];
    },
  });
});
var _index245 = __webpack_require__(/*! ./yearsToQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToQuarters.js");
Object.keys(_index245).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index245[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index245[key];
    },
  });
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/interval.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/interval.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.interval = interval;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link interval} function options.
 */

/**
 * @name interval
 * @category Interval Helpers
 * @summary Creates an interval object and validates its values.
 *
 * @description
 * Creates a normalized interval object and validates its values. If the interval is invalid, an exception is thrown.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param start - The start of the interval.
 * @param end - The end of the interval.
 * @param options - The options object.
 *
 * @throws `Start date is invalid` when `start` is invalid.
 * @throws `End date is invalid` when `end` is invalid.
 * @throws `End date must be after start date` when end is before `start` and `options.assertPositive` is true.
 *
 * @returns The normalized and validated interval object.
 */
function interval(start, end, options) {
  const _start = (0, _index.toDate)(start);
  if (isNaN(+_start)) throw new TypeError("Start date is invalid");

  const _end = (0, _index.toDate)(end);
  if (isNaN(+_end)) throw new TypeError("End date is invalid");

  if (options?.assertPositive && +_start > +_end)
    throw new TypeError("End date must be after start date");

  return { start: _start, end: _end };
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intervalToDuration.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intervalToDuration.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.intervalToDuration = intervalToDuration;
var _index = __webpack_require__(/*! ./add.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/add.js");
var _index2 = __webpack_require__(/*! ./differenceInDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInDays.js");
var _index3 = __webpack_require__(/*! ./differenceInHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInHours.js");
var _index4 = __webpack_require__(/*! ./differenceInMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMinutes.js");
var _index5 = __webpack_require__(/*! ./differenceInMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMonths.js");
var _index6 = __webpack_require__(/*! ./differenceInSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js");
var _index7 = __webpack_require__(/*! ./differenceInYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInYears.js");
var _index8 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name intervalToDuration
 * @category Common Helpers
 * @summary Convert interval to duration
 *
 * @description
 * Convert a interval object to a duration object.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param interval - The interval to convert to duration
 *
 * @returns The duration object
 *
 * @example
 * // Get the duration between January 15, 1929 and April 4, 1968.
 * intervalToDuration({
 *   start: new Date(1929, 0, 15, 12, 0, 0),
 *   end: new Date(1968, 3, 4, 19, 5, 0)
 * })
 * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }
 */
function intervalToDuration(interval) {
  const start = (0, _index8.toDate)(interval.start);
  const end = (0, _index8.toDate)(interval.end);

  const duration = {};

  const years = (0, _index7.differenceInYears)(end, start);
  if (years) duration.years = years;

  const remainingMonths = (0, _index.add)(start, { years: duration.years });

  const months = (0, _index5.differenceInMonths)(end, remainingMonths);
  if (months) duration.months = months;

  const remainingDays = (0, _index.add)(remainingMonths, {
    months: duration.months,
  });

  const days = (0, _index2.differenceInDays)(end, remainingDays);
  if (days) duration.days = days;

  const remainingHours = (0, _index.add)(remainingDays, {
    days: duration.days,
  });

  const hours = (0, _index3.differenceInHours)(end, remainingHours);
  if (hours) duration.hours = hours;

  const remainingMinutes = (0, _index.add)(remainingHours, {
    hours: duration.hours,
  });

  const minutes = (0, _index4.differenceInMinutes)(end, remainingMinutes);
  if (minutes) duration.minutes = minutes;

  const remainingSeconds = (0, _index.add)(remainingMinutes, {
    minutes: duration.minutes,
  });

  const seconds = (0, _index6.differenceInSeconds)(end, remainingSeconds);
  if (seconds) duration.seconds = seconds;

  return duration;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormat.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormat.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.intlFormat = intlFormat;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The locale string (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).
 */

/**
 * The format options (see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options)
 */

/**
 * The locale options.
 */

/**
 * @name intlFormat
 * @category Common Helpers
 * @summary Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).
 *
 * @description
 * Return the formatted date string in the given format.
 * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.
 * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)
 *
 * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to format
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 4 October 2019 in middle-endian format:
 * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))
 * //=> 10/4/2019
 */

/**
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to format
 * @param localeOptions - An object with locale
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 4 October 2019 in Korean.
 * // Convert the date with locale's options.
 * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {
 *   locale: 'ko-KR',
 * })
 * //=> 2019. 10. 4.
 */

/**
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to format
 * @param formatOptions - The format options
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 4 October 2019.
 * // Convert the date with format's options.
 * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {
 *   year: 'numeric',
 *   month: 'numeric',
 *   day: 'numeric',
 *   hour: 'numeric',
 * })
 * //=> 10/4/2019, 12 PM
 */

/**
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to format
 * @param formatOptions - The format options
 * @param localeOptions - An object with locale
 *
 * @returns The formatted date string
 *
 * @throws `date` must not be Invalid Date
 *
 * @example
 * // Represent 4 October 2019 in German.
 * // Convert the date with format's options and locale's options.
 * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {
 *   weekday: 'long',
 *   year: 'numeric',
 *   month: 'long',
 *   day: 'numeric',
 * }, {
 *   locale: 'de-DE',
 * })
 * //=> Freitag, 4. Oktober 2019
 */

function intlFormat(date, formatOrLocale, localeOptions) {
  let formatOptions;

  if (isFormatOptions(formatOrLocale)) {
    formatOptions = formatOrLocale;
  } else {
    localeOptions = formatOrLocale;
  }

  return new Intl.DateTimeFormat(localeOptions?.locale, formatOptions).format(
    (0, _index.toDate)(date),
  );
}

function isFormatOptions(opts) {
  return opts !== undefined && !("locale" in opts);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormatDistance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/intlFormatDistance.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.intlFormatDistance = intlFormatDistance;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

var _index2 = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index3 = __webpack_require__(/*! ./differenceInCalendarMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js");
var _index4 = __webpack_require__(/*! ./differenceInCalendarQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarQuarters.js");
var _index5 = __webpack_require__(/*! ./differenceInCalendarWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarWeeks.js");
var _index6 = __webpack_require__(/*! ./differenceInCalendarYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js");
var _index7 = __webpack_require__(/*! ./differenceInHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInHours.js");
var _index8 = __webpack_require__(/*! ./differenceInMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInMinutes.js");
var _index9 = __webpack_require__(/*! ./differenceInSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInSeconds.js");
var _index10 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link intlFormatDistance} function options.
 */

/**
 * The unit used to format the distance in {@link intlFormatDistance}.
 */

/**
 * @name intlFormatDistance
 * @category Common Helpers
 * @summary Formats distance between two dates in a human-readable format
 * @description
 * The function calculates the difference between two dates and formats it as a human-readable string.
 *
 * The function will pick the most appropriate unit depending on the distance between dates. For example, if the distance is a few hours, it might return `x hours`. If the distance is a few months, it might return `x months`.
 *
 * You can also specify a unit to force using it regardless of the distance to get a result like `123456 hours`.
 *
 * See the table below for the unit picking logic:
 *
 * | Distance between dates | Result (past)  | Result (future) |
 * | ---------------------- | -------------- | --------------- |
 * | 0 seconds              | now            | now             |
 * | 1-59 seconds           | X seconds ago  | in X seconds    |
 * | 1-59 minutes           | X minutes ago  | in X minutes    |
 * | 1-23 hours             | X hours ago    | in X hours      |
 * | 1 day                  | yesterday      | tomorrow        |
 * | 2-6 days               | X days ago     | in X days       |
 * | 7 days                 | last week      | next week       |
 * | 8 days-1 month         | X weeks ago    | in X weeks      |
 * | 1 month                | last month     | next month      |
 * | 2-3 months             | X months ago   | in X months     |
 * | 1 quarter              | last quarter   | next quarter    |
 * | 2-3 quarters           | X quarters ago | in X quarters   |
 * | 1 year                 | last year      | next year       |
 * | 2+ years               | X years ago    | in X years      |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date
 * @param baseDate - The date to compare with.
 * @param options - An object with options.
 * See MDN for details [Locale identification and negotiation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)
 * The narrow one could be similar to the short one for some locales.
 *
 * @returns The distance in words according to language-sensitive relative time formatting.
 *
 * @throws `date` must not be Invalid Date
 * @throws `baseDate` must not be Invalid Date
 * @throws `options.unit` must not be invalid Unit
 * @throws `options.locale` must not be invalid locale
 * @throws `options.localeMatcher` must not be invalid localeMatcher
 * @throws `options.numeric` must not be invalid numeric
 * @throws `options.style` must not be invalid style
 *
 * @example
 * // What is the distance between the dates when the fist date is after the second?
 * intlFormatDistance(
 *   new Date(1986, 3, 4, 11, 30, 0),
 *   new Date(1986, 3, 4, 10, 30, 0)
 * )
 * //=> 'in 1 hour'
 *
 * // What is the distance between the dates when the fist date is before the second?
 * intlFormatDistance(
 *   new Date(1986, 3, 4, 10, 30, 0),
 *   new Date(1986, 3, 4, 11, 30, 0)
 * )
 * //=> '1 hour ago'
 *
 * @example
 * // Use the unit option to force the function to output the result in quarters. Without setting it, the example would return "next year"
 * intlFormatDistance(
 *   new Date(1987, 6, 4, 10, 30, 0),
 *   new Date(1986, 3, 4, 10, 30, 0),
 *   { unit: 'quarter' }
 * )
 * //=> 'in 5 quarters'
 *
 * @example
 * // Use the locale option to get the result in Spanish. Without setting it, the example would return "in 1 hour".
 * intlFormatDistance(
 *   new Date(1986, 3, 4, 11, 30, 0),
 *   new Date(1986, 3, 4, 10, 30, 0),
 *   { locale: 'es' }
 * )
 * //=> 'dentro de 1 hora'
 *
 * @example
 * // Use the numeric option to force the function to use numeric values. Without setting it, the example would return "tomorrow".
 * intlFormatDistance(
 *   new Date(1986, 3, 5, 11, 30, 0),
 *   new Date(1986, 3, 4, 11, 30, 0),
 *   { numeric: 'always' }
 * )
 * //=> 'in 1 day'
 *
 * @example
 * // Use the style option to force the function to use short values. Without setting it, the example would return "in 2 years".
 * intlFormatDistance(
 *   new Date(1988, 3, 4, 11, 30, 0),
 *   new Date(1986, 3, 4, 11, 30, 0),
 *   { style: 'short' }
 * )
 * //=> 'in 2 yr'
 */
function intlFormatDistance(date, baseDate, options) {
  let value = 0;
  let unit;
  const dateLeft = (0, _index10.toDate)(date);
  const dateRight = (0, _index10.toDate)(baseDate);

  if (!options?.unit) {
    // Get the unit based on diffInSeconds calculations if no unit is specified
    const diffInSeconds = (0, _index9.differenceInSeconds)(dateLeft, dateRight); // The smallest unit

    if (Math.abs(diffInSeconds) < _index.secondsInMinute) {
      value = (0, _index9.differenceInSeconds)(dateLeft, dateRight);
      unit = "second";
    } else if (Math.abs(diffInSeconds) < _index.secondsInHour) {
      value = (0, _index8.differenceInMinutes)(dateLeft, dateRight);
      unit = "minute";
    } else if (
      Math.abs(diffInSeconds) < _index.secondsInDay &&
      Math.abs((0, _index2.differenceInCalendarDays)(dateLeft, dateRight)) < 1
    ) {
      value = (0, _index7.differenceInHours)(dateLeft, dateRight);
      unit = "hour";
    } else if (
      Math.abs(diffInSeconds) < _index.secondsInWeek &&
      (value = (0, _index2.differenceInCalendarDays)(dateLeft, dateRight)) &&
      Math.abs(value) < 7
    ) {
      unit = "day";
    } else if (Math.abs(diffInSeconds) < _index.secondsInMonth) {
      value = (0, _index5.differenceInCalendarWeeks)(dateLeft, dateRight);
      unit = "week";
    } else if (Math.abs(diffInSeconds) < _index.secondsInQuarter) {
      value = (0, _index3.differenceInCalendarMonths)(dateLeft, dateRight);
      unit = "month";
    } else if (Math.abs(diffInSeconds) < _index.secondsInYear) {
      if ((0, _index4.differenceInCalendarQuarters)(dateLeft, dateRight) < 4) {
        // To filter out cases that are less than a year but match 4 quarters
        value = (0, _index4.differenceInCalendarQuarters)(dateLeft, dateRight);
        unit = "quarter";
      } else {
        value = (0, _index6.differenceInCalendarYears)(dateLeft, dateRight);
        unit = "year";
      }
    } else {
      value = (0, _index6.differenceInCalendarYears)(dateLeft, dateRight);
      unit = "year";
    }
  } else {
    // Get the value if unit is specified
    unit = options?.unit;
    if (unit === "second") {
      value = (0, _index9.differenceInSeconds)(dateLeft, dateRight);
    } else if (unit === "minute") {
      value = (0, _index8.differenceInMinutes)(dateLeft, dateRight);
    } else if (unit === "hour") {
      value = (0, _index7.differenceInHours)(dateLeft, dateRight);
    } else if (unit === "day") {
      value = (0, _index2.differenceInCalendarDays)(dateLeft, dateRight);
    } else if (unit === "week") {
      value = (0, _index5.differenceInCalendarWeeks)(dateLeft, dateRight);
    } else if (unit === "month") {
      value = (0, _index3.differenceInCalendarMonths)(dateLeft, dateRight);
    } else if (unit === "quarter") {
      value = (0, _index4.differenceInCalendarQuarters)(dateLeft, dateRight);
    } else if (unit === "year") {
      value = (0, _index6.differenceInCalendarYears)(dateLeft, dateRight);
    }
  }

  const rtf = new Intl.RelativeTimeFormat(options?.locale, {
    localeMatcher: options?.localeMatcher,
    numeric: options?.numeric || "auto",
    style: options?.style,
  });

  return rtf.format(value, unit);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isAfter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isAfter.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isAfter = isAfter;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date that should be after the other one to return true
 * @param dateToCompare - The date to compare with
 *
 * @returns The first date is after the second date
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */
function isAfter(date, dateToCompare) {
  const _date = (0, _index.toDate)(date);
  const _dateToCompare = (0, _index.toDate)(dateToCompare);
  return _date.getTime() > _dateToCompare.getTime();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isBefore.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isBefore.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isBefore = isBefore;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isBefore
 * @category Common Helpers
 * @summary Is the first date before the second one?
 *
 * @description
 * Is the first date before the second one?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date that should be before the other one to return true
 * @param dateToCompare - The date to compare with
 *
 * @returns The first date is before the second date
 *
 * @example
 * // Is 10 July 1989 before 11 February 1987?
 * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> false
 */
function isBefore(date, dateToCompare) {
  const _date = (0, _index.toDate)(date);
  const _dateToCompare = (0, _index.toDate)(dateToCompare);
  return +_date < +_dateToCompare;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isDate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isDate.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.isDate = isDate; /**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param value - The value to check
 *
 * @returns True if the given value is a date
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */
function isDate(value) {
  return (
    value instanceof Date ||
    (typeof value === "object" &&
      Object.prototype.toString.call(value) === "[object Date]")
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isEqual.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isEqual.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isEqual = isEqual;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isEqual
 * @category Common Helpers
 * @summary Are the given dates equal?
 *
 * @description
 * Are the given dates equal?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to compare
 * @param dateRight - The second date to compare
 *
 * @returns The dates are equal
 *
 * @example
 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
 * const result = isEqual(
 *   new Date(2014, 6, 2, 6, 30, 45, 0),
 *   new Date(2014, 6, 2, 6, 30, 45, 500)
 * )
 * //=> false
 */
function isEqual(leftDate, rightDate) {
  const _dateLeft = (0, _index.toDate)(leftDate);
  const _dateRight = (0, _index.toDate)(rightDate);
  return +_dateLeft === +_dateRight;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isExists.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isExists.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.isExists = isExists; /**
 * @name isExists
 * @category Common Helpers
 * @summary Is the given date exists?
 *
 * @description
 * Checks if the given arguments convert to an existing date.
 *
 * @param year - The year of the date to check
 * @param month - The month of the date to check
 * @param day - The day of the date to check
 *
 * @returns `true` if the date exists
 *
 * @example
 * // For the valid date:
 * const result = isExists(2018, 0, 31)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isExists(2018, 1, 31)
 * //=> false
 */
function isExists(year, month, day) {
  const date = new Date(year, month, day);
  return (
    date.getFullYear() === year &&
    date.getMonth() === month &&
    date.getDate() === day
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFirstDayOfMonth.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFirstDayOfMonth.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isFirstDayOfMonth = isFirstDayOfMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isFirstDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the first day of a month?
 *
 * @description
 * Is the given date the first day of a month?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check

 * @returns The date is the first day of a month
 *
 * @example
 * // Is 1 September 2014 the first day of a month?
 * const result = isFirstDayOfMonth(new Date(2014, 8, 1))
 * //=> true
 */
function isFirstDayOfMonth(date) {
  return (0, _index.toDate)(date).getDate() === 1;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFriday.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFriday.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isFriday = isFriday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isFriday
 * @category Weekday Helpers
 * @summary Is the given date Friday?
 *
 * @description
 * Is the given date Friday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Friday
 *
 * @example
 * // Is 26 September 2014 Friday?
 * const result = isFriday(new Date(2014, 8, 26))
 * //=> true
 */
function isFriday(date) {
  return (0, _index.toDate)(date).getDay() === 5;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFuture.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isFuture.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isFuture = isFuture;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isFuture
 * @category Common Helpers
 * @summary Is the given date in the future?
 * @pure false
 *
 * @description
 * Is the given date in the future?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in the future
 *
 * @example
 * // If today is 6 October 2014, is 31 December 2014 in the future?
 * const result = isFuture(new Date(2014, 11, 31))
 * //=> true
 */
function isFuture(date) {
  return +(0, _index.toDate)(date) > Date.now();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLastDayOfMonth.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLastDayOfMonth.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isLastDayOfMonth = isLastDayOfMonth;
var _index = __webpack_require__(/*! ./endOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js");
var _index2 = __webpack_require__(/*! ./endOfMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isLastDayOfMonth
 * @category Month Helpers
 * @summary Is the given date the last day of a month?
 *
 * @description
 * Is the given date the last day of a month?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check

 * @returns The date is the last day of a month
 *
 * @example
 * // Is 28 February 2014 the last day of a month?
 * const result = isLastDayOfMonth(new Date(2014, 1, 28))
 * //=> true
 */
function isLastDayOfMonth(date) {
  const _date = (0, _index3.toDate)(date);
  return +(0, _index.endOfDay)(_date) === +(0, _index2.endOfMonth)(_date);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLeapYear.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isLeapYear.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isLeapYear = isLeapYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isLeapYear
 * @category Year Helpers
 * @summary Is the given date in the leap year?
 *
 * @description
 * Is the given date in the leap year?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in the leap year
 *
 * @example
 * // Is 1 September 2012 in the leap year?
 * const result = isLeapYear(new Date(2012, 8, 1))
 * //=> true
 */
function isLeapYear(date) {
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMatch.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMatch.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isMatch = isMatch;
var _index = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index2 = __webpack_require__(/*! ./parse.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse.js");

/**
 * The {@link isMatch} function options.
 */

/**
 * @name isMatch
 * @category Common Helpers
 * @summary validates the date string against given formats
 *
 * @description
 * Return the true if given date is string correct against the given format else
 * will return false.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * isMatch('23 AM', 'HH a')
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 001, ..., 999                |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `isMatch` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `isMatch('50', 'yy') //=> true`
 *
 *    `isMatch('75', 'yy') //=> true`
 *
 *    while `uu` will use the year as is:
 *
 *    `isMatch('50', 'uu') //=> true`
 *
 *    `isMatch('75', 'uu') //=> true`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)
 *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be checked in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),
 * the values will be taken from today's using `new Date()` date which works as a context of parsing.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateStr - The date string to verify
 * @param format - The string of tokens
 * @param options - An object with options.
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @returns Is format string a match for date string?
 *
 * @throws `options.locale` must contain `match` property
 * @throws use `yyyy` instead of `YYYY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `yy` instead of `YY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `d` instead of `D` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `dd` instead of `DD` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws format string contains an unescaped latin alphabet character
 *
 * @example
 * // Match 11 February 2014 from middle-endian format:
 * const result = isMatch('02/11/2014', 'MM/dd/yyyy')
 * //=> true
 *
 * @example
 * // Match 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * const result = isMatch('28-a de februaro', "do 'de' MMMM", {
 *   locale: eo
 * })
 * //=> true
 */
function isMatch(dateStr, formatStr, options) {
  return (0, _index.isValid)(
    (0, _index2.parse)(dateStr, formatStr, new Date(), options),
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMonday.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isMonday.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isMonday = isMonday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isMonday
 * @category Weekday Helpers
 * @summary Is the given date Monday?
 *
 * @description
 * Is the given date Monday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Monday
 *
 * @example
 * // Is 22 September 2014 Monday?
 * const result = isMonday(new Date(2014, 8, 22))
 * //=> true
 */
function isMonday(date) {
  return (0, _index.toDate)(date).getDay() === 1;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isPast.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isPast.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isPast = isPast;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isPast
 * @category Common Helpers
 * @summary Is the given date in the past?
 * @pure false
 *
 * @description
 * Is the given date in the past?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in the past
 *
 * @example
 * // If today is 6 October 2014, is 2 July 2014 in the past?
 * const result = isPast(new Date(2014, 6, 2))
 * //=> true
 */
function isPast(date) {
  return +(0, _index.toDate)(date) < Date.now();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameDay = isSameDay;
var _index = __webpack_require__(/*! ./startOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js");

/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day (and year and month)?
 *
 * @description
 * Are the given dates in the same day (and year and month)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check

 * @returns The dates are in the same day (and year and month)
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 *
 * @example
 * // Are 4 September and 4 October in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))
 * //=> false
 *
 * @example
 * // Are 4 September, 2014 and 4 September, 2015 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))
 * //=> false
 */
function isSameDay(dateLeft, dateRight) {
  const dateLeftStartOfDay = (0, _index.startOfDay)(dateLeft);
  const dateRightStartOfDay = (0, _index.startOfDay)(dateRight);

  return +dateLeftStartOfDay === +dateRightStartOfDay;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameHour.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameHour.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameHour = isSameHour;
var _index = __webpack_require__(/*! ./startOfHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfHour.js");

/**
 * @name isSameHour
 * @category Hour Helpers
 * @summary Are the given dates in the same hour (and same day)?
 *
 * @description
 * Are the given dates in the same hour (and same day)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same hour (and same day)
 *
 * @example
 * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
 * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
 * //=> true
 *
 * @example
 * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?
 * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))
 * //=> false
 */
function isSameHour(dateLeft, dateRight) {
  const dateLeftStartOfHour = (0, _index.startOfHour)(dateLeft);
  const dateRightStartOfHour = (0, _index.startOfHour)(dateRight);

  return +dateLeftStartOfHour === +dateRightStartOfHour;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeek.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeek.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameISOWeek = isSameISOWeek;
var _index = __webpack_require__(/*! ./isSameWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameWeek.js");

/**
 * @name isSameISOWeek
 * @category ISO Week Helpers
 * @summary Are the given dates in the same ISO week (and year)?
 *
 * @description
 * Are the given dates in the same ISO week (and year)?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same ISO week (and year)
 *
 * @example
 * // Are 1 September 2014 and 7 September 2014 in the same ISO week?
 * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))
 * //=> true
 *
 * @example
 * // Are 1 September 2014 and 1 September 2015 in the same ISO week?
 * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))
 * //=> false
 */
function isSameISOWeek(dateLeft, dateRight) {
  return (0, _index.isSameWeek)(dateLeft, dateRight, { weekStartsOn: 1 });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeekYear.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeekYear.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameISOWeekYear = isSameISOWeekYear;
var _index = __webpack_require__(/*! ./startOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js");

/**
 * @name isSameISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Are the given dates in the same ISO week-numbering year?
 *
 * @description
 * Are the given dates in the same ISO week-numbering year?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same ISO week-numbering year
 *
 * @example
 * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?
 * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))
 * //=> true
 */
function isSameISOWeekYear(dateLeft, dateRight) {
  const dateLeftStartOfYear = (0, _index.startOfISOWeekYear)(dateLeft);
  const dateRightStartOfYear = (0, _index.startOfISOWeekYear)(dateRight);

  return +dateLeftStartOfYear === +dateRightStartOfYear;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMinute.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMinute.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameMinute = isSameMinute;
var _index = __webpack_require__(/*! ./startOfMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMinute.js");

/**
 * @name isSameMinute
 * @category Minute Helpers
 * @summary Are the given dates in the same minute (and hour and day)?
 *
 * @description
 * Are the given dates in the same minute (and hour and day)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same minute (and hour and day)
 *
 * @example
 * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15 in the same minute?
 * const result = isSameMinute(
 *   new Date(2014, 8, 4, 6, 30),
 *   new Date(2014, 8, 4, 6, 30, 15)
 * )
 * //=> true
 *
 * @example
 * // Are 4 September 2014 06:30:00 and 5 September 2014 06:30:00 in the same minute?
 * const result = isSameMinute(
 *   new Date(2014, 8, 4, 6, 30),
 *   new Date(2014, 8, 5, 6, 30)
 * )
 * //=> false
 */
function isSameMinute(dateLeft, dateRight) {
  const dateLeftStartOfMinute = (0, _index.startOfMinute)(dateLeft);
  const dateRightStartOfMinute = (0, _index.startOfMinute)(dateRight);

  return +dateLeftStartOfMinute === +dateRightStartOfMinute;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMonth.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMonth.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameMonth = isSameMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isSameMonth
 * @category Month Helpers
 * @summary Are the given dates in the same month (and year)?
 *
 * @description
 * Are the given dates in the same month (and year)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same month (and year)
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 *
 * @example
 * // Are 2 September 2014 and 25 September 2015 in the same month?
 * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))
 * //=> false
 */
function isSameMonth(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);
  return (
    _dateLeft.getFullYear() === _dateRight.getFullYear() &&
    _dateLeft.getMonth() === _dateRight.getMonth()
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameQuarter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameQuarter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameQuarter = isSameQuarter;
var _index = __webpack_require__(/*! ./startOfQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js");

/**
 * @name isSameQuarter
 * @category Quarter Helpers
 * @summary Are the given dates in the same quarter (and year)?
 *
 * @description
 * Are the given dates in the same quarter (and year)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check

 * @returns The dates are in the same quarter (and year)
 *
 * @example
 * // Are 1 January 2014 and 8 March 2014 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
 * //=> true
 *
 * @example
 * // Are 1 January 2014 and 1 January 2015 in the same quarter?
 * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))
 * //=> false
 */
function isSameQuarter(dateLeft, dateRight) {
  const dateLeftStartOfQuarter = (0, _index.startOfQuarter)(dateLeft);
  const dateRightStartOfQuarter = (0, _index.startOfQuarter)(dateRight);

  return +dateLeftStartOfQuarter === +dateRightStartOfQuarter;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameSecond.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameSecond.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameSecond = isSameSecond;
var _index = __webpack_require__(/*! ./startOfSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfSecond.js");

/**
 * @name isSameSecond
 * @category Second Helpers
 * @summary Are the given dates in the same second (and hour and day)?
 *
 * @description
 * Are the given dates in the same second (and hour and day)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same second (and hour and day)
 *
 * @example
 * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500 in the same second?
 * const result = isSameSecond(
 *   new Date(2014, 8, 4, 6, 30, 15),
 *   new Date(2014, 8, 4, 6, 30, 15, 500)
 * )
 * //=> true
 *
 * @example
 * // Are 4 September 2014 06:00:15.000 and 4 September 2014 06:01.15.000 in the same second?
 * const result = isSameSecond(
 *   new Date(2014, 8, 4, 6, 0, 15),
 *   new Date(2014, 8, 4, 6, 1, 15)
 * )
 * //=> false
 *
 * @example
 * // Are 4 September 2014 06:00:15.000 and 5 September 2014 06:00.15.000 in the same second?
 * const result = isSameSecond(
 *   new Date(2014, 8, 4, 6, 0, 15),
 *   new Date(2014, 8, 5, 6, 0, 15)
 * )
 * //=> false
 */
function isSameSecond(dateLeft, dateRight) {
  const dateLeftStartOfSecond = (0, _index.startOfSecond)(dateLeft);
  const dateRightStartOfSecond = (0, _index.startOfSecond)(dateRight);

  return +dateLeftStartOfSecond === +dateRightStartOfSecond;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameWeek.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameWeek.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameWeek = isSameWeek;
var _index = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");

/**
 * The {@link isSameWeek} function options.
 */

/**
 * @name isSameWeek
 * @category Week Helpers
 * @summary Are the given dates in the same week (and month and year)?
 *
 * @description
 * Are the given dates in the same week (and month and year)?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 * @param options - An object with options
 *
 * @returns The dates are in the same week (and month and year)
 *
 * @example
 * // Are 31 August 2014 and 4 September 2014 in the same week?
 * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
 * //=> true
 *
 * @example
 * // If week starts with Monday,
 * // are 31 August 2014 and 4 September 2014 in the same week?
 * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
 *   weekStartsOn: 1
 * })
 * //=> false
 *
 * @example
 * // Are 1 January 2014 and 1 January 2015 in the same week?
 * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))
 * //=> false
 */
function isSameWeek(dateLeft, dateRight, options) {
  const dateLeftStartOfWeek = (0, _index.startOfWeek)(dateLeft, options);
  const dateRightStartOfWeek = (0, _index.startOfWeek)(dateRight, options);

  return +dateLeftStartOfWeek === +dateRightStartOfWeek;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameYear.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameYear.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSameYear = isSameYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isSameYear
 * @category Year Helpers
 * @summary Are the given dates in the same year?
 *
 * @description
 * Are the given dates in the same year?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateLeft - The first date to check
 * @param dateRight - The second date to check
 *
 * @returns The dates are in the same year
 *
 * @example
 * // Are 2 September 2014 and 25 September 2014 in the same year?
 * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
 * //=> true
 */
function isSameYear(dateLeft, dateRight) {
  const _dateLeft = (0, _index.toDate)(dateLeft);
  const _dateRight = (0, _index.toDate)(dateRight);
  return _dateLeft.getFullYear() === _dateRight.getFullYear();
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSaturday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSaturday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSaturday = isSaturday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isSaturday
 * @category Weekday Helpers
 * @summary Is the given date Saturday?
 *
 * @description
 * Is the given date Saturday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Saturday
 *
 * @example
 * // Is 27 September 2014 Saturday?
 * const result = isSaturday(new Date(2014, 8, 27))
 * //=> true
 */
function isSaturday(date) {
  return (0, _index.toDate)(date).getDay() === 6;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSunday.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSunday.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isSunday = isSunday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isSunday
 * @category Weekday Helpers
 * @summary Is the given date Sunday?
 *
 * @description
 * Is the given date Sunday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Sunday
 *
 * @example
 * // Is 21 September 2014 Sunday?
 * const result = isSunday(new Date(2014, 8, 21))
 * //=> true
 */
function isSunday(date) {
  return (0, _index.toDate)(date).getDay() === 0;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisHour.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisHour.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisHour = isThisHour;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameHour.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameHour.js");

/**
 * @name isThisHour
 * @category Hour Helpers
 * @summary Is the given date in the same hour as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same hour as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this hour
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:00:00 in this hour?
 * const result = isThisHour(new Date(2014, 8, 25, 18))
 * //=> true
 */
function isThisHour(date) {
  return (0, _index2.isSameHour)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisISOWeek.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisISOWeek.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisISOWeek = isThisISOWeek;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameISOWeek.js");

/**
 * @name isThisISOWeek
 * @category ISO Week Helpers
 * @summary Is the given date in the same ISO week as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same ISO week as the current date?
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this ISO week
 *
 * @example
 * // If today is 25 September 2014, is 22 September 2014 in this ISO week?
 * const result = isThisISOWeek(new Date(2014, 8, 22))
 * //=> true
 */

function isThisISOWeek(date) {
  return (0, _index2.isSameISOWeek)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMinute.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMinute.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisMinute = isThisMinute;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameMinute.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMinute.js");

/**
 * @name isThisMinute
 * @category Minute Helpers
 * @summary Is the given date in the same minute as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same minute as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this minute
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:30:00 in this minute?
 * const result = isThisMinute(new Date(2014, 8, 25, 18, 30))
 * //=> true
 */

function isThisMinute(date) {
  return (0, _index2.isSameMinute)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMonth.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisMonth.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisMonth = isThisMonth;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMonth.js");

/**
 * @name isThisMonth
 * @category Month Helpers
 * @summary Is the given date in the same month as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same month as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this month
 *
 * @example
 * // If today is 25 September 2014, is 15 September 2014 in this month?
 * const result = isThisMonth(new Date(2014, 8, 15))
 * //=> true
 */

function isThisMonth(date) {
  return (0, _index2.isSameMonth)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisQuarter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisQuarter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisQuarter = isThisQuarter;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameQuarter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameQuarter.js");

/**
 * @name isThisQuarter
 * @category Quarter Helpers
 * @summary Is the given date in the same quarter as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same quarter as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this quarter
 *
 * @example
 * // If today is 25 September 2014, is 2 July 2014 in this quarter?
 * const result = isThisQuarter(new Date(2014, 6, 2))
 * //=> true
 */
function isThisQuarter(date) {
  return (0, _index2.isSameQuarter)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisSecond.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisSecond.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisSecond = isThisSecond;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameSecond.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameSecond.js");

/**
 * @name isThisSecond
 * @category Second Helpers
 * @summary Is the given date in the same second as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same second as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this second
 *
 * @example
 * // If now is 25 September 2014 18:30:15.500,
 * // is 25 September 2014 18:30:15.000 in this second?
 * const result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))
 * //=> true
 */
function isThisSecond(date) {
  return (0, _index2.isSameSecond)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisWeek.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisWeek.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisWeek = isThisWeek;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameWeek.js");

/**
 * The {@link isThisWeek} function options.
 */

/**
 * @name isThisWeek
 * @category Week Helpers
 * @summary Is the given date in the same week as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same week as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 * @param options - The object with options
 *
 * @returns The date is in this week
 *
 * @example
 * // If today is 25 September 2014, is 21 September 2014 in this week?
 * const result = isThisWeek(new Date(2014, 8, 21))
 * //=> true
 *
 * @example
 * // If today is 25 September 2014 and week starts with Monday
 * // is 21 September 2014 in this week?
 * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })
 * //=> false
 */
function isThisWeek(date, options) {
  return (0, _index2.isSameWeek)(date, (0, _index.constructNow)(date), options);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisYear.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThisYear.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThisYear = isThisYear;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameYear.js");

/**
 * @name isThisYear
 * @category Year Helpers
 * @summary Is the given date in the same year as the current date?
 * @pure false
 *
 * @description
 * Is the given date in the same year as the current date?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is in this year
 *
 * @example
 * // If today is 25 September 2014, is 2 July 2014 in this year?
 * const result = isThisYear(new Date(2014, 6, 2))
 * //=> true
 */
function isThisYear(date) {
  return (0, _index2.isSameYear)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThursday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isThursday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isThursday = isThursday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isThursday
 * @category Weekday Helpers
 * @summary Is the given date Thursday?
 *
 * @description
 * Is the given date Thursday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Thursday
 *
 * @example
 * // Is 25 September 2014 Thursday?
 * const result = isThursday(new Date(2014, 8, 25))
 * //=> true
 */
function isThursday(date) {
  return (0, _index.toDate)(date).getDay() === 4;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isToday.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isToday.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isToday = isToday;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js");

/**
 * @name isToday
 * @category Day Helpers
 * @summary Is the given date today?
 * @pure false
 *
 * @description
 * Is the given date today?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is today
 *
 * @example
 * // If today is 6 October 2014, is 6 October 14:00:00 today?
 * const result = isToday(new Date(2014, 9, 6, 14, 0))
 * //=> true
 */
function isToday(date) {
  return (0, _index2.isSameDay)(date, (0, _index.constructNow)(date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTomorrow.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTomorrow.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isTomorrow = isTomorrow;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index3 = __webpack_require__(/*! ./isSameDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js");

/**
 * @name isTomorrow
 * @category Day Helpers
 * @summary Is the given date tomorrow?
 * @pure false
 *
 * @description
 * Is the given date tomorrow?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is tomorrow
 *
 * @example
 * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?
 * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))
 * //=> true
 */
function isTomorrow(date) {
  return (0, _index3.isSameDay)(
    date,
    (0, _index.addDays)((0, _index2.constructNow)(date), 1),
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTuesday.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isTuesday.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isTuesday = isTuesday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isTuesday
 * @category Weekday Helpers
 * @summary Is the given date Tuesday?
 *
 * @description
 * Is the given date Tuesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Tuesday
 *
 * @example
 * // Is 23 September 2014 Tuesday?
 * const result = isTuesday(new Date(2014, 8, 23))
 * //=> true
 */
function isTuesday(date) {
  return (0, _index.toDate)(date).getDay() === 2;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isValid = isValid;
var _index = __webpack_require__(/*! ./isDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isDate.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is valid
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */
function isValid(date) {
  if (!(0, _index.isDate)(date) && typeof date !== "number") {
    return false;
  }
  const _date = (0, _index2.toDate)(date);
  return !isNaN(Number(_date));
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWednesday.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWednesday.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isWednesday = isWednesday;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isWednesday
 * @category Weekday Helpers
 * @summary Is the given date Wednesday?
 *
 * @description
 * Is the given date Wednesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is Wednesday
 *
 * @example
 * // Is 24 September 2014 Wednesday?
 * const result = isWednesday(new Date(2014, 8, 24))
 * //=> true
 */
function isWednesday(date) {
  return (0, _index.toDate)(date).getDay() === 3;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWeekend.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isWeekend = isWeekend;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isWeekend
 * @category Weekday Helpers
 * @summary Does the given date fall on a weekend?
 *
 * @description
 * Does the given date fall on a weekend?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date falls on a weekend
 *
 * @example
 * // Does 5 October 2014 fall on a weekend?
 * const result = isWeekend(new Date(2014, 9, 5))
 * //=> true
 */
function isWeekend(date) {
  const day = (0, _index.toDate)(date).getDay();
  return day === 0 || day === 6;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWithinInterval.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWithinInterval.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isWithinInterval = isWithinInterval;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 * @param interval - The interval to check
 *
 * @returns The date is within the interval
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date })
 * // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end })
 * // => true
 */
function isWithinInterval(date, interval) {
  const time = +(0, _index.toDate)(date);
  const [startTime, endTime] = [
    +(0, _index.toDate)(interval.start),
    +(0, _index.toDate)(interval.end),
  ].sort((a, b) => a - b);

  return time >= startTime && time <= endTime;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isYesterday.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isYesterday.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.isYesterday = isYesterday;
var _index = __webpack_require__(/*! ./constructNow.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructNow.js");
var _index2 = __webpack_require__(/*! ./isSameDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js");
var _index3 = __webpack_require__(/*! ./subDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js");

/**
 * @name isYesterday
 * @category Day Helpers
 * @summary Is the given date yesterday?
 * @pure false
 *
 * @description
 * Is the given date yesterday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 *
 * @returns The date is yesterday
 *
 * @example
 * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
 * const result = isYesterday(new Date(2014, 9, 5, 14, 0))
 * //=> true
 */
function isYesterday(date) {
  return (0, _index2.isSameDay)(
    date,
    (0, _index3.subDays)((0, _index.constructNow)(date), 1),
  );
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfDecade.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfDecade.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfDecade = lastDayOfDecade;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name lastDayOfDecade
 * @category Decade Helpers
 * @summary Return the last day of a decade for the given date.
 *
 * @description
 * Return the last day of a decade for the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The last day of a decade
 *
 * @example
 * // The last day of a decade for 21 December 2012 21:12:00:
 * const result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))
 * //=> Wed Dec 31 2019 00:00:00
 */
function lastDayOfDecade(date) {
  // TODO: Switch to more technical definition in of decades that start with 1
  // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking
  // change, so it can only be done in 4.0.
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  const decade = 9 + Math.floor(year / 10) * 10;
  _date.setFullYear(decade + 1, 0, 0);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeek.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeek.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfISOWeek = lastDayOfISOWeek;
var _index = __webpack_require__(/*! ./lastDayOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfWeek.js");

/**
 * @name lastDayOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the last day of an ISO week for the given date.
 *
 * @description
 * Return the last day of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The last day of an ISO week
 *
 * @example
 * // The last day of an ISO week for 2 September 2014 11:55:00:
 * const result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Sep 07 2014 00:00:00
 */
function lastDayOfISOWeek(date) {
  return (0, _index.lastDayOfWeek)(date, { weekStartsOn: 1 });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeekYear.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfISOWeekYear.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfISOWeekYear = lastDayOfISOWeekYear;
var _index = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name lastDayOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the last day of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the last day of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The end of an ISO week-numbering year
 *
 * @example
 * // The last day of an ISO week-numbering year for 2 July 2005:
 * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Sun Jan 01 2006 00:00:00
 */
function lastDayOfISOWeekYear(date) {
  const year = (0, _index.getISOWeekYear)(date);
  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);
  fourthOfJanuary.setFullYear(year + 1, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  const _date = (0, _index2.startOfISOWeek)(fourthOfJanuary);
  _date.setDate(_date.getDate() - 1);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfMonth.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfMonth.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfMonth = lastDayOfMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name lastDayOfMonth
 * @category Month Helpers
 * @summary Return the last day of a month for the given date.
 *
 * @description
 * Return the last day of a month for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The last day of a month
 *
 * @example
 * // The last day of a month for 2 September 2014 11:55:00:
 * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 00:00:00
 */
function lastDayOfMonth(date) {
  const _date = (0, _index.toDate)(date);
  const month = _date.getMonth();
  _date.setFullYear(_date.getFullYear(), month + 1, 0);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfQuarter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfQuarter.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfQuarter = lastDayOfQuarter;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name lastDayOfQuarter
 * @category Quarter Helpers
 * @summary Return the last day of a year quarter for the given date.
 *
 * @description
 * Return the last day of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The last day of a quarter
 *
 * @example
 * // The last day of a quarter for 2 September 2014 11:55:00:
 * const result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 30 2014 00:00:00
 */
function lastDayOfQuarter(date) {
  const _date = (0, _index.toDate)(date);
  const currentMonth = _date.getMonth();
  const month = currentMonth - (currentMonth % 3) + 3;
  _date.setMonth(month, 0);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfWeek.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfWeek.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfWeek = lastDayOfWeek;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link lastDayOfWeek} function options.
 */

/**
 * @name lastDayOfWeek
 * @category Week Helpers
 * @summary Return the last day of a week for the given date.
 *
 * @description
 * Return the last day of a week for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The last day of a week
 *
 * @example
 * // The last day of a week for 2 September 2014 11:55:00:
 * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sat Sep 06 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:
 * const result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 00:00:00
 */
function lastDayOfWeek(date, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const _date = (0, _index.toDate)(date);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);

  _date.setHours(0, 0, 0, 0);
  _date.setDate(_date.getDate() + diff);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfYear.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lastDayOfYear.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lastDayOfYear = lastDayOfYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name lastDayOfYear
 * @category Year Helpers
 * @summary Return the last day of a year for the given date.
 *
 * @description
 * Return the last day of a year for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The last day of a year
 *
 * @example
 * // The last day of a year for 2 September 2014 11:55:00:
 * const result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Dec 31 2014 00:00:00
 */
function lastDayOfYear(date) {
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  _date.setFullYear(year + 1, 0, 0);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lightFormat.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/lightFormat.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.lightFormat = lightFormat;
Object.defineProperty(exports, "lightFormatters", ({
  enumerable: true,
  get: function () {
    return _index3.lightFormatters;
  },
}));
var _index = __webpack_require__(/*! ./isValid.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index3 = __webpack_require__(/*! ./_lib/format/lightFormatters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/lightFormatters.js");

// Rexports of internal for libraries to use.
// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874

// This RegExp consists of three parts separated by `|`:
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
const formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;

const escapedStringRegExp = /^'([^]*?)'?$/;
const doubleQuoteRegExp = /''/g;
const unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @private
 */

/**
 * @name lightFormat
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. Unlike `format`,
 * `lightFormat` doesn't use locales and outputs date using the most popular tokens.
 *
 * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   |
 * |---------------------------------|---------|-----------------------------------|
 * | AM, PM                          | a..aaa  | AM, PM                            |
 * |                                 | aaaa    | a.m., p.m.                        |
 * |                                 | aaaaa   | a, p                              |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 |
 * |                                 | yy      | 44, 01, 00, 17                    |
 * |                                 | yyy     | 044, 001, 000, 017                |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |
 * |                                 | MM      | 01, 02, ..., 12                   |
 * | Day of month                    | d       | 1, 2, ..., 31                     |
 * |                                 | dd      | 01, 02, ..., 31                   |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |
 * |                                 | hh      | 01, 02, ..., 11, 12               |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |
 * |                                 | HH      | 00, 01, 02, ..., 23               |
 * | Minute                          | m       | 0, 1, ..., 59                     |
 * |                                 | mm      | 00, 01, ..., 59                   |
 * | Second                          | s       | 0, 1, ..., 59                     |
 * |                                 | ss      | 00, 01, ..., 59                   |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |
 * |                                 | SS      | 00, 01, ..., 99                   |
 * |                                 | SSS     | 000, 001, ..., 999                |
 * |                                 | SSSS    | ...                               |
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param format - The string of tokens
 *
 * @returns The formatted date string
 *
 * @throws `Invalid time value` if the date is invalid
 * @throws format string contains an unescaped latin alphabet character
 *
 * @example
 * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')
 * //=> '2014-02-11'
 */
function lightFormat(date, formatStr) {
  const _date = (0, _index2.toDate)(date);

  if (!(0, _index.isValid)(_date)) {
    throw new RangeError("Invalid time value");
  }

  const tokens = formatStr.match(formattingTokensRegExp);

  // The only case when formattingTokensRegExp doesn't match the string is when it's empty
  if (!tokens) return "";

  const result = tokens
    .map((substring) => {
      // Replace two single quote characters with one single quote character
      if (substring === "''") {
        return "'";
      }

      const firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return cleanEscapedString(substring);
      }

      const formatter = _index3.lightFormatters[firstCharacter];
      if (formatter) {
        return formatter(_date, substring);
      }

      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            firstCharacter +
            "`",
        );
      }

      return substring;
    })
    .join("");

  return result;
}

function cleanEscapedString(input) {
  const matches = input.match(escapedStringRegExp);

  if (!matches) {
    return input;
  }

  return matches[1].replace(doubleQuoteRegExp, "'");
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.buildFormatLongFn = buildFormatLongFn;

function buildFormatLongFn(args) {
  return (options = {}) => {
    // TODO: Remove String()
    const width = options.width ? String(options.width) : args.defaultWidth;
    const format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.buildLocalizeFn = buildLocalizeFn; /* eslint-disable no-unused-vars */

/**
 * The localize function argument callback which allows to convert raw value to
 * the actual type.
 *
 * @param value - The value to convert
 *
 * @returns The converted value
 */

/**
 * The map of localized values for each width.
 */

/**
 * The index type of the locale unit value. It types conversion of units of
 * values that don't start at 0 (i.e. quarters).
 */

/**
 * Converts the unit value to the tuple of values.
 */

/**
 * The tuple of localized era values. The first element represents BC,
 * the second element represents AD.
 */

/**
 * The tuple of localized quarter values. The first element represents Q1.
 */

/**
 * The tuple of localized day values. The first element represents Sunday.
 */

/**
 * The tuple of localized month values. The first element represents January.
 */

function buildLocalizeFn(args) {
  return (value, options) => {
    const context = options?.context ? String(options.context) : "standalone";

    let valuesArray;
    if (context === "formatting" && args.formattingValues) {
      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      const width = options?.width ? String(options.width) : defaultWidth;

      valuesArray =
        args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      const defaultWidth = args.defaultWidth;
      const width = options?.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[width] || args.values[defaultWidth];
    }
    const index = args.argumentCallback ? args.argumentCallback(value) : value;

    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!
    return valuesArray[index];
  };
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchFn.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchFn.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.buildMatchFn = buildMatchFn;

function buildMatchFn(args) {
  return (string, options = {}) => {
    const width = options.width;

    const matchPattern =
      (width && args.matchPatterns[width]) ||
      args.matchPatterns[args.defaultMatchWidth];
    const matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }
    const matchedString = matchResult[0];

    const parsePatterns =
      (width && args.parsePatterns[width]) ||
      args.parsePatterns[args.defaultParseWidth];

    const key = Array.isArray(parsePatterns)
      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))
      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        findKey(parsePatterns, (pattern) => pattern.test(matchedString));

    let value;

    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback
      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        options.valueCallback(value)
      : value;

    const rest = string.slice(matchedString.length);

    return { value, rest };
  };
}

function findKey(object, predicate) {
  for (const key in object) {
    if (
      Object.prototype.hasOwnProperty.call(object, key) &&
      predicate(object[key])
    ) {
      return key;
    }
  }
  return undefined;
}

function findIndex(array, predicate) {
  for (let key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.buildMatchPatternFn = buildMatchPatternFn;

function buildMatchPatternFn(args) {
  return (string, options = {}) => {
    const matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    const matchedString = matchResult[0];

    const parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    let value = args.valueCallback
      ? args.valueCallback(parseResult[0])
      : parseResult[0];

    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
    value = options.valueCallback ? options.valueCallback(value) : value;

    const rest = string.slice(matchedString.length);

    return { value, rest };
  };
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.enUS = void 0;
var _index = __webpack_require__(/*! ./en-US/_lib/formatDistance.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js");
var _index2 = __webpack_require__(/*! ./en-US/_lib/formatLong.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js");
var _index3 = __webpack_require__(/*! ./en-US/_lib/formatRelative.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js");
var _index4 = __webpack_require__(/*! ./en-US/_lib/localize.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/localize.js");
var _index5 = __webpack_require__(/*! ./en-US/_lib/match.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/match.js");

/**
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)
 * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)
 */
const enUS = (exports.enUS = {
  code: "en-US",
  formatDistance: _index.formatDistance,
  formatLong: _index2.formatLong,
  formatRelative: _index3.formatRelative,
  localize: _index4.localize,
  match: _index5.match,
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1,
  },
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.formatDistance = void 0;

const formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds",
  },

  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds",
  },

  halfAMinute: "half a minute",

  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes",
  },

  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes",
  },

  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours",
  },

  xHours: {
    one: "1 hour",
    other: "{{count}} hours",
  },

  xDays: {
    one: "1 day",
    other: "{{count}} days",
  },

  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks",
  },

  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks",
  },

  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months",
  },

  xMonths: {
    one: "1 month",
    other: "{{count}} months",
  },

  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years",
  },

  xYears: {
    one: "1 year",
    other: "{{count}} years",
  },

  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years",
  },

  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years",
  },
};

const formatDistance = (token, count, options) => {
  let result;

  const tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }

  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }

  return result;
};
exports.formatDistance = formatDistance;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.formatLong = void 0;
var _index = __webpack_require__(/*! ../../_lib/buildFormatLongFn.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js");

const dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy",
};

const timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a",
};

const dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}",
};

const formatLong = (exports.formatLong = {
  date: (0, _index.buildFormatLongFn)({
    formats: dateFormats,
    defaultWidth: "full",
  }),

  time: (0, _index.buildFormatLongFn)({
    formats: timeFormats,
    defaultWidth: "full",
  }),

  dateTime: (0, _index.buildFormatLongFn)({
    formats: dateTimeFormats,
    defaultWidth: "full",
  }),
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.formatRelative = void 0;

const formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P",
};

const formatRelative = (token, _date, _baseDate, _options) =>
  formatRelativeLocale[token];
exports.formatRelative = formatRelative;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/localize.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/localize.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.localize = void 0;
var _index = __webpack_require__(/*! ../../_lib/buildLocalizeFn.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js");

const eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"],
};

const quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
const monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ],

  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ],
};

const dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ],
};

const dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
};

const formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night",
  },
};

const ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};

const localize = (exports.localize = {
  ordinalNumber,

  era: (0, _index.buildLocalizeFn)({
    values: eraValues,
    defaultWidth: "wide",
  }),

  quarter: (0, _index.buildLocalizeFn)({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1,
  }),

  month: (0, _index.buildLocalizeFn)({
    values: monthValues,
    defaultWidth: "wide",
  }),

  day: (0, _index.buildLocalizeFn)({
    values: dayValues,
    defaultWidth: "wide",
  }),

  dayPeriod: (0, _index.buildLocalizeFn)({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide",
  }),
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/match.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/en-US/_lib/match.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.match = void 0;

var _index = __webpack_require__(/*! ../../_lib/buildMatchFn.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchFn.js");
var _index2 = __webpack_require__(/*! ../../_lib/buildMatchPatternFn.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js");

const matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
const parseOrdinalNumberPattern = /\d+/i;

const matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i,
};
const parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i],
};

const matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i,
};
const parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i],
};

const matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
};
const parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],

  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^may/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i,
  ],
};

const matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
};
const parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
};

const matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
};
const parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i,
  },
};

const match = (exports.match = {
  ordinalNumber: (0, _index2.buildMatchPatternFn)({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10),
  }),

  era: (0, _index.buildMatchFn)({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any",
  }),

  quarter: (0, _index.buildMatchFn)({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index) => index + 1,
  }),

  month: (0, _index.buildMatchFn)({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any",
  }),

  day: (0, _index.buildMatchFn)({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any",
  }),

  dayPeriod: (0, _index.buildMatchFn)({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any",
  }),
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/max.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/max.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.max = max;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name max
 * @category Common Helpers
 * @summary Return the latest of the given dates.
 *
 * @description
 * Return the latest of the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dates - The dates to compare
 *
 * @returns The latest of the dates
 *
 * @example
 * // Which of these dates is the latest?
 * const result = max([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Sun Jul 02 1995 00:00:00
 */
function max(dates) {
  let result;
  dates.forEach(function (dirtyDate) {
    const currentDate = (0, _index.toDate)(dirtyDate);

    if (
      result === undefined ||
      result < currentDate ||
      isNaN(Number(currentDate))
    ) {
      result = currentDate;
    }
  });

  return result || new Date(NaN);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/milliseconds.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/milliseconds.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.milliseconds = milliseconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name milliseconds
 * @category Millisecond Helpers
 * @summary
 * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.
 *
 * @description
 * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.
 *
 * One years equals 365.2425 days according to the formula:
 *
 * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
 * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
 *
 * One month is a year divided by 12.
 *
 * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.
 *
 * @returns The milliseconds
 *
 * @example
 * // 1 year in milliseconds
 * milliseconds({ years: 1 })
 * //=> 31556952000
 *
 * // 3 months in milliseconds
 * milliseconds({ months: 3 })
 * //=> 7889238000
 */
function milliseconds({ years, months, weeks, days, hours, minutes, seconds }) {
  let totalDays = 0;

  if (years) totalDays += years * _index.daysInYear;
  if (months) totalDays += months * (_index.daysInYear / 12);
  if (weeks) totalDays += weeks * 7;
  if (days) totalDays += days;

  let totalSeconds = totalDays * 24 * 60 * 60;

  if (hours) totalSeconds += hours * 60 * 60;
  if (minutes) totalSeconds += minutes * 60;
  if (seconds) totalSeconds += seconds;

  return Math.trunc(totalSeconds * 1000);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToHours.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToHours.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.millisecondsToHours = millisecondsToHours;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name millisecondsToHours
 * @category Conversion Helpers
 * @summary Convert milliseconds to hours.
 *
 * @description
 * Convert a number of milliseconds to a full number of hours.
 *
 * @param milliseconds - The number of milliseconds to be converted
 *
 * @returns The number of milliseconds converted in hours
 *
 * @example
 * // Convert 7200000 milliseconds to hours:
 * const result = millisecondsToHours(7200000)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = millisecondsToHours(7199999)
 * //=> 1
 */
function millisecondsToHours(milliseconds) {
  const hours = milliseconds / _index.millisecondsInHour;
  return Math.trunc(hours);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToMinutes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToMinutes.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.millisecondsToMinutes = millisecondsToMinutes;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name millisecondsToMinutes
 * @category Conversion Helpers
 * @summary Convert milliseconds to minutes.
 *
 * @description
 * Convert a number of milliseconds to a full number of minutes.
 *
 * @param milliseconds - The number of milliseconds to be converted
 *
 * @returns The number of milliseconds converted in minutes
 *
 * @example
 * // Convert 60000 milliseconds to minutes:
 * const result = millisecondsToMinutes(60000)
 * //=> 1
 *
 * @example
 * // It uses floor rounding:
 * const result = millisecondsToMinutes(119999)
 * //=> 1
 */
function millisecondsToMinutes(milliseconds) {
  const minutes = milliseconds / _index.millisecondsInMinute;
  return Math.trunc(minutes);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToSeconds.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/millisecondsToSeconds.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.millisecondsToSeconds = millisecondsToSeconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name millisecondsToSeconds
 * @category Conversion Helpers
 * @summary Convert milliseconds to seconds.
 *
 * @description
 * Convert a number of milliseconds to a full number of seconds.
 *
 * @param milliseconds - The number of milliseconds to be converted
 *
 * @returns The number of milliseconds converted in seconds
 *
 * @example
 * // Convert 1000 miliseconds to seconds:
 * const result = millisecondsToSeconds(1000)
 * //=> 1
 *
 * @example
 * // It uses floor rounding:
 * const result = millisecondsToSeconds(1999)
 * //=> 1
 */
function millisecondsToSeconds(milliseconds) {
  const seconds = milliseconds / _index.millisecondsInSecond;
  return Math.trunc(seconds);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/min.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/min.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.min = min;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name min
 * @category Common Helpers
 * @summary Returns the earliest of the given dates.
 *
 * @description
 * Returns the earliest of the given dates.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dates - The dates to compare
 *
 * @returns The earliest of the dates
 *
 * @example
 * // Which of these dates is the earliest?
 * const result = min([
 *   new Date(1989, 6, 10),
 *   new Date(1987, 1, 11),
 *   new Date(1995, 6, 2),
 *   new Date(1990, 0, 1)
 * ])
 * //=> Wed Feb 11 1987 00:00:00
 */
function min(dates) {
  let result;

  dates.forEach((dirtyDate) => {
    const date = (0, _index.toDate)(dirtyDate);
    if (!result || result > date || isNaN(+date)) {
      result = date;
    }
  });

  return result || new Date(NaN);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToHours.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToHours.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.minutesToHours = minutesToHours;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name minutesToHours
 * @category Conversion Helpers
 * @summary Convert minutes to hours.
 *
 * @description
 * Convert a number of minutes to a full number of hours.
 *
 * @param minutes - The number of minutes to be converted
 *
 * @returns The number of minutes converted in hours
 *
 * @example
 * // Convert 140 minutes to hours:
 * const result = minutesToHours(120)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = minutesToHours(179)
 * //=> 2
 */
function minutesToHours(minutes) {
  const hours = minutes / _index.minutesInHour;
  return Math.trunc(hours);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToMilliseconds.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToMilliseconds.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.minutesToMilliseconds = minutesToMilliseconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name minutesToMilliseconds
 * @category Conversion Helpers
 * @summary Convert minutes to milliseconds.
 *
 * @description
 * Convert a number of minutes to a full number of milliseconds.
 *
 * @param minutes - The number of minutes to be converted
 *
 * @returns The number of minutes converted in milliseconds
 *
 * @example
 * // Convert 2 minutes to milliseconds
 * const result = minutesToMilliseconds(2)
 * //=> 120000
 */
function minutesToMilliseconds(minutes) {
  return Math.trunc(minutes * _index.millisecondsInMinute);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToSeconds.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/minutesToSeconds.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.minutesToSeconds = minutesToSeconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name minutesToSeconds
 * @category Conversion Helpers
 * @summary Convert minutes to seconds.
 *
 * @description
 * Convert a number of minutes to a full number of seconds.
 *
 * @param minutes - The number of minutes to be converted
 *
 * @returns The number of minutes converted in seconds
 *
 * @example
 * // Convert 2 minutes to seconds
 * const result = minutesToSeconds(2)
 * //=> 120
 */
function minutesToSeconds(minutes) {
  return Math.trunc(minutes * _index.secondsInMinute);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToQuarters.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToQuarters.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.monthsToQuarters = monthsToQuarters;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name monthsToQuarters
 * @category Conversion Helpers
 * @summary Convert number of months to quarters.
 *
 * @description
 * Convert a number of months to a full number of quarters.
 *
 * @param months - The number of months to be converted.
 *
 * @returns The number of months converted in quarters
 *
 * @example
 * // Convert 6 months to quarters:
 * const result = monthsToQuarters(6)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = monthsToQuarters(7)
 * //=> 2
 */
function monthsToQuarters(months) {
  const quarters = months / _index.monthsInQuarter;
  return Math.trunc(quarters);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToYears.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/monthsToYears.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.monthsToYears = monthsToYears;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name monthsToYears
 * @category Conversion Helpers
 * @summary Convert number of months to years.
 *
 * @description
 * Convert a number of months to a full number of years.
 *
 * @param months - The number of months to be converted
 *
 * @returns The number of months converted in years
 *
 * @example
 * // Convert 36 months to years:
 * const result = monthsToYears(36)
 * //=> 3
 *
 * // It uses floor rounding:
 * const result = monthsToYears(40)
 * //=> 3
 */
function monthsToYears(months) {
  const years = months / _index.monthsInYear;
  return Math.trunc(years);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextDay = nextDay;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./getDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js");

/**
 * @name nextDay
 * @category Weekday Helpers
 * @summary When is the next day of the week?
 *
 * @description
 * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 * @param day - day of the week
 *
 * @returns The date is the next day of week
 *
 * @example
 * // When is the next Monday after Mar, 20, 2020?
 * const result = nextDay(new Date(2020, 2, 20), 1)
 * //=> Mon Mar 23 2020 00:00:00
 *
 * @example
 * // When is the next Tuesday after Mar, 21, 2020?
 * const result = nextDay(new Date(2020, 2, 21), 2)
 * //=> Tue Mar 24 2020 00:00:00
 */
function nextDay(date, day) {
  let delta = day - (0, _index2.getDay)(date);
  if (delta <= 0) delta += 7;

  return (0, _index.addDays)(date, delta);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextFriday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextFriday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextFriday = nextFriday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextFriday
 * @category Weekday Helpers
 * @summary When is the next Friday?
 *
 * @description
 * When is the next Friday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Friday
 *
 * @example
 * // When is the next Friday after Mar, 22, 2020?
 * const result = nextFriday(new Date(2020, 2, 22))
 * //=> Fri Mar 27 2020 00:00:00
 */
function nextFriday(date) {
  return (0, _index.nextDay)(date, 5);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextMonday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextMonday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextMonday = nextMonday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextMonday
 * @category Weekday Helpers
 * @summary When is the next Monday?
 *
 * @description
 * When is the next Monday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Monday
 *
 * @example
 * // When is the next Monday after Mar, 22, 2020?
 * const result = nextMonday(new Date(2020, 2, 22))
 * //=> Mon Mar 23 2020 00:00:00
 */
function nextMonday(date) {
  return (0, _index.nextDay)(date, 1);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSaturday.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSaturday.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextSaturday = nextSaturday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextSaturday
 * @category Weekday Helpers
 * @summary When is the next Saturday?
 *
 * @description
 * When is the next Saturday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Saturday
 *
 * @example
 * // When is the next Saturday after Mar, 22, 2020?
 * const result = nextSaturday(new Date(2020, 2, 22))
 * //=> Sat Mar 28 2020 00:00:00
 */
function nextSaturday(date) {
  return (0, _index.nextDay)(date, 6);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSunday.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextSunday.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextSunday = nextSunday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextSunday
 * @category Weekday Helpers
 * @summary When is the next Sunday?
 *
 * @description
 * When is the next Sunday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Sunday
 *
 * @example
 * // When is the next Sunday after Mar, 22, 2020?
 * const result = nextSunday(new Date(2020, 2, 22))
 * //=> Sun Mar 29 2020 00:00:00
 */
function nextSunday(date) {
  return (0, _index.nextDay)(date, 0);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextThursday.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextThursday.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextThursday = nextThursday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextThursday
 * @category Weekday Helpers
 * @summary When is the next Thursday?
 *
 * @description
 * When is the next Thursday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Thursday
 *
 * @example
 * // When is the next Thursday after Mar, 22, 2020?
 * const result = nextThursday(new Date(2020, 2, 22))
 * //=> Thur Mar 26 2020 00:00:00
 */
function nextThursday(date) {
  return (0, _index.nextDay)(date, 4);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextTuesday.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextTuesday.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextTuesday = nextTuesday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextTuesday
 * @category Weekday Helpers
 * @summary When is the next Tuesday?
 *
 * @description
 * When is the next Tuesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Tuesday
 *
 * @example
 * // When is the next Tuesday after Mar, 22, 2020?
 * const result = nextTuesday(new Date(2020, 2, 22))
 * //=> Tue Mar 24 2020 00:00:00
 */
function nextTuesday(date) {
  return (0, _index.nextDay)(date, 2);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextWednesday.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextWednesday.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.nextWednesday = nextWednesday;
var _index = __webpack_require__(/*! ./nextDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/nextDay.js");

/**
 * @name nextWednesday
 * @category Weekday Helpers
 * @summary When is the next Wednesday?
 *
 * @description
 * When is the next Wednesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The next Wednesday
 *
 * @example
 * // When is the next Wednesday after Mar, 22, 2020?
 * const result = nextWednesday(new Date(2020, 2, 22))
 * //=> Wed Mar 25 2020 00:00:00
 */
function nextWednesday(date) {
  return (0, _index.nextDay)(date, 3);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "longFormatters", ({
  enumerable: true,
  get: function () {
    return _index5.longFormatters;
  },
}));
exports.parse = parse;
Object.defineProperty(exports, "parsers", ({
  enumerable: true,
  get: function () {
    return _index7.parsers;
  },
}));
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./getDefaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDefaultOptions.js");
var _index3 = __webpack_require__(/*! ./_lib/defaultLocale.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultLocale.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index5 = __webpack_require__(/*! ./_lib/format/longFormatters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/format/longFormatters.js");
var _index6 = __webpack_require__(/*! ./_lib/protectedTokens.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/protectedTokens.js");

var _index7 = __webpack_require__(/*! ./parse/_lib/parsers.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers.js");

var _Setter = __webpack_require__(/*! ./parse/_lib/Setter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Setter.js");

// Rexports of internal for libraries to use.
// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874

/**
 * The {@link parse} function options.
 */

// This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
const formattingTokensRegExp =
  /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
const longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;

const escapedStringRegExp = /^'([^]*?)'?$/;
const doubleQuoteRegExp = /''/g;

const notWhitespaceRegExp = /\S/;
const unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 001, ..., 999                |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)
 *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param dateStr - The string to parse
 * @param formatStr - The string of tokens
 * @param referenceDate - defines values missing from the parsed dateString
 * @param options - An object with options.
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @returns The parsed date
 *
 * @throws `options.locale` must contain `match` property
 * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */
function parse(dateStr, formatStr, referenceDate, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const locale =
    options?.locale ?? defaultOptions.locale ?? _index3.defaultLocale;

  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  if (formatStr === "") {
    if (dateStr === "") {
      return (0, _index4.toDate)(referenceDate);
    } else {
      return (0, _index.constructFrom)(referenceDate, NaN);
    }
  }

  const subFnOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale,
  };

  // If timezone isn't specified, it will be set to the system timezone
  const setters = [new _Setter.DateToSystemTimezoneSetter()];

  const tokens = formatStr
    .match(longFormattingTokensRegExp)
    .map((substring) => {
      const firstCharacter = substring[0];
      if (firstCharacter in _index5.longFormatters) {
        const longFormatter = _index5.longFormatters[firstCharacter];
        return longFormatter(substring, locale.formatLong);
      }
      return substring;
    })
    .join("")
    .match(formattingTokensRegExp);

  const usedTokens = [];

  for (let token of tokens) {
    if (
      !options?.useAdditionalWeekYearTokens &&
      (0, _index6.isProtectedWeekYearToken)(token)
    ) {
      (0, _index6.warnOrThrowProtectedError)(token, formatStr, dateStr);
    }
    if (
      !options?.useAdditionalDayOfYearTokens &&
      (0, _index6.isProtectedDayOfYearToken)(token)
    ) {
      (0, _index6.warnOrThrowProtectedError)(token, formatStr, dateStr);
    }

    const firstCharacter = token[0];
    const parser = _index7.parsers[firstCharacter];
    if (parser) {
      const { incompatibleTokens } = parser;
      if (Array.isArray(incompatibleTokens)) {
        const incompatibleToken = usedTokens.find(
          (usedToken) =>
            incompatibleTokens.includes(usedToken.token) ||
            usedToken.token === firstCharacter,
        );
        if (incompatibleToken) {
          throw new RangeError(
            `The format string mustn't contain \`${incompatibleToken.fullToken}\` and \`${token}\` at the same time`,
          );
        }
      } else if (parser.incompatibleTokens === "*" && usedTokens.length > 0) {
        throw new RangeError(
          `The format string mustn't contain \`${token}\` and any other token at the same time`,
        );
      }

      usedTokens.push({ token: firstCharacter, fullToken: token });

      const parseResult = parser.run(
        dateStr,
        token,
        locale.match,
        subFnOptions,
      );

      if (!parseResult) {
        return (0, _index.constructFrom)(referenceDate, NaN);
      }

      setters.push(parseResult.setter);

      dateStr = parseResult.rest;
    } else {
      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            firstCharacter +
            "`",
        );
      }

      // Replace two single quote characters with one single quote character
      if (token === "''") {
        token = "'";
      } else if (firstCharacter === "'") {
        token = cleanEscapedString(token);
      }

      // Cut token from string, or, if string doesn't match the token, return Invalid Date
      if (dateStr.indexOf(token) === 0) {
        dateStr = dateStr.slice(token.length);
      } else {
        return (0, _index.constructFrom)(referenceDate, NaN);
      }
    }
  }

  // Check if the remaining input contains something other than whitespace
  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {
    return (0, _index.constructFrom)(referenceDate, NaN);
  }

  const uniquePrioritySetters = setters
    .map((setter) => setter.priority)
    .sort((a, b) => b - a)
    .filter((priority, index, array) => array.indexOf(priority) === index)
    .map((priority) =>
      setters
        .filter((setter) => setter.priority === priority)
        .sort((a, b) => b.subPriority - a.subPriority),
    )
    .map((setterArray) => setterArray[0]);

  let date = (0, _index4.toDate)(referenceDate);

  if (isNaN(date.getTime())) {
    return (0, _index.constructFrom)(referenceDate, NaN);
  }

  const flags = {};
  for (const setter of uniquePrioritySetters) {
    if (!setter.validate(date, subFnOptions)) {
      return (0, _index.constructFrom)(referenceDate, NaN);
    }

    const result = setter.set(date, flags, subFnOptions);
    // Result is tuple (date, flags)
    if (Array.isArray(result)) {
      date = result[0];
      Object.assign(flags, result[1]);
      // Result is date
    } else {
      date = result;
    }
  }

  return (0, _index.constructFrom)(referenceDate, date);
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.Parser = void 0;
var _Setter = __webpack_require__(/*! ./Setter.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Setter.js");

class Parser {
  run(dateString, token, match, options) {
    const result = this.parse(dateString, token, match, options);
    if (!result) {
      return null;
    }

    return {
      setter: new _Setter.ValueSetter(
        result.value,
        this.validate,
        this.set,
        this.priority,
        this.subPriority,
      ),
      rest: result.rest,
    };
  }

  validate(_utcDate, _value, _options) {
    return true;
  }
}
exports.Parser = Parser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Setter.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Setter.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ValueSetter =
  exports.Setter =
  exports.DateToSystemTimezoneSetter =
    void 0;
var _index = __webpack_require__(/*! ../../transpose.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/transpose.js");
var _index2 = __webpack_require__(/*! ../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

const TIMEZONE_UNIT_PRIORITY = 10;

class Setter {
  subPriority = 0;

  validate(_utcDate, _options) {
    return true;
  }
}
exports.Setter = Setter;

class ValueSetter extends Setter {
  constructor(
    value,

    validateValue,

    setValue,

    priority,
    subPriority,
  ) {
    super();
    this.value = value;
    this.validateValue = validateValue;
    this.setValue = setValue;
    this.priority = priority;
    if (subPriority) {
      this.subPriority = subPriority;
    }
  }

  validate(date, options) {
    return this.validateValue(date, this.value, options);
  }

  set(date, flags, options) {
    return this.setValue(date, flags, this.value, options);
  }
}
exports.ValueSetter = ValueSetter;

class DateToSystemTimezoneSetter extends Setter {
  priority = TIMEZONE_UNIT_PRIORITY;
  subPriority = -1;
  set(date, flags) {
    if (flags.timestampIsSet) return date;
    return (0, _index2.constructFrom)(date, (0, _index.transpose)(date, Date));
  }
}
exports.DateToSystemTimezoneSetter = DateToSystemTimezoneSetter;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.timezonePatterns = exports.numericPatterns = void 0;
const numericPatterns = (exports.numericPatterns = {
  month: /^(1[0-2]|0?\d)/, // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/, // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/, // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/, // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/, // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/, // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/, // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/, // 0 to 12
  minute: /^[0-5]?\d/, // 0 to 59
  second: /^[0-5]?\d/, // 0 to 59

  singleDigit: /^\d/, // 0 to 9
  twoDigits: /^\d{1,2}/, // 0 to 99
  threeDigits: /^\d{1,3}/, // 0 to 999
  fourDigits: /^\d{1,4}/, // 0 to 9999

  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/, // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/, // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/, // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/, // 0 to 9999, -0 to -9999
});

const timezonePatterns = (exports.timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/,
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.parsers = void 0;
var _EraParser = __webpack_require__(/*! ./parsers/EraParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/EraParser.js");
var _YearParser = __webpack_require__(/*! ./parsers/YearParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/YearParser.js");
var _LocalWeekYearParser = __webpack_require__(/*! ./parsers/LocalWeekYearParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js");
var _ISOWeekYearParser = __webpack_require__(/*! ./parsers/ISOWeekYearParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js");
var _ExtendedYearParser = __webpack_require__(/*! ./parsers/ExtendedYearParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js");
var _QuarterParser = __webpack_require__(/*! ./parsers/QuarterParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/QuarterParser.js");
var _StandAloneQuarterParser = __webpack_require__(/*! ./parsers/StandAloneQuarterParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js");
var _MonthParser = __webpack_require__(/*! ./parsers/MonthParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MonthParser.js");
var _StandAloneMonthParser = __webpack_require__(/*! ./parsers/StandAloneMonthParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js");
var _LocalWeekParser = __webpack_require__(/*! ./parsers/LocalWeekParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js");
var _ISOWeekParser = __webpack_require__(/*! ./parsers/ISOWeekParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js");
var _DateParser = __webpack_require__(/*! ./parsers/DateParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DateParser.js");
var _DayOfYearParser = __webpack_require__(/*! ./parsers/DayOfYearParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js");
var _DayParser = __webpack_require__(/*! ./parsers/DayParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayParser.js");
var _LocalDayParser = __webpack_require__(/*! ./parsers/LocalDayParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js");
var _StandAloneLocalDayParser = __webpack_require__(/*! ./parsers/StandAloneLocalDayParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js");
var _ISODayParser = __webpack_require__(/*! ./parsers/ISODayParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISODayParser.js");
var _AMPMParser = __webpack_require__(/*! ./parsers/AMPMParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMParser.js");
var _AMPMMidnightParser = __webpack_require__(/*! ./parsers/AMPMMidnightParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js");
var _DayPeriodParser = __webpack_require__(/*! ./parsers/DayPeriodParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js");
var _Hour1to12Parser = __webpack_require__(/*! ./parsers/Hour1to12Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js");
var _Hour0to23Parser = __webpack_require__(/*! ./parsers/Hour0to23Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js");
var _Hour0To11Parser = __webpack_require__(/*! ./parsers/Hour0To11Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js");
var _Hour1To24Parser = __webpack_require__(/*! ./parsers/Hour1To24Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js");
var _MinuteParser = __webpack_require__(/*! ./parsers/MinuteParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MinuteParser.js");
var _SecondParser = __webpack_require__(/*! ./parsers/SecondParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/SecondParser.js");
var _FractionOfSecondParser = __webpack_require__(/*! ./parsers/FractionOfSecondParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js");
var _ISOTimezoneWithZParser = __webpack_require__(/*! ./parsers/ISOTimezoneWithZParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js");
var _ISOTimezoneParser = __webpack_require__(/*! ./parsers/ISOTimezoneParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js");
var _TimestampSecondsParser = __webpack_require__(/*! ./parsers/TimestampSecondsParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js");
var _TimestampMillisecondsParser = __webpack_require__(/*! ./parsers/TimestampMillisecondsParser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js");

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here
const parsers = (exports.parsers = {
  G: new _EraParser.EraParser(),
  y: new _YearParser.YearParser(),
  Y: new _LocalWeekYearParser.LocalWeekYearParser(),
  R: new _ISOWeekYearParser.ISOWeekYearParser(),
  u: new _ExtendedYearParser.ExtendedYearParser(),
  Q: new _QuarterParser.QuarterParser(),
  q: new _StandAloneQuarterParser.StandAloneQuarterParser(),
  M: new _MonthParser.MonthParser(),
  L: new _StandAloneMonthParser.StandAloneMonthParser(),
  w: new _LocalWeekParser.LocalWeekParser(),
  I: new _ISOWeekParser.ISOWeekParser(),
  d: new _DateParser.DateParser(),
  D: new _DayOfYearParser.DayOfYearParser(),
  E: new _DayParser.DayParser(),
  e: new _LocalDayParser.LocalDayParser(),
  c: new _StandAloneLocalDayParser.StandAloneLocalDayParser(),
  i: new _ISODayParser.ISODayParser(),
  a: new _AMPMParser.AMPMParser(),
  b: new _AMPMMidnightParser.AMPMMidnightParser(),
  B: new _DayPeriodParser.DayPeriodParser(),
  h: new _Hour1to12Parser.Hour1to12Parser(),
  H: new _Hour0to23Parser.Hour0to23Parser(),
  K: new _Hour0To11Parser.Hour0To11Parser(),
  k: new _Hour1To24Parser.Hour1To24Parser(),
  m: new _MinuteParser.MinuteParser(),
  s: new _SecondParser.SecondParser(),
  S: new _FractionOfSecondParser.FractionOfSecondParser(),
  X: new _ISOTimezoneWithZParser.ISOTimezoneWithZParser(),
  x: new _ISOTimezoneParser.ISOTimezoneParser(),
  t: new _TimestampSecondsParser.TimestampSecondsParser(),
  T: new _TimestampMillisecondsParser.TimestampMillisecondsParser(),
});


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.AMPMMidnightParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class AMPMMidnightParser extends _Parser.Parser {
  priority = 80;

  parse(dateString, token, match) {
    switch (token) {
      case "b":
      case "bb":
      case "bbb":
        return (
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );

      case "bbbbb":
        return match.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting",
        });
      case "bbbb":
      default:
        return (
          match.dayPeriod(dateString, {
            width: "wide",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );
    }
  }

  set(date, _flags, value) {
    date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["a", "B", "H", "k", "t", "T"];
}
exports.AMPMMidnightParser = AMPMMidnightParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMParser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/AMPMParser.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.AMPMParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class AMPMParser extends _Parser.Parser {
  priority = 80;

  parse(dateString, token, match) {
    switch (token) {
      case "a":
      case "aa":
      case "aaa":
        return (
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );

      case "aaaaa":
        return match.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting",
        });
      case "aaaa":
      default:
        return (
          match.dayPeriod(dateString, {
            width: "wide",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );
    }
  }

  set(date, _flags, value) {
    date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["b", "B", "H", "k", "t", "T"];
}
exports.AMPMParser = AMPMParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DateParser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DateParser.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.DateParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

const DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
const DAYS_IN_MONTH_LEAP_YEAR = [
  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,
];

// Day of the month
class DateParser extends _Parser.Parser {
  priority = 90;
  subPriority = 1;

  parse(dateString, token, match) {
    switch (token) {
      case "d":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.date,
          dateString,
        );
      case "do":
        return match.ordinalNumber(dateString, { unit: "date" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(date, value) {
    const year = date.getFullYear();
    const isLeapYear = (0, _utils.isLeapYearIndex)(year);
    const month = date.getMonth();
    if (isLeapYear) {
      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
    } else {
      return value >= 1 && value <= DAYS_IN_MONTH[month];
    }
  }

  set(date, _flags, value) {
    date.setDate(value);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.DateParser = DateParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.DayOfYearParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class DayOfYearParser extends _Parser.Parser {
  priority = 90;

  subpriority = 1;

  parse(dateString, token, match) {
    switch (token) {
      case "D":
      case "DD":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.dayOfYear,
          dateString,
        );
      case "Do":
        return match.ordinalNumber(dateString, { unit: "date" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(date, value) {
    const year = date.getFullYear();
    const isLeapYear = (0, _utils.isLeapYearIndex)(year);
    if (isLeapYear) {
      return value >= 1 && value <= 366;
    } else {
      return value >= 1 && value <= 365;
    }
  }

  set(date, _flags, value) {
    date.setMonth(0, value);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "E",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.DayOfYearParser = DayOfYearParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayParser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayParser.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.DayParser = void 0;
var _index = __webpack_require__(/*! ../../../setDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

// Day of week
class DayParser extends _Parser.Parser {
  priority = 90;

  parse(dateString, token, match) {
    switch (token) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return (
          match.day(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );

      // T
      case "EEEEE":
        return match.day(dateString, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "EEEEEE":
        return (
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );

      // Tuesday
      case "EEEE":
      default:
        return (
          match.day(dateString, { width: "wide", context: "formatting" }) ||
          match.day(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 6;
  }

  set(date, _flags, value, options) {
    date = (0, _index.setDay)(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["D", "i", "e", "c", "t", "T"];
}
exports.DayParser = DayParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.DayPeriodParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// in the morning, in the afternoon, in the evening, at night
class DayPeriodParser extends _Parser.Parser {
  priority = 80;

  parse(dateString, token, match) {
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return (
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );

      case "BBBBB":
        return match.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting",
        });
      case "BBBB":
      default:
        return (
          match.dayPeriod(dateString, {
            width: "wide",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );
    }
  }

  set(date, _flags, value) {
    date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["a", "b", "t", "T"];
}
exports.DayPeriodParser = DayPeriodParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/EraParser.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/EraParser.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.EraParser = void 0;

var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

class EraParser extends _Parser.Parser {
  priority = 140;

  parse(dateString, token, match) {
    switch (token) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return (
          match.era(dateString, { width: "abbreviated" }) ||
          match.era(dateString, { width: "narrow" })
        );

      // A, B
      case "GGGGG":
        return match.era(dateString, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return (
          match.era(dateString, { width: "wide" }) ||
          match.era(dateString, { width: "abbreviated" }) ||
          match.era(dateString, { width: "narrow" })
        );
    }
  }

  set(date, flags, value) {
    flags.era = value;
    date.setFullYear(value, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["R", "u", "t", "T"];
}
exports.EraParser = EraParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ExtendedYearParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class ExtendedYearParser extends _Parser.Parser {
  priority = 130;

  parse(dateString, token) {
    if (token === "u") {
      return (0, _utils.parseNDigitsSigned)(4, dateString);
    }

    return (0, _utils.parseNDigitsSigned)(token.length, dateString);
  }

  set(date, _flags, value) {
    date.setFullYear(value, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"];
}
exports.ExtendedYearParser = ExtendedYearParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.FractionOfSecondParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class FractionOfSecondParser extends _Parser.Parser {
  priority = 30;

  parse(dateString, token) {
    const valueCallback = (value) =>
      Math.trunc(value * Math.pow(10, -token.length + 3));
    return (0, _utils.mapValue)(
      (0, _utils.parseNDigits)(token.length, dateString),
      valueCallback,
    );
  }

  set(date, _flags, value) {
    date.setMilliseconds(value);
    return date;
  }

  incompatibleTokens = ["t", "T"];
}
exports.FractionOfSecondParser = FractionOfSecondParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.Hour0To11Parser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class Hour0To11Parser extends _Parser.Parser {
  priority = 70;

  parse(dateString, token, match) {
    switch (token) {
      case "K":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.hour11h,
          dateString,
        );
      case "Ko":
        return match.ordinalNumber(dateString, { unit: "hour" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 11;
  }

  set(date, _flags, value) {
    const isPM = date.getHours() >= 12;
    if (isPM && value < 12) {
      date.setHours(value + 12, 0, 0, 0);
    } else {
      date.setHours(value, 0, 0, 0);
    }
    return date;
  }

  incompatibleTokens = ["h", "H", "k", "t", "T"];
}
exports.Hour0To11Parser = Hour0To11Parser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.Hour0to23Parser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class Hour0to23Parser extends _Parser.Parser {
  priority = 70;

  parse(dateString, token, match) {
    switch (token) {
      case "H":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.hour23h,
          dateString,
        );
      case "Ho":
        return match.ordinalNumber(dateString, { unit: "hour" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 23;
  }

  set(date, _flags, value) {
    date.setHours(value, 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["a", "b", "h", "K", "k", "t", "T"];
}
exports.Hour0to23Parser = Hour0to23Parser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.Hour1To24Parser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class Hour1To24Parser extends _Parser.Parser {
  priority = 70;

  parse(dateString, token, match) {
    switch (token) {
      case "k":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.hour24h,
          dateString,
        );
      case "ko":
        return match.ordinalNumber(dateString, { unit: "hour" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 24;
  }

  set(date, _flags, value) {
    const hours = value <= 24 ? value % 24 : value;
    date.setHours(hours, 0, 0, 0);
    return date;
  }

  incompatibleTokens = ["a", "b", "h", "H", "K", "t", "T"];
}
exports.Hour1To24Parser = Hour1To24Parser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.Hour1to12Parser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class Hour1to12Parser extends _Parser.Parser {
  priority = 70;

  parse(dateString, token, match) {
    switch (token) {
      case "h":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.hour12h,
          dateString,
        );
      case "ho":
        return match.ordinalNumber(dateString, { unit: "hour" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 12;
  }

  set(date, _flags, value) {
    const isPM = date.getHours() >= 12;
    if (isPM && value < 12) {
      date.setHours(value + 12, 0, 0, 0);
    } else if (!isPM && value === 12) {
      date.setHours(0, 0, 0, 0);
    } else {
      date.setHours(value, 0, 0, 0);
    }
    return date;
  }

  incompatibleTokens = ["H", "K", "k", "t", "T"];
}
exports.Hour1to12Parser = Hour1to12Parser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISODayParser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISODayParser.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ISODayParser = void 0;
var _index = __webpack_require__(/*! ../../../setISODay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISODay.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// ISO day of week
class ISODayParser extends _Parser.Parser {
  priority = 90;

  parse(dateString, token, match) {
    const valueCallback = (value) => {
      if (value === 0) {
        return 7;
      }
      return value;
    };

    switch (token) {
      // 2
      case "i":
      case "ii": // 02
        return (0, _utils.parseNDigits)(token.length, dateString);
      // 2nd
      case "io":
        return match.ordinalNumber(dateString, { unit: "day" });
      // Tue
      case "iii":
        return (0, _utils.mapValue)(
          match.day(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
            match.day(dateString, {
              width: "short",
              context: "formatting",
            }) ||
            match.day(dateString, {
              width: "narrow",
              context: "formatting",
            }),
          valueCallback,
        );
      // T
      case "iiiii":
        return (0, _utils.mapValue)(
          match.day(dateString, {
            width: "narrow",
            context: "formatting",
          }),
          valueCallback,
        );
      // Tu
      case "iiiiii":
        return (0, _utils.mapValue)(
          match.day(dateString, {
            width: "short",
            context: "formatting",
          }) ||
            match.day(dateString, {
              width: "narrow",
              context: "formatting",
            }),
          valueCallback,
        );
      // Tuesday
      case "iiii":
      default:
        return (0, _utils.mapValue)(
          match.day(dateString, {
            width: "wide",
            context: "formatting",
          }) ||
            match.day(dateString, {
              width: "abbreviated",
              context: "formatting",
            }) ||
            match.day(dateString, {
              width: "short",
              context: "formatting",
            }) ||
            match.day(dateString, {
              width: "narrow",
              context: "formatting",
            }),
          valueCallback,
        );
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 7;
  }

  set(date, _flags, value) {
    date = (0, _index.setISODay)(date, value);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "y",
    "Y",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "E",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.ISODayParser = ISODayParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ISOTimezoneParser = void 0;
var _index = __webpack_require__(/*! ../../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ../../../_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Timezone (ISO-8601)
class ISOTimezoneParser extends _Parser.Parser {
  priority = 10;

  parse(dateString, token) {
    switch (token) {
      case "x":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basicOptionalMinutes,
          dateString,
        );
      case "xx":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basic,
          dateString,
        );
      case "xxxx":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basicOptionalSeconds,
          dateString,
        );
      case "xxxxx":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.extendedOptionalSeconds,
          dateString,
        );
      case "xxx":
      default:
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.extended,
          dateString,
        );
    }
  }

  set(date, flags, value) {
    if (flags.timestampIsSet) return date;
    return (0, _index.constructFrom)(
      date,
      date.getTime() -
        (0, _index2.getTimezoneOffsetInMilliseconds)(date) -
        value,
    );
  }

  incompatibleTokens = ["t", "T", "X"];
}
exports.ISOTimezoneParser = ISOTimezoneParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ISOTimezoneWithZParser = void 0;
var _index = __webpack_require__(/*! ../../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ../../../_lib/getTimezoneOffsetInMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js");
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Timezone (ISO-8601. +00:00 is `'Z'`)
class ISOTimezoneWithZParser extends _Parser.Parser {
  priority = 10;

  parse(dateString, token) {
    switch (token) {
      case "X":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basicOptionalMinutes,
          dateString,
        );
      case "XX":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basic,
          dateString,
        );
      case "XXXX":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.basicOptionalSeconds,
          dateString,
        );
      case "XXXXX":
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.extendedOptionalSeconds,
          dateString,
        );
      case "XXX":
      default:
        return (0, _utils.parseTimezonePattern)(
          _constants.timezonePatterns.extended,
          dateString,
        );
    }
  }

  set(date, flags, value) {
    if (flags.timestampIsSet) return date;
    return (0, _index.constructFrom)(
      date,
      date.getTime() -
        (0, _index2.getTimezoneOffsetInMilliseconds)(date) -
        value,
    );
  }

  incompatibleTokens = ["t", "T", "x"];
}
exports.ISOTimezoneWithZParser = ISOTimezoneWithZParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ISOWeekParser = void 0;
var _index = __webpack_require__(/*! ../../../setISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeek.js");
var _index2 = __webpack_require__(/*! ../../../startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// ISO week of year
class ISOWeekParser extends _Parser.Parser {
  priority = 100;

  parse(dateString, token, match) {
    switch (token) {
      case "I":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.week,
          dateString,
        );
      case "Io":
        return match.ordinalNumber(dateString, { unit: "week" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 53;
  }

  set(date, _flags, value) {
    return (0, _index2.startOfISOWeek)((0, _index.setISOWeek)(date, value));
  }

  incompatibleTokens = [
    "y",
    "Y",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.ISOWeekParser = ISOWeekParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.ISOWeekYearParser = void 0;
var _index = __webpack_require__(/*! ../../../startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index2 = __webpack_require__(/*! ../../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// ISO week-numbering year
class ISOWeekYearParser extends _Parser.Parser {
  priority = 130;

  parse(dateString, token) {
    if (token === "R") {
      return (0, _utils.parseNDigitsSigned)(4, dateString);
    }

    return (0, _utils.parseNDigitsSigned)(token.length, dateString);
  }

  set(date, _flags, value) {
    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);
    firstWeekOfYear.setFullYear(value, 0, 4);
    firstWeekOfYear.setHours(0, 0, 0, 0);
    return (0, _index.startOfISOWeek)(firstWeekOfYear);
  }

  incompatibleTokens = [
    "G",
    "y",
    "Y",
    "u",
    "Q",
    "q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.ISOWeekYearParser = ISOWeekYearParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.LocalDayParser = void 0;
var _index = __webpack_require__(/*! ../../../setDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Local day of week
class LocalDayParser extends _Parser.Parser {
  priority = 90;
  parse(dateString, token, match, options) {
    const valueCallback = (value) => {
      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0
      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;
      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
    };

    switch (token) {
      // 3
      case "e":
      case "ee": // 03
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(token.length, dateString),
          valueCallback,
        );
      // 3rd
      case "eo":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "day",
          }),
          valueCallback,
        );
      // Tue
      case "eee":
        return (
          match.day(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );

      // T
      case "eeeee":
        return match.day(dateString, {
          width: "narrow",
          context: "formatting",
        });
      // Tu
      case "eeeeee":
        return (
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );

      // Tuesday
      case "eeee":
      default:
        return (
          match.day(dateString, { width: "wide", context: "formatting" }) ||
          match.day(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.day(dateString, { width: "short", context: "formatting" }) ||
          match.day(dateString, { width: "narrow", context: "formatting" })
        );
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 6;
  }

  set(date, _flags, value, options) {
    date = (0, _index.setDay)(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "E",
    "i",
    "c",
    "t",
    "T",
  ];
}
exports.LocalDayParser = LocalDayParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.LocalWeekParser = void 0;
var _index = __webpack_require__(/*! ../../../setWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeek.js");
var _index2 = __webpack_require__(/*! ../../../startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Local week of year
class LocalWeekParser extends _Parser.Parser {
  priority = 100;

  parse(dateString, token, match) {
    switch (token) {
      case "w":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.week,
          dateString,
        );
      case "wo":
        return match.ordinalNumber(dateString, { unit: "week" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 53;
  }

  set(date, _flags, value, options) {
    return (0, _index2.startOfWeek)(
      (0, _index.setWeek)(date, value, options),
      options,
    );
  }

  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "i",
    "t",
    "T",
  ];
}
exports.LocalWeekParser = LocalWeekParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.LocalWeekYearParser = void 0;
var _index = __webpack_require__(/*! ../../../getWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js");

var _index2 = __webpack_require__(/*! ../../../startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Local week-numbering year
class LocalWeekYearParser extends _Parser.Parser {
  priority = 130;

  parse(dateString, token, match) {
    const valueCallback = (year) => ({
      year,
      isTwoDigitYear: token === "YY",
    });

    switch (token) {
      case "Y":
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(4, dateString),
          valueCallback,
        );
      case "Yo":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "year",
          }),
          valueCallback,
        );
      default:
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(token.length, dateString),
          valueCallback,
        );
    }
  }

  validate(_date, value) {
    return value.isTwoDigitYear || value.year > 0;
  }

  set(date, flags, value, options) {
    const currentYear = (0, _index.getWeekYear)(date, options);

    if (value.isTwoDigitYear) {
      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(
        value.year,
        currentYear,
      );
      date.setFullYear(
        normalizedTwoDigitYear,
        0,
        options.firstWeekContainsDate,
      );
      date.setHours(0, 0, 0, 0);
      return (0, _index2.startOfWeek)(date, options);
    }

    const year =
      !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
    date.setFullYear(year, 0, options.firstWeekContainsDate);
    date.setHours(0, 0, 0, 0);
    return (0, _index2.startOfWeek)(date, options);
  }

  incompatibleTokens = [
    "y",
    "R",
    "u",
    "Q",
    "q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "i",
    "t",
    "T",
  ];
}
exports.LocalWeekYearParser = LocalWeekYearParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MinuteParser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MinuteParser.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.MinuteParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class MinuteParser extends _Parser.Parser {
  priority = 60;

  parse(dateString, token, match) {
    switch (token) {
      case "m":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.minute,
          dateString,
        );
      case "mo":
        return match.ordinalNumber(dateString, { unit: "minute" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 59;
  }

  set(date, _flags, value) {
    date.setMinutes(value, 0, 0);
    return date;
  }

  incompatibleTokens = ["t", "T"];
}
exports.MinuteParser = MinuteParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MonthParser.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/MonthParser.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.MonthParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class MonthParser extends _Parser.Parser {
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "L",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];

  priority = 110;

  parse(dateString, token, match) {
    const valueCallback = (value) => value - 1;

    switch (token) {
      // 1, 2, ..., 12
      case "M":
        return (0, _utils.mapValue)(
          (0, _utils.parseNumericPattern)(
            _constants.numericPatterns.month,
            dateString,
          ),
          valueCallback,
        );
      // 01, 02, ..., 12
      case "MM":
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(2, dateString),
          valueCallback,
        );
      // 1st, 2nd, ..., 12th
      case "Mo":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "month",
          }),
          valueCallback,
        );
      // Jan, Feb, ..., Dec
      case "MMM":
        return (
          match.month(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.month(dateString, { width: "narrow", context: "formatting" })
        );

      // J, F, ..., D
      case "MMMMM":
        return match.month(dateString, {
          width: "narrow",
          context: "formatting",
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return (
          match.month(dateString, { width: "wide", context: "formatting" }) ||
          match.month(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.month(dateString, { width: "narrow", context: "formatting" })
        );
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 11;
  }

  set(date, _flags, value) {
    date.setMonth(value, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
}
exports.MonthParser = MonthParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/QuarterParser.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/QuarterParser.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.QuarterParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class QuarterParser extends _Parser.Parser {
  priority = 120;

  parse(dateString, token, match) {
    switch (token) {
      // 1, 2, 3, 4
      case "Q":
      case "QQ": // 01, 02, 03, 04
        return (0, _utils.parseNDigits)(token.length, dateString);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return match.ordinalNumber(dateString, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return (
          match.quarter(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.quarter(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );

      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return match.quarter(dateString, {
          width: "narrow",
          context: "formatting",
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return (
          match.quarter(dateString, {
            width: "wide",
            context: "formatting",
          }) ||
          match.quarter(dateString, {
            width: "abbreviated",
            context: "formatting",
          }) ||
          match.quarter(dateString, {
            width: "narrow",
            context: "formatting",
          })
        );
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 4;
  }

  set(date, _flags, value) {
    date.setMonth((value - 1) * 3, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.QuarterParser = QuarterParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/SecondParser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/SecondParser.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.SecondParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class SecondParser extends _Parser.Parser {
  priority = 50;

  parse(dateString, token, match) {
    switch (token) {
      case "s":
        return (0, _utils.parseNumericPattern)(
          _constants.numericPatterns.second,
          dateString,
        );
      case "so":
        return match.ordinalNumber(dateString, { unit: "second" });
      default:
        return (0, _utils.parseNDigits)(token.length, dateString);
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 59;
  }

  set(date, _flags, value) {
    date.setSeconds(value, 0);
    return date;
  }

  incompatibleTokens = ["t", "T"];
}
exports.SecondParser = SecondParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.StandAloneLocalDayParser = void 0;
var _index = __webpack_require__(/*! ../../../setDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// Stand-alone local day of week
class StandAloneLocalDayParser extends _Parser.Parser {
  priority = 90;

  parse(dateString, token, match, options) {
    const valueCallback = (value) => {
      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0
      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;
      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
    };

    switch (token) {
      // 3
      case "c":
      case "cc": // 03
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(token.length, dateString),
          valueCallback,
        );
      // 3rd
      case "co":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "day",
          }),
          valueCallback,
        );
      // Tue
      case "ccc":
        return (
          match.day(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.day(dateString, { width: "short", context: "standalone" }) ||
          match.day(dateString, { width: "narrow", context: "standalone" })
        );

      // T
      case "ccccc":
        return match.day(dateString, {
          width: "narrow",
          context: "standalone",
        });
      // Tu
      case "cccccc":
        return (
          match.day(dateString, { width: "short", context: "standalone" }) ||
          match.day(dateString, { width: "narrow", context: "standalone" })
        );

      // Tuesday
      case "cccc":
      default:
        return (
          match.day(dateString, { width: "wide", context: "standalone" }) ||
          match.day(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.day(dateString, { width: "short", context: "standalone" }) ||
          match.day(dateString, { width: "narrow", context: "standalone" })
        );
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 6;
  }

  set(date, _flags, value, options) {
    date = (0, _index.setDay)(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "E",
    "i",
    "e",
    "t",
    "T",
  ];
}
exports.StandAloneLocalDayParser = StandAloneLocalDayParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.StandAloneMonthParser = void 0;
var _constants = __webpack_require__(/*! ../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class StandAloneMonthParser extends _Parser.Parser {
  priority = 110;

  parse(dateString, token, match) {
    const valueCallback = (value) => value - 1;

    switch (token) {
      // 1, 2, ..., 12
      case "L":
        return (0, _utils.mapValue)(
          (0, _utils.parseNumericPattern)(
            _constants.numericPatterns.month,
            dateString,
          ),
          valueCallback,
        );
      // 01, 02, ..., 12
      case "LL":
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(2, dateString),
          valueCallback,
        );
      // 1st, 2nd, ..., 12th
      case "Lo":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "month",
          }),
          valueCallback,
        );
      // Jan, Feb, ..., Dec
      case "LLL":
        return (
          match.month(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.month(dateString, { width: "narrow", context: "standalone" })
        );

      // J, F, ..., D
      case "LLLLL":
        return match.month(dateString, {
          width: "narrow",
          context: "standalone",
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return (
          match.month(dateString, { width: "wide", context: "standalone" }) ||
          match.month(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.month(dateString, { width: "narrow", context: "standalone" })
        );
    }
  }

  validate(_date, value) {
    return value >= 0 && value <= 11;
  }

  set(date, _flags, value) {
    date.setMonth(value, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "M",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.StandAloneMonthParser = StandAloneMonthParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.StandAloneQuarterParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class StandAloneQuarterParser extends _Parser.Parser {
  priority = 120;

  parse(dateString, token, match) {
    switch (token) {
      // 1, 2, 3, 4
      case "q":
      case "qq": // 01, 02, 03, 04
        return (0, _utils.parseNDigits)(token.length, dateString);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return match.ordinalNumber(dateString, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return (
          match.quarter(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.quarter(dateString, {
            width: "narrow",
            context: "standalone",
          })
        );

      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return match.quarter(dateString, {
          width: "narrow",
          context: "standalone",
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return (
          match.quarter(dateString, {
            width: "wide",
            context: "standalone",
          }) ||
          match.quarter(dateString, {
            width: "abbreviated",
            context: "standalone",
          }) ||
          match.quarter(dateString, {
            width: "narrow",
            context: "standalone",
          })
        );
    }
  }

  validate(_date, value) {
    return value >= 1 && value <= 4;
  }

  set(date, _flags, value) {
    date.setMonth((value - 1) * 3, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  incompatibleTokens = [
    "Y",
    "R",
    "Q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T",
  ];
}
exports.StandAloneQuarterParser = StandAloneQuarterParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.TimestampMillisecondsParser = void 0;
var _index = __webpack_require__(/*! ../../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class TimestampMillisecondsParser extends _Parser.Parser {
  priority = 20;

  parse(dateString) {
    return (0, _utils.parseAnyDigitsSigned)(dateString);
  }

  set(date, _flags, value) {
    return [(0, _index.constructFrom)(date, value), { timestampIsSet: true }];
  }

  incompatibleTokens = "*";
}
exports.TimestampMillisecondsParser = TimestampMillisecondsParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.TimestampSecondsParser = void 0;
var _index = __webpack_require__(/*! ../../../constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

class TimestampSecondsParser extends _Parser.Parser {
  priority = 40;

  parse(dateString) {
    return (0, _utils.parseAnyDigitsSigned)(dateString);
  }

  set(date, _flags, value) {
    return [
      (0, _index.constructFrom)(date, value * 1000),
      { timestampIsSet: true },
    ];
  }

  incompatibleTokens = "*";
}
exports.TimestampSecondsParser = TimestampSecondsParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/YearParser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/parsers/YearParser.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.YearParser = void 0;
var _Parser = __webpack_require__(/*! ../Parser.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/Parser.js");

var _utils = __webpack_require__(/*! ../utils.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js");

// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
// | Year     |     y | yy |   yyy |  yyyy | yyyyy |
// |----------|-------|----|-------|-------|-------|
// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
class YearParser extends _Parser.Parser {
  priority = 130;
  incompatibleTokens = ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"];

  parse(dateString, token, match) {
    const valueCallback = (year) => ({
      year,
      isTwoDigitYear: token === "yy",
    });

    switch (token) {
      case "y":
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(4, dateString),
          valueCallback,
        );
      case "yo":
        return (0, _utils.mapValue)(
          match.ordinalNumber(dateString, {
            unit: "year",
          }),
          valueCallback,
        );
      default:
        return (0, _utils.mapValue)(
          (0, _utils.parseNDigits)(token.length, dateString),
          valueCallback,
        );
    }
  }

  validate(_date, value) {
    return value.isTwoDigitYear || value.year > 0;
  }

  set(date, flags, value) {
    const currentYear = date.getFullYear();

    if (value.isTwoDigitYear) {
      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(
        value.year,
        currentYear,
      );
      date.setFullYear(normalizedTwoDigitYear, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    const year =
      !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
    date.setFullYear(year, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
}
exports.YearParser = YearParser;


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/utils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.dayPeriodEnumToHours = dayPeriodEnumToHours;
exports.isLeapYearIndex = isLeapYearIndex;
exports.mapValue = mapValue;
exports.normalizeTwoDigitYear = normalizeTwoDigitYear;
exports.parseAnyDigitsSigned = parseAnyDigitsSigned;
exports.parseNDigits = parseNDigits;
exports.parseNDigitsSigned = parseNDigitsSigned;
exports.parseNumericPattern = parseNumericPattern;
exports.parseTimezonePattern = parseTimezonePattern;
var _index = __webpack_require__(/*! ../../constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

var _constants = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse/_lib/constants.js");

function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }

  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest,
  };
}

function parseNumericPattern(pattern, dateString) {
  const matchResult = dateString.match(pattern);

  if (!matchResult) {
    return null;
  }

  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length),
  };
}

function parseTimezonePattern(pattern, dateString) {
  const matchResult = dateString.match(pattern);

  if (!matchResult) {
    return null;
  }

  // Input is 'Z'
  if (matchResult[0] === "Z") {
    return {
      value: 0,
      rest: dateString.slice(1),
    };
  }

  const sign = matchResult[1] === "+" ? 1 : -1;
  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;

  return {
    value:
      sign *
      (hours * _index.millisecondsInHour +
        minutes * _index.millisecondsInMinute +
        seconds * _index.millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length),
  };
}

function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(
    _constants.numericPatterns.anyDigitsSigned,
    dateString,
  );
}

function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(
        _constants.numericPatterns.singleDigit,
        dateString,
      );
    case 2:
      return parseNumericPattern(
        _constants.numericPatterns.twoDigits,
        dateString,
      );
    case 3:
      return parseNumericPattern(
        _constants.numericPatterns.threeDigits,
        dateString,
      );
    case 4:
      return parseNumericPattern(
        _constants.numericPatterns.fourDigits,
        dateString,
      );
    default:
      return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), dateString);
  }
}

function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(
        _constants.numericPatterns.singleDigitSigned,
        dateString,
      );
    case 2:
      return parseNumericPattern(
        _constants.numericPatterns.twoDigitsSigned,
        dateString,
      );
    case 3:
      return parseNumericPattern(
        _constants.numericPatterns.threeDigitsSigned,
        dateString,
      );
    case 4:
      return parseNumericPattern(
        _constants.numericPatterns.fourDigitsSigned,
        dateString,
      );
    default:
      return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), dateString);
  }
}

function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}

function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  const isCommonEra = currentYear > 0;
  // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC
  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;

  let result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    const rangeEnd = absCurrentYear + 50;
    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;
    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }

  return isCommonEra ? result : 1 - result;
}

function isLeapYearIndex(year) {
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseISO.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseISO.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.parseISO = parseISO;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * The {@link parseISO} function options.
 */

/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param argument - The value to convert
 * @param options - An object with options
 *
 * @returns The parsed date in the local time zone
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * const result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * const result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */
function parseISO(argument, options) {
  const additionalDigits = options?.additionalDigits ?? 2;
  const dateStrings = splitDateString(argument);

  let date;
  if (dateStrings.date) {
    const parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }

  if (!date || isNaN(date.getTime())) {
    return new Date(NaN);
  }

  const timestamp = date.getTime();
  let time = 0;
  let offset;

  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return new Date(NaN);
    }
  }

  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    const dirtyDate = new Date(timestamp + time);
    // JS parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.
    const result = new Date(0);
    result.setFullYear(
      dirtyDate.getUTCFullYear(),
      dirtyDate.getUTCMonth(),
      dirtyDate.getUTCDate(),
    );
    result.setHours(
      dirtyDate.getUTCHours(),
      dirtyDate.getUTCMinutes(),
      dirtyDate.getUTCSeconds(),
      dirtyDate.getUTCMilliseconds(),
    );
    return result;
  }

  return new Date(timestamp + time + offset);
}

const patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/,
};

const dateRegex =
  /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
const timeRegex =
  /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
const timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;

function splitDateString(dateString) {
  const dateStrings = {};
  const array = dateString.split(patterns.dateTimeDelimiter);
  let timeString;

  // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].
  if (array.length > 2) {
    return dateStrings;
  }

  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(
        dateStrings.date.length,
        dateString.length,
      );
    }
  }

  if (timeString) {
    const token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], "");
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }

  return dateStrings;
}

function parseYear(dateString, additionalDigits) {
  const regex = new RegExp(
    "^(?:(\\d{4}|[+-]\\d{" +
      (4 + additionalDigits) +
      "})|(\\d{2}|[+-]\\d{" +
      (2 + additionalDigits) +
      "})$)",
  );

  const captures = dateString.match(regex);
  // Invalid ISO-formatted year
  if (!captures) return { year: NaN, restDateString: "" };

  const year = captures[1] ? parseInt(captures[1]) : null;
  const century = captures[2] ? parseInt(captures[2]) : null;

  // either year or century is null, not both
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length),
  };
}

function parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return new Date(NaN);

  const captures = dateString.match(dateRegex);
  // Invalid ISO-formatted string
  if (!captures) return new Date(NaN);

  const isWeekDate = !!captures[4];
  const dayOfYear = parseDateUnit(captures[1]);
  const month = parseDateUnit(captures[2]) - 1;
  const day = parseDateUnit(captures[3]);
  const week = parseDateUnit(captures[4]);
  const dayOfWeek = parseDateUnit(captures[5]) - 1;

  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    const date = new Date(0);
    if (
      !validateDate(year, month, day) ||
      !validateDayOfYearDate(year, dayOfYear)
    ) {
      return new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}

function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}

function parseTime(timeString) {
  const captures = timeString.match(timeRegex);
  if (!captures) return NaN; // Invalid ISO-formatted time

  const hours = parseTimeUnit(captures[1]);
  const minutes = parseTimeUnit(captures[2]);
  const seconds = parseTimeUnit(captures[3]);

  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }

  return (
    hours * _index.millisecondsInHour +
    minutes * _index.millisecondsInMinute +
    seconds * 1000
  );
}

function parseTimeUnit(value) {
  return (value && parseFloat(value.replace(",", "."))) || 0;
}

function parseTimezone(timezoneString) {
  if (timezoneString === "Z") return 0;

  const captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;

  const sign = captures[1] === "+" ? -1 : 1;
  const hours = parseInt(captures[2]);
  const minutes = (captures[3] && parseInt(captures[3])) || 0;

  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }

  return (
    sign *
    (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute)
  );
}

function dayOfISOWeekYear(isoWeekYear, week, day) {
  const date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  const fourthOfJanuaryDay = date.getUTCDay() || 7;
  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// Validation functions

// February is null to handle the leap year (using ||)
const daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

function isLeapYearIndex(year) {
  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
}

function validateDate(year, month, date) {
  return (
    month >= 0 &&
    month <= 11 &&
    date >= 1 &&
    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))
  );
}

function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}

function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}

function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }

  return (
    seconds >= 0 &&
    seconds < 60 &&
    minutes >= 0 &&
    minutes < 60 &&
    hours >= 0 &&
    hours < 25
  );
}

function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseJSON.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseJSON.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.parseJSON = parseJSON; /**
 * @name parseJSON
 * @category Common Helpers
 * @summary Parse a JSON date string
 *
 * @description
 * Converts a complete ISO date string in UTC time, the typical format for transmitting
 * a date in JSON, to a JavaScript `Date` instance.
 *
 * This is a minimal implementation for converting dates retrieved from a JSON API to
 * a `Date` instance which can be used with other functions in the `date-fns` library.
 * The following formats are supported:
 *
 * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
 * - `2000-03-15T05:20:10Z`: Without milliseconds
 * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
 * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages
 * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
 * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
 * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
 * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
 *
 * For convenience and ease of use these other input types are also supported
 * via [toDate](https://date-fns.org/docs/toDate):
 *
 * - A `Date` instance will be cloned
 * - A `number` will be treated as a timestamp
 *
 * Any other input type or invalid date strings will return an `Invalid Date`.
 *
 * @param dateStr - A fully formed ISO8601 date string to convert
 *
 * @returns The parsed date in the local time zone
 */
function parseJSON(dateStr) {
  const parts = dateStr.match(
    /(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/,
  );
  if (parts) {
    // Group 8 matches the sign
    return new Date(
      Date.UTC(
        +parts[1],
        +parts[2] - 1,
        +parts[3],
        +parts[4] - (+parts[9] || 0) * (parts[8] == "-" ? -1 : 1),
        +parts[5] - (+parts[10] || 0) * (parts[8] == "-" ? -1 : 1),
        +parts[6],
        +((parts[7] || "0") + "00").substring(0, 3),
      ),
    );
  }
  return new Date(NaN);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousDay = previousDay;
var _index = __webpack_require__(/*! ./getDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js");
var _index2 = __webpack_require__(/*! ./subDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js");

/**
 * @name previousDay
 * @category Weekday Helpers
 * @summary When is the previous day of the week?
 *
 * @description
 * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to check
 * @param day - The day of the week
 *
 * @returns The date is the previous day of week
 *
 * @example
 * // When is the previous Monday before Mar, 20, 2020?
 * const result = previousDay(new Date(2020, 2, 20), 1)
 * //=> Mon Mar 16 2020 00:00:00
 *
 * @example
 * // When is the previous Tuesday before Mar, 21, 2020?
 * const result = previousDay(new Date(2020, 2, 21), 2)
 * //=> Tue Mar 17 2020 00:00:00
 */
function previousDay(date, day) {
  let delta = (0, _index.getDay)(date) - day;
  if (delta <= 0) delta += 7;

  return (0, _index2.subDays)(date, delta);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousFriday.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousFriday.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousFriday = previousFriday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousFriday
 * @category Weekday Helpers
 * @summary When is the previous Friday?
 *
 * @description
 * When is the previous Friday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Friday
 *
 * @example
 * // When is the previous Friday before Jun, 19, 2021?
 * const result = previousFriday(new Date(2021, 5, 19))
 * //=> Fri June 18 2021 00:00:00
 */
function previousFriday(date) {
  return (0, _index.previousDay)(date, 5);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousMonday.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousMonday.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousMonday = previousMonday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousMonday
 * @category Weekday Helpers
 * @summary When is the previous Monday?
 *
 * @description
 * When is the previous Monday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Monday
 *
 * @example
 * // When is the previous Monday before Jun, 18, 2021?
 * const result = previousMonday(new Date(2021, 5, 18))
 * //=> Mon June 14 2021 00:00:00
 */
function previousMonday(date) {
  return (0, _index.previousDay)(date, 1);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSaturday.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSaturday.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousSaturday = previousSaturday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousSaturday
 * @category Weekday Helpers
 * @summary When is the previous Saturday?
 *
 * @description
 * When is the previous Saturday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Saturday
 *
 * @example
 * // When is the previous Saturday before Jun, 20, 2021?
 * const result = previousSaturday(new Date(2021, 5, 20))
 * //=> Sat June 19 2021 00:00:00
 */
function previousSaturday(date) {
  return (0, _index.previousDay)(date, 6);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSunday.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousSunday.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousSunday = previousSunday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousSunday
 * @category Weekday Helpers
 * @summary When is the previous Sunday?
 *
 * @description
 * When is the previous Sunday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Sunday
 *
 * @example
 * // When is the previous Sunday before Jun, 21, 2021?
 * const result = previousSunday(new Date(2021, 5, 21))
 * //=> Sun June 20 2021 00:00:00
 */
function previousSunday(date) {
  return (0, _index.previousDay)(date, 0);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousThursday.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousThursday.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousThursday = previousThursday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousThursday
 * @category Weekday Helpers
 * @summary When is the previous Thursday?
 *
 * @description
 * When is the previous Thursday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Thursday
 *
 * @example
 * // When is the previous Thursday before Jun, 18, 2021?
 * const result = previousThursday(new Date(2021, 5, 18))
 * //=> Thu June 17 2021 00:00:00
 */
function previousThursday(date) {
  return (0, _index.previousDay)(date, 4);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousTuesday.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousTuesday.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousTuesday = previousTuesday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousTuesday
 * @category Weekday Helpers
 * @summary When is the previous Tuesday?
 *
 * @description
 * When is the previous Tuesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Tuesday
 *
 * @example
 * // When is the previous Tuesday before Jun, 18, 2021?
 * const result = previousTuesday(new Date(2021, 5, 18))
 * //=> Tue June 15 2021 00:00:00
 */
function previousTuesday(date) {
  return (0, _index.previousDay)(date, 2);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousWednesday.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousWednesday.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.previousWednesday = previousWednesday;
var _index = __webpack_require__(/*! ./previousDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/previousDay.js");

/**
 * @name previousWednesday
 * @category Weekday Helpers
 * @summary When is the previous Wednesday?
 *
 * @description
 * When is the previous Wednesday?
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to start counting from
 *
 * @returns The previous Wednesday
 *
 * @example
 * // When is the previous Wednesday before Jun, 18, 2021?
 * const result = previousWednesday(new Date(2021, 5, 18))
 * //=> Wed June 16 2021 00:00:00
 */
function previousWednesday(date) {
  return (0, _index.previousDay)(date, 3);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToMonths.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToMonths.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.quartersToMonths = quartersToMonths;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name quartersToMonths
 * @category Conversion Helpers
 * @summary Convert number of quarters to months.
 *
 * @description
 * Convert a number of quarters to a full number of months.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param quarters - The number of quarters to be converted
 *
 * @returns The number of quarters converted in months
 *
 * @example
 * // Convert 2 quarters to months
 * const result = quartersToMonths(2)
 * //=> 6
 */
function quartersToMonths(quarters) {
  return Math.trunc(quarters * _index.monthsInQuarter);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToYears.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/quartersToYears.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.quartersToYears = quartersToYears;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name quartersToYears
 * @category Conversion Helpers
 * @summary Convert number of quarters to years.
 *
 * @description
 * Convert a number of quarters to a full number of years.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param quarters - The number of quarters to be converted
 *
 * @returns The number of quarters converted in years
 *
 * @example
 * // Convert 8 quarters to years
 * const result = quartersToYears(8)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = quartersToYears(11)
 * //=> 2
 */
function quartersToYears(quarters) {
  const years = quarters / _index.quartersInYear;
  return Math.trunc(years);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestHours.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestHours.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.roundToNearestHours = roundToNearestHours;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link roundToNearestHours} function options.
 */

/**
 * @name roundToNearestHours
 * @category Hour Helpers
 * @summary Rounds the given date to the nearest hour
 *
 * @description
 * Rounds the given date to the nearest hour (or number of hours).
 * Rounds up when the given date is exactly between the nearest round hours.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to round
 * @param options - An object with options.
 *
 * @returns The new date rounded to the closest hour
 *
 * @example
 * // Round 10 July 2014 12:34:56 to nearest hour:
 * const result = roundToNearestHours(new Date(2014, 6, 10, 12, 34, 56))
 * //=> Thu Jul 10 2014 13:00:00
 *
 * @example
 * // Round 10 July 2014 12:34:56 to nearest half hour:
 * const result = roundToNearestHours(new Date(2014, 6, 10, 12, 34, 56), { nearestTo: 6 })
 * //=> Thu Jul 10 2014 12:00:00

 * @example
 * // Round 10 July 2014 12:34:56 to nearest half hour:
 * const result = roundToNearestHours(new Date(2014, 6, 10, 12, 34, 56), { nearestTo: 8 })
 * //=> Thu Jul 10 2014 16:00:00

* @example
 * // Floor (rounds down) 10 July 2014 12:34:56 to nearest hour:
 * const result = roundToNearestHours(new Date(2014, 6, 10, 1, 23, 45), { roundingMethod: 'ceil' })
 * //=> Thu Jul 10 2014 02:00:00
 *
 * @example
 * // Ceil (rounds up) 10 July 2014 12:34:56 to nearest quarter hour:
 * const result = roundToNearestHours(new Date(2014, 6, 10, 12, 34, 56), { roundingMethod: 'floor', nearestTo: 8 })
 * //=> Thu Jul 10 2014 08:00:00
 */
function roundToNearestHours(date, options) {
  const nearestTo = options?.nearestTo ?? 1;

  if (nearestTo < 1 || nearestTo > 12)
    return (0, _index2.constructFrom)(date, NaN);

  const _date = (0, _index3.toDate)(date);
  const fractionalMinutes = _date.getMinutes() / 60;
  const fractionalSeconds = _date.getSeconds() / 60 / 60;
  const fractionalMilliseconds = _date.getMilliseconds() / 1000 / 60 / 60;
  const hours =
    _date.getHours() +
    fractionalMinutes +
    fractionalSeconds +
    fractionalMilliseconds;

  // Unlike the `differenceIn*` functions, the default rounding behavior is `round` and not 'trunc'
  const method = options?.roundingMethod ?? "round";
  const roundingMethod = (0, _index.getRoundingMethod)(method);

  // nearestTo option does not care daylight savings time
  const roundedHours = roundingMethod(hours / nearestTo) * nearestTo;

  const result = (0, _index2.constructFrom)(date, _date);
  result.setHours(roundedHours, 0, 0, 0);
  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestMinutes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/roundToNearestMinutes.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.roundToNearestMinutes = roundToNearestMinutes;
var _index = __webpack_require__(/*! ./_lib/getRoundingMethod.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link roundToNearestMinutes} function options.
 */

/**
 * @name roundToNearestMinutes
 * @category Minute Helpers
 * @summary Rounds the given date to the nearest minute
 *
 * @description
 * Rounds the given date to the nearest minute (or number of minutes).
 * Rounds up when the given date is exactly between the nearest round minutes.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to round
 * @param options - An object with options.
 *
 * @returns The new date rounded to the closest minute
 *
 * @example
 * // Round 10 July 2014 12:12:34 to nearest minute:
 * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))
 * //=> Thu Jul 10 2014 12:13:00
 *
 * @example
 * // Round 10 July 2014 12:12:34 to nearest quarter hour:
 * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })
 * //=> Thu Jul 10 2014 12:15:00
 *
 * @example
 * // Floor (rounds down) 10 July 2014 12:12:34 to nearest minute:
 * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { roundingMethod: 'floor' })
 * //=> Thu Jul 10 2014 12:12:00
 *
 * @example
 * // Ceil (rounds up) 10 July 2014 12:12:34 to nearest half hour:
 * const result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { roundingMethod: 'ceil', nearestTo: 30 })
 * //=> Thu Jul 10 2014 12:30:00
 */
function roundToNearestMinutes(date, options) {
  const nearestTo = options?.nearestTo ?? 1;

  if (nearestTo < 1 || nearestTo > 30)
    return (0, _index2.constructFrom)(date, NaN);

  const _date = (0, _index3.toDate)(date);
  const fractionalSeconds = _date.getSeconds() / 60;
  const fractionalMilliseconds = _date.getMilliseconds() / 1000 / 60;
  const minutes =
    _date.getMinutes() + fractionalSeconds + fractionalMilliseconds;

  // Unlike the `differenceIn*` functions, the default rounding behavior is `round` and not 'trunc'
  const method = options?.roundingMethod ?? "round";
  const roundingMethod = (0, _index.getRoundingMethod)(method);

  const roundedMinutes = roundingMethod(minutes / nearestTo) * nearestTo;

  const result = (0, _index2.constructFrom)(date, _date);
  result.setMinutes(roundedMinutes, 0, 0);
  return result;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToHours.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToHours.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.secondsToHours = secondsToHours;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name secondsToHours
 * @category Conversion Helpers
 * @summary Convert seconds to hours.
 *
 * @description
 * Convert a number of seconds to a full number of hours.
 *
 * @param seconds - The number of seconds to be converted
 *
 * @returns The number of seconds converted in hours
 *
 * @example
 * // Convert 7200 seconds into hours
 * const result = secondsToHours(7200)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = secondsToHours(7199)
 * //=> 1
 */
function secondsToHours(seconds) {
  const hours = seconds / _index.secondsInHour;
  return Math.trunc(hours);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMilliseconds.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMilliseconds.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.secondsToMilliseconds = secondsToMilliseconds;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name secondsToMilliseconds
 * @category Conversion Helpers
 * @summary Convert seconds to milliseconds.
 *
 * @description
 * Convert a number of seconds to a full number of milliseconds.
 *
 * @param seconds - The number of seconds to be converted
 *
 * @returns The number of seconds converted in milliseconds
 *
 * @example
 * // Convert 2 seconds into milliseconds
 * const result = secondsToMilliseconds(2)
 * //=> 2000
 */
function secondsToMilliseconds(seconds) {
  return seconds * _index.millisecondsInSecond;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMinutes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/secondsToMinutes.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.secondsToMinutes = secondsToMinutes;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name secondsToMinutes
 * @category Conversion Helpers
 * @summary Convert seconds to minutes.
 *
 * @description
 * Convert a number of seconds to a full number of minutes.
 *
 * @param seconds - The number of seconds to be converted
 *
 * @returns The number of seconds converted in minutes
 *
 * @example
 * // Convert 120 seconds into minutes
 * const result = secondsToMinutes(120)
 * //=> 2
 *
 * @example
 * // It uses floor rounding:
 * const result = secondsToMinutes(119)
 * //=> 1
 */
function secondsToMinutes(seconds) {
  const minutes = seconds / _index.secondsInMinute;
  return Math.trunc(minutes);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/set.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/set.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.set = set;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./setMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name set
 * @category Common Helpers
 * @summary Set date values to a given date.
 *
 * @description
 * Set date values to a given date.
 *
 * Sets time values to date from object `values`.
 * A value is not set if it is undefined or null or doesn't exist in `values`.
 *
 * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
 * to use native `Date#setX` methods. If you use this function, you may not want to include the
 * other `setX` functions that date-fns provides if you are concerned about the bundle size.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param values - The date values to be set
 *
 * @returns The new date with options set
 *
 * @example
 * // Transform 1 September 2014 into 20 October 2015 in a single line:
 * const result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
 * //=> Tue Oct 20 2015 00:00:00
 *
 * @example
 * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
 * const result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
 * //=> Mon Sep 01 2014 12:23:45
 */

function set(date, values) {
  let _date = (0, _index3.toDate)(date);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(+_date)) {
    return (0, _index.constructFrom)(date, NaN);
  }

  if (values.year != null) {
    _date.setFullYear(values.year);
  }

  if (values.month != null) {
    _date = (0, _index2.setMonth)(_date, values.month);
  }

  if (values.date != null) {
    _date.setDate(values.date);
  }

  if (values.hours != null) {
    _date.setHours(values.hours);
  }

  if (values.minutes != null) {
    _date.setMinutes(values.minutes);
  }

  if (values.seconds != null) {
    _date.setSeconds(values.seconds);
  }

  if (values.milliseconds != null) {
    _date.setMilliseconds(values.milliseconds);
  }

  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDate.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setDate = setDate;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setDate
 * @category Day Helpers
 * @summary Set the day of the month to the given date.
 *
 * @description
 * Set the day of the month to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param dayOfMonth - The day of the month of the new date
 *
 * @returns The new date with the day of the month set
 *
 * @example
 * // Set the 30th day of the month to 1 September 2014:
 * const result = setDate(new Date(2014, 8, 1), 30)
 * //=> Tue Sep 30 2014 00:00:00
 */
function setDate(date, dayOfMonth) {
  const _date = (0, _index.toDate)(date);
  _date.setDate(dayOfMonth);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDay.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setDay = setDay;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index3 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link setDay} function options.
 */

/**
 * @name setDay
 * @category Weekday Helpers
 * @summary Set the day of the week to the given date.
 *
 * @description
 * Set the day of the week to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param day - The day of the week of the new date
 * @param options - An object with options.
 *
 * @returns The new date with the day of the week set
 *
 * @example
 * // Set week day to Sunday, with the default weekStartsOn of Sunday:
 * const result = setDay(new Date(2014, 8, 1), 0)
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Set week day to Sunday, with a weekStartsOn of Monday:
 * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })
 * //=> Sun Sep 07 2014 00:00:00
 */
function setDay(date, day, options) {
  const defaultOptions = (0, _index3.getDefaultOptions)();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const _date = (0, _index2.toDate)(date);
  const currentDay = _date.getDay();

  const remainder = day % 7;
  const dayIndex = (remainder + 7) % 7;

  const delta = 7 - weekStartsOn;
  const diff =
    day < 0 || day > 6
      ? day - ((currentDay + delta) % 7)
      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);
  return (0, _index.addDays)(_date, diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDayOfYear.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDayOfYear.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setDayOfYear = setDayOfYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setDayOfYear
 * @category Day Helpers
 * @summary Set the day of the year to the given date.
 *
 * @description
 * Set the day of the year to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param dayOfYear - The day of the year of the new date
 *
 * @returns The new date with the day of the year set
 *
 * @example
 * // Set the 2nd day of the year to 2 July 2014:
 * const result = setDayOfYear(new Date(2014, 6, 2), 2)
 * //=> Thu Jan 02 2014 00:00:00
 */
function setDayOfYear(date, dayOfYear) {
  const _date = (0, _index.toDate)(date);
  _date.setMonth(0);
  _date.setDate(dayOfYear);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDefaultOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setDefaultOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setDefaultOptions = setDefaultOptions;

var _index = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * @name setDefaultOptions
 * @category Common Helpers
 * @summary Set default options including locale.
 * @pure false
 *
 * @description
 * Sets the defaults for
 * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`
 * arguments for all functions.
 *
 * @param options - An object with options
 *
 * @example
 * // Set global locale:
 * import { es } from 'date-fns/locale'
 * setDefaultOptions({ locale: es })
 * const result = format(new Date(2014, 8, 2), 'PPPP')
 * //=> 'martes, 2 de septiembre de 2014'
 *
 * @example
 * // Start of the week for 2 September 2014:
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Start of the week for 2 September 2014,
 * // when we set that week starts on Monday by default:
 * setDefaultOptions({ weekStartsOn: 1 })
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Mon Sep 01 2014 00:00:00
 *
 * @example
 * // Manually set options take priority over default options:
 * setDefaultOptions({ weekStartsOn: 1 })
 * const result = startOfWeek(new Date(2014, 8, 2), { weekStartsOn: 0 })
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Remove the option by setting it to `undefined`:
 * setDefaultOptions({ weekStartsOn: 1 })
 * setDefaultOptions({ weekStartsOn: undefined })
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Sun Aug 31 2014 00:00:00
 */
function setDefaultOptions(options) {
  const result = {};
  const defaultOptions = (0, _index.getDefaultOptions)();

  for (const property in defaultOptions) {
    if (Object.prototype.hasOwnProperty.call(defaultOptions, property)) {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
      result[property] = defaultOptions[property];
    }
  }

  for (const property in options) {
    if (Object.prototype.hasOwnProperty.call(options, property)) {
      if (options[property] === undefined) {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        delete result[property];
      } else {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type
        result[property] = options[property];
      }
    }
  }

  (0, _index.setDefaultOptions)(result);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setHours.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setHours.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setHours = setHours;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setHours
 * @category Hour Helpers
 * @summary Set the hours to the given date.
 *
 * @description
 * Set the hours to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param hours - The hours of the new date
 *
 * @returns The new date with the hours set
 *
 * @example
 * // Set 4 hours to 1 September 2014 11:30:00:
 * const result = setHours(new Date(2014, 8, 1, 11, 30), 4)
 * //=> Mon Sep 01 2014 04:30:00
 */
function setHours(date, hours) {
  const _date = (0, _index.toDate)(date);
  _date.setHours(hours);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISODay.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISODay.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setISODay = setISODay;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");
var _index2 = __webpack_require__(/*! ./getISODay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISODay.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setISODay
 * @category Weekday Helpers
 * @summary Set the day of the ISO week to the given date.
 *
 * @description
 * Set the day of the ISO week to the given date.
 * ISO week starts with Monday.
 * 7 is the index of Sunday, 1 is the index of Monday etc.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param day - The day of the ISO week of the new date
 *
 * @returns The new date with the day of the ISO week set
 *
 * @example
 * // Set Sunday to 1 September 2014:
 * const result = setISODay(new Date(2014, 8, 1), 7)
 * //=> Sun Sep 07 2014 00:00:00
 */
function setISODay(date, day) {
  const _date = (0, _index3.toDate)(date);
  const currentDay = (0, _index2.getISODay)(_date);
  const diff = day - currentDay;
  return (0, _index.addDays)(_date, diff);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeek.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeek.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setISOWeek = setISOWeek;
var _index = __webpack_require__(/*! ./getISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setISOWeek
 * @category ISO Week Helpers
 * @summary Set the ISO week to the given date.
 *
 * @description
 * Set the ISO week to the given date, saving the weekday number.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param week - The ISO week of the new date
 *
 * @returns The new date with the ISO week set
 *
 * @example
 * // Set the 53rd ISO week to 7 August 2004:
 * const result = setISOWeek(new Date(2004, 7, 7), 53)
 * //=> Sat Jan 01 2005 00:00:00
 */
function setISOWeek(date, week) {
  const _date = (0, _index2.toDate)(date);
  const diff = (0, _index.getISOWeek)(_date) - week;
  _date.setDate(_date.getDate() - diff * 7);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeekYear.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setISOWeekYear.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setISOWeekYear = setISOWeekYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index3 = __webpack_require__(/*! ./startOfISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Set the ISO week-numbering year to the given date.
 *
 * @description
 * Set the ISO week-numbering year to the given date,
 * saving the week number and the weekday number.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param weekYear - The ISO week-numbering year of the new date
 *
 * @returns The new date with the ISO week-numbering year set
 *
 * @example
 * // Set ISO week-numbering year 2007 to 29 December 2008:
 * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)
 * //=> Mon Jan 01 2007 00:00:00
 */
function setISOWeekYear(date, weekYear) {
  let _date = (0, _index4.toDate)(date);
  const diff = (0, _index2.differenceInCalendarDays)(
    _date,
    (0, _index3.startOfISOWeekYear)(_date),
  );
  const fourthOfJanuary = (0, _index.constructFrom)(date, 0);
  fourthOfJanuary.setFullYear(weekYear, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  _date = (0, _index3.startOfISOWeekYear)(fourthOfJanuary);
  _date.setDate(_date.getDate() + diff);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMilliseconds.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMilliseconds.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setMilliseconds = setMilliseconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setMilliseconds
 * @category Millisecond Helpers
 * @summary Set the milliseconds to the given date.
 *
 * @description
 * Set the milliseconds to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param milliseconds - The milliseconds of the new date
 *
 * @returns The new date with the milliseconds set
 *
 * @example
 * // Set 300 milliseconds to 1 September 2014 11:30:40.500:
 * const result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)
 * //=> Mon Sep 01 2014 11:30:40.300
 */
function setMilliseconds(date, milliseconds) {
  const _date = (0, _index.toDate)(date);
  _date.setMilliseconds(milliseconds);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMinutes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMinutes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setMinutes = setMinutes;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setMinutes
 * @category Minute Helpers
 * @summary Set the minutes to the given date.
 *
 * @description
 * Set the minutes to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param minutes - The minutes of the new date
 *
 * @returns The new date with the minutes set
 *
 * @example
 * // Set 45 minutes to 1 September 2014 11:30:40:
 * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:45:40
 */
function setMinutes(date, minutes) {
  const _date = (0, _index.toDate)(date);
  _date.setMinutes(minutes);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setMonth = setMonth;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./getDaysInMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDaysInMonth.js");
var _index3 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param month - The month index to set (0-11)
 *
 * @returns The new date with the month set
 *
 * @example
 * // Set February to 1 September 2014:
 * const result = setMonth(new Date(2014, 8, 1), 1)
 * //=> Sat Feb 01 2014 00:00:00
 */
function setMonth(date, month) {
  const _date = (0, _index3.toDate)(date);
  const year = _date.getFullYear();
  const day = _date.getDate();

  const dateWithDesiredMonth = (0, _index.constructFrom)(date, 0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  const daysInMonth = (0, _index2.getDaysInMonth)(dateWithDesiredMonth);
  // Set the last day of the new month
  // if the original date was the last day of the longer month
  _date.setMonth(month, Math.min(day, daysInMonth));
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setQuarter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setQuarter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setQuarter = setQuarter;
var _index = __webpack_require__(/*! ./setMonth.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setQuarter
 * @category Quarter Helpers
 * @summary Set the year quarter to the given date.
 *
 * @description
 * Set the year quarter to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param quarter - The quarter of the new date
 *
 * @returns The new date with the quarter set
 *
 * @example
 * // Set the 2nd quarter to 2 July 2014:
 * const result = setQuarter(new Date(2014, 6, 2), 2)
 * //=> Wed Apr 02 2014 00:00:00
 */
function setQuarter(date, quarter) {
  const _date = (0, _index2.toDate)(date);
  const oldQuarter = Math.trunc(_date.getMonth() / 3) + 1;
  const diff = quarter - oldQuarter;
  return (0, _index.setMonth)(_date, _date.getMonth() + diff * 3);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setSeconds.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setSeconds.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setSeconds = setSeconds;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setSeconds
 * @category Second Helpers
 * @summary Set the seconds to the given date.
 *
 * @description
 * Set the seconds to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param seconds - The seconds of the new date
 *
 * @returns The new date with the seconds set
 *
 * @example
 * // Set 45 seconds to 1 September 2014 11:30:40:
 * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
 * //=> Mon Sep 01 2014 11:30:45
 */
function setSeconds(date, seconds) {
  const _date = (0, _index.toDate)(date);
  _date.setSeconds(seconds);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeek.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeek.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setWeek = setWeek;
var _index = __webpack_require__(/*! ./getWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeek.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * The {@link setWeek} function options.
 */

/**
 * @name setWeek
 * @category Week Helpers
 * @summary Set the local week to the given date.
 *
 * @description
 * Set the local week to the given date, saving the weekday number.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param week - The week of the new date
 * @param options - An object with options
 *
 * @returns The new date with the local week set
 *
 * @example
 * // Set the 1st week to 2 January 2005 with default options:
 * const result = setWeek(new Date(2005, 0, 2), 1)
 * //=> Sun Dec 26 2004 00:00:00
 *
 * @example
 * // Set the 1st week to 2 January 2005,
 * // if Monday is the first day of the week,
 * // and the first week of the year always contains 4 January:
 * const result = setWeek(new Date(2005, 0, 2), 1, {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Sun Jan 4 2004 00:00:00
 */
function setWeek(date, week, options) {
  const _date = (0, _index2.toDate)(date);
  const diff = (0, _index.getWeek)(_date, options) - week;
  _date.setDate(_date.getDate() - diff * 7);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeekYear.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setWeekYear.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setWeekYear = setWeekYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./differenceInCalendarDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js");
var _index3 = __webpack_require__(/*! ./startOfWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeekYear.js");
var _index4 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index5 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link setWeekYear} function options.
 */

/**
 * @name setWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Set the local week-numbering year to the given date.
 *
 * @description
 * Set the local week-numbering year to the given date,
 * saving the week number and the weekday number.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param weekYear - The local week-numbering year of the new date
 * @param options - An object with options
 *
 * @returns The new date with the local week-numbering year set
 *
 * @example
 * // Set the local week-numbering year 2004 to 2 January 2010 with default options:
 * const result = setWeekYear(new Date(2010, 0, 2), 2004)
 * //=> Sat Jan 03 2004 00:00:00
 *
 * @example
 * // Set the local week-numbering year 2004 to 2 January 2010,
 * // if Monday is the first day of week
 * // and 4 January is always in the first week of the year:
 * const result = setWeekYear(new Date(2010, 0, 2), 2004, {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Sat Jan 01 2005 00:00:00
 */
function setWeekYear(date, weekYear, options) {
  const defaultOptions = (0, _index5.getDefaultOptions)();
  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  let _date = (0, _index4.toDate)(date);
  const diff = (0, _index2.differenceInCalendarDays)(
    _date,
    (0, _index3.startOfWeekYear)(_date, options),
  );
  const firstWeek = (0, _index.constructFrom)(date, 0);
  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  _date = (0, _index3.startOfWeekYear)(firstWeek, options);
  _date.setDate(_date.getDate() + diff);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setYear.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setYear.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.setYear = setYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name setYear
 * @category Year Helpers
 * @summary Set the year to the given date.
 *
 * @description
 * Set the year to the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param year - The year of the new date
 *
 * @returns The new date with the year set
 *
 * @example
 * // Set year 2013 to 1 September 2014:
 * const result = setYear(new Date(2014, 8, 1), 2013)
 * //=> Sun Sep 01 2013 00:00:00
 */
function setYear(date, year) {
  const _date = (0, _index2.toDate)(date);

  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
  if (isNaN(+_date)) {
    return (0, _index.constructFrom)(date, NaN);
  }

  _date.setFullYear(year);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfDay = startOfDay;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a day
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function startOfDay(date) {
  const _date = (0, _index.toDate)(date);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDecade.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDecade.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfDecade = startOfDecade;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfDecade
 * @category Decade Helpers
 * @summary Return the start of a decade for the given date.
 *
 * @description
 * Return the start of a decade for the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a decade
 *
 * @example
 * // The start of a decade for 21 October 2015 00:00:00:
 * const result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))
 * //=> Jan 01 2010 00:00:00
 */
function startOfDecade(date) {
  // TODO: Switch to more technical definition in of decades that start with 1
  // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking
  // change, so it can only be done in 4.0.
  const _date = (0, _index.toDate)(date);
  const year = _date.getFullYear();
  const decade = Math.floor(year / 10) * 10;
  _date.setFullYear(decade, 0, 1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfHour.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfHour.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfHour = startOfHour;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfHour
 * @category Hour Helpers
 * @summary Return the start of an hour for the given date.
 *
 * @description
 * Return the start of an hour for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of an hour
 *
 * @example
 * // The start of an hour for 2 September 2014 11:55:00:
 * const result = startOfHour(new Date(2014, 8, 2, 11, 55))
 * //=> Tue Sep 02 2014 11:00:00
 */
function startOfHour(date) {
  const _date = (0, _index.toDate)(date);
  _date.setMinutes(0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfISOWeek = startOfISOWeek;
var _index = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");

/**
 * @name startOfISOWeek
 * @category ISO Week Helpers
 * @summary Return the start of an ISO week for the given date.
 *
 * @description
 * Return the start of an ISO week for the given date.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of an ISO week
 *
 * @example
 * // The start of an ISO week for 2 September 2014 11:55:00:
 * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfISOWeek(date) {
  return (0, _index.startOfWeek)(date, { weekStartsOn: 1 });
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeekYear.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfISOWeekYear = startOfISOWeekYear;
var _index = __webpack_require__(/*! ./getISOWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeekYear.js");
var _index2 = __webpack_require__(/*! ./startOfISOWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfISOWeek.js");
var _index3 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name startOfISOWeekYear
 * @category ISO Week-Numbering Year Helpers
 * @summary Return the start of an ISO week-numbering year for the given date.
 *
 * @description
 * Return the start of an ISO week-numbering year,
 * which always starts 3 days before the year's first Thursday.
 * The result will be in the local timezone.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of an ISO week-numbering year
 *
 * @example
 * // The start of an ISO week-numbering year for 2 July 2005:
 * const result = startOfISOWeekYear(new Date(2005, 6, 2))
 * //=> Mon Jan 03 2005 00:00:00
 */
function startOfISOWeekYear(date) {
  const year = (0, _index.getISOWeekYear)(date);
  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  return (0, _index2.startOfISOWeek)(fourthOfJanuary);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMinute.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMinute.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfMinute = startOfMinute;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfMinute
 * @category Minute Helpers
 * @summary Return the start of a minute for the given date.
 *
 * @description
 * Return the start of a minute for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a minute
 *
 * @example
 * // The start of a minute for 1 December 2014 22:15:45.400:
 * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:00
 */
function startOfMinute(date) {
  const _date = (0, _index.toDate)(date);
  _date.setSeconds(0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfMonth = startOfMonth;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfMonth
 * @category Month Helpers
 * @summary Return the start of a month for the given date.
 *
 * @description
 * Return the start of a month for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a month
 *
 * @example
 * // The start of a month for 2 September 2014 11:55:00:
 * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfMonth(date) {
  const _date = (0, _index.toDate)(date);
  _date.setDate(1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfQuarter = startOfQuarter;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfQuarter
 * @category Quarter Helpers
 * @summary Return the start of a year quarter for the given date.
 *
 * @description
 * Return the start of a year quarter for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a quarter
 *
 * @example
 * // The start of a quarter for 2 September 2014 11:55:00:
 * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Jul 01 2014 00:00:00
 */
function startOfQuarter(date) {
  const _date = (0, _index.toDate)(date);
  const currentMonth = _date.getMonth();
  const month = currentMonth - (currentMonth % 3);
  _date.setMonth(month, 1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfSecond.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfSecond.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfSecond = startOfSecond;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

/**
 * @name startOfSecond
 * @category Second Helpers
 * @summary Return the start of a second for the given date.
 *
 * @description
 * Return the start of a second for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a second
 *
 * @example
 * // The start of a second for 1 December 2014 22:15:45.400:
 * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
 * //=> Mon Dec 01 2014 22:15:45.000
 */
function startOfSecond(date) {
  const _date = (0, _index.toDate)(date);
  _date.setMilliseconds(0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfToday.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfToday.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfToday = startOfToday;
var _index = __webpack_require__(/*! ./startOfDay.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js");

/**
 * @name startOfToday
 * @category Day Helpers
 * @summary Return the start of today.
 * @pure false
 *
 * @description
 * Return the start of today.
 *
 * @returns The start of today
 *
 * @example
 * // If today is 6 October 2014:
 * const result = startOfToday()
 * //=> Mon Oct 6 2014 00:00:00
 */
function startOfToday() {
  return (0, _index.startOfDay)(Date.now());
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfTomorrow.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfTomorrow.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.startOfTomorrow = startOfTomorrow; /**
 * @name startOfTomorrow
 * @category Day Helpers
 * @summary Return the start of tomorrow.
 * @pure false
 *
 * @description
 * Return the start of tomorrow.
 *
 * @returns The start of tomorrow
 *
 * @example
 * // If today is 6 October 2014:
 * const result = startOfTomorrow()
 * //=> Tue Oct 7 2014 00:00:00
 */
function startOfTomorrow() {
  const now = new Date();
  const year = now.getFullYear();
  const month = now.getMonth();
  const day = now.getDate();

  const date = new Date(0);
  date.setFullYear(year, month, day + 1);
  date.setHours(0, 0, 0, 0);
  return date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfWeek = startOfWeek;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");

var _index2 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link startOfWeek} function options.
 */

/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The start of a week
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */
function startOfWeek(date, options) {
  const defaultOptions = (0, _index2.getDefaultOptions)();
  const weekStartsOn =
    options?.weekStartsOn ??
    options?.locale?.options?.weekStartsOn ??
    defaultOptions.weekStartsOn ??
    defaultOptions.locale?.options?.weekStartsOn ??
    0;

  const _date = (0, _index.toDate)(date);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

  _date.setDate(_date.getDate() - diff);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeekYear.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeekYear.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfWeekYear = startOfWeekYear;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");
var _index2 = __webpack_require__(/*! ./getWeekYear.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getWeekYear.js");
var _index3 = __webpack_require__(/*! ./startOfWeek.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js");

var _index4 = __webpack_require__(/*! ./_lib/defaultOptions.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/defaultOptions.js");

/**
 * The {@link startOfWeekYear} function options.
 */

/**
 * @name startOfWeekYear
 * @category Week-Numbering Year Helpers
 * @summary Return the start of a local week-numbering year for the given date.
 *
 * @description
 * Return the start of a local week-numbering year.
 * The exact calculation depends on the values of
 * `options.weekStartsOn` (which is the index of the first day of the week)
 * and `options.firstWeekContainsDate` (which is the day of January, which is always in
 * the first week of the week-numbering year)
 *
 * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 * @param options - An object with options
 *
 * @returns The start of a week-numbering year
 *
 * @example
 * // The start of an a week-numbering year for 2 July 2005 with default settings:
 * const result = startOfWeekYear(new Date(2005, 6, 2))
 * //=> Sun Dec 26 2004 00:00:00
 *
 * @example
 * // The start of a week-numbering year for 2 July 2005
 * // if Monday is the first day of week
 * // and 4 January is always in the first week of the year:
 * const result = startOfWeekYear(new Date(2005, 6, 2), {
 *   weekStartsOn: 1,
 *   firstWeekContainsDate: 4
 * })
 * //=> Mon Jan 03 2005 00:00:00
 */
function startOfWeekYear(date, options) {
  const defaultOptions = (0, _index4.getDefaultOptions)();
  const firstWeekContainsDate =
    options?.firstWeekContainsDate ??
    options?.locale?.options?.firstWeekContainsDate ??
    defaultOptions.firstWeekContainsDate ??
    defaultOptions.locale?.options?.firstWeekContainsDate ??
    1;

  const year = (0, _index2.getWeekYear)(date, options);
  const firstWeek = (0, _index.constructFrom)(date, 0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  const _date = (0, _index3.startOfWeek)(firstWeek, options);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.startOfYear = startOfYear;
var _index = __webpack_require__(/*! ./toDate.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js");
var _index2 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name startOfYear
 * @category Year Helpers
 * @summary Return the start of a year for the given date.
 *
 * @description
 * Return the start of a year for the given date.
 * The result will be in the local timezone.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The original date
 *
 * @returns The start of a year
 *
 * @example
 * // The start of a year for 2 September 2014 11:55:00:
 * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
 * //=> Wed Jan 01 2014 00:00:00
 */
function startOfYear(date) {
  const cleanDate = (0, _index.toDate)(date);
  const _date = (0, _index2.constructFrom)(date, 0);
  _date.setFullYear(cleanDate.getFullYear(), 0, 1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYesterday.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYesterday.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.startOfYesterday = startOfYesterday; /**
 * @name startOfYesterday
 * @category Day Helpers
 * @summary Return the start of yesterday.
 * @pure false
 *
 * @description
 * Return the start of yesterday.
 *
 * @returns The start of yesterday
 *
 * @example
 * // If today is 6 October 2014:
 * const result = startOfYesterday()
 * //=> Sun Oct 5 2014 00:00:00
 */
function startOfYesterday() {
  const now = new Date();
  const year = now.getFullYear();
  const month = now.getMonth();
  const day = now.getDate();

  const date = new Date(0);
  date.setFullYear(year, month, day - 1);
  date.setHours(0, 0, 0, 0);
  return date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/sub.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/sub.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.sub = sub;
var _index = __webpack_require__(/*! ./subDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js");
var _index2 = __webpack_require__(/*! ./subMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMonths.js");

var _index3 = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name sub
 * @category Common Helpers
 * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @description
 * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted
 *
 * | Key     | Description                        |
 * |---------|------------------------------------|
 * | years   | Amount of years to be subtracted   |
 * | months  | Amount of months to be subtracted  |
 * | weeks   | Amount of weeks to be subtracted   |
 * | days    | Amount of days to be subtracted    |
 * | hours   | Amount of hours to be subtracted   |
 * | minutes | Amount of minutes to be subtracted |
 * | seconds | Amount of seconds to be subtracted |
 *
 * All values default to 0
 *
 * @returns The new date with the seconds subtracted
 *
 * @example
 * // Subtract the following duration from 15 June 2017 15:29:20
 * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> Mon Sep 1 2014 10:19:50
 */
function sub(date, duration) {
  const {
    years = 0,
    months = 0,
    weeks = 0,
    days = 0,
    hours = 0,
    minutes = 0,
    seconds = 0,
  } = duration;

  // Subtract years and months
  const dateWithoutMonths = (0, _index2.subMonths)(date, months + years * 12);

  // Subtract weeks and days
  const dateWithoutDays = (0, _index.subDays)(
    dateWithoutMonths,
    days + weeks * 7,
  );

  // Subtract hours, minutes and seconds
  const minutestoSub = minutes + hours * 60;
  const secondstoSub = seconds + minutestoSub * 60;
  const mstoSub = secondstoSub * 1000;
  const finalDate = (0, _index3.constructFrom)(
    date,
    dateWithoutDays.getTime() - mstoSub,
  );

  return finalDate;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subBusinessDays.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subBusinessDays.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subBusinessDays = subBusinessDays;
var _index = __webpack_require__(/*! ./addBusinessDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addBusinessDays.js");

/**
 * @name subBusinessDays
 * @category Day Helpers
 * @summary Substract the specified number of business days (mon - fri) to the given date.
 *
 * @description
 * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of business days to be subtracted.
 *
 * @returns The new date with the business days subtracted
 *
 * @example
 * // Substract 10 business days from 1 September 2014:
 * const result = subBusinessDays(new Date(2014, 8, 1), 10)
 * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)
 */
function subBusinessDays(date, amount) {
  return (0, _index.addBusinessDays)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subDays = subDays;
var _index = __webpack_require__(/*! ./addDays.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js");

/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of days to be subtracted.
 *
 * @returns The new date with the days subtracted
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * const result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */
function subDays(date, amount) {
  return (0, _index.addDays)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subHours.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subHours.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subHours = subHours;
var _index = __webpack_require__(/*! ./addHours.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js");

/**
 * @name subHours
 * @category Hour Helpers
 * @summary Subtract the specified number of hours from the given date.
 *
 * @description
 * Subtract the specified number of hours from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of hours to be subtracted.
 *
 * @returns The new date with the hours subtracted
 *
 * @example
 * // Subtract 2 hours from 11 July 2014 01:00:00:
 * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)
 * //=> Thu Jul 10 2014 23:00:00
 */
function subHours(date, amount) {
  return (0, _index.addHours)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subISOWeekYears.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subISOWeekYears.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subISOWeekYears = subISOWeekYears;
var _index = __webpack_require__(/*! ./addISOWeekYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addISOWeekYears.js");

/**
 * @name subISOWeekYears
 * @category ISO Week-Numbering Year Helpers
 * @summary Subtract the specified number of ISO week-numbering years from the given date.
 *
 * @description
 * Subtract the specified number of ISO week-numbering years from the given date.
 *
 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of ISO week-numbering years to be subtracted.
 *
 * @returns The new date with the ISO week-numbering years subtracted
 *
 * @example
 * // Subtract 5 ISO week-numbering years from 1 September 2014:
 * const result = subISOWeekYears(new Date(2014, 8, 1), 5)
 * //=> Mon Aug 31 2009 00:00:00
 */
function subISOWeekYears(date, amount) {
  return (0, _index.addISOWeekYears)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMilliseconds.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMilliseconds.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subMilliseconds = subMilliseconds;
var _index = __webpack_require__(/*! ./addMilliseconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMilliseconds.js");

/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of milliseconds to be subtracted.
 *
 * @returns The new date with the milliseconds subtracted
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */
function subMilliseconds(date, amount) {
  return (0, _index.addMilliseconds)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMinutes.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMinutes.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subMinutes = subMinutes;
var _index = __webpack_require__(/*! ./addMinutes.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js");

/**
 * @name subMinutes
 * @category Minute Helpers
 * @summary Subtract the specified number of minutes from the given date.
 *
 * @description
 * Subtract the specified number of minutes from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of minutes to be subtracted.
 *
 * @returns The new date with the minutes subtracted
 *
 * @example
 * // Subtract 30 minutes from 10 July 2014 12:00:00:
 * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 11:30:00
 */
function subMinutes(date, amount) {
  return (0, _index.addMinutes)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMonths.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMonths.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subMonths = subMonths;
var _index = __webpack_require__(/*! ./addMonths.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js");

/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of months to be subtracted.
 *
 * @returns The new date with the months subtracted
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * const result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */
function subMonths(date, amount) {
  return (0, _index.addMonths)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subQuarters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subQuarters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subQuarters = subQuarters;
var _index = __webpack_require__(/*! ./addQuarters.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js");

/**
 * @name subQuarters
 * @category Quarter Helpers
 * @summary Subtract the specified number of year quarters from the given date.
 *
 * @description
 * Subtract the specified number of year quarters from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of quarters to be subtracted.
 *
 * @returns The new date with the quarters subtracted
 *
 * @example
 * // Subtract 3 quarters from 1 September 2014:
 * const result = subQuarters(new Date(2014, 8, 1), 3)
 * //=> Sun Dec 01 2013 00:00:00
 */
function subQuarters(date, amount) {
  return (0, _index.addQuarters)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subSeconds.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subSeconds.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subSeconds = subSeconds;
var _index = __webpack_require__(/*! ./addSeconds.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addSeconds.js");

/**
 * @name subSeconds
 * @category Second Helpers
 * @summary Subtract the specified number of seconds from the given date.
 *
 * @description
 * Subtract the specified number of seconds from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of seconds to be subtracted.
 *
 * @returns The new date with the seconds subtracted
 *
 * @example
 * // Subtract 30 seconds from 10 July 2014 12:45:00:
 * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:44:30
 */
function subSeconds(date, amount) {
  return (0, _index.addSeconds)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subWeeks.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subWeeks.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subWeeks = subWeeks;
var _index = __webpack_require__(/*! ./addWeeks.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js");

/**
 * @name subWeeks
 * @category Week Helpers
 * @summary Subtract the specified number of weeks from the given date.
 *
 * @description
 * Subtract the specified number of weeks from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of weeks to be subtracted.
 *
 * @returns The new date with the weeks subtracted
 *
 * @example
 * // Subtract 4 weeks from 1 September 2014:
 * const result = subWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Aug 04 2014 00:00:00
 */
function subWeeks(date, amount) {
  return (0, _index.addWeeks)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subYears.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subYears.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.subYears = subYears;
var _index = __webpack_require__(/*! ./addYears.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addYears.js");

/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param date - The date to be changed
 * @param amount - The amount of years to be subtracted.
 *
 * @returns The new date with the years subtracted
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * const result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */
function subYears(date, amount) {
  return (0, _index.addYears)(date, -amount);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

exports.toDate = toDate;

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).
 *
 * @param argument - The value to convert
 *
 * @returns The parsed date in the local time zone
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  const argStr = Object.prototype.toString.call(argument);

  // Clone the date
  if (
    argument instanceof Date ||
    (typeof argument === "object" && argStr === "[object Date]")
  ) {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new argument.constructor(+argument);
  } else if (
    typeof argument === "number" ||
    argStr === "[object Number]" ||
    typeof argument === "string" ||
    argStr === "[object String]"
  ) {
    // TODO: Can we get rid of as?
    return new Date(argument);
  } else {
    // TODO: Can we get rid of as?
    return new Date(NaN);
  }
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/transpose.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/transpose.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.transpose = transpose;
var _index = __webpack_require__(/*! ./constructFrom.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constructFrom.js");

/**
 * @name transpose
 * @category Generic Helpers
 * @summary Transpose the date to the given constructor.
 *
 * @description
 * The function transposes the date to the given constructor. It helps you
 * to transpose the date in the system time zone to say `UTCDate` or any other
 * date extension.
 *
 * @typeParam DateInputType - The input `Date` type derived from the passed argument.
 * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.
 *
 * @param fromDate - The date to use values from
 * @param constructor - The date constructor to use
 *
 * @returns Date transposed to the given constructor
 *
 * @example
 * // Create July 10, 2022 00:00 in locale time zone
 * const date = new Date(2022, 6, 10)
 * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'
 *
 * @example
 * // Transpose the date to July 10, 2022 00:00 in UTC
 * transpose(date, UTCDate)
 * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'
 */
function transpose(fromDate, constructor) {
  const date =
    constructor instanceof Date
      ? (0, _index.constructFrom)(constructor, 0)
      : new constructor(0);
  date.setFullYear(
    fromDate.getFullYear(),
    fromDate.getMonth(),
    fromDate.getDate(),
  );
  date.setHours(
    fromDate.getHours(),
    fromDate.getMinutes(),
    fromDate.getSeconds(),
    fromDate.getMilliseconds(),
  );
  return date;
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/weeksToDays.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/weeksToDays.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.weeksToDays = weeksToDays;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name weeksToDays
 * @category Conversion Helpers
 * @summary Convert weeks to days.
 *
 * @description
 * Convert a number of weeks to a full number of days.
 *
 * @param weeks - The number of weeks to be converted
 *
 * @returns The number of weeks converted in days
 *
 * @example
 * // Convert 2 weeks into days
 * const result = weeksToDays(2)
 * //=> 14
 */
function weeksToDays(weeks) {
  return Math.trunc(weeks * _index.daysInWeek);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToDays.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToDays.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.yearsToDays = yearsToDays;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name yearsToDays
 * @category Conversion Helpers
 * @summary Convert years to days.
 *
 * @description
 * Convert a number of years to a full number of days.
 *
 * @param years - The number of years to be converted
 *
 * @returns The number of years converted in days
 *
 * @example
 * // Convert 2 years into days
 * const result = yearsToDays(2)
 * //=> 730
 */
function yearsToDays(years) {
  return Math.trunc(years * _index.daysInYear);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToMonths.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToMonths.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.yearsToMonths = yearsToMonths;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name yearsToMonths
 * @category Conversion Helpers
 * @summary Convert years to months.
 *
 * @description
 * Convert a number of years to a full number of months.
 *
 * @param years - The number of years to be converted
 *
 * @returns The number of years converted in months
 *
 * @example
 * // Convert 2 years into months
 * const result = yearsToMonths(2)
 * //=> 24
 */
function yearsToMonths(years) {
  return Math.trunc(years * _index.monthsInYear);
}


/***/ }),

/***/ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToQuarters.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/yearsToQuarters.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.yearsToQuarters = yearsToQuarters;
var _index = __webpack_require__(/*! ./constants.js */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/constants.js");

/**
 * @name yearsToQuarters
 * @category Conversion Helpers
 * @summary Convert years to quarters.
 *
 * @description
 * Convert a number of years to a full number of quarters.
 *
 * @param years - The number of years to be converted
 *
 * @returns The number of years converted in quarters
 *
 * @example
 * // Convert 2 years to quarters
 * const result = yearsToQuarters(2)
 * //=> 8
 */
function yearsToQuarters(years) {
  return Math.trunc(years * _index.quartersInYear);
}


/***/ }),

/***/ "./resources/scss/invoice.scss":
/*!*************************************!*\
  !*** ./resources/scss/invoice.scss ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = __webpack_require__(/*! ./lib/has */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js");

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) { /**/ }
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js");
var has = __webpack_require__(/*! ./lib/has */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data: {};
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError(
          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
          {expectedType: expectedType}
        );
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError(
      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
    );
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/.pnpm/react-datepicker@7.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-datepicker/dist/react-datepicker.min.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-datepicker@7.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-datepicker/dist/react-datepicker.min.js ***!
  \**********************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

/*!
  react-datepicker v7.6.0
  https://github.com/Hacker0x01/react-datepicker
  Released under the MIT License.
*/
!function(e,t){ true?t(exports,__webpack_require__(/*! clsx */ "./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.js"),__webpack_require__(/*! react */ "react"),__webpack_require__(/*! date-fns */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/index.js"),__webpack_require__(/*! date-fns/addDays */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addDays.js"),__webpack_require__(/*! date-fns/addHours */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addHours.js"),__webpack_require__(/*! date-fns/addMinutes */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMinutes.js"),__webpack_require__(/*! date-fns/addMonths */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addMonths.js"),__webpack_require__(/*! date-fns/addQuarters */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addQuarters.js"),__webpack_require__(/*! date-fns/addSeconds */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addSeconds.js"),__webpack_require__(/*! date-fns/addWeeks */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addWeeks.js"),__webpack_require__(/*! date-fns/addYears */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/addYears.js"),__webpack_require__(/*! date-fns/differenceInCalendarDays */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarDays.js"),__webpack_require__(/*! date-fns/differenceInCalendarMonths */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarMonths.js"),__webpack_require__(/*! date-fns/differenceInCalendarQuarters */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarQuarters.js"),__webpack_require__(/*! date-fns/differenceInCalendarYears */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/differenceInCalendarYears.js"),__webpack_require__(/*! date-fns/endOfDay */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfDay.js"),__webpack_require__(/*! date-fns/endOfMonth */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfMonth.js"),__webpack_require__(/*! date-fns/endOfWeek */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfWeek.js"),__webpack_require__(/*! date-fns/endOfYear */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/endOfYear.js"),__webpack_require__(/*! date-fns/format */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/format.js"),__webpack_require__(/*! date-fns/getDate */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDate.js"),__webpack_require__(/*! date-fns/getDay */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getDay.js"),__webpack_require__(/*! date-fns/getHours */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getHours.js"),__webpack_require__(/*! date-fns/getISOWeek */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getISOWeek.js"),__webpack_require__(/*! date-fns/getMinutes */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMinutes.js"),__webpack_require__(/*! date-fns/getMonth */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getMonth.js"),__webpack_require__(/*! date-fns/getQuarter */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getQuarter.js"),__webpack_require__(/*! date-fns/getSeconds */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getSeconds.js"),__webpack_require__(/*! date-fns/getTime */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getTime.js"),__webpack_require__(/*! date-fns/getYear */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/getYear.js"),__webpack_require__(/*! date-fns/isAfter */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isAfter.js"),__webpack_require__(/*! date-fns/isBefore */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isBefore.js"),__webpack_require__(/*! date-fns/isDate */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isDate.js"),__webpack_require__(/*! date-fns/isEqual */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isEqual.js"),__webpack_require__(/*! date-fns/isSameDay */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameDay.js"),__webpack_require__(/*! date-fns/isSameMonth */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameMonth.js"),__webpack_require__(/*! date-fns/isSameQuarter */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameQuarter.js"),__webpack_require__(/*! date-fns/isSameYear */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isSameYear.js"),__webpack_require__(/*! date-fns/isValid */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isValid.js"),__webpack_require__(/*! date-fns/isWithinInterval */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/isWithinInterval.js"),__webpack_require__(/*! date-fns/max */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/max.js"),__webpack_require__(/*! date-fns/min */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/min.js"),__webpack_require__(/*! date-fns/parse */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parse.js"),__webpack_require__(/*! date-fns/parseISO */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/parseISO.js"),__webpack_require__(/*! date-fns/set */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/set.js"),__webpack_require__(/*! date-fns/setHours */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setHours.js"),__webpack_require__(/*! date-fns/setMinutes */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMinutes.js"),__webpack_require__(/*! date-fns/setMonth */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setMonth.js"),__webpack_require__(/*! date-fns/setQuarter */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setQuarter.js"),__webpack_require__(/*! date-fns/setSeconds */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setSeconds.js"),__webpack_require__(/*! date-fns/setYear */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/setYear.js"),__webpack_require__(/*! date-fns/startOfDay */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfDay.js"),__webpack_require__(/*! date-fns/startOfMonth */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfMonth.js"),__webpack_require__(/*! date-fns/startOfQuarter */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfQuarter.js"),__webpack_require__(/*! date-fns/startOfWeek */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfWeek.js"),__webpack_require__(/*! date-fns/startOfYear */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/startOfYear.js"),__webpack_require__(/*! date-fns/subDays */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subDays.js"),__webpack_require__(/*! date-fns/subMonths */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subMonths.js"),__webpack_require__(/*! date-fns/subQuarters */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subQuarters.js"),__webpack_require__(/*! date-fns/subWeeks */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subWeeks.js"),__webpack_require__(/*! date-fns/subYears */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/subYears.js"),__webpack_require__(/*! date-fns/toDate */ "./node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/toDate.js"),__webpack_require__(/*! @floating-ui/react */ "./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js"),__webpack_require__(/*! react-dom */ "react-dom")):0}(this,(function(e,t,r,n,a,o,s,i,l,c,d,p,u,f,h,m,v,g,D,y,k,w,S,b,M,C,_,E,P,Y,x,O,N,T,I,R,L,F,A,W,H,Q,q,K,B,V,j,U,$,z,X,G,J,Z,ee,te,re,ne,ae,oe,se,ie,le,ce,de){"use strict";function pe(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var ue=pe(r),fe=pe(de),he=function(e,t){return he=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},he(e,t)};function me(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}he(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var ve=function(){return ve=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},ve.apply(this,arguments)};function ge(e,t,r){if(r||2===arguments.length)for(var n,a=0,o=t.length;a<o;a++)!n&&a in t||(n||(n=Array.prototype.slice.call(t,0,a)),n[a]=t[a]);return e.concat(n||Array.prototype.slice.call(t))}"function"==typeof SuppressedError&&SuppressedError;var De,ye=function(e){var t=e.showTimeSelectOnly,r=void 0!==t&&t,n=e.showTime,a=void 0!==n&&n,o=e.className,s=e.children,i=r?"Choose Time":"Choose Date".concat(a?" and Time":"");return ue.default.createElement("div",{className:o,role:"dialog","aria-label":i,"aria-modal":"true"},s)},ke=function(e){var t=e.children,n=e.onClickOutside,a=e.className,o=e.containerRef,s=e.style,i=function(e,t){var n=r.useRef(null),a=r.useRef(e);a.current=e;var o=r.useCallback((function(e){var r;n.current&&!n.current.contains(e.target)&&(t&&e.target instanceof HTMLElement&&e.target.classList.contains(t)||null===(r=a.current)||void 0===r||r.call(a,e))}),[t]);return r.useEffect((function(){return document.addEventListener("mousedown",o),function(){document.removeEventListener("mousedown",o)}}),[o]),n}(n,e.ignoreClass);return ue.default.createElement("div",{className:a,style:s,ref:function(e){i.current=e,o&&(o.current=e)}},t)};function we(){return"undefined"!=typeof window?window:globalThis}!function(e){e.ArrowUp="ArrowUp",e.ArrowDown="ArrowDown",e.ArrowLeft="ArrowLeft",e.ArrowRight="ArrowRight",e.PageUp="PageUp",e.PageDown="PageDown",e.Home="Home",e.End="End",e.Enter="Enter",e.Space=" ",e.Tab="Tab",e.Escape="Escape",e.Backspace="Backspace",e.X="x"}(De||(De={}));var Se=12,be=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;function Me(e){if(null==e)return new Date;var t="string"==typeof e?B.parseISO(e):le.toDate(e);return _e(t)?t:new Date}function Ce(e,t,r,n,a){var o,s=null,i=Ve(r)||Ve(Be()),l=!0;if(Array.isArray(t))return t.forEach((function(t){var o=K.parse(e,t,new Date,{locale:i,useAdditionalWeekYearTokens:!0,useAdditionalDayOfYearTokens:!0});n&&(l=_e(o,a)&&e===Ee(o,t,r)),_e(o,a)&&l&&(s=o)})),s;if(s=K.parse(e,t,new Date,{locale:i,useAdditionalWeekYearTokens:!0,useAdditionalDayOfYearTokens:!0}),n)l=_e(s)&&e===Ee(s,t,r);else if(!_e(s)){var c=(null!==(o=t.match(be))&&void 0!==o?o:[]).map((function(e){var t=e[0];if("p"===t||"P"===t){var r=k.longFormatters[t];return i?r(e,i.formatLong):t}return e})).join("");e.length>0&&(s=K.parse(e,c.slice(0,e.length),new Date,{useAdditionalWeekYearTokens:!0,useAdditionalDayOfYearTokens:!0})),_e(s)||(s=new Date(e))}return _e(s)&&l?s:null}function _e(e,t){return W.isValid(e)&&!N.isBefore(e,null!=t?t:new Date("1/1/1800"))}function Ee(e,t,r){if("en"===r)return k.format(e,t,{useAdditionalWeekYearTokens:!0,useAdditionalDayOfYearTokens:!0});var n=r?Ve(r):void 0;return r&&!n&&console.warn('A locale object was not found for the provided string ["'.concat(r,'"].')),!n&&Be()&&Ve(Be())&&(n=Ve(Be())),k.format(e,t,{locale:n,useAdditionalWeekYearTokens:!0,useAdditionalDayOfYearTokens:!0})}function Pe(e,t){var r=t.dateFormat,n=t.locale,a=Array.isArray(r)&&r.length>0?r[0]:r;return e&&Ee(e,a,n)||""}function Ye(e,t){var r=t.hour,n=void 0===r?0:r,a=t.minute,o=void 0===a?0:a,s=t.second,i=void 0===s?0:s;return j.setHours(U.setMinutes(X.setSeconds(e,i),o),n)}function xe(e){return J.startOfDay(e)}function Oe(e,t,r){var n=Ve(t||Be());return te.startOfWeek(e,{locale:n,weekStartsOn:r})}function Ne(e){return Z.startOfMonth(e)}function Te(e){return re.startOfYear(e)}function Ie(e){return ee.startOfQuarter(e)}function Re(){return J.startOfDay(Me())}function Le(e){return v.endOfDay(e)}function Fe(e){return g.endOfMonth(e)}function Ae(e,t){return e&&t?A.isSameYear(e,t):!e&&!t}function We(e,t){return e&&t?L.isSameMonth(e,t):!e&&!t}function He(e,t){return e&&t?F.isSameQuarter(e,t):!e&&!t}function Qe(e,t){return e&&t?R.isSameDay(e,t):!e&&!t}function qe(e,t){return e&&t?I.isEqual(e,t):!e&&!t}function Ke(e,t,r){var n,a=J.startOfDay(t),o=v.endOfDay(r);try{n=H.isWithinInterval(e,{start:a,end:o})}catch(e){n=!1}return n}function Be(){return we().__localeId__}function Ve(e){if("string"==typeof e){var t=we();return t.__localeData__?t.__localeData__[e]:void 0}return e}function je(e,t){return Ee($.setMonth(Me(),e),"LLLL",t)}function Ue(e,t){return Ee($.setMonth(Me(),e),"LLL",t)}function $e(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.maxDate,o=r.excludeDates,s=r.excludeDateIntervals,i=r.includeDates,l=r.includeDateIntervals,c=r.filterDate;return nt(e,{minDate:n,maxDate:a})||o&&o.some((function(t){return t instanceof Date?Qe(e,t):Qe(e,t.date)}))||s&&s.some((function(t){var r=t.start,n=t.end;return H.isWithinInterval(e,{start:r,end:n})}))||i&&!i.some((function(t){return Qe(e,t)}))||l&&!l.some((function(t){var r=t.start,n=t.end;return H.isWithinInterval(e,{start:r,end:n})}))||c&&!c(Me(e))||!1}function ze(e,t){var r=void 0===t?{}:t,n=r.excludeDates,a=r.excludeDateIntervals;return a&&a.length>0?a.some((function(t){var r=t.start,n=t.end;return H.isWithinInterval(e,{start:r,end:n})})):n&&n.some((function(t){var r;return t instanceof Date?Qe(e,t):Qe(e,null!==(r=t.date)&&void 0!==r?r:new Date)}))||!1}function Xe(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.maxDate,o=r.excludeDates,s=r.includeDates,i=r.filterDate;return nt(e,{minDate:n?Z.startOfMonth(n):void 0,maxDate:a?g.endOfMonth(a):void 0})||(null==o?void 0:o.some((function(t){return We(e,t instanceof Date?t:t.date)})))||s&&!s.some((function(t){return We(e,t)}))||i&&!i(Me(e))||!1}function Ge(e,t,r,n){var a=x.getYear(e),o=_.getMonth(e),s=x.getYear(t),i=_.getMonth(t),l=x.getYear(n);return a===s&&a===l?o<=r&&r<=i:a<s&&(l===a&&o<=r||l===s&&i>=r||l<s&&l>a)}function Je(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.maxDate,o=r.excludeDates,s=r.includeDates;return nt(e,{minDate:n,maxDate:a})||o&&o.some((function(t){return We(t instanceof Date?t:t.date,e)}))||s&&!s.some((function(t){return We(t,e)}))||!1}function Ze(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.maxDate,o=r.excludeDates,s=r.includeDates,i=r.filterDate;return nt(e,{minDate:n,maxDate:a})||(null==o?void 0:o.some((function(t){return He(e,t instanceof Date?t:t.date)})))||s&&!s.some((function(t){return He(e,t)}))||i&&!i(Me(e))||!1}function et(e,t,r){if(!t||!r)return!1;if(!W.isValid(t)||!W.isValid(r))return!1;var n=x.getYear(t),a=x.getYear(r);return n<=e&&a>=e}function tt(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.maxDate,o=r.excludeDates,s=r.includeDates,i=r.filterDate,l=new Date(e,0,1);return nt(l,{minDate:n?re.startOfYear(n):void 0,maxDate:a?y.endOfYear(a):void 0})||(null==o?void 0:o.some((function(e){return Ae(l,e instanceof Date?e:e.date)})))||s&&!s.some((function(e){return Ae(l,e)}))||i&&!i(Me(l))||!1}function rt(e,t,r,n){var a=x.getYear(e),o=E.getQuarter(e),s=x.getYear(t),i=E.getQuarter(t),l=x.getYear(n);return a===s&&a===l?o<=r&&r<=i:a<s&&(l===a&&o<=r||l===s&&i>=r||l<s&&l>a)}function nt(e,t){var r,n=void 0===t?{}:t,a=n.minDate,o=n.maxDate;return null!==(r=a&&u.differenceInCalendarDays(e,a)<0||o&&u.differenceInCalendarDays(e,o)>0)&&void 0!==r&&r}function at(e,t){return t.some((function(t){return b.getHours(t)===b.getHours(e)&&C.getMinutes(t)===C.getMinutes(e)&&P.getSeconds(t)===P.getSeconds(e)}))}function ot(e,t){var r=void 0===t?{}:t,n=r.excludeTimes,a=r.includeTimes,o=r.filterTime;return n&&at(e,n)||a&&!at(e,a)||o&&!o(e)||!1}function st(e,t){var r=t.minTime,n=t.maxTime;if(!r||!n)throw new Error("Both minTime and maxTime props required");var a=Me();a=j.setHours(a,b.getHours(e)),a=U.setMinutes(a,C.getMinutes(e)),a=X.setSeconds(a,P.getSeconds(e));var o=Me();o=j.setHours(o,b.getHours(r)),o=U.setMinutes(o,C.getMinutes(r)),o=X.setSeconds(o,P.getSeconds(r));var s,i=Me();i=j.setHours(i,b.getHours(n)),i=U.setMinutes(i,C.getMinutes(n)),i=X.setSeconds(i,P.getSeconds(n));try{s=!H.isWithinInterval(a,{start:o,end:i})}catch(e){s=!1}return s}function it(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.includeDates,o=ae.subMonths(e,1);return n&&f.differenceInCalendarMonths(n,o)>0||a&&a.every((function(e){return f.differenceInCalendarMonths(e,o)>0}))||!1}function lt(e,t){var r=void 0===t?{}:t,n=r.maxDate,a=r.includeDates,o=i.addMonths(e,1);return n&&f.differenceInCalendarMonths(o,n)>0||a&&a.every((function(e){return f.differenceInCalendarMonths(o,e)>0}))||!1}function ct(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.includeDates,o=ie.subYears(e,1);return n&&m.differenceInCalendarYears(n,o)>0||a&&a.every((function(e){return m.differenceInCalendarYears(e,o)>0}))||!1}function dt(e,t){var r=void 0===t?{}:t,n=r.maxDate,a=r.includeDates,o=p.addYears(e,1);return n&&m.differenceInCalendarYears(o,n)>0||a&&a.every((function(e){return m.differenceInCalendarYears(o,e)>0}))||!1}function pt(e){var t=e.minDate,r=e.includeDates;if(r&&t){var n=r.filter((function(e){return u.differenceInCalendarDays(e,t)>=0}));return q.min(n)}return r?q.min(r):t}function ut(e){var t=e.maxDate,r=e.includeDates;if(r&&t){var n=r.filter((function(e){return u.differenceInCalendarDays(e,t)<=0}));return Q.max(n)}return r?Q.max(r):t}function ft(e,t){var r;void 0===e&&(e=[]),void 0===t&&(t="react-datepicker__day--highlighted");for(var n=new Map,a=0,o=e.length;a<o;a++){var s=e[a];if(T.isDate(s)){var i=Ee(s,"MM.dd.yyyy");(f=n.get(i)||[]).includes(t)||(f.push(t),n.set(i,f))}else if("object"==typeof s){var l=null!==(r=Object.keys(s)[0])&&void 0!==r?r:"",c=s[l];if("string"==typeof l&&Array.isArray(c))for(var d=0,p=c.length;d<p;d++){var u=c[d];if(u){var f;i=Ee(u,"MM.dd.yyyy");(f=n.get(i)||[]).includes(l)||(f.push(l),n.set(i,f))}}}}return n}function ht(e,t){void 0===e&&(e=[]),void 0===t&&(t="react-datepicker__day--holidays");var r=new Map;return e.forEach((function(e){var n=e.date,a=e.holidayName;if(T.isDate(n)){var o=Ee(n,"MM.dd.yyyy"),s=r.get(o)||{className:"",holidayNames:[]};if(!("className"in s)||s.className!==t||(i=s.holidayNames,l=[a],i.length!==l.length||!i.every((function(e,t){return e===l[t]})))){var i,l;s.className=t;var c=s.holidayNames;s.holidayNames=c?ge(ge([],c,!0),[a],!1):[a],r.set(o,s)}}})),r}function mt(e,t,r,n,a){for(var i=a.length,l=[],d=0;d<i;d++){var p=e,u=a[d];u&&(p=o.addHours(p,b.getHours(u)),p=s.addMinutes(p,C.getMinutes(u)),p=c.addSeconds(p,P.getSeconds(u)));var f=s.addMinutes(e,(r+1)*n);O.isAfter(p,t)&&N.isBefore(p,f)&&null!=u&&l.push(u)}return l}function vt(e){return e<10?"0".concat(e):"".concat(e)}function gt(e,t){void 0===t&&(t=Se);var r=Math.ceil(x.getYear(e)/t)*t;return{startPeriod:r-(t-1),endPeriod:r}}function Dt(e){var t=e.getSeconds(),r=e.getMilliseconds();return le.toDate(e.getTime()-1e3*t-r)}function yt(e){if(!T.isDate(e))throw new Error("Invalid date");var t=new Date(e);return t.setHours(0,0,0,0),t}function kt(e,t){if(!T.isDate(e)||!T.isDate(t))throw new Error("Invalid date received");var r=yt(e),n=yt(t);return N.isBefore(r,n)}function wt(e){return e.key===De.Space}var St,bt=function(e){function t(t){var n=e.call(this,t)||this;return n.inputRef=ue.default.createRef(),n.onTimeChange=function(e){var t,r;n.setState({time:e});var a=n.props.date,o=a instanceof Date&&!isNaN(+a)?a:new Date;if(null==e?void 0:e.includes(":")){var s=e.split(":"),i=s[0],l=s[1];o.setHours(Number(i)),o.setMinutes(Number(l))}null===(r=(t=n.props).onChange)||void 0===r||r.call(t,o)},n.renderTimeInput=function(){var e=n.state.time,t=n.props,a=t.date,o=t.timeString,s=t.customTimeInput;return s?r.cloneElement(s,{date:a,value:e,onChange:n.onTimeChange}):ue.default.createElement("input",{type:"time",className:"react-datepicker-time__input",placeholder:"Time",name:"time-input",ref:n.inputRef,onClick:function(){var e;null===(e=n.inputRef.current)||void 0===e||e.focus()},required:!0,value:e,onChange:function(e){n.onTimeChange(e.target.value||o)}})},n.state={time:n.props.timeString},n}return me(t,e),t.getDerivedStateFromProps=function(e,t){return e.timeString!==t.time?{time:e.timeString}:null},t.prototype.render=function(){return ue.default.createElement("div",{className:"react-datepicker__input-time-container"},ue.default.createElement("div",{className:"react-datepicker-time__caption"},this.props.timeInputLabel),ue.default.createElement("div",{className:"react-datepicker-time__input-container"},ue.default.createElement("div",{className:"react-datepicker-time__input"},this.renderTimeInput())))},t}(r.Component),Mt=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.dayEl=r.createRef(),n.handleClick=function(e){!n.isDisabled()&&n.props.onClick&&n.props.onClick(e)},n.handleMouseEnter=function(e){!n.isDisabled()&&n.props.onMouseEnter&&n.props.onMouseEnter(e)},n.handleOnKeyDown=function(e){var t,r;e.key===De.Space&&(e.preventDefault(),e.key=De.Enter),null===(r=(t=n.props).handleOnKeyDown)||void 0===r||r.call(t,e)},n.isSameDay=function(e){return Qe(n.props.day,e)},n.isKeyboardSelected=function(){var e;if(n.props.disabledKeyboardNavigation)return!1;var t=n.props.selectsMultiple?null===(e=n.props.selectedDates)||void 0===e?void 0:e.some((function(e){return n.isSameDayOrWeek(e)})):n.isSameDayOrWeek(n.props.selected),r=n.props.preSelection&&n.isDisabled(n.props.preSelection);return!t&&n.isSameDayOrWeek(n.props.preSelection)&&!r},n.isDisabled=function(e){return void 0===e&&(e=n.props.day),$e(e,{minDate:n.props.minDate,maxDate:n.props.maxDate,excludeDates:n.props.excludeDates,excludeDateIntervals:n.props.excludeDateIntervals,includeDateIntervals:n.props.includeDateIntervals,includeDates:n.props.includeDates,filterDate:n.props.filterDate})},n.isExcluded=function(){return ze(n.props.day,{excludeDates:n.props.excludeDates,excludeDateIntervals:n.props.excludeDateIntervals})},n.isStartOfWeek=function(){return Qe(n.props.day,Oe(n.props.day,n.props.locale,n.props.calendarStartDay))},n.isSameWeek=function(e){return n.props.showWeekPicker&&Qe(e,Oe(n.props.day,n.props.locale,n.props.calendarStartDay))},n.isSameDayOrWeek=function(e){return n.isSameDay(e)||n.isSameWeek(e)},n.getHighLightedClass=function(){var e=n.props,t=e.day,r=e.highlightDates;if(!r)return!1;var a=Ee(t,"MM.dd.yyyy");return r.get(a)},n.getHolidaysClass=function(){var e,t=n.props,r=t.day,a=t.holidays;if(!a)return[void 0];var o=Ee(r,"MM.dd.yyyy");return a.has(o)?[null===(e=a.get(o))||void 0===e?void 0:e.className]:[void 0]},n.isInRange=function(){var e=n.props,t=e.day,r=e.startDate,a=e.endDate;return!(!r||!a)&&Ke(t,r,a)},n.isInSelectingRange=function(){var e,t=n.props,r=t.day,a=t.selectsStart,o=t.selectsEnd,s=t.selectsRange,i=t.selectsDisabledDaysInRange,l=t.startDate,c=t.endDate,d=null!==(e=n.props.selectingDate)&&void 0!==e?e:n.props.preSelection;return!(!(a||o||s)||!d||!i&&n.isDisabled())&&(a&&c&&(N.isBefore(d,c)||qe(d,c))?Ke(r,d,c):(o&&l&&(O.isAfter(d,l)||qe(d,l))||!(!s||!l||c||!O.isAfter(d,l)&&!qe(d,l)))&&Ke(r,l,d))},n.isSelectingRangeStart=function(){var e;if(!n.isInSelectingRange())return!1;var t=n.props,r=t.day,a=t.startDate,o=t.selectsStart,s=null!==(e=n.props.selectingDate)&&void 0!==e?e:n.props.preSelection;return Qe(r,o?s:a)},n.isSelectingRangeEnd=function(){var e;if(!n.isInSelectingRange())return!1;var t=n.props,r=t.day,a=t.endDate,o=t.selectsEnd,s=t.selectsRange,i=null!==(e=n.props.selectingDate)&&void 0!==e?e:n.props.preSelection;return Qe(r,o||s?i:a)},n.isRangeStart=function(){var e=n.props,t=e.day,r=e.startDate,a=e.endDate;return!(!r||!a)&&Qe(r,t)},n.isRangeEnd=function(){var e=n.props,t=e.day,r=e.startDate,a=e.endDate;return!(!r||!a)&&Qe(a,t)},n.isWeekend=function(){var e=S.getDay(n.props.day);return 0===e||6===e},n.isAfterMonth=function(){return void 0!==n.props.month&&(n.props.month+1)%12===_.getMonth(n.props.day)},n.isBeforeMonth=function(){return void 0!==n.props.month&&(_.getMonth(n.props.day)+1)%12===n.props.month},n.isCurrentDay=function(){return n.isSameDay(Me())},n.isSelected=function(){var e;return n.props.selectsMultiple?null===(e=n.props.selectedDates)||void 0===e?void 0:e.some((function(e){return n.isSameDayOrWeek(e)})):n.isSameDayOrWeek(n.props.selected)},n.getClassNames=function(e){var r,a=n.props.dayClassName?n.props.dayClassName(e):void 0;return t.clsx("react-datepicker__day",a,"react-datepicker__day--"+Ee(n.props.day,"ddd",r),{"react-datepicker__day--disabled":n.isDisabled(),"react-datepicker__day--excluded":n.isExcluded(),"react-datepicker__day--selected":n.isSelected(),"react-datepicker__day--keyboard-selected":n.isKeyboardSelected(),"react-datepicker__day--range-start":n.isRangeStart(),"react-datepicker__day--range-end":n.isRangeEnd(),"react-datepicker__day--in-range":n.isInRange(),"react-datepicker__day--in-selecting-range":n.isInSelectingRange(),"react-datepicker__day--selecting-range-start":n.isSelectingRangeStart(),"react-datepicker__day--selecting-range-end":n.isSelectingRangeEnd(),"react-datepicker__day--today":n.isCurrentDay(),"react-datepicker__day--weekend":n.isWeekend(),"react-datepicker__day--outside-month":n.isAfterMonth()||n.isBeforeMonth()},n.getHighLightedClass(),n.getHolidaysClass())},n.getAriaLabel=function(){var e=n.props,t=e.day,r=e.ariaLabelPrefixWhenEnabled,a=void 0===r?"Choose":r,o=e.ariaLabelPrefixWhenDisabled,s=void 0===o?"Not available":o,i=n.isDisabled()||n.isExcluded()?s:a;return"".concat(i," ").concat(Ee(t,"PPPP",n.props.locale))},n.getTitle=function(){var e=n.props,t=e.day,r=e.holidays,a=void 0===r?new Map:r,o=e.excludeDates,s=Ee(t,"MM.dd.yyyy"),i=[];return a.has(s)&&i.push.apply(i,a.get(s).holidayNames),n.isExcluded()&&i.push(null==o?void 0:o.filter((function(e){return e instanceof Date?Qe(e,t):Qe(null==e?void 0:e.date,t)})).map((function(e){if(!(e instanceof Date))return null==e?void 0:e.message}))),i.join(", ")},n.getTabIndex=function(){var e=n.props.selected,t=n.props.preSelection;return(!n.props.showWeekPicker||!n.props.showWeekNumber&&n.isStartOfWeek())&&(n.isKeyboardSelected()||n.isSameDay(e)&&Qe(t,e))?0:-1},n.handleFocusDay=function(){var e;n.shouldFocusDay()&&(null===(e=n.dayEl.current)||void 0===e||e.focus({preventScroll:!0}))},n.renderDayContents=function(){return n.props.monthShowsDuplicateDaysEnd&&n.isAfterMonth()||n.props.monthShowsDuplicateDaysStart&&n.isBeforeMonth()?null:n.props.renderDayContents?n.props.renderDayContents(w.getDate(n.props.day),n.props.day):w.getDate(n.props.day)},n.render=function(){return ue.default.createElement("div",{ref:n.dayEl,className:n.getClassNames(n.props.day),onKeyDown:n.handleOnKeyDown,onClick:n.handleClick,onMouseEnter:n.props.usePointerEvent?void 0:n.handleMouseEnter,onPointerEnter:n.props.usePointerEvent?n.handleMouseEnter:void 0,tabIndex:n.getTabIndex(),"aria-label":n.getAriaLabel(),role:"option",title:n.getTitle(),"aria-disabled":n.isDisabled(),"aria-current":n.isCurrentDay()?"date":void 0,"aria-selected":n.isSelected()||n.isInRange()},n.renderDayContents(),""!==n.getTitle()&&ue.default.createElement("span",{className:"overlay"},n.getTitle()))},n}return me(n,e),n.prototype.componentDidMount=function(){this.handleFocusDay()},n.prototype.componentDidUpdate=function(){this.handleFocusDay()},n.prototype.shouldFocusDay=function(){var e=!1;return 0===this.getTabIndex()&&this.isSameDay(this.props.preSelection)&&(document.activeElement&&document.activeElement!==document.body||(e=!0),this.props.inline&&!this.props.shouldFocusDayInline&&(e=!1),this.isDayActiveElement()&&(e=!0),this.isDuplicateDay()&&(e=!1)),e},n.prototype.isDayActiveElement=function(){var e,t,r;return(null===(t=null===(e=this.props.containerRef)||void 0===e?void 0:e.current)||void 0===t?void 0:t.contains(document.activeElement))&&(null===(r=document.activeElement)||void 0===r?void 0:r.classList.contains("react-datepicker__day"))},n.prototype.isDuplicateDay=function(){return this.props.monthShowsDuplicateDaysEnd&&this.isAfterMonth()||this.props.monthShowsDuplicateDaysStart&&this.isBeforeMonth()},n}(r.Component),Ct=function(e){function n(){var t=null!==e&&e.apply(this,arguments)||this;return t.weekNumberEl=r.createRef(),t.handleClick=function(e){t.props.onClick&&t.props.onClick(e)},t.handleOnKeyDown=function(e){var r,n;e.key===De.Space&&(e.preventDefault(),e.key=De.Enter),null===(n=(r=t.props).handleOnKeyDown)||void 0===n||n.call(r,e)},t.isKeyboardSelected=function(){return!t.props.disabledKeyboardNavigation&&!Qe(t.props.date,t.props.selected)&&Qe(t.props.date,t.props.preSelection)},t.getTabIndex=function(){return t.props.showWeekPicker&&t.props.showWeekNumber&&(t.isKeyboardSelected()||Qe(t.props.date,t.props.selected)&&Qe(t.props.preSelection,t.props.selected))?0:-1},t.handleFocusWeekNumber=function(e){var r=!1;0===t.getTabIndex()&&!(null==e?void 0:e.isInputFocused)&&Qe(t.props.date,t.props.preSelection)&&(document.activeElement&&document.activeElement!==document.body||(r=!0),t.props.inline&&!t.props.shouldFocusDayInline&&(r=!1),t.props.containerRef&&t.props.containerRef.current&&t.props.containerRef.current.contains(document.activeElement)&&document.activeElement&&document.activeElement.classList.contains("react-datepicker__week-number")&&(r=!0)),r&&t.weekNumberEl.current&&t.weekNumberEl.current.focus({preventScroll:!0})},t}return me(n,e),Object.defineProperty(n,"defaultProps",{get:function(){return{ariaLabelPrefix:"week "}},enumerable:!1,configurable:!0}),n.prototype.componentDidMount=function(){this.handleFocusWeekNumber()},n.prototype.componentDidUpdate=function(e){this.handleFocusWeekNumber(e)},n.prototype.render=function(){var e=this.props,r=e.weekNumber,a=e.isWeekDisabled,o=e.ariaLabelPrefix,s=void 0===o?n.defaultProps.ariaLabelPrefix:o,i=e.onClick,l={"react-datepicker__week-number":!0,"react-datepicker__week-number--clickable":!!i&&!a,"react-datepicker__week-number--selected":!!i&&Qe(this.props.date,this.props.selected)};return ue.default.createElement("div",{ref:this.weekNumberEl,className:t.clsx(l),"aria-label":"".concat(s," ").concat(this.props.weekNumber),onClick:this.handleClick,onKeyDown:this.handleOnKeyDown,tabIndex:this.getTabIndex()},r)},n}(r.Component),_t=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t.isDisabled=function(e){return $e(e,{minDate:t.props.minDate,maxDate:t.props.maxDate,excludeDates:t.props.excludeDates,excludeDateIntervals:t.props.excludeDateIntervals,includeDateIntervals:t.props.includeDateIntervals,includeDates:t.props.includeDates,filterDate:t.props.filterDate})},t.handleDayClick=function(e,r){t.props.onDayClick&&t.props.onDayClick(e,r)},t.handleDayMouseEnter=function(e){t.props.onDayMouseEnter&&t.props.onDayMouseEnter(e)},t.handleWeekClick=function(e,n,a){for(var o,s,i,l=new Date(e),c=0;c<7;c++){var d=new Date(e);if(d.setDate(d.getDate()+c),!t.isDisabled(d)){l=d;break}}"function"==typeof t.props.onWeekSelect&&t.props.onWeekSelect(l,n,a),t.props.showWeekPicker&&t.handleDayClick(l,a),(null!==(o=t.props.shouldCloseOnSelect)&&void 0!==o?o:r.defaultProps.shouldCloseOnSelect)&&(null===(i=(s=t.props).setOpen)||void 0===i||i.call(s,!1))},t.formatWeekNumber=function(e){return t.props.formatWeekNumber?t.props.formatWeekNumber(e):function(e){return M.getISOWeek(e)}(e)},t.isWeekDisabled=function(){for(var e=t.startOfWeek(),r=a.addDays(e,6),n=new Date(e);n<=r;){if(!t.isDisabled(n))return!1;n=a.addDays(n,1)}return!0},t.renderDays=function(){var e=t.startOfWeek(),n=[],o=t.formatWeekNumber(e);if(t.props.showWeekNumber){var s=t.props.onWeekSelect||t.props.showWeekPicker?t.handleWeekClick.bind(t,e,o):void 0;n.push(ue.default.createElement(Ct,ve({key:"W"},r.defaultProps,t.props,{weekNumber:o,isWeekDisabled:t.isWeekDisabled(),date:e,onClick:s})))}return n.concat([0,1,2,3,4,5,6].map((function(n){var o=a.addDays(e,n);return ue.default.createElement(Mt,ve({},r.defaultProps,t.props,{ariaLabelPrefixWhenEnabled:t.props.chooseDayAriaLabelPrefix,ariaLabelPrefixWhenDisabled:t.props.disabledDayAriaLabelPrefix,key:o.valueOf(),day:o,onClick:t.handleDayClick.bind(t,o),onMouseEnter:t.handleDayMouseEnter.bind(t,o)}))})))},t.startOfWeek=function(){return Oe(t.props.day,t.props.locale,t.props.calendarStartDay)},t.isKeyboardSelected=function(){return!t.props.disabledKeyboardNavigation&&!Qe(t.startOfWeek(),t.props.selected)&&Qe(t.startOfWeek(),t.props.preSelection)},t}return me(r,e),Object.defineProperty(r,"defaultProps",{get:function(){return{shouldCloseOnSelect:!0}},enumerable:!1,configurable:!0}),r.prototype.render=function(){var e={"react-datepicker__week":!0,"react-datepicker__week--selected":Qe(this.startOfWeek(),this.props.selected),"react-datepicker__week--keyboard-selected":this.isKeyboardSelected()};return ue.default.createElement("div",{className:t.clsx(e)},this.renderDays())},r}(r.Component),Et="two_columns",Pt="three_columns",Yt="four_columns",xt=((St={})[Et]={grid:[[0,1],[2,3],[4,5],[6,7],[8,9],[10,11]],verticalNavigationOffset:2},St[Pt]={grid:[[0,1,2],[3,4,5],[6,7,8],[9,10,11]],verticalNavigationOffset:3},St[Yt]={grid:[[0,1,2,3],[4,5,6,7],[8,9,10,11]],verticalNavigationOffset:4},St);function Ot(e,t){return e?Yt:t?Et:Pt}var Nt=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.MONTH_REFS=ge([],Array(12),!0).map((function(){return r.createRef()})),n.QUARTER_REFS=ge([],Array(4),!0).map((function(){return r.createRef()})),n.isDisabled=function(e){return $e(e,{minDate:n.props.minDate,maxDate:n.props.maxDate,excludeDates:n.props.excludeDates,excludeDateIntervals:n.props.excludeDateIntervals,includeDateIntervals:n.props.includeDateIntervals,includeDates:n.props.includeDates,filterDate:n.props.filterDate})},n.isExcluded=function(e){return ze(e,{excludeDates:n.props.excludeDates,excludeDateIntervals:n.props.excludeDateIntervals})},n.handleDayClick=function(e,t){var r,a;null===(a=(r=n.props).onDayClick)||void 0===a||a.call(r,e,t,n.props.orderInDisplay)},n.handleDayMouseEnter=function(e){var t,r;null===(r=(t=n.props).onDayMouseEnter)||void 0===r||r.call(t,e)},n.handleMouseLeave=function(){var e,t;null===(t=(e=n.props).onMouseLeave)||void 0===t||t.call(e)},n.isRangeStartMonth=function(e){var t=n.props,r=t.day,a=t.startDate,o=t.endDate;return!(!a||!o)&&We($.setMonth(r,e),a)},n.isRangeStartQuarter=function(e){var t=n.props,r=t.day,a=t.startDate,o=t.endDate;return!(!a||!o)&&He(z.setQuarter(r,e),a)},n.isRangeEndMonth=function(e){var t=n.props,r=t.day,a=t.startDate,o=t.endDate;return!(!a||!o)&&We($.setMonth(r,e),o)},n.isRangeEndQuarter=function(e){var t=n.props,r=t.day,a=t.startDate,o=t.endDate;return!(!a||!o)&&He(z.setQuarter(r,e),o)},n.isInSelectingRangeMonth=function(e){var t,r=n.props,a=r.day,o=r.selectsStart,s=r.selectsEnd,i=r.selectsRange,l=r.startDate,c=r.endDate,d=null!==(t=n.props.selectingDate)&&void 0!==t?t:n.props.preSelection;return!(!(o||s||i)||!d)&&(o&&c?Ge(d,c,e,a):(s&&l||!(!i||!l||c))&&Ge(l,d,e,a))},n.isSelectingMonthRangeStart=function(e){var t;if(!n.isInSelectingRangeMonth(e))return!1;var r=n.props,a=r.day,o=r.startDate,s=r.selectsStart,i=$.setMonth(a,e),l=null!==(t=n.props.selectingDate)&&void 0!==t?t:n.props.preSelection;return We(i,s?l:o)},n.isSelectingMonthRangeEnd=function(e){var t;if(!n.isInSelectingRangeMonth(e))return!1;var r=n.props,a=r.day,o=r.endDate,s=r.selectsEnd,i=r.selectsRange,l=$.setMonth(a,e),c=null!==(t=n.props.selectingDate)&&void 0!==t?t:n.props.preSelection;return We(l,s||i?c:o)},n.isInSelectingRangeQuarter=function(e){var t,r=n.props,a=r.day,o=r.selectsStart,s=r.selectsEnd,i=r.selectsRange,l=r.startDate,c=r.endDate,d=null!==(t=n.props.selectingDate)&&void 0!==t?t:n.props.preSelection;return!(!(o||s||i)||!d)&&(o&&c?rt(d,c,e,a):(s&&l||!(!i||!l||c))&&rt(l,d,e,a))},n.isWeekInMonth=function(e){var t=n.props.day,r=a.addDays(e,6);return We(e,t)||We(r,t)},n.isCurrentMonth=function(e,t){return x.getYear(e)===x.getYear(Me())&&t===_.getMonth(Me())},n.isCurrentQuarter=function(e,t){return x.getYear(e)===x.getYear(Me())&&t===E.getQuarter(Me())},n.isSelectedMonth=function(e,t,r){return _.getMonth(r)===t&&x.getYear(e)===x.getYear(r)},n.isSelectMonthInList=function(e,t,r){return r.some((function(r){return n.isSelectedMonth(e,t,r)}))},n.isSelectedQuarter=function(e,t,r){return E.getQuarter(e)===t&&x.getYear(e)===x.getYear(r)},n.renderWeeks=function(){for(var e=[],t=n.props.fixedHeight,r=0,a=!1,o=Oe(Ne(n.props.day),n.props.locale,n.props.calendarStartDay),s=n.props.selected?function(e){return n.props.showWeekPicker?Oe(e,n.props.locale,n.props.calendarStartDay):n.props.selected}(n.props.selected):void 0,i=n.props.preSelection?function(e){return n.props.showWeekPicker?Oe(e,n.props.locale,n.props.calendarStartDay):n.props.preSelection}(n.props.preSelection):void 0;e.push(ue.default.createElement(_t,ve({},n.props,{ariaLabelPrefix:n.props.weekAriaLabelPrefix,key:r,day:o,month:_.getMonth(n.props.day),onDayClick:n.handleDayClick,onDayMouseEnter:n.handleDayMouseEnter,selected:s,preSelection:i,showWeekNumber:n.props.showWeekNumbers}))),!a;){r++,o=d.addWeeks(o,1);var l=t&&r>=6,c=!t&&!n.isWeekInMonth(o);if(l||c){if(!n.props.peekNextMonth)break;a=!0}}return e},n.onMonthClick=function(e,t){var r=n.isMonthDisabledForLabelDate(t),a=r.isDisabled,o=r.labelDate;a||n.handleDayClick(Ne(o),e)},n.onMonthMouseEnter=function(e){var t=n.isMonthDisabledForLabelDate(e),r=t.isDisabled,a=t.labelDate;r||n.handleDayMouseEnter(Ne(a))},n.handleMonthNavigation=function(e,t){var r,a,o,s;null===(a=(r=n.props).setPreSelection)||void 0===a||a.call(r,t),null===(s=null===(o=n.MONTH_REFS[e])||void 0===o?void 0:o.current)||void 0===s||s.focus()},n.handleKeyboardNavigation=function(e,t,r){var a,o=n.props,s=o.selected,l=o.preSelection,c=o.setPreSelection,d=o.minDate,p=o.maxDate,u=o.showFourColumnMonthYearPicker,f=o.showTwoColumnMonthYearPicker;if(l){var h=Ot(u,f),m=n.getVerticalOffset(h),v=null===(a=xt[h])||void 0===a?void 0:a.grid,g=function(e,t,r){var n,a,o=t,s=r;switch(e){case De.ArrowRight:o=i.addMonths(t,1),s=11===r?0:r+1;break;case De.ArrowLeft:o=ae.subMonths(t,1),s=0===r?11:r-1;break;case De.ArrowUp:o=ae.subMonths(t,m),s=(null===(n=null==v?void 0:v[0])||void 0===n?void 0:n.includes(r))?r+12-m:r-m;break;case De.ArrowDown:o=i.addMonths(t,m),s=(null===(a=null==v?void 0:v[v.length-1])||void 0===a?void 0:a.includes(r))?r-12+m:r+m}return{newCalculatedDate:o,newCalculatedMonth:s}};if(t!==De.Enter){var D=function(e,t,r){for(var a=e,o=!1,s=0,i=g(a,t,r),l=i.newCalculatedDate,c=i.newCalculatedMonth;!o;){if(s>=40){l=t,c=r;break}var u;if(d&&l<d)a=De.ArrowRight,l=(u=g(a,l,c)).newCalculatedDate,c=u.newCalculatedMonth;if(p&&l>p)a=De.ArrowLeft,l=(u=g(a,l,c)).newCalculatedDate,c=u.newCalculatedMonth;if(Je(l,n.props))l=(u=g(a,l,c)).newCalculatedDate,c=u.newCalculatedMonth;else o=!0;s++}return{newCalculatedDate:l,newCalculatedMonth:c}}(t,l,r),y=D.newCalculatedDate,k=D.newCalculatedMonth;switch(t){case De.ArrowRight:case De.ArrowLeft:case De.ArrowUp:case De.ArrowDown:n.handleMonthNavigation(k,y)}}else n.isMonthDisabled(r)||(n.onMonthClick(e,r),null==c||c(s))}},n.getVerticalOffset=function(e){var t,r;return null!==(r=null===(t=xt[e])||void 0===t?void 0:t.verticalNavigationOffset)&&void 0!==r?r:0},n.onMonthKeyDown=function(e,t){var r=n.props,a=r.disabledKeyboardNavigation,o=r.handleOnMonthKeyDown,s=e.key;s!==De.Tab&&e.preventDefault(),a||n.handleKeyboardNavigation(e,s,t),o&&o(e)},n.onQuarterClick=function(e,t){var r=z.setQuarter(n.props.day,t);Ze(r,n.props)||n.handleDayClick(Ie(r),e)},n.onQuarterMouseEnter=function(e){var t=z.setQuarter(n.props.day,e);Ze(t,n.props)||n.handleDayMouseEnter(Ie(t))},n.handleQuarterNavigation=function(e,t){var r,a,o,s;n.isDisabled(t)||n.isExcluded(t)||(null===(a=(r=n.props).setPreSelection)||void 0===a||a.call(r,t),null===(s=null===(o=n.QUARTER_REFS[e-1])||void 0===o?void 0:o.current)||void 0===s||s.focus())},n.onQuarterKeyDown=function(e,t){var r,a,o=e.key;if(!n.props.disabledKeyboardNavigation)switch(o){case De.Enter:n.onQuarterClick(e,t),null===(a=(r=n.props).setPreSelection)||void 0===a||a.call(r,n.props.selected);break;case De.ArrowRight:if(!n.props.preSelection)break;n.handleQuarterNavigation(4===t?1:t+1,l.addQuarters(n.props.preSelection,1));break;case De.ArrowLeft:if(!n.props.preSelection)break;n.handleQuarterNavigation(1===t?4:t-1,oe.subQuarters(n.props.preSelection,1))}},n.isMonthDisabledForLabelDate=function(e){var t,r=n.props,a=r.day,o=r.minDate,s=r.maxDate,i=r.excludeDates,l=r.includeDates,c=$.setMonth(a,e);return{isDisabled:null!==(t=(o||s||i||l)&&Xe(c,n.props))&&void 0!==t&&t,labelDate:c}},n.isMonthDisabled=function(e){return n.isMonthDisabledForLabelDate(e).isDisabled},n.getMonthClassNames=function(e){var r=n.props,a=r.day,o=r.startDate,s=r.endDate,i=r.preSelection,l=r.monthClassName,c=l?l($.setMonth(a,e)):void 0,d=n.getSelection();return t.clsx("react-datepicker__month-text","react-datepicker__month-".concat(e),c,{"react-datepicker__month-text--disabled":n.isMonthDisabled(e),"react-datepicker__month-text--selected":d?n.isSelectMonthInList(a,e,d):void 0,"react-datepicker__month-text--keyboard-selected":!n.props.disabledKeyboardNavigation&&i&&n.isSelectedMonth(a,e,i)&&!n.isMonthDisabled(e),"react-datepicker__month-text--in-selecting-range":n.isInSelectingRangeMonth(e),"react-datepicker__month-text--in-range":o&&s?Ge(o,s,e,a):void 0,"react-datepicker__month-text--range-start":n.isRangeStartMonth(e),"react-datepicker__month-text--range-end":n.isRangeEndMonth(e),"react-datepicker__month-text--selecting-range-start":n.isSelectingMonthRangeStart(e),"react-datepicker__month-text--selecting-range-end":n.isSelectingMonthRangeEnd(e),"react-datepicker__month-text--today":n.isCurrentMonth(a,e)})},n.getTabIndex=function(e){if(null==n.props.preSelection)return"-1";var t=_.getMonth(n.props.preSelection),r=n.isMonthDisabledForLabelDate(t).isDisabled;return e!==t||r||n.props.disabledKeyboardNavigation?"-1":"0"},n.getQuarterTabIndex=function(e){if(null==n.props.preSelection)return"-1";var t=E.getQuarter(n.props.preSelection),r=Ze(n.props.day,n.props);return e!==t||r||n.props.disabledKeyboardNavigation?"-1":"0"},n.getAriaLabel=function(e){var t=n.props,r=t.chooseDayAriaLabelPrefix,a=void 0===r?"Choose":r,o=t.disabledDayAriaLabelPrefix,s=void 0===o?"Not available":o,i=t.day,l=t.locale,c=$.setMonth(i,e),d=n.isDisabled(c)||n.isExcluded(c)?s:a;return"".concat(d," ").concat(Ee(c,"MMMM yyyy",l))},n.getQuarterClassNames=function(e){var r=n.props,a=r.day,o=r.startDate,s=r.endDate,i=r.selected,l=r.minDate,c=r.maxDate,d=r.excludeDates,p=r.includeDates,u=r.filterDate,f=r.preSelection,h=r.disabledKeyboardNavigation,m=(l||c||d||p||u)&&Ze(z.setQuarter(a,e),n.props);return t.clsx("react-datepicker__quarter-text","react-datepicker__quarter-".concat(e),{"react-datepicker__quarter-text--disabled":m,"react-datepicker__quarter-text--selected":i?n.isSelectedQuarter(a,e,i):void 0,"react-datepicker__quarter-text--keyboard-selected":!h&&f&&n.isSelectedQuarter(a,e,f)&&!m,"react-datepicker__quarter-text--in-selecting-range":n.isInSelectingRangeQuarter(e),"react-datepicker__quarter-text--in-range":o&&s?rt(o,s,e,a):void 0,"react-datepicker__quarter-text--range-start":n.isRangeStartQuarter(e),"react-datepicker__quarter-text--range-end":n.isRangeEndQuarter(e)})},n.getMonthContent=function(e){var t=n.props,r=t.showFullMonthYearPicker,a=t.renderMonthContent,o=t.locale,s=t.day,i=Ue(e,o),l=je(e,o);return a?a(e,i,l,s):r?l:i},n.getQuarterContent=function(e){var t,r=n.props,a=r.renderQuarterContent,o=function(e,t){return Ee(z.setQuarter(Me(),e),"QQQ",t)}(e,r.locale);return null!==(t=null==a?void 0:a(e,o))&&void 0!==t?t:o},n.renderMonths=function(){var e,t=n.props,r=t.showTwoColumnMonthYearPicker,a=t.showFourColumnMonthYearPicker,o=t.day,s=t.selected,i=null===(e=xt[Ot(a,r)])||void 0===e?void 0:e.grid;return null==i?void 0:i.map((function(e,t){return ue.default.createElement("div",{className:"react-datepicker__month-wrapper",key:t},e.map((function(e,t){return ue.default.createElement("div",{ref:n.MONTH_REFS[e],key:t,onClick:function(t){n.onMonthClick(t,e)},onKeyDown:function(t){wt(t)&&(t.preventDefault(),t.key=De.Enter),n.onMonthKeyDown(t,e)},onMouseEnter:n.props.usePointerEvent?void 0:function(){return n.onMonthMouseEnter(e)},onPointerEnter:n.props.usePointerEvent?function(){return n.onMonthMouseEnter(e)}:void 0,tabIndex:Number(n.getTabIndex(e)),className:n.getMonthClassNames(e),"aria-disabled":n.isMonthDisabled(e),role:"option","aria-label":n.getAriaLabel(e),"aria-current":n.isCurrentMonth(o,e)?"date":void 0,"aria-selected":s?n.isSelectedMonth(o,e,s):void 0},n.getMonthContent(e))})))}))},n.renderQuarters=function(){var e=n.props,t=e.day,r=e.selected;return ue.default.createElement("div",{className:"react-datepicker__quarter-wrapper"},[1,2,3,4].map((function(e,a){return ue.default.createElement("div",{key:a,ref:n.QUARTER_REFS[a],role:"option",onClick:function(t){n.onQuarterClick(t,e)},onKeyDown:function(t){n.onQuarterKeyDown(t,e)},onMouseEnter:n.props.usePointerEvent?void 0:function(){return n.onQuarterMouseEnter(e)},onPointerEnter:n.props.usePointerEvent?function(){return n.onQuarterMouseEnter(e)}:void 0,className:n.getQuarterClassNames(e),"aria-selected":r?n.isSelectedQuarter(t,e,r):void 0,tabIndex:Number(n.getQuarterTabIndex(e)),"aria-current":n.isCurrentQuarter(t,e)?"date":void 0},n.getQuarterContent(e))})))},n.getClassNames=function(){var e=n.props,r=e.selectingDate,a=e.selectsStart,o=e.selectsEnd,s=e.showMonthYearPicker,i=e.showQuarterYearPicker,l=e.showWeekPicker;return t.clsx("react-datepicker__month",{"react-datepicker__month--selecting-range":r&&(a||o)},{"react-datepicker__monthPicker":s},{"react-datepicker__quarterPicker":i},{"react-datepicker__weekPicker":l})},n}return me(n,e),n.prototype.getSelection=function(){var e=this.props,t=e.selected,r=e.selectedDates;return e.selectsMultiple?r:t?[t]:void 0},n.prototype.render=function(){var e=this.props,t=e.showMonthYearPicker,r=e.showQuarterYearPicker,n=e.day,a=e.ariaLabelPrefix,o=void 0===a?"Month ":a,s=o?o.trim()+" ":"";return ue.default.createElement("div",{className:this.getClassNames(),onMouseLeave:this.props.usePointerEvent?void 0:this.handleMouseLeave,onPointerLeave:this.props.usePointerEvent?this.handleMouseLeave:void 0,"aria-label":"".concat(s).concat(Ee(n,"MMMM, yyyy",this.props.locale)),role:"listbox"},t?this.renderMonths():r?this.renderQuarters():this.renderWeeks())},n}(r.Component),Tt=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isSelectedMonth=function(e){return t.props.month===e},t.renderOptions=function(){return t.props.monthNames.map((function(e,r){return ue.default.createElement("div",{className:t.isSelectedMonth(r)?"react-datepicker__month-option react-datepicker__month-option--selected_month":"react-datepicker__month-option",key:e,onClick:t.onChange.bind(t,r),"aria-selected":t.isSelectedMonth(r)?"true":void 0},t.isSelectedMonth(r)?ue.default.createElement("span",{className:"react-datepicker__month-option--selected"},"✓"):"",e)}))},t.onChange=function(e){return t.props.onChange(e)},t.handleClickOutside=function(){return t.props.onCancel()},t}return me(t,e),t.prototype.render=function(){return ue.default.createElement(ke,{className:"react-datepicker__month-dropdown",onClickOutside:this.handleClickOutside},this.renderOptions())},t}(r.Component),It=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={dropdownVisible:!1},t.renderSelectOptions=function(e){return e.map((function(e,t){return ue.default.createElement("option",{key:e,value:t},e)}))},t.renderSelectMode=function(e){return ue.default.createElement("select",{value:t.props.month,className:"react-datepicker__month-select",onChange:function(e){return t.onChange(parseInt(e.target.value))}},t.renderSelectOptions(e))},t.renderReadView=function(e,r){return ue.default.createElement("div",{key:"read",style:{visibility:e?"visible":"hidden"},className:"react-datepicker__month-read-view",onClick:t.toggleDropdown},ue.default.createElement("span",{className:"react-datepicker__month-read-view--down-arrow"}),ue.default.createElement("span",{className:"react-datepicker__month-read-view--selected-month"},r[t.props.month]))},t.renderDropdown=function(e){return ue.default.createElement(Tt,ve({key:"dropdown"},t.props,{monthNames:e,onChange:t.onChange,onCancel:t.toggleDropdown}))},t.renderScrollMode=function(e){var r=t.state.dropdownVisible,n=[t.renderReadView(!r,e)];return r&&n.unshift(t.renderDropdown(e)),n},t.onChange=function(e){t.toggleDropdown(),e!==t.props.month&&t.props.onChange(e)},t.toggleDropdown=function(){return t.setState({dropdownVisible:!t.state.dropdownVisible})},t}return me(t,e),t.prototype.render=function(){var e,t=this,r=[0,1,2,3,4,5,6,7,8,9,10,11].map(this.props.useShortMonthInDropdown?function(e){return Ue(e,t.props.locale)}:function(e){return je(e,t.props.locale)});switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode(r);break;case"select":e=this.renderSelectMode(r)}return ue.default.createElement("div",{className:"react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--".concat(this.props.dropdownMode)},e)},t}(r.Component);function Rt(e,t){for(var r=[],n=Ne(e),a=Ne(t);!O.isAfter(n,a);)r.push(Me(n)),n=i.addMonths(n,1);return r}var Lt=function(e){function r(t){var r=e.call(this,t)||this;return r.renderOptions=function(){return r.state.monthYearsList.map((function(e){var t=Y.getTime(e),n=Ae(r.props.date,e)&&We(r.props.date,e);return ue.default.createElement("div",{className:n?"react-datepicker__month-year-option--selected_month-year":"react-datepicker__month-year-option",key:t,onClick:r.onChange.bind(r,t),"aria-selected":n?"true":void 0},n?ue.default.createElement("span",{className:"react-datepicker__month-year-option--selected"},"✓"):"",Ee(e,r.props.dateFormat,r.props.locale))}))},r.onChange=function(e){return r.props.onChange(e)},r.handleClickOutside=function(){r.props.onCancel()},r.state={monthYearsList:Rt(r.props.minDate,r.props.maxDate)},r}return me(r,e),r.prototype.render=function(){var e=t.clsx({"react-datepicker__month-year-dropdown":!0,"react-datepicker__month-year-dropdown--scrollable":this.props.scrollableMonthYearDropdown});return ue.default.createElement(ke,{className:e,onClickOutside:this.handleClickOutside},this.renderOptions())},r}(r.Component),Ft=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={dropdownVisible:!1},t.renderSelectOptions=function(){for(var e=Ne(t.props.minDate),r=Ne(t.props.maxDate),n=[];!O.isAfter(e,r);){var a=Y.getTime(e);n.push(ue.default.createElement("option",{key:a,value:a},Ee(e,t.props.dateFormat,t.props.locale))),e=i.addMonths(e,1)}return n},t.onSelectChange=function(e){t.onChange(parseInt(e.target.value))},t.renderSelectMode=function(){return ue.default.createElement("select",{value:Y.getTime(Ne(t.props.date)),className:"react-datepicker__month-year-select",onChange:t.onSelectChange},t.renderSelectOptions())},t.renderReadView=function(e){var r=Ee(t.props.date,t.props.dateFormat,t.props.locale);return ue.default.createElement("div",{key:"read",style:{visibility:e?"visible":"hidden"},className:"react-datepicker__month-year-read-view",onClick:t.toggleDropdown},ue.default.createElement("span",{className:"react-datepicker__month-year-read-view--down-arrow"}),ue.default.createElement("span",{className:"react-datepicker__month-year-read-view--selected-month-year"},r))},t.renderDropdown=function(){return ue.default.createElement(Lt,ve({key:"dropdown"},t.props,{onChange:t.onChange,onCancel:t.toggleDropdown}))},t.renderScrollMode=function(){var e=t.state.dropdownVisible,r=[t.renderReadView(!e)];return e&&r.unshift(t.renderDropdown()),r},t.onChange=function(e){t.toggleDropdown();var r=Me(e);Ae(t.props.date,r)&&We(t.props.date,r)||t.props.onChange(r)},t.toggleDropdown=function(){return t.setState({dropdownVisible:!t.state.dropdownVisible})},t}return me(t,e),t.prototype.render=function(){var e;switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode();break;case"select":e=this.renderSelectMode()}return ue.default.createElement("div",{className:"react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--".concat(this.props.dropdownMode)},e)},t}(r.Component),At=function(e){function t(){var r=null!==e&&e.apply(this,arguments)||this;return r.state={height:null},r.scrollToTheSelectedTime=function(){requestAnimationFrame((function(){var e,n,a;r.list&&(r.list.scrollTop=null!==(a=r.centerLi&&t.calcCenterPosition(r.props.monthRef?r.props.monthRef.clientHeight-(null!==(n=null===(e=r.header)||void 0===e?void 0:e.clientHeight)&&void 0!==n?n:0):r.list.clientHeight,r.centerLi))&&void 0!==a?a:0)}))},r.handleClick=function(e){var t,n;(r.props.minTime||r.props.maxTime)&&st(e,r.props)||(r.props.excludeTimes||r.props.includeTimes||r.props.filterTime)&&ot(e,r.props)||null===(n=(t=r.props).onChange)||void 0===n||n.call(t,e)},r.isSelectedTime=function(e){return r.props.selected&&(t=r.props.selected,n=e,Dt(t).getTime()===Dt(n).getTime());var t,n},r.isDisabledTime=function(e){return(r.props.minTime||r.props.maxTime)&&st(e,r.props)||(r.props.excludeTimes||r.props.includeTimes||r.props.filterTime)&&ot(e,r.props)},r.liClasses=function(e){var n,a=["react-datepicker__time-list-item",r.props.timeClassName?r.props.timeClassName(e):void 0];return r.isSelectedTime(e)&&a.push("react-datepicker__time-list-item--selected"),r.isDisabledTime(e)&&a.push("react-datepicker__time-list-item--disabled"),r.props.injectTimes&&(3600*b.getHours(e)+60*C.getMinutes(e)+P.getSeconds(e))%(60*(null!==(n=r.props.intervals)&&void 0!==n?n:t.defaultProps.intervals))!=0&&a.push("react-datepicker__time-list-item--injected"),a.join(" ")},r.handleOnKeyDown=function(e,t){var n,a;e.key===De.Space&&(e.preventDefault(),e.key=De.Enter),(e.key===De.ArrowUp||e.key===De.ArrowLeft)&&e.target instanceof HTMLElement&&e.target.previousSibling&&(e.preventDefault(),e.target.previousSibling instanceof HTMLElement&&e.target.previousSibling.focus()),(e.key===De.ArrowDown||e.key===De.ArrowRight)&&e.target instanceof HTMLElement&&e.target.nextSibling&&(e.preventDefault(),e.target.nextSibling instanceof HTMLElement&&e.target.nextSibling.focus()),e.key===De.Enter&&r.handleClick(t),null===(a=(n=r.props).handleOnKeyDown)||void 0===a||a.call(n,e)},r.renderTimes=function(){for(var e,n=[],a="string"==typeof r.props.format?r.props.format:"p",o=null!==(e=r.props.intervals)&&void 0!==e?e:t.defaultProps.intervals,i=r.props.selected||r.props.openToDate||Me(),l=xe(i),c=r.props.injectTimes&&r.props.injectTimes.sort((function(e,t){return e.getTime()-t.getTime()})),d=60*function(e){var t=new Date(e.getFullYear(),e.getMonth(),e.getDate()),r=new Date(e.getFullYear(),e.getMonth(),e.getDate(),24);return Math.round((+r-+t)/36e5)}(i),p=d/o,u=0;u<p;u++){var f=s.addMinutes(l,u*o);if(n.push(f),c){var h=mt(l,f,u,o,c);n=n.concat(h)}}var m=n.reduce((function(e,t){return t.getTime()<=i.getTime()?t:e}),n[0]);return n.map((function(e){return ue.default.createElement("li",{key:e.valueOf(),onClick:r.handleClick.bind(r,e),className:r.liClasses(e),ref:function(t){e===m&&(r.centerLi=t)},onKeyDown:function(t){r.handleOnKeyDown(t,e)},tabIndex:e===m?0:-1,role:"option","aria-selected":r.isSelectedTime(e)?"true":void 0,"aria-disabled":r.isDisabledTime(e)?"true":void 0},Ee(e,a,r.props.locale))}))},r.renderTimeCaption=function(){return!1===r.props.showTimeCaption?ue.default.createElement(ue.default.Fragment,null):ue.default.createElement("div",{className:"react-datepicker__header react-datepicker__header--time ".concat(r.props.showTimeSelectOnly?"react-datepicker__header--time--only":""),ref:function(e){r.header=e}},ue.default.createElement("div",{className:"react-datepicker-time__header"},r.props.timeCaption))},r}return me(t,e),Object.defineProperty(t,"defaultProps",{get:function(){return{intervals:30,todayButton:null,timeCaption:"Time",showTimeCaption:!0}},enumerable:!1,configurable:!0}),t.prototype.componentDidMount=function(){this.scrollToTheSelectedTime(),this.props.monthRef&&this.header&&this.setState({height:this.props.monthRef.clientHeight-this.header.clientHeight})},t.prototype.render=function(){var e,r=this,n=this.state.height;return ue.default.createElement("div",{className:"react-datepicker__time-container ".concat((null!==(e=this.props.todayButton)&&void 0!==e?e:t.defaultProps.todayButton)?"react-datepicker__time-container--with-today-button":"")},this.renderTimeCaption(),ue.default.createElement("div",{className:"react-datepicker__time"},ue.default.createElement("div",{className:"react-datepicker__time-box"},ue.default.createElement("ul",{className:"react-datepicker__time-list",ref:function(e){r.list=e},style:n?{height:n}:{},role:"listbox","aria-label":this.props.timeCaption},this.renderTimes()))))},t.calcCenterPosition=function(e,t){return t.offsetTop-(e/2-t.clientHeight/2)},t}(r.Component),Wt=function(e){function n(n){var a=e.call(this,n)||this;return a.YEAR_REFS=ge([],Array(a.props.yearItemNumber),!0).map((function(){return r.createRef()})),a.isDisabled=function(e){return $e(e,{minDate:a.props.minDate,maxDate:a.props.maxDate,excludeDates:a.props.excludeDates,includeDates:a.props.includeDates,filterDate:a.props.filterDate})},a.isExcluded=function(e){return ze(e,{excludeDates:a.props.excludeDates})},a.selectingDate=function(){var e;return null!==(e=a.props.selectingDate)&&void 0!==e?e:a.props.preSelection},a.updateFocusOnPaginate=function(e){window.requestAnimationFrame((function(){var t,r;null===(r=null===(t=a.YEAR_REFS[e])||void 0===t?void 0:t.current)||void 0===r||r.focus()}))},a.handleYearClick=function(e,t){a.props.onDayClick&&a.props.onDayClick(e,t)},a.handleYearNavigation=function(e,t){var r,n,o,s,i=a.props,l=i.date,c=i.yearItemNumber;if(void 0!==l&&void 0!==c){var d=gt(l,c).startPeriod;a.isDisabled(t)||a.isExcluded(t)||(null===(n=(r=a.props).setPreSelection)||void 0===n||n.call(r,t),e-d<0?a.updateFocusOnPaginate(c-(d-e)):e-d>=c?a.updateFocusOnPaginate(Math.abs(c-(e-d))):null===(s=null===(o=a.YEAR_REFS[e-d])||void 0===o?void 0:o.current)||void 0===s||s.focus())}},a.isSameDay=function(e,t){return Qe(e,t)},a.isCurrentYear=function(e){return e===x.getYear(Me())},a.isRangeStart=function(e){return a.props.startDate&&a.props.endDate&&Ae(G.setYear(Me(),e),a.props.startDate)},a.isRangeEnd=function(e){return a.props.startDate&&a.props.endDate&&Ae(G.setYear(Me(),e),a.props.endDate)},a.isInRange=function(e){return et(e,a.props.startDate,a.props.endDate)},a.isInSelectingRange=function(e){var t=a.props,r=t.selectsStart,n=t.selectsEnd,o=t.selectsRange,s=t.startDate,i=t.endDate;return!(!(r||n||o)||!a.selectingDate())&&(r&&i?et(e,a.selectingDate(),i):(n&&s||!(!o||!s||i))&&et(e,s,a.selectingDate()))},a.isSelectingRangeStart=function(e){var t;if(!a.isInSelectingRange(e))return!1;var r=a.props,n=r.startDate,o=r.selectsStart,s=G.setYear(Me(),e);return Ae(s,o?null!==(t=a.selectingDate())&&void 0!==t?t:null:null!=n?n:null)},a.isSelectingRangeEnd=function(e){var t;if(!a.isInSelectingRange(e))return!1;var r=a.props,n=r.endDate,o=r.selectsEnd,s=r.selectsRange,i=G.setYear(Me(),e);return Ae(i,o||s?null!==(t=a.selectingDate())&&void 0!==t?t:null:null!=n?n:null)},a.isKeyboardSelected=function(e){if(void 0!==a.props.date&&null!=a.props.selected&&null!=a.props.preSelection){var t=a.props,r=t.minDate,n=t.maxDate,o=t.excludeDates,s=t.includeDates,i=t.filterDate,l=Te(G.setYear(a.props.date,e)),c=(r||n||o||s||i)&&tt(e,a.props);return!a.props.disabledKeyboardNavigation&&!a.props.inline&&!Qe(l,Te(a.props.selected))&&Qe(l,Te(a.props.preSelection))&&!c}},a.onYearClick=function(e,t){var r=a.props.date;void 0!==r&&a.handleYearClick(Te(G.setYear(r,t)),e)},a.onYearKeyDown=function(e,t){var r,n,o=e.key,s=a.props,i=s.date,l=s.yearItemNumber,c=s.handleOnKeyDown;if(o!==De.Tab&&e.preventDefault(),!a.props.disabledKeyboardNavigation)switch(o){case De.Enter:if(null==a.props.selected)break;a.onYearClick(e,t),null===(n=(r=a.props).setPreSelection)||void 0===n||n.call(r,a.props.selected);break;case De.ArrowRight:if(null==a.props.preSelection)break;a.handleYearNavigation(t+1,p.addYears(a.props.preSelection,1));break;case De.ArrowLeft:if(null==a.props.preSelection)break;a.handleYearNavigation(t-1,ie.subYears(a.props.preSelection,1));break;case De.ArrowUp:if(void 0===i||void 0===l||null==a.props.preSelection)break;var d=gt(i,l).startPeriod;if((h=t-(f=3))<d){var u=l%f;t>=d&&t<d+u?f=u:f+=u,h=t-f}a.handleYearNavigation(h,ie.subYears(a.props.preSelection,f));break;case De.ArrowDown:if(void 0===i||void 0===l||null==a.props.preSelection)break;var f,h,m=gt(i,l).endPeriod;if((h=t+(f=3))>m){u=l%f;t<=m&&t>m-u?f=u:f+=u,h=t+f}a.handleYearNavigation(h,p.addYears(a.props.preSelection,f))}c&&c(e)},a.getYearClassNames=function(e){var r=a.props,n=r.date,o=r.minDate,s=r.maxDate,i=r.selected,l=r.excludeDates,c=r.includeDates,d=r.filterDate,p=r.yearClassName;return t.clsx("react-datepicker__year-text","react-datepicker__year-".concat(e),n?null==p?void 0:p(G.setYear(n,e)):void 0,{"react-datepicker__year-text--selected":i?e===x.getYear(i):void 0,"react-datepicker__year-text--disabled":(o||s||l||c||d)&&tt(e,a.props),"react-datepicker__year-text--keyboard-selected":a.isKeyboardSelected(e),"react-datepicker__year-text--range-start":a.isRangeStart(e),"react-datepicker__year-text--range-end":a.isRangeEnd(e),"react-datepicker__year-text--in-range":a.isInRange(e),"react-datepicker__year-text--in-selecting-range":a.isInSelectingRange(e),"react-datepicker__year-text--selecting-range-start":a.isSelectingRangeStart(e),"react-datepicker__year-text--selecting-range-end":a.isSelectingRangeEnd(e),"react-datepicker__year-text--today":a.isCurrentYear(e)})},a.getYearTabIndex=function(e){if(a.props.disabledKeyboardNavigation||null==a.props.preSelection)return"-1";var t=x.getYear(a.props.preSelection),r=tt(e,a.props);return e!==t||r?"-1":"0"},a.getYearContent=function(e){return a.props.renderYearContent?a.props.renderYearContent(e):e},a}return me(n,e),n.prototype.render=function(){var e=this,t=[],r=this.props,n=r.date,a=r.yearItemNumber,o=r.onYearMouseEnter,s=r.onYearMouseLeave;if(void 0===n)return null;for(var i=gt(n,a),l=i.startPeriod,c=i.endPeriod,d=function(r){t.push(ue.default.createElement("div",{ref:p.YEAR_REFS[r-l],onClick:function(t){e.onYearClick(t,r)},onKeyDown:function(t){wt(t)&&(t.preventDefault(),t.key=De.Enter),e.onYearKeyDown(t,r)},tabIndex:Number(p.getYearTabIndex(r)),className:p.getYearClassNames(r),onMouseEnter:p.props.usePointerEvent?void 0:function(e){return o(e,r)},onPointerEnter:p.props.usePointerEvent?function(e){return o(e,r)}:void 0,onMouseLeave:p.props.usePointerEvent?void 0:function(e){return s(e,r)},onPointerLeave:p.props.usePointerEvent?function(e){return s(e,r)}:void 0,key:r,"aria-current":p.isCurrentYear(r)?"date":void 0},p.getYearContent(r)))},p=this,u=l;u<=c;u++)d(u);return ue.default.createElement("div",{className:"react-datepicker__year"},ue.default.createElement("div",{className:"react-datepicker__year-wrapper",onMouseLeave:this.props.usePointerEvent?void 0:this.props.clearSelectingDate,onPointerLeave:this.props.usePointerEvent?this.props.clearSelectingDate:void 0},t))},n}(r.Component);function Ht(e,t,r,n){for(var a=[],o=0;o<2*t+1;o++){var s=e+t-o,i=!0;r&&(i=x.getYear(r)<=s),n&&i&&(i=x.getYear(n)>=s),i&&a.push(s)}return a}var Qt=function(e){function n(t){var n=e.call(this,t)||this;n.renderOptions=function(){var e=n.props.year,t=n.state.yearsList.map((function(t){return ue.default.createElement("div",{className:e===t?"react-datepicker__year-option react-datepicker__year-option--selected_year":"react-datepicker__year-option",key:t,onClick:n.onChange.bind(n,t),"aria-selected":e===t?"true":void 0},e===t?ue.default.createElement("span",{className:"react-datepicker__year-option--selected"},"✓"):"",t)})),r=n.props.minDate?x.getYear(n.props.minDate):null,a=n.props.maxDate?x.getYear(n.props.maxDate):null;return a&&n.state.yearsList.find((function(e){return e===a}))||t.unshift(ue.default.createElement("div",{className:"react-datepicker__year-option",key:"upcoming",onClick:n.incrementYears},ue.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"}))),r&&n.state.yearsList.find((function(e){return e===r}))||t.push(ue.default.createElement("div",{className:"react-datepicker__year-option",key:"previous",onClick:n.decrementYears},ue.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"}))),t},n.onChange=function(e){n.props.onChange(e)},n.handleClickOutside=function(){n.props.onCancel()},n.shiftYears=function(e){var t=n.state.yearsList.map((function(t){return t+e}));n.setState({yearsList:t})},n.incrementYears=function(){return n.shiftYears(1)},n.decrementYears=function(){return n.shiftYears(-1)};var a=t.yearDropdownItemNumber,o=t.scrollableYearDropdown,s=a||(o?10:5);return n.state={yearsList:Ht(n.props.year,s,n.props.minDate,n.props.maxDate)},n.dropdownRef=r.createRef(),n}return me(n,e),n.prototype.componentDidMount=function(){var e=this.dropdownRef.current;if(e){var t=e.children?Array.from(e.children):null,r=t?t.find((function(e){return e.ariaSelected})):null;e.scrollTop=r&&r instanceof HTMLElement?r.offsetTop+(r.clientHeight-e.clientHeight)/2:(e.scrollHeight-e.clientHeight)/2}},n.prototype.render=function(){var e=t.clsx({"react-datepicker__year-dropdown":!0,"react-datepicker__year-dropdown--scrollable":this.props.scrollableYearDropdown});return ue.default.createElement(ke,{className:e,containerRef:this.dropdownRef,onClickOutside:this.handleClickOutside},this.renderOptions())},n}(r.Component),qt=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={dropdownVisible:!1},t.renderSelectOptions=function(){for(var e=t.props.minDate?x.getYear(t.props.minDate):1900,r=t.props.maxDate?x.getYear(t.props.maxDate):2100,n=[],a=e;a<=r;a++)n.push(ue.default.createElement("option",{key:a,value:a},a));return n},t.onSelectChange=function(e){t.onChange(parseInt(e.target.value))},t.renderSelectMode=function(){return ue.default.createElement("select",{value:t.props.year,className:"react-datepicker__year-select",onChange:t.onSelectChange},t.renderSelectOptions())},t.renderReadView=function(e){return ue.default.createElement("div",{key:"read",style:{visibility:e?"visible":"hidden"},className:"react-datepicker__year-read-view",onClick:function(e){return t.toggleDropdown(e)}},ue.default.createElement("span",{className:"react-datepicker__year-read-view--down-arrow"}),ue.default.createElement("span",{className:"react-datepicker__year-read-view--selected-year"},t.props.year))},t.renderDropdown=function(){return ue.default.createElement(Qt,ve({key:"dropdown"},t.props,{onChange:t.onChange,onCancel:t.toggleDropdown}))},t.renderScrollMode=function(){var e=t.state.dropdownVisible,r=[t.renderReadView(!e)];return e&&r.unshift(t.renderDropdown()),r},t.onChange=function(e){t.toggleDropdown(),e!==t.props.year&&t.props.onChange(e)},t.toggleDropdown=function(e){t.setState({dropdownVisible:!t.state.dropdownVisible},(function(){t.props.adjustDateOnChange&&t.handleYearChange(t.props.date,e)}))},t.handleYearChange=function(e,r){var n;null===(n=t.onSelect)||void 0===n||n.call(t,e,r),t.setOpen()},t.onSelect=function(e,r){var n,a;null===(a=(n=t.props).onSelect)||void 0===a||a.call(n,e,r)},t.setOpen=function(){var e,r;null===(r=(e=t.props).setOpen)||void 0===r||r.call(e,!0)},t}return me(t,e),t.prototype.render=function(){var e;switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode();break;case"select":e=this.renderSelectMode()}return ue.default.createElement("div",{className:"react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--".concat(this.props.dropdownMode)},e)},t}(r.Component),Kt=["react-datepicker__year-select","react-datepicker__month-select","react-datepicker__month-year-select"],Bt=function(e){function o(s){var c=e.call(this,s)||this;return c.monthContainer=void 0,c.handleClickOutside=function(e){c.props.onClickOutside(e)},c.setClickOutsideRef=function(){return c.containerRef.current},c.handleDropdownFocus=function(e){var t,r,n,a;n=e.target,a=(n.className||"").split(/\s+/),Kt.some((function(e){return a.indexOf(e)>=0}))&&(null===(r=(t=c.props).onDropdownFocus)||void 0===r||r.call(t,e))},c.getDateInView=function(){var e=c.props,t=e.preSelection,r=e.selected,n=e.openToDate,a=pt(c.props),o=ut(c.props),s=Me(),i=n||r||t;return i||(a&&N.isBefore(s,a)?a:o&&O.isAfter(s,o)?o:s)},c.increaseMonth=function(){c.setState((function(e){var t=e.date;return{date:i.addMonths(t,1)}}),(function(){return c.handleMonthChange(c.state.date)}))},c.decreaseMonth=function(){c.setState((function(e){var t=e.date;return{date:ae.subMonths(t,1)}}),(function(){return c.handleMonthChange(c.state.date)}))},c.handleDayClick=function(e,t,r){c.props.onSelect(e,t,r),c.props.setPreSelection&&c.props.setPreSelection(e)},c.handleDayMouseEnter=function(e){c.setState({selectingDate:e}),c.props.onDayMouseEnter&&c.props.onDayMouseEnter(e)},c.handleMonthMouseLeave=function(){c.setState({selectingDate:void 0}),c.props.onMonthMouseLeave&&c.props.onMonthMouseLeave()},c.handleYearMouseEnter=function(e,t){c.setState({selectingDate:G.setYear(Me(),t)}),c.props.onYearMouseEnter&&c.props.onYearMouseEnter(e,t)},c.handleYearMouseLeave=function(e,t){c.props.onYearMouseLeave&&c.props.onYearMouseLeave(e,t)},c.handleYearChange=function(e){var t,r,n,a;null===(r=(t=c.props).onYearChange)||void 0===r||r.call(t,e),c.setState({isRenderAriaLiveMessage:!0}),c.props.adjustDateOnChange&&(c.props.onSelect(e),null===(a=(n=c.props).setOpen)||void 0===a||a.call(n,!0)),c.props.setPreSelection&&c.props.setPreSelection(e)},c.getEnabledPreSelectionDateForMonth=function(e){if(!$e(e,c.props))return e;for(var t=Ne(e),r=Fe(e),o=n.differenceInDays(r,t),s=null,i=0;i<=o;i++){var l=a.addDays(t,i);if(!$e(l,c.props)){s=l;break}}return s},c.handleMonthChange=function(e){var t,r,n,a=null!==(t=c.getEnabledPreSelectionDateForMonth(e))&&void 0!==t?t:e;c.handleCustomMonthChange(a),c.props.adjustDateOnChange&&(c.props.onSelect(a),null===(n=(r=c.props).setOpen)||void 0===n||n.call(r,!0)),c.props.setPreSelection&&c.props.setPreSelection(a)},c.handleCustomMonthChange=function(e){var t,r;null===(r=(t=c.props).onMonthChange)||void 0===r||r.call(t,e),c.setState({isRenderAriaLiveMessage:!0})},c.handleMonthYearChange=function(e){c.handleYearChange(e),c.handleMonthChange(e)},c.changeYear=function(e){c.setState((function(t){var r=t.date;return{date:G.setYear(r,Number(e))}}),(function(){return c.handleYearChange(c.state.date)}))},c.changeMonth=function(e){c.setState((function(t){var r=t.date;return{date:$.setMonth(r,Number(e))}}),(function(){return c.handleMonthChange(c.state.date)}))},c.changeMonthYear=function(e){c.setState((function(t){var r=t.date;return{date:G.setYear($.setMonth(r,_.getMonth(e)),x.getYear(e))}}),(function(){return c.handleMonthYearChange(c.state.date)}))},c.header=function(e){void 0===e&&(e=c.state.date);var r=Oe(e,c.props.locale,c.props.calendarStartDay),n=[];return c.props.showWeekNumbers&&n.push(ue.default.createElement("div",{key:"W",className:"react-datepicker__day-name"},c.props.weekLabel||"#")),n.concat([0,1,2,3,4,5,6].map((function(e){var n=a.addDays(r,e),o=c.formatWeekday(n,c.props.locale),s=c.props.weekDayClassName?c.props.weekDayClassName(n):void 0;return ue.default.createElement("div",{key:e,"aria-label":Ee(n,"EEEE",c.props.locale),className:t.clsx("react-datepicker__day-name",s)},o)})))},c.formatWeekday=function(e,t){return c.props.formatWeekDay?function(e,t,r){return t(Ee(e,"EEEE",r))}(e,c.props.formatWeekDay,t):c.props.useWeekdaysShort?function(e,t){return Ee(e,"EEE",t)}(e,t):function(e,t){return Ee(e,"EEEEEE",t)}(e,t)},c.decreaseYear=function(){c.setState((function(e){var t,r=e.date;return{date:ie.subYears(r,c.props.showYearPicker?null!==(t=c.props.yearItemNumber)&&void 0!==t?t:o.defaultProps.yearItemNumber:1)}}),(function(){return c.handleYearChange(c.state.date)}))},c.clearSelectingDate=function(){c.setState({selectingDate:void 0})},c.renderPreviousButton=function(){var e,t,r;if(!c.props.renderCustomHeader){var n,a=null!==(e=c.props.monthsShown)&&void 0!==e?e:o.defaultProps.monthsShown,s=c.props.showPreviousMonths?a-1:0,i=null!==(t=c.props.monthSelectedIn)&&void 0!==t?t:s,l=ae.subMonths(c.state.date,i);switch(!0){case c.props.showMonthYearPicker:n=ct(c.state.date,c.props);break;case c.props.showYearPicker:n=function(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.yearItemNumber,o=void 0===a?Se:a,s=gt(Te(ie.subYears(e,o)),o).endPeriod,i=n&&x.getYear(n);return i&&i>s||!1}(c.state.date,c.props);break;case c.props.showQuarterYearPicker:n=function(e,t){var r=void 0===t?{}:t,n=r.minDate,a=r.includeDates,o=re.startOfYear(e),s=oe.subQuarters(o,1);return n&&h.differenceInCalendarQuarters(n,s)>0||a&&a.every((function(e){return h.differenceInCalendarQuarters(e,s)>0}))||!1}(c.state.date,c.props);break;default:n=it(l,c.props)}if(((null!==(r=c.props.forceShowMonthNavigation)&&void 0!==r?r:o.defaultProps.forceShowMonthNavigation)||c.props.showDisabledMonthNavigation||!n)&&!c.props.showTimeSelectOnly){var d=["react-datepicker__navigation","react-datepicker__navigation--previous"],p=c.decreaseMonth;(c.props.showMonthYearPicker||c.props.showQuarterYearPicker||c.props.showYearPicker)&&(p=c.decreaseYear),n&&c.props.showDisabledMonthNavigation&&(d.push("react-datepicker__navigation--previous--disabled"),p=void 0);var u=c.props.showMonthYearPicker||c.props.showQuarterYearPicker||c.props.showYearPicker,f=c.props,m=f.previousMonthButtonLabel,v=void 0===m?o.defaultProps.previousMonthButtonLabel:m,g=f.previousYearButtonLabel,D=void 0===g?o.defaultProps.previousYearButtonLabel:g,y=c.props,k=y.previousMonthAriaLabel,w=void 0===k?"string"==typeof v?v:"Previous Month":k,S=y.previousYearAriaLabel,b=void 0===S?"string"==typeof D?D:"Previous Year":S;return ue.default.createElement("button",{type:"button",className:d.join(" "),onClick:p,onKeyDown:c.props.handleOnKeyDown,"aria-label":u?b:w},ue.default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--previous"].join(" ")},u?D:v))}}},c.increaseYear=function(){c.setState((function(e){var t,r=e.date;return{date:p.addYears(r,c.props.showYearPicker?null!==(t=c.props.yearItemNumber)&&void 0!==t?t:o.defaultProps.yearItemNumber:1)}}),(function(){return c.handleYearChange(c.state.date)}))},c.renderNextButton=function(){var e;if(!c.props.renderCustomHeader){var t;switch(!0){case c.props.showMonthYearPicker:t=dt(c.state.date,c.props);break;case c.props.showYearPicker:t=function(e,t){var r=void 0===t?{}:t,n=r.maxDate,a=r.yearItemNumber,o=void 0===a?Se:a,s=gt(p.addYears(e,o),o).startPeriod,i=n&&x.getYear(n);return i&&i<s||!1}(c.state.date,c.props);break;case c.props.showQuarterYearPicker:t=function(e,t){var r=void 0===t?{}:t,n=r.maxDate,a=r.includeDates,o=y.endOfYear(e),s=l.addQuarters(o,1);return n&&h.differenceInCalendarQuarters(s,n)>0||a&&a.every((function(e){return h.differenceInCalendarQuarters(s,e)>0}))||!1}(c.state.date,c.props);break;default:t=lt(c.state.date,c.props)}if(((null!==(e=c.props.forceShowMonthNavigation)&&void 0!==e?e:o.defaultProps.forceShowMonthNavigation)||c.props.showDisabledMonthNavigation||!t)&&!c.props.showTimeSelectOnly){var r=["react-datepicker__navigation","react-datepicker__navigation--next"];c.props.showTimeSelect&&r.push("react-datepicker__navigation--next--with-time"),c.props.todayButton&&r.push("react-datepicker__navigation--next--with-today-button");var n=c.increaseMonth;(c.props.showMonthYearPicker||c.props.showQuarterYearPicker||c.props.showYearPicker)&&(n=c.increaseYear),t&&c.props.showDisabledMonthNavigation&&(r.push("react-datepicker__navigation--next--disabled"),n=void 0);var a=c.props.showMonthYearPicker||c.props.showQuarterYearPicker||c.props.showYearPicker,s=c.props,i=s.nextMonthButtonLabel,d=void 0===i?o.defaultProps.nextMonthButtonLabel:i,u=s.nextYearButtonLabel,f=void 0===u?o.defaultProps.nextYearButtonLabel:u,m=c.props,v=m.nextMonthAriaLabel,g=void 0===v?"string"==typeof d?d:"Next Month":v,D=m.nextYearAriaLabel,k=void 0===D?"string"==typeof f?f:"Next Year":D;return ue.default.createElement("button",{type:"button",className:r.join(" "),onClick:n,onKeyDown:c.props.handleOnKeyDown,"aria-label":a?k:g},ue.default.createElement("span",{className:["react-datepicker__navigation-icon","react-datepicker__navigation-icon--next"].join(" ")},a?f:d))}}},c.renderCurrentMonth=function(e){void 0===e&&(e=c.state.date);var t=["react-datepicker__current-month"];return c.props.showYearDropdown&&t.push("react-datepicker__current-month--hasYearDropdown"),c.props.showMonthDropdown&&t.push("react-datepicker__current-month--hasMonthDropdown"),c.props.showMonthYearDropdown&&t.push("react-datepicker__current-month--hasMonthYearDropdown"),ue.default.createElement("h2",{className:t.join(" ")},Ee(e,c.props.dateFormat,c.props.locale))},c.renderYearDropdown=function(e){if(void 0===e&&(e=!1),c.props.showYearDropdown&&!e)return ue.default.createElement(qt,ve({},o.defaultProps,c.props,{date:c.state.date,onChange:c.changeYear,year:x.getYear(c.state.date)}))},c.renderMonthDropdown=function(e){if(void 0===e&&(e=!1),c.props.showMonthDropdown&&!e)return ue.default.createElement(It,ve({},o.defaultProps,c.props,{month:_.getMonth(c.state.date),onChange:c.changeMonth}))},c.renderMonthYearDropdown=function(e){if(void 0===e&&(e=!1),c.props.showMonthYearDropdown&&!e)return ue.default.createElement(Ft,ve({},o.defaultProps,c.props,{date:c.state.date,onChange:c.changeMonthYear}))},c.handleTodayButtonClick=function(e){c.props.onSelect(Re(),e),c.props.setPreSelection&&c.props.setPreSelection(Re())},c.renderTodayButton=function(){if(c.props.todayButton&&!c.props.showTimeSelectOnly)return ue.default.createElement("div",{className:"react-datepicker__today-button",onClick:c.handleTodayButtonClick},c.props.todayButton)},c.renderDefaultHeader=function(e){var t=e.monthDate,r=e.i;return ue.default.createElement("div",{className:"react-datepicker__header ".concat(c.props.showTimeSelect?"react-datepicker__header--has-time-select":"")},c.renderCurrentMonth(t),ue.default.createElement("div",{className:"react-datepicker__header__dropdown react-datepicker__header__dropdown--".concat(c.props.dropdownMode),onFocus:c.handleDropdownFocus},c.renderMonthDropdown(0!==r),c.renderMonthYearDropdown(0!==r),c.renderYearDropdown(0!==r)),ue.default.createElement("div",{className:"react-datepicker__day-names"},c.header(t)))},c.renderCustomHeader=function(e){var t,r,n=e.monthDate,a=e.i;if(c.props.showTimeSelect&&!c.state.monthContainer||c.props.showTimeSelectOnly)return null;var o=it(c.state.date,c.props),s=lt(c.state.date,c.props),i=ct(c.state.date,c.props),l=dt(c.state.date,c.props),d=!c.props.showMonthYearPicker&&!c.props.showQuarterYearPicker&&!c.props.showYearPicker;return ue.default.createElement("div",{className:"react-datepicker__header react-datepicker__header--custom",onFocus:c.props.onDropdownFocus},null===(r=(t=c.props).renderCustomHeader)||void 0===r?void 0:r.call(t,ve(ve({},c.state),{customHeaderCount:a,monthDate:n,changeMonth:c.changeMonth,changeYear:c.changeYear,decreaseMonth:c.decreaseMonth,increaseMonth:c.increaseMonth,decreaseYear:c.decreaseYear,increaseYear:c.increaseYear,prevMonthButtonDisabled:o,nextMonthButtonDisabled:s,prevYearButtonDisabled:i,nextYearButtonDisabled:l})),d&&ue.default.createElement("div",{className:"react-datepicker__day-names"},c.header(n)))},c.renderYearHeader=function(e){var t=e.monthDate,r=c.props,n=r.showYearPicker,a=r.yearItemNumber,s=gt(t,void 0===a?o.defaultProps.yearItemNumber:a),i=s.startPeriod,l=s.endPeriod;return ue.default.createElement("div",{className:"react-datepicker__header react-datepicker-year-header"},n?"".concat(i," - ").concat(l):x.getYear(t))},c.renderHeader=function(e){var t=e.monthDate,r=e.i,n={monthDate:t,i:void 0===r?0:r};switch(!0){case void 0!==c.props.renderCustomHeader:return c.renderCustomHeader(n);case c.props.showMonthYearPicker||c.props.showQuarterYearPicker||c.props.showYearPicker:return c.renderYearHeader(n);default:return c.renderDefaultHeader(n)}},c.renderMonths=function(){var e,t;if(!c.props.showTimeSelectOnly&&!c.props.showYearPicker){for(var r=[],n=null!==(e=c.props.monthsShown)&&void 0!==e?e:o.defaultProps.monthsShown,a=c.props.showPreviousMonths?n-1:0,s=c.props.showMonthYearPicker||c.props.showQuarterYearPicker?p.addYears(c.state.date,a):ae.subMonths(c.state.date,a),l=null!==(t=c.props.monthSelectedIn)&&void 0!==t?t:a,d=0;d<n;++d){var u=d-l+a,f=c.props.showMonthYearPicker||c.props.showQuarterYearPicker?p.addYears(s,u):i.addMonths(s,u),h="month-".concat(d),m=d<n-1,v=d>0;r.push(ue.default.createElement("div",{key:h,ref:function(e){c.monthContainer=null!=e?e:void 0},className:"react-datepicker__month-container"},c.renderHeader({monthDate:f,i:d}),ue.default.createElement(Nt,ve({},o.defaultProps,c.props,{ariaLabelPrefix:c.props.monthAriaLabelPrefix,day:f,onDayClick:c.handleDayClick,handleOnKeyDown:c.props.handleOnDayKeyDown,handleOnMonthKeyDown:c.props.handleOnKeyDown,onDayMouseEnter:c.handleDayMouseEnter,onMouseLeave:c.handleMonthMouseLeave,orderInDisplay:d,selectingDate:c.state.selectingDate,monthShowsDuplicateDaysEnd:m,monthShowsDuplicateDaysStart:v}))))}return r}},c.renderYears=function(){if(!c.props.showTimeSelectOnly)return c.props.showYearPicker?ue.default.createElement("div",{className:"react-datepicker__year--container"},c.renderHeader({monthDate:c.state.date}),ue.default.createElement(Wt,ve({},o.defaultProps,c.props,{selectingDate:c.state.selectingDate,date:c.state.date,onDayClick:c.handleDayClick,clearSelectingDate:c.clearSelectingDate,onYearMouseEnter:c.handleYearMouseEnter,onYearMouseLeave:c.handleYearMouseLeave}))):void 0},c.renderTimeSection=function(){if(c.props.showTimeSelect&&(c.state.monthContainer||c.props.showTimeSelectOnly))return ue.default.createElement(At,ve({},o.defaultProps,c.props,{onChange:c.props.onTimeChange,format:c.props.timeFormat,intervals:c.props.timeIntervals,monthRef:c.state.monthContainer}))},c.renderInputTimeSection=function(){var e=c.props.selected?new Date(c.props.selected):void 0,t=e&&_e(e)&&Boolean(c.props.selected)?"".concat(vt(e.getHours()),":").concat(vt(e.getMinutes())):"";if(c.props.showTimeInput)return ue.default.createElement(bt,ve({},o.defaultProps,c.props,{date:e,timeString:t,onChange:c.props.onTimeChange}))},c.renderAriaLiveRegion=function(){var e,t,r=gt(c.state.date,null!==(e=c.props.yearItemNumber)&&void 0!==e?e:o.defaultProps.yearItemNumber),n=r.startPeriod,a=r.endPeriod;return t=c.props.showYearPicker?"".concat(n," - ").concat(a):c.props.showMonthYearPicker||c.props.showQuarterYearPicker?x.getYear(c.state.date):"".concat(je(_.getMonth(c.state.date),c.props.locale)," ").concat(x.getYear(c.state.date)),ue.default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},c.state.isRenderAriaLiveMessage&&t)},c.renderChildren=function(){if(c.props.children)return ue.default.createElement("div",{className:"react-datepicker__children-container"},c.props.children)},c.containerRef=r.createRef(),c.state={date:c.getDateInView(),selectingDate:void 0,monthContainer:void 0,isRenderAriaLiveMessage:!1},c}return me(o,e),Object.defineProperty(o,"defaultProps",{get:function(){return{monthsShown:1,forceShowMonthNavigation:!1,timeCaption:"Time",previousYearButtonLabel:"Previous Year",nextYearButtonLabel:"Next Year",previousMonthButtonLabel:"Previous Month",nextMonthButtonLabel:"Next Month",yearItemNumber:Se}},enumerable:!1,configurable:!0}),o.prototype.componentDidMount=function(){var e=this;this.props.showTimeSelect&&(this.assignMonthContainer=void e.setState({monthContainer:e.monthContainer}))},o.prototype.componentDidUpdate=function(e){var t=this;if(!this.props.preSelection||Qe(this.props.preSelection,e.preSelection)&&this.props.monthSelectedIn===e.monthSelectedIn)this.props.openToDate&&!Qe(this.props.openToDate,e.openToDate)&&this.setState({date:this.props.openToDate});else{var r=!We(this.state.date,this.props.preSelection);this.setState({date:this.props.preSelection},(function(){return r&&t.handleCustomMonthChange(t.state.date)}))}},o.prototype.render=function(){var e=this.props.container||ye;return ue.default.createElement(ke,{onClickOutside:this.handleClickOutside,style:{display:"contents"},containerRef:this.containerRef,ignoreClass:this.props.outsideClickIgnoreClass},ue.default.createElement(e,{className:t.clsx("react-datepicker",this.props.className,{"react-datepicker--time-only":this.props.showTimeSelectOnly}),showTime:this.props.showTimeSelect||this.props.showTimeInput,showTimeSelectOnly:this.props.showTimeSelectOnly},this.renderAriaLiveRegion(),this.renderPreviousButton(),this.renderNextButton(),this.renderMonths(),this.renderYears(),this.renderTodayButton(),this.renderTimeSection(),this.renderInputTimeSection(),this.renderChildren()))},o}(r.Component),Vt=function(e){var t=e.icon,r=e.className,n=void 0===r?"":r,a=e.onClick,o="react-datepicker__calendar-icon";return"string"==typeof t?ue.default.createElement("i",{className:"".concat(o," ").concat(t," ").concat(n),"aria-hidden":"true",onClick:a}):ue.default.isValidElement(t)?ue.default.cloneElement(t,{className:"".concat(t.props.className||""," ").concat(o," ").concat(n),onClick:function(e){"function"==typeof t.props.onClick&&t.props.onClick(e),"function"==typeof a&&a(e)}}):ue.default.createElement("svg",{className:"".concat(o," ").concat(n),xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 448 512",onClick:a},ue.default.createElement("path",{d:"M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z"}))},jt=function(e){function t(t){var r=e.call(this,t)||this;return r.portalRoot=null,r.el=document.createElement("div"),r}return me(t,e),t.prototype.componentDidMount=function(){this.portalRoot=(this.props.portalHost||document).getElementById(this.props.portalId),this.portalRoot||(this.portalRoot=document.createElement("div"),this.portalRoot.setAttribute("id",this.props.portalId),(this.props.portalHost||document.body).appendChild(this.portalRoot)),this.portalRoot.appendChild(this.el)},t.prototype.componentWillUnmount=function(){this.portalRoot&&this.portalRoot.removeChild(this.el)},t.prototype.render=function(){return fe.default.createPortal(this.props.children,this.el)},t}(r.Component),Ut=function(e){return(e instanceof HTMLAnchorElement||!e.disabled)&&-1!==e.tabIndex},$t=function(e){function t(t){var n=e.call(this,t)||this;return n.getTabChildren=function(){var e;return Array.prototype.slice.call(null===(e=n.tabLoopRef.current)||void 0===e?void 0:e.querySelectorAll("[tabindex], a, button, input, select, textarea"),1,-1).filter(Ut)},n.handleFocusStart=function(){var e=n.getTabChildren();e&&e.length>1&&e[e.length-1].focus()},n.handleFocusEnd=function(){var e=n.getTabChildren();e&&e.length>1&&e[0].focus()},n.tabLoopRef=r.createRef(),n}return me(t,e),t.prototype.render=function(){var e;return(null!==(e=this.props.enableTabLoop)&&void 0!==e?e:t.defaultProps.enableTabLoop)?ue.default.createElement("div",{className:"react-datepicker__tab-loop",ref:this.tabLoopRef},ue.default.createElement("div",{className:"react-datepicker__tab-loop__start",tabIndex:0,onFocus:this.handleFocusStart}),this.props.children,ue.default.createElement("div",{className:"react-datepicker__tab-loop__end",tabIndex:0,onFocus:this.handleFocusEnd})):this.props.children},t.defaultProps={enableTabLoop:!0},t}(r.Component);var zt,Xt=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return me(n,e),Object.defineProperty(n,"defaultProps",{get:function(){return{hidePopper:!0}},enumerable:!1,configurable:!0}),n.prototype.render=function(){var e=this.props,a=e.className,o=e.wrapperClassName,s=e.hidePopper,i=void 0===s?n.defaultProps.hidePopper:s,l=e.popperComponent,c=e.targetComponent,d=e.enableTabLoop,p=e.popperOnKeyDown,u=e.portalId,f=e.portalHost,h=e.popperProps,m=e.showArrow,v=void 0;if(!i){var g=t.clsx("react-datepicker-popper",a);v=ue.default.createElement($t,{enableTabLoop:d},ue.default.createElement("div",{ref:h.refs.setFloating,style:h.floatingStyles,className:g,"data-placement":h.placement,onKeyDown:p},l,m&&ue.default.createElement(ce.FloatingArrow,{ref:h.arrowRef,context:h.context,fill:"currentColor",strokeWidth:1,height:8,width:16,style:{transform:"translateY(-1px)"},className:"react-datepicker__triangle"})))}this.props.popperContainer&&(v=r.createElement(this.props.popperContainer,{},v)),u&&!i&&(v=ue.default.createElement(jt,{portalId:u,portalHost:f},v));var D=t.clsx("react-datepicker-wrapper",o);return ue.default.createElement(ue.default.Fragment,null,ue.default.createElement("div",{ref:h.refs.setReference,className:D},c),v)},n}(r.Component),Gt=(zt=Xt,function(e){var t,n="boolean"!=typeof e.hidePopper||e.hidePopper,a=r.useRef(null),o=ce.useFloating(ve({open:!n,whileElementsMounted:ce.autoUpdate,placement:e.popperPlacement,middleware:ge([ce.flip({padding:15}),ce.offset(10),ce.arrow({element:a})],null!==(t=e.popperModifiers)&&void 0!==t?t:[],!0)},e.popperProps)),s=ve(ve({},e),{hidePopper:n,popperProps:ve(ve({},o),{arrowRef:a})});return ue.default.createElement(zt,ve({},s))}),Jt="react-datepicker-ignore-onclickoutside";var Zt="Date input not valid.",er=function(e){function n(o){var s=e.call(this,o)||this;return s.calendar=null,s.input=null,s.getPreSelection=function(){return s.props.openToDate?s.props.openToDate:s.props.selectsEnd&&s.props.startDate?s.props.startDate:s.props.selectsStart&&s.props.endDate?s.props.endDate:Me()},s.modifyHolidays=function(){var e;return null===(e=s.props.holidays)||void 0===e?void 0:e.reduce((function(e,t){var r=new Date(t.date);return _e(r)?ge(ge([],e,!0),[ve(ve({},t),{date:r})],!1):e}),[])},s.calcInitialState=function(){var e,t=s.getPreSelection(),r=pt(s.props),n=ut(s.props),a=r&&N.isBefore(t,xe(r))?r:n&&O.isAfter(t,Le(n))?n:t;return{open:s.props.startOpen||!1,preventFocus:!1,inputValue:null,preSelection:null!==(e=s.props.selectsRange?s.props.startDate:s.props.selected)&&void 0!==e?e:a,highlightDates:ft(s.props.highlightDates),focused:!1,shouldFocusDayInline:!1,isRenderAriaLiveMessage:!1,wasHidden:!1}},s.resetHiddenStatus=function(){s.setState(ve(ve({},s.state),{wasHidden:!1}))},s.setHiddenStatus=function(){s.setState(ve(ve({},s.state),{wasHidden:!0}))},s.setHiddenStateOnVisibilityHidden=function(){"hidden"===document.visibilityState&&s.setHiddenStatus()},s.clearPreventFocusTimeout=function(){s.preventFocusTimeout&&clearTimeout(s.preventFocusTimeout)},s.safeFocus=function(){setTimeout((function(){var e,t;null===(t=null===(e=s.input)||void 0===e?void 0:e.focus)||void 0===t||t.call(e,{preventScroll:!0})}),0)},s.safeBlur=function(){setTimeout((function(){var e,t;null===(t=null===(e=s.input)||void 0===e?void 0:e.blur)||void 0===t||t.call(e)}),0)},s.setFocus=function(){s.safeFocus()},s.setBlur=function(){s.safeBlur(),s.cancelFocusInput()},s.setOpen=function(e,t){void 0===t&&(t=!1),s.setState({open:e,preSelection:e&&s.state.open?s.state.preSelection:s.calcInitialState().preSelection,lastPreSelectChange:rr},(function(){e||s.setState((function(e){return{focused:!!t&&e.focused}}),(function(){!t&&s.setBlur(),s.setState({inputValue:null})}))}))},s.inputOk=function(){return T.isDate(s.state.preSelection)},s.isCalendarOpen=function(){return void 0===s.props.open?s.state.open&&!s.props.disabled&&!s.props.readOnly:s.props.open},s.handleFocus=function(e){var t,r,n=s.state.wasHidden,a=!n||s.state.open;n&&s.resetHiddenStatus(),!s.state.preventFocus&&a&&(null===(r=(t=s.props).onFocus)||void 0===r||r.call(t,e),s.props.preventOpenOnFocus||s.props.readOnly||s.setOpen(!0)),s.setState({focused:!0})},s.sendFocusBackToInput=function(){s.preventFocusTimeout&&s.clearPreventFocusTimeout(),s.setState({preventFocus:!0},(function(){s.preventFocusTimeout=setTimeout((function(){s.setFocus(),s.setState({preventFocus:!1})}))}))},s.cancelFocusInput=function(){clearTimeout(s.inputFocusTimeout),s.inputFocusTimeout=void 0},s.deferFocusInput=function(){s.cancelFocusInput(),s.inputFocusTimeout=setTimeout((function(){return s.setFocus()}),1)},s.handleDropdownFocus=function(){s.cancelFocusInput()},s.handleBlur=function(e){var t,r;(!s.state.open||s.props.withPortal||s.props.showTimeInput)&&(null===(r=(t=s.props).onBlur)||void 0===r||r.call(t,e)),s.setState({focused:!1})},s.handleCalendarClickOutside=function(e){var t,r;s.props.inline||s.setOpen(!1),null===(r=(t=s.props).onClickOutside)||void 0===r||r.call(t,e),s.props.withPortal&&e.preventDefault()},s.handleChange=function(){for(var e,t,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];var o=r[0];if(!s.props.onChangeRaw||(s.props.onChangeRaw.apply(s,r),o&&"function"==typeof o.isDefaultPrevented&&!o.isDefaultPrevented())){s.setState({inputValue:(null==o?void 0:o.target)instanceof HTMLInputElement?o.target.value:null,lastPreSelectChange:tr});var i=s.props,l=i.dateFormat,c=void 0===l?n.defaultProps.dateFormat:l,d=i.strictParsing,p=void 0===d?n.defaultProps.strictParsing:d,u=i.selectsRange,f=i.startDate,h=i.endDate,m=(null==o?void 0:o.target)instanceof HTMLInputElement?o.target.value:"";if(u){var v=m.split("-",2).map((function(e){return e.trim()})),g=v[0],D=v[1],y=Ce(null!=g?g:"",c,s.props.locale,p),k=Ce(null!=D?D:"",c,s.props.locale,p),w=(null==f?void 0:f.getTime())!==(null==y?void 0:y.getTime()),S=(null==h?void 0:h.getTime())!==(null==k?void 0:k.getTime());if(!w&&!S)return;if(y&&$e(y,s.props))return;if(k&&$e(k,s.props))return;null===(t=(e=s.props).onChange)||void 0===t||t.call(e,[y,k],o)}else{var M=Ce(m,c,s.props.locale,p,s.props.minDate);s.props.showTimeSelectOnly&&s.props.selected&&M&&!Qe(M,s.props.selected)&&(M=V.set(s.props.selected,{hours:b.getHours(M),minutes:C.getMinutes(M),seconds:P.getSeconds(M)})),!M&&m||s.setSelected(M,o,!0)}}},s.handleSelect=function(e,t,r){if(s.props.shouldCloseOnSelect&&!s.props.showTimeSelect&&s.sendFocusBackToInput(),s.props.onChangeRaw&&s.props.onChangeRaw(t),s.setSelected(e,t,!1,r),s.props.showDateSelect&&s.setState({isRenderAriaLiveMessage:!0}),!s.props.shouldCloseOnSelect||s.props.showTimeSelect)s.setPreSelection(e);else if(!s.props.inline){s.props.selectsRange||s.setOpen(!1);var n=s.props,a=n.startDate,o=n.endDate;!a||o||!s.props.swapRange&&kt(e,a)||s.setOpen(!1)}},s.setSelected=function(e,t,r,n){var a,o,i=e;if(s.props.showYearPicker){if(null!==i&&tt(x.getYear(i),s.props))return}else if(s.props.showMonthYearPicker){if(null!==i&&Xe(i,s.props))return}else if(null!==i&&$e(i,s.props))return;var l=s.props,c=l.onChange,d=l.selectsRange,p=l.startDate,u=l.endDate,f=l.selectsMultiple,h=l.selectedDates,m=l.minTime,v=l.swapRange;if(!qe(s.props.selected,i)||s.props.allowSameDay||d||f)if(null!==i&&(!s.props.selected||r&&(s.props.showTimeSelect||s.props.showTimeSelectOnly||s.props.showTimeInput)||(i=Ye(i,{hour:b.getHours(s.props.selected),minute:C.getMinutes(s.props.selected),second:P.getSeconds(s.props.selected)})),r||!s.props.showTimeSelect&&!s.props.showTimeSelectOnly||m&&(i=Ye(i,{hour:m.getHours(),minute:m.getMinutes(),second:m.getSeconds()})),s.props.inline||s.setState({preSelection:i}),s.props.focusSelectedMonth||s.setState({monthSelectedIn:n})),d){var g=p&&!u,D=p&&u;!p&&!u?null==c||c([i,null],t):g&&(null===i?null==c||c([null,null],t):kt(i,p)?v?null==c||c([i,p],t):null==c||c([i,null],t):null==c||c([p,i],t)),D&&(null==c||c([i,null],t))}else if(f){if(null!==i)if(null==h?void 0:h.length)if(h.some((function(e){return Qe(e,i)}))){var y=h.filter((function(e){return!Qe(e,i)}));null==c||c(y,t)}else null==c||c(ge(ge([],h,!0),[i],!1),t);else null==c||c([i],t)}else null==c||c(i,t);r||(null===(o=(a=s.props).onSelect)||void 0===o||o.call(a,i,t),s.setState({inputValue:null}))},s.setPreSelection=function(e){var t=T.isDate(s.props.minDate),r=T.isDate(s.props.maxDate),n=!0;if(e){var a=xe(e);if(t&&r)n=Ke(e,s.props.minDate,s.props.maxDate);else if(t){var o=xe(s.props.minDate);n=O.isAfter(e,o)||qe(a,o)}else if(r){var i=Le(s.props.maxDate);n=N.isBefore(e,i)||qe(a,i)}}n&&s.setState({preSelection:e})},s.toggleCalendar=function(){s.setOpen(!s.state.open)},s.handleTimeChange=function(e){var t,r;if(!s.props.selectsRange&&!s.props.selectsMultiple){var n=s.props.selected?s.props.selected:s.getPreSelection(),a=s.props.selected?e:Ye(n,{hour:b.getHours(e),minute:C.getMinutes(e)});s.setState({preSelection:a}),null===(r=(t=s.props).onChange)||void 0===r||r.call(t,a),s.props.shouldCloseOnSelect&&!s.props.showTimeInput&&(s.sendFocusBackToInput(),s.setOpen(!1)),s.props.showTimeInput&&s.setOpen(!0),(s.props.showTimeSelectOnly||s.props.showTimeSelect)&&s.setState({isRenderAriaLiveMessage:!0}),s.setState({inputValue:null})}},s.onInputClick=function(){var e,t;s.props.disabled||s.props.readOnly||s.setOpen(!0),null===(t=(e=s.props).onInputClick)||void 0===t||t.call(e)},s.onInputKeyDown=function(e){var t,r,n,a,o,i;null===(r=(t=s.props).onKeyDown)||void 0===r||r.call(t,e);var l=e.key;if(s.state.open||s.props.inline||s.props.preventOpenOnFocus){if(s.state.open){if(l===De.ArrowDown||l===De.ArrowUp){e.preventDefault();var c=s.props.showTimeSelectOnly?".react-datepicker__time-list-item[tabindex='0']":s.props.showWeekPicker&&s.props.showWeekNumbers?'.react-datepicker__week-number[tabindex="0"]':s.props.showFullMonthYearPicker||s.props.showMonthYearPicker?'.react-datepicker__month-text[tabindex="0"]':'.react-datepicker__day[tabindex="0"]',d=(null===(a=s.calendar)||void 0===a?void 0:a.containerRef.current)instanceof Element&&s.calendar.containerRef.current.querySelector(c);return void(d instanceof HTMLElement&&d.focus({preventScroll:!0}))}var p=Me(s.state.preSelection);l===De.Enter?(e.preventDefault(),e.target.blur(),s.inputOk()&&s.state.lastPreSelectChange===rr?(s.handleSelect(p,e),!s.props.shouldCloseOnSelect&&s.setPreSelection(p)):s.setOpen(!1)):l===De.Escape?(e.preventDefault(),e.target.blur(),s.sendFocusBackToInput(),s.setOpen(!1)):l===De.Tab&&s.setOpen(!1),s.inputOk()||null===(i=(o=s.props).onInputError)||void 0===i||i.call(o,{code:1,msg:Zt})}}else l!==De.ArrowDown&&l!==De.ArrowUp&&l!==De.Enter||null===(n=s.onInputClick)||void 0===n||n.call(s)},s.onPortalKeyDown=function(e){e.key===De.Escape&&(e.preventDefault(),s.setState({preventFocus:!0},(function(){s.setOpen(!1),setTimeout((function(){s.setFocus(),s.setState({preventFocus:!1})}))})))},s.onDayKeyDown=function(e){var t,r,n,o,l,c,u=s.props,f=u.minDate,h=u.maxDate,m=u.disabledKeyboardNavigation,v=u.showWeekPicker,g=u.shouldCloseOnSelect,y=u.locale,k=u.calendarStartDay,w=u.adjustDateOnChange,S=u.inline;if(null===(r=(t=s.props).onKeyDown)||void 0===r||r.call(t,e),!m){var b=e.key,M=e.shiftKey,C=Me(s.state.preSelection),E=function(e,t){var r=t;switch(e){case De.ArrowRight:r=v?d.addWeeks(t,1):a.addDays(t,1);break;case De.ArrowLeft:r=v?se.subWeeks(t,1):ne.subDays(t,1);break;case De.ArrowUp:r=se.subWeeks(t,1);break;case De.ArrowDown:r=d.addWeeks(t,1);break;case De.PageUp:r=M?ie.subYears(t,1):ae.subMonths(t,1);break;case De.PageDown:r=M?p.addYears(t,1):i.addMonths(t,1);break;case De.Home:r=Oe(t,y,k);break;case De.End:r=function(e){return D.endOfWeek(e)}(t)}return r};if(b===De.Enter)return e.preventDefault(),s.handleSelect(C,e),void(!g&&s.setPreSelection(C));if(b===De.Escape)return e.preventDefault(),s.setOpen(!1),void(s.inputOk()||null===(o=(n=s.props).onInputError)||void 0===o||o.call(n,{code:1,msg:Zt}));var P=null;switch(b){case De.ArrowLeft:case De.ArrowRight:case De.ArrowUp:case De.ArrowDown:case De.PageUp:case De.PageDown:case De.Home:case De.End:P=function(e,t){for(var r=e,n=!1,a=0,o=E(e,t);!n;){if(a>=40){o=t;break}f&&o<f&&(r=De.ArrowRight,o=$e(f,s.props)?E(r,o):f),h&&o>h&&(r=De.ArrowLeft,o=$e(h,s.props)?E(r,o):h),$e(o,s.props)?(r!==De.PageUp&&r!==De.Home||(r=De.ArrowRight),r!==De.PageDown&&r!==De.End||(r=De.ArrowLeft),o=E(r,o)):n=!0,a++}return o}(b,C)}if(P){if(e.preventDefault(),s.setState({lastPreSelectChange:rr}),w&&s.setSelected(P),s.setPreSelection(P),S){var Y=_.getMonth(C),O=_.getMonth(P),N=x.getYear(C),T=x.getYear(P);Y!==O||N!==T?s.setState({shouldFocusDayInline:!0}):s.setState({shouldFocusDayInline:!1})}}else null===(c=(l=s.props).onInputError)||void 0===c||c.call(l,{code:1,msg:Zt})}},s.onPopperKeyDown=function(e){e.key===De.Escape&&(e.preventDefault(),s.sendFocusBackToInput())},s.onClearClick=function(e){e&&e.preventDefault&&e.preventDefault(),s.sendFocusBackToInput();var t=s.props,r=t.selectsRange,n=t.onChange;r?null==n||n([null,null],e):null==n||n(null,e),s.setState({inputValue:null})},s.clear=function(){s.onClearClick()},s.onScroll=function(e){"boolean"==typeof s.props.closeOnScroll&&s.props.closeOnScroll?e.target!==document&&e.target!==document.documentElement&&e.target!==document.body||s.setOpen(!1):"function"==typeof s.props.closeOnScroll&&s.props.closeOnScroll(e)&&s.setOpen(!1)},s.renderCalendar=function(){var e,t;return s.props.inline||s.isCalendarOpen()?ue.default.createElement(Bt,ve({showMonthYearDropdown:void 0,ref:function(e){s.calendar=e}},s.props,s.state,{setOpen:s.setOpen,dateFormat:null!==(e=s.props.dateFormatCalendar)&&void 0!==e?e:n.defaultProps.dateFormatCalendar,onSelect:s.handleSelect,onClickOutside:s.handleCalendarClickOutside,holidays:ht(s.modifyHolidays()),outsideClickIgnoreClass:Jt,onDropdownFocus:s.handleDropdownFocus,onTimeChange:s.handleTimeChange,className:s.props.calendarClassName,container:s.props.calendarContainer,handleOnKeyDown:s.props.onKeyDown,handleOnDayKeyDown:s.onDayKeyDown,setPreSelection:s.setPreSelection,dropdownMode:null!==(t=s.props.dropdownMode)&&void 0!==t?t:n.defaultProps.dropdownMode}),s.props.children):null},s.renderAriaLiveRegion=function(){var e,t=s.props,r=t.dateFormat,a=void 0===r?n.defaultProps.dateFormat:r,o=t.locale,i=s.props.showTimeInput||s.props.showTimeSelect?"PPPPp":"PPPP";return e=s.props.selectsRange?"Selected start date: ".concat(Pe(s.props.startDate,{dateFormat:i,locale:o}),". ").concat(s.props.endDate?"End date: "+Pe(s.props.endDate,{dateFormat:i,locale:o}):""):s.props.showTimeSelectOnly?"Selected time: ".concat(Pe(s.props.selected,{dateFormat:a,locale:o})):s.props.showYearPicker?"Selected year: ".concat(Pe(s.props.selected,{dateFormat:"yyyy",locale:o})):s.props.showMonthYearPicker?"Selected month: ".concat(Pe(s.props.selected,{dateFormat:"MMMM yyyy",locale:o})):s.props.showQuarterYearPicker?"Selected quarter: ".concat(Pe(s.props.selected,{dateFormat:"yyyy, QQQ",locale:o})):"Selected date: ".concat(Pe(s.props.selected,{dateFormat:i,locale:o})),ue.default.createElement("span",{role:"alert","aria-live":"polite",className:"react-datepicker__aria-live"},e)},s.renderDateInput=function(){var e,a,o,i=t.clsx(s.props.className,((e={})[Jt]=s.state.open,e)),l=s.props.customInput||ue.default.createElement("input",{type:"text"}),c=s.props.customInputRef||"ref",d=s.props,p=d.dateFormat,u=void 0===p?n.defaultProps.dateFormat:p,f=d.locale,h="string"==typeof s.props.value?s.props.value:"string"==typeof s.state.inputValue?s.state.inputValue:s.props.selectsRange?function(e,t,r){if(!e)return"";var n=Pe(e,r),a=t?Pe(t,r):"";return"".concat(n," - ").concat(a)}(s.props.startDate,s.props.endDate,{dateFormat:u,locale:f}):s.props.selectsMultiple?function(e,t){if(!(null==e?void 0:e.length))return"";var r=e[0]?Pe(e[0],t):"";if(1===e.length)return r;if(2===e.length&&e[1]){var n=Pe(e[1],t);return"".concat(r,", ").concat(n)}var a=e.length-1;return"".concat(r," (+").concat(a,")")}(null!==(o=s.props.selectedDates)&&void 0!==o?o:[],{dateFormat:u,locale:f}):Pe(s.props.selected,{dateFormat:u,locale:f});return r.cloneElement(l,((a={})[c]=function(e){s.input=e},a.value=h,a.onBlur=s.handleBlur,a.onChange=s.handleChange,a.onClick=s.onInputClick,a.onFocus=s.handleFocus,a.onKeyDown=s.onInputKeyDown,a.id=s.props.id,a.name=s.props.name,a.form=s.props.form,a.autoFocus=s.props.autoFocus,a.placeholder=s.props.placeholderText,a.disabled=s.props.disabled,a.autoComplete=s.props.autoComplete,a.className=t.clsx(l.props.className,i),a.title=s.props.title,a.readOnly=s.props.readOnly,a.required=s.props.required,a.tabIndex=s.props.tabIndex,a["aria-describedby"]=s.props.ariaDescribedBy,a["aria-invalid"]=s.props.ariaInvalid,a["aria-labelledby"]=s.props.ariaLabelledBy,a["aria-required"]=s.props.ariaRequired,a))},s.renderClearButton=function(){var e=s.props,r=e.isClearable,n=e.disabled,a=e.selected,o=e.startDate,i=e.endDate,l=e.clearButtonTitle,c=e.clearButtonClassName,d=void 0===c?"":c,p=e.ariaLabelClose,u=void 0===p?"Close":p,f=e.selectedDates;return r&&(null!=a||null!=o||null!=i||(null==f?void 0:f.length))?ue.default.createElement("button",{type:"button",className:t.clsx("react-datepicker__close-icon",d,{"react-datepicker__close-icon--disabled":n}),disabled:n,"aria-label":u,onClick:s.onClearClick,title:l,tabIndex:-1}):null},s.state=s.calcInitialState(),s.preventFocusTimeout=void 0,s}return me(n,e),Object.defineProperty(n,"defaultProps",{get:function(){return{allowSameDay:!1,dateFormat:"MM/dd/yyyy",dateFormatCalendar:"LLLL yyyy",disabled:!1,disabledKeyboardNavigation:!1,dropdownMode:"scroll",preventOpenOnFocus:!1,monthsShown:1,readOnly:!1,withPortal:!1,selectsDisabledDaysInRange:!1,shouldCloseOnSelect:!0,showTimeSelect:!1,showTimeInput:!1,showPreviousMonths:!1,showMonthYearPicker:!1,showFullMonthYearPicker:!1,showTwoColumnMonthYearPicker:!1,showFourColumnMonthYearPicker:!1,showYearPicker:!1,showQuarterYearPicker:!1,showWeekPicker:!1,strictParsing:!1,swapRange:!1,timeIntervals:30,timeCaption:"Time",previousMonthAriaLabel:"Previous Month",previousMonthButtonLabel:"Previous Month",nextMonthAriaLabel:"Next Month",nextMonthButtonLabel:"Next Month",previousYearAriaLabel:"Previous Year",previousYearButtonLabel:"Previous Year",nextYearAriaLabel:"Next Year",nextYearButtonLabel:"Next Year",timeInputLabel:"Time",enableTabLoop:!0,yearItemNumber:Se,focusSelectedMonth:!1,showPopperArrow:!0,excludeScrollbar:!0,customTimeInput:null,calendarStartDay:void 0,toggleCalendarOnIconClick:!1,usePointerEvent:!1}},enumerable:!1,configurable:!0}),n.prototype.componentDidMount=function(){window.addEventListener("scroll",this.onScroll,!0),document.addEventListener("visibilitychange",this.setHiddenStateOnVisibilityHidden)},n.prototype.componentDidUpdate=function(e,t){var r,n,a,o,s,i;e.inline&&(s=e.selected,i=this.props.selected,s&&i?_.getMonth(s)!==_.getMonth(i)||x.getYear(s)!==x.getYear(i):s!==i)&&this.setPreSelection(this.props.selected),void 0!==this.state.monthSelectedIn&&e.monthsShown!==this.props.monthsShown&&this.setState({monthSelectedIn:0}),e.highlightDates!==this.props.highlightDates&&this.setState({highlightDates:ft(this.props.highlightDates)}),t.focused||qe(e.selected,this.props.selected)||this.setState({inputValue:null}),t.open!==this.state.open&&(!1===t.open&&!0===this.state.open&&(null===(n=(r=this.props).onCalendarOpen)||void 0===n||n.call(r)),!0===t.open&&!1===this.state.open&&(null===(o=(a=this.props).onCalendarClose)||void 0===o||o.call(a)))},n.prototype.componentWillUnmount=function(){this.clearPreventFocusTimeout(),window.removeEventListener("scroll",this.onScroll,!0),document.removeEventListener("visibilitychange",this.setHiddenStateOnVisibilityHidden)},n.prototype.renderInputContainer=function(){var e=this.props,r=e.showIcon,n=e.icon,a=e.calendarIconClassname,o=e.calendarIconClassName,s=e.toggleCalendarOnIconClick,i=this.state.open;return a&&console.warn("calendarIconClassname props is deprecated. should use calendarIconClassName props."),ue.default.createElement("div",{className:"react-datepicker__input-container".concat(r?" react-datepicker__view-calendar-icon":"")},r&&ue.default.createElement(Vt,ve({icon:n,className:t.clsx(o,!o&&a,i&&"react-datepicker-ignore-onclickoutside")},s?{onClick:this.toggleCalendar}:null)),this.state.isRenderAriaLiveMessage&&this.renderAriaLiveRegion(),this.renderDateInput(),this.renderClearButton())},n.prototype.render=function(){var e=this.renderCalendar();if(this.props.inline)return e;if(this.props.withPortal){var t=this.state.open?ue.default.createElement($t,{enableTabLoop:this.props.enableTabLoop},ue.default.createElement("div",{className:"react-datepicker__portal",tabIndex:-1,onKeyDown:this.onPortalKeyDown},e)):null;return this.state.open&&this.props.portalId&&(t=ue.default.createElement(jt,ve({portalId:this.props.portalId},this.props),t)),ue.default.createElement("div",null,this.renderInputContainer(),t)}return ue.default.createElement(Gt,ve({},this.props,{className:this.props.popperClassName,hidePopper:!this.isCalendarOpen(),targetComponent:this.renderInputContainer(),popperComponent:e,popperOnKeyDown:this.onPopperKeyDown,showArrow:this.props.showPopperArrow}))},n}(r.Component),tr="input",rr="navigate";e.CalendarContainer=ye,e.default=er,e.getDefaultLocale=Be,e.registerLocale=function(e,t){var r=we();r.__localeData__||(r.__localeData__={}),r.__localeData__[e]=t},e.setDefaultLocale=function(e){we().__localeId__=e},Object.defineProperty(e,"__esModule",{value:!0})}));


/***/ }),

/***/ "./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "react");

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var assign = Object.assign;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      {
        checkKeyStringCoercion(maybeKey);
      }

      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */


function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

var didWarnAboutKeySpread = {};
function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    {
      if (hasOwnProperty.call(props, 'key')) {
        var componentName = getComponentNameFromType(type);
        var keys = Object.keys(props).filter(function (k) {
          return k !== 'key';
        });
        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';

        if (!didWarnAboutKeySpread[componentName + beforeExample]) {
          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';

          error('A props object containing a "key" prop is being spread into JSX:\n' + '  let props = %s;\n' + '  <%s {...props} />\n' + 'React keys must be passed directly to JSX without using spread:\n' + '  let props = %s;\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);

          didWarnAboutKeySpread[componentName + beforeExample] = true;
        }
      }
    }

    if (type === REACT_FRAGMENT_TYPE) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.

function jsxWithValidationStatic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, true);
  }
}
function jsxWithValidationDynamic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, false);
  }
}

var jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.
// for now we can ship identical prod functions

var jsxs =  jsxWithValidationStatic ;

exports.Fragment = REACT_FRAGMENT_TYPE;
exports.jsx = jsx;
exports.jsxs = jsxs;
  })();
}


/***/ }),

/***/ "./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js":
/*!***************************************************************************!*\
  !*** ./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ "./node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js");
}


/***/ }),

/***/ "./node_modules/.pnpm/set-cookie-parser@2.7.1/node_modules/set-cookie-parser/lib/set-cookie.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/set-cookie-parser@2.7.1/node_modules/set-cookie-parser/lib/set-cookie.js ***!
  \*****************************************************************************************************/
/***/ ((module) => {

"use strict";


var defaultParseOptions = {
  decodeValues: true,
  map: false,
  silent: false,
};

function isNonEmptyString(str) {
  return typeof str === "string" && !!str.trim();
}

function parseString(setCookieValue, options) {
  var parts = setCookieValue.split(";").filter(isNonEmptyString);

  var nameValuePairStr = parts.shift();
  var parsed = parseNameValuePair(nameValuePairStr);
  var name = parsed.name;
  var value = parsed.value;

  options = options
    ? Object.assign({}, defaultParseOptions, options)
    : defaultParseOptions;

  try {
    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value
  } catch (e) {
    console.error(
      "set-cookie-parser encountered an error while decoding a cookie with value '" +
        value +
        "'. Set options.decodeValues to false to disable this feature.",
      e
    );
  }

  var cookie = {
    name: name,
    value: value,
  };

  parts.forEach(function (part) {
    var sides = part.split("=");
    var key = sides.shift().trimLeft().toLowerCase();
    var value = sides.join("=");
    if (key === "expires") {
      cookie.expires = new Date(value);
    } else if (key === "max-age") {
      cookie.maxAge = parseInt(value, 10);
    } else if (key === "secure") {
      cookie.secure = true;
    } else if (key === "httponly") {
      cookie.httpOnly = true;
    } else if (key === "samesite") {
      cookie.sameSite = value;
    } else if (key === "partitioned") {
      cookie.partitioned = true;
    } else {
      cookie[key] = value;
    }
  });

  return cookie;
}

function parseNameValuePair(nameValuePairStr) {
  // Parses name-value-pair according to rfc6265bis draft

  var name = "";
  var value = "";
  var nameValueArr = nameValuePairStr.split("=");
  if (nameValueArr.length > 1) {
    name = nameValueArr.shift();
    value = nameValueArr.join("="); // everything after the first =, joined by a "=" if there was more than one part
  } else {
    value = nameValuePairStr;
  }

  return { name: name, value: value };
}

function parse(input, options) {
  options = options
    ? Object.assign({}, defaultParseOptions, options)
    : defaultParseOptions;

  if (!input) {
    if (!options.map) {
      return [];
    } else {
      return {};
    }
  }

  if (input.headers) {
    if (typeof input.headers.getSetCookie === "function") {
      // for fetch responses - they combine headers of the same type in the headers array,
      // but getSetCookie returns an uncombined array
      input = input.headers.getSetCookie();
    } else if (input.headers["set-cookie"]) {
      // fast-path for node.js (which automatically normalizes header names to lower-case
      input = input.headers["set-cookie"];
    } else {
      // slow-path for other environments - see #25
      var sch =
        input.headers[
          Object.keys(input.headers).find(function (key) {
            return key.toLowerCase() === "set-cookie";
          })
        ];
      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36
      if (!sch && input.headers.cookie && !options.silent) {
        console.warn(
          "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
        );
      }
      input = sch;
    }
  }
  if (!Array.isArray(input)) {
    input = [input];
  }

  if (!options.map) {
    return input.filter(isNonEmptyString).map(function (str) {
      return parseString(str, options);
    });
  } else {
    var cookies = {};
    return input.filter(isNonEmptyString).reduce(function (cookies, str) {
      var cookie = parseString(str, options);
      cookies[cookie.name] = cookie;
      return cookies;
    }, cookies);
  }
}

/*
  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas
  that are within a single set-cookie field-value, such as in the Expires portion.

  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2
  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128
  React Native's fetch does this for *every* header, including set-cookie.

  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25
  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation
*/
function splitCookiesString(cookiesString) {
  if (Array.isArray(cookiesString)) {
    return cookiesString;
  }
  if (typeof cookiesString !== "string") {
    return [];
  }

  var cookiesStrings = [];
  var pos = 0;
  var start;
  var ch;
  var lastComma;
  var nextStart;
  var cookiesSeparatorFound;

  function skipWhitespace() {
    while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
      pos += 1;
    }
    return pos < cookiesString.length;
  }

  function notSpecialChar() {
    ch = cookiesString.charAt(pos);

    return ch !== "=" && ch !== ";" && ch !== ",";
  }

  while (pos < cookiesString.length) {
    start = pos;
    cookiesSeparatorFound = false;

    while (skipWhitespace()) {
      ch = cookiesString.charAt(pos);
      if (ch === ",") {
        // ',' is a cookie separator if we have later first '=', not ';' or ','
        lastComma = pos;
        pos += 1;

        skipWhitespace();
        nextStart = pos;

        while (pos < cookiesString.length && notSpecialChar()) {
          pos += 1;
        }

        // currently special character
        if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
          // we found cookies separator
          cookiesSeparatorFound = true;
          // pos is inside the next cookie, so back up and return it.
          pos = nextStart;
          cookiesStrings.push(cookiesString.substring(start, lastComma));
          start = pos;
        } else {
          // in param ',' or param separator ';',
          // we continue from that comma
          pos = lastComma + 1;
        }
      } else {
        pos += 1;
      }
    }

    if (!cookiesSeparatorFound || pos >= cookiesString.length) {
      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
    }
  }

  return cookiesStrings;
}

module.exports = parse;
module.exports.parse = parse;
module.exports.parseString = parseString;
module.exports.splitCookiesString = splitCookiesString;


/***/ }),

/***/ "./node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   focusable: () => (/* binding */ focusable),
/* harmony export */   getTabIndex: () => (/* binding */ getTabIndex),
/* harmony export */   isFocusable: () => (/* binding */ isFocusable),
/* harmony export */   isTabbable: () => (/* binding */ isTabbable),
/* harmony export */   tabbable: () => (/* binding */ tabbable)
/* harmony export */ });
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
// NOTE: separate `:not()` selectors has broader browser support than the newer
//  `:not([inert], [inert] *)` (Feb 2023)
// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes
//  the entire query to fail, resulting in no nodes found, which will break a lot
//  of things... so we have to rely on JS to identify nodes inside an inert container
var candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable="false"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];
var candidateSelector = /* #__PURE__ */candidateSelectors.join(',');
var NoElement = typeof Element === 'undefined';
var matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function (element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};

/**
 * Determines if a node is inert or in an inert ancestor.
 * @param {Element} [node]
 * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to
 *  see if any of them are inert. If false, only `node` itself is considered.
 * @returns {boolean} True if inert itself or by way of being in an inert ancestor.
 *  False if `node` is falsy.
 */
var isInert = function isInert(node, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`
  //  JS API property; we have to check the attribute, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's an active element
  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');
  var inert = inertAtt === '' || inertAtt === 'true';

  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`
  //  if it weren't for `matches()` not being a function on shadow roots; the following
  //  code works for any kind of node
  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`
  //  so it likely would not support `:is([inert] *)` either...
  var result = inert || lookUp && node && isInert(node.parentNode); // recursive

  return result;
};

/**
 * Determines if a node's content is editable.
 * @param {Element} [node]
 * @returns True if it's content-editable; false if it's not or `node` is falsy.
 */
var isContentEditable = function isContentEditable(node) {
  var _node$getAttribute2;
  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have
  //  to use the attribute directly to check for this, which can either be empty or 'true';
  //  if it's `null` (not specified) or 'false', it's a non-editable element
  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');
  return attValue === '' || attValue === 'true';
};

/**
 * @param {Element} el container to check in
 * @param {boolean} includeContainer add container to check
 * @param {(node: Element) => boolean} filter filter candidates
 * @returns {Element[]}
 */
var getCandidates = function getCandidates(el, includeContainer, filter) {
  // even if `includeContainer=false`, we still have to check it for inertness because
  //  if it's inert, all its children are inert
  if (isInert(el)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }
  candidates = candidates.filter(filter);
  return candidates;
};

/**
 * @callback GetShadowRoot
 * @param {Element} element to check for shadow root
 * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.
 */

/**
 * @callback ShadowRootFilter
 * @param {Element} shadowHostNode the element which contains shadow content
 * @returns {boolean} true if a shadow root could potentially contain valid candidates.
 */

/**
 * @typedef {Object} CandidateScope
 * @property {Element} scopeParent contains inner candidates
 * @property {Element[]} candidates list of candidates found in the scope parent
 */

/**
 * @typedef {Object} IterativeOptions
 * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;
 *  if a function, implies shadow support is enabled and either returns the shadow root of an element
 *  or a boolean stating if it has an undisclosed shadow root
 * @property {(node: Element) => boolean} filter filter candidates
 * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list
 * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;
 */

/**
 * @param {Element[]} elements list of element containers to match candidates from
 * @param {boolean} includeContainer add container list to check
 * @param {IterativeOptions} options
 * @returns {Array.<Element|CandidateScope>}
 */
var getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      // no need to look up since we're drilling down
      // anything inside this container will also be inert
      continue;
    }
    if (element.tagName === 'SLOT') {
      // add shadow dom slot scope (slot itself cannot be focusable)
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively(content, true, options);
      if (options.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      // check candidate element
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }

      // iterate over shadow content if possible
      var shadowRoot = element.shadowRoot ||
      // check for an undisclosed shadow
      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);

      // no inert look up because we're already drilling down and checking for inertness
      //  on the way down, so all containers to this root node should have already been
      //  vetted as non-inert
      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed
        //  shadow exists, so look at light dom children as fallback BUT create a scope for any
        //  child candidates found because they're likely slotted elements (elements that are
        //  children of the web component element (which has the shadow), in the light dom, but
        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,
        //  _after_ we return from this recursive call
        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);
        if (options.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        // there's not shadow so just dig into the element's (light dom) children
        //  __without__ giving the element special scope treatment
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};

/**
 * @private
 * Determines if the node has an explicitly specified `tabindex` attribute.
 * @param {HTMLElement} node
 * @returns {boolean} True if so; false if not.
 */
var hasTabIndex = function hasTabIndex(node) {
  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));
};

/**
 * Determine the tab index of a given node.
 * @param {HTMLElement} node
 * @returns {number} Tab order (negative, 0, or positive number).
 * @throws {Error} If `node` is falsy.
 */
var getTabIndex = function getTabIndex(node) {
  if (!node) {
    throw new Error('No node provided');
  }
  if (node.tabIndex < 0) {
    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
    // yet they are still part of the regular tab order; in FF, they get a default
    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab
    // order, consider their tab index to be 0.
    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;
    // so if they don't have a tabindex attribute specifically set, assume it's 0.
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {
      return 0;
    }
  }
  return node.tabIndex;
};

/**
 * Determine the tab index of a given node __for sort order purposes__.
 * @param {HTMLElement} node
 * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,
 *  has tabIndex -1, but needs to be sorted by document order in order for its content to be
 *  inserted into the correct sort position.
 * @returns {number} Tab order (negative, 0, or positive number).
 */
var getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {
  var tabIndex = getTabIndex(node);
  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
};
var isInput = function isInput(node) {
  return node.tagName === 'INPUT';
};
var isHiddenInput = function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
};
var isDetailsWithSummary = function isDetailsWithSummary(node) {
  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {
    return child.tagName === 'SUMMARY';
  });
  return r;
};
var getCheckedRadio = function getCheckedRadio(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};
var isTabbableRadio = function isTabbableRadio(node) {
  if (!node.name) {
    return true;
  }
  var radioScope = node.form || getRootNode(node);
  var queryRadios = function queryRadios(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      // eslint-disable-next-line no-console
      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};
var isRadio = function isRadio(node) {
  return isInput(node) && node.type === 'radio';
};
var isNonTabbableRadio = function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
};

// determines if a node is ultimately attached to the window's document
var isNodeAttached = function isNodeAttached(node) {
  var _nodeRoot;
  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise
  //  (but NOT _the_ document; see second 'If' comment below for more).
  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow
  //  is attached, and the one we need to check if it's in the document or not (because the
  //  shadow, and all nodes it contains, is never considered in the document since shadows
  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,
  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's
  //  visibility, including all the nodes it contains). The host could be any normal node,
  //  or a custom element (i.e. web component). Either way, that's the one that is considered
  //  part of the document, not the shadow root, nor any of its children (i.e. the node being
  //  tested).
  // To further complicate things, we have to look all the way up until we find a shadow HOST
  //  that is attached (or find none) because the node might be in nested shadows...
  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the
  //  document (per the docs) and while it's a Document-type object, that document does not
  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer
  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,
  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when
  //  node is actually detached.
  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible
  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed
  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then
  //  `ownerDocument` will be `null`, hence the optional chaining on it.
  var nodeRoot = node && getRootNode(node);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;

  // in some cases, a detached node will return itself as the root instead of a document or
  //  shadow root object, in which case, we shouldn't try to look further up the host chain
  var attached = false;
  if (nodeRoot && nodeRoot !== node) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,
      //  which means we need to get the host's host and check if that parent host is contained
      //  in (i.e. attached to) the document
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(),
    width = _node$getBoundingClie.width,
    height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden(node, _ref) {
  var displayCheck = _ref.displayCheck,
    getShadowRoot = _ref.getShadowRoot;
  // NOTE: visibility will be `undefined` if node is detached from the document
  //  (see notes about this further down), which means we will consider it visible
  //  (this is legacy behavior from a very long way back)
  // NOTE: we check this regardless of `displayCheck="none"` because this is a
  //  _visibility_ check, not a _display_ check
  if (getComputedStyle(node).visibility === 'hidden') {
    return true;
  }
  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;
  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {
    return true;
  }
  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {
    if (typeof getShadowRoot === 'function') {
      // figure out if we should consider the node to be in an undisclosed shadow and use the
      //  'non-zero-area' fallback
      var originalNode = node;
      while (node) {
        var parentElement = node.parentElement;
        var rootNode = getRootNode(node);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow
        ) {
          // node has an undisclosed shadow which means we can only treat it as a black box, so we
          //  fall back to a non-zero-area test
          return isZeroArea(node);
        } else if (node.assignedSlot) {
          // iterate up slot
          node = node.assignedSlot;
        } else if (!parentElement && rootNode !== node.ownerDocument) {
          // cross shadow boundary
          node = rootNode.host;
        } else {
          // iterate up normal dom
          node = parentElement;
        }
      }
      node = originalNode;
    }
    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support
    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or
    //  it might be a falsy value, which means shadow DOM support is disabled

    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)
    //  now we can just test to see if it would normally be visible or not, provided it's
    //  attached to the main document.
    // NOTE: We must consider case where node is inside a shadow DOM and given directly to
    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.

    if (isNodeAttached(node)) {
      // this works wherever the node is: if there's at least one client rect, it's
      //  somehow displayed; it also covers the CSS 'display: contents' case where the
      //  node itself is hidden in place of its contents; and there's no need to search
      //  up the hierarchy either
      return !node.getClientRects().length;
    }

    // Else, the node isn't attached to the document, which means the `getClientRects()`
    //  API will __always__ return zero rects (this can happen, for example, if React
    //  is used to render nodes onto a detached tree, as confirmed in this thread:
    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)
    //
    // It also means that even window.getComputedStyle(node).display will return `undefined`
    //  because styles are only computed for nodes that are in the document.
    //
    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable
    //  somehow. Though it was never stated officially, anyone who has ever used tabbable
    //  APIs on nodes in detached containers has actually implicitly used tabbable in what
    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck="none"` mode -- essentially
    //  considering __everything__ to be visible because of the innability to determine styles.
    //
    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached
    //  nodes as visible with the 'none' fallback.__
    if (displayCheck !== 'legacy-full') {
      return true; // hidden
    }
    // else, fallback to 'none' mode and consider the node visible
  } else if (displayCheck === 'non-zero-area') {
    // NOTE: Even though this tests that the node's client rect is non-zero to determine
    //  whether it's displayed, and that a detached node will __always__ have a zero-area
    //  client rect, we don't special-case for whether the node is attached or not. In
    //  this mode, we do want to consider nodes that have a zero area to be hidden at all
    //  times, and that includes attached or not.
    return isZeroArea(node);
  }

  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume
  //  it's visible
  return false;
};

// form fields (nested) inside a disabled fieldset are not focusable/tabbable
//  unless they are in the _first_ <legend> element of the top-most disabled
//  fieldset
var isDisabledFromFieldset = function isDisabledFromFieldset(node) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {
    var parentNode = node.parentElement;
    // check if `node` is contained in a disabled <fieldset>
    while (parentNode) {
      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {
        // look for the first <legend> among the children of the disabled <fieldset>
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);
          // when the first <legend> (in document order) is found
          if (child.tagName === 'LEGEND') {
            // if its parent <fieldset> is not nested in another disabled <fieldset>,
            // return whether `node` is a descendant of its first <legend>
            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);
          }
        }
        // the disabled <fieldset> containing `node` has no <legend>
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }

  // else, node's tabbable/focusable state should not be affected by a fieldset's
  //  enabled/disabled state
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {
  if (node.disabled ||
  // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||
  // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {
  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  // If a custom element has an explicit negative tabindex,
  // browsers will not allow tab targeting said element's children.
  return false;
};

/**
 * @param {Array.<Element|CandidateScope>} candidates
 * @returns Element[]
 */
var sortByOrder = function sortByOrder(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function (item, i) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        item: item,
        isScope: isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options),
      flatten: false,
      getShadowRoot: options.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  }
  return sortByOrder(candidates);
};
var focusable = function focusable(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorFocusable.bind(null, options),
      flatten: true,
      getShadowRoot: options.getShadowRoot
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));
  }
  return candidates;
};
var isTabbable = function isTabbable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, candidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorTabbable(options, node);
};
var focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');
var isFocusable = function isFocusable(node, options) {
  options = options || {};
  if (!node) {
    throw new Error('No node provided');
  }
  if (matches.call(node, focusableCandidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorFocusable(options, node);
};


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = window["React"];

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = window["ReactDOM"];

/***/ }),

/***/ "@wordpress/api-fetch":
/*!**********************************!*\
  !*** external ["wp","apiFetch"] ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["apiFetch"];

/***/ }),

/***/ "@wordpress/dom-ready":
/*!**********************************!*\
  !*** external ["wp","domReady"] ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["domReady"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["element"];

/***/ }),

/***/ "@wordpress/i18n":
/*!******************************!*\
  !*** external ["wp","i18n"] ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["i18n"];

/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+core@1.6.9/node_modules/@floating-ui/core/dist/floating-ui.core.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+core@1.6.9/node_modules/@floating-ui/core/dist/floating-ui.core.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* binding */ arrow),
/* harmony export */   autoPlacement: () => (/* binding */ autoPlacement),
/* harmony export */   computePosition: () => (/* binding */ computePosition),
/* harmony export */   detectOverflow: () => (/* binding */ detectOverflow),
/* harmony export */   flip: () => (/* binding */ flip),
/* harmony export */   hide: () => (/* binding */ hide),
/* harmony export */   inline: () => (/* binding */ inline),
/* harmony export */   limitShift: () => (/* binding */ limitShift),
/* harmony export */   offset: () => (/* binding */ offset),
/* harmony export */   rectToClientRect: () => (/* reexport safe */ _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect),
/* harmony export */   shift: () => (/* binding */ shift),
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs");



function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);
  const alignmentAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);
  const alignLength = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(alignmentAxis);
  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
  const isVertical = sideAxis === 'y';
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case 'top':
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case 'bottom':
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case 'right':
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case 'left':
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement)) {
    case 'start':
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case 'end':
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a given reference element.
 *
 * This export does not have any `platform` interface logic. You will need to
 * write one for the platform you are using Floating UI with.
 */
const computePosition = async (reference, floating, config) => {
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform
  } = config;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));
  let rects = await platform.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === 'object') {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};

/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = 'clippingAncestors',
    rootBoundary = 'viewport',
    elementContext = 'floating',
    altBoundary = false,
    padding = 0
  } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
  const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
  const altContext = elementContext === 'floating' ? 'reference' : 'floating';
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(await platform.getClippingRect({
    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === 'floating' ? {
    x,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));
  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}

/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = options => ({
  name: 'arrow',
  options,
  async fn(state) {
    const {
      x,
      y,
      placement,
      rects,
      platform,
      elements,
      middlewareData
    } = state;
    // Since `element` is required, we don't Partial<> the type.
    const {
      element,
      padding = 0
    } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
    const coords = {
      x,
      y
    };
    const axis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentAxis)(placement);
    const length = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAxisLength)(axis);
    const arrowDimensions = await platform.getDimensions(element);
    const isYAxis = axis === 'y';
    const minProp = isYAxis ? 'top' : 'left';
    const maxProp = isYAxis ? 'bottom' : 'right';
    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;

    // DOM platform can return `window` as the `offsetParent`.
    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;

    // If the padding is large enough that it causes the arrow to no longer be
    // centered, modify the padding so that it is centered.
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(paddingObject[maxProp], largestPossiblePadding);

    // Make sure the arrow doesn't overflow the floating element if the center
    // point is outside the floating element's bounds.
    const min$1 = minPadding;
    const max = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min$1, center, max);

    // If the reference is small enough that the arrow's padding causes it to
    // to point to nothing for an aligned placement, adjust the offset of the
    // floating element itself. To ensure `shift()` continues to take action,
    // a single reset is performed when this is true.
    const shouldAddOffset = !middlewareData.arrow && (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset,
        centerOffset: center - offset - alignmentOffset,
        ...(shouldAddOffset && {
          alignmentOffset
        })
      },
      reset: shouldAddOffset
    };
  }
});

function getPlacementList(alignment, autoAlignment, allowedPlacements) {
  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment), ...allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) !== alignment)] : allowedPlacements.filter(placement => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === placement);
  return allowedPlacementsSortedByAlignment.filter(placement => {
    if (alignment) {
      return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement) === alignment || (autoAlignment ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAlignmentPlacement)(placement) !== placement : false);
    }
    return true;
  });
}
/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */
const autoPlacement = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'autoPlacement',
    options,
    async fn(state) {
      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
      const {
        rects,
        middlewareData,
        placement,
        platform,
        elements
      } = state;
      const {
        crossAxis = false,
        alignment,
        allowedPlacements = _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements,
        autoAlignment = true,
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const placements$1 = alignment !== undefined || allowedPlacements === _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;
      const currentPlacement = placements$1[currentIndex];
      if (currentPlacement == null) {
        return {};
      }
      const alignmentSides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));

      // Make `computeCoords` start from the right place.
      if (placement !== currentPlacement) {
        return {
          reset: {
            placement: placements$1[0]
          }
        };
      }
      const currentOverflows = [overflow[(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];
      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {
        placement: currentPlacement,
        overflows: currentOverflows
      }];
      const nextPlacement = placements$1[currentIndex + 1];

      // There are more placements to check.
      if (nextPlacement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: nextPlacement
          }
        };
      }
      const placementsSortedByMostSpace = allOverflows.map(d => {
        const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d.placement);
        return [d.placement, alignment && crossAxis ?
        // Check along the mainAxis and main crossAxis side.
        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :
        // Check only the mainAxis.
        d.overflows[0], d.overflows];
      }).sort((a, b) => a[1] - b[1]);
      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,
      // Aligned placements should not check their opposite crossAxis
      // side.
      (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(d[0]) ? 2 : 3).every(v => v <= 0));
      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
      if (resetPlacement !== placement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: resetPlacement
          }
        };
      }
      return {};
    }
  };
};

/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */
const flip = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'flip',
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = 'bestFit',
        fallbackAxisSideDirection = 'none',
        flipAlignment = true,
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);

      // If a reset by the arrow was caused due to an alignment offset being
      // added, we should skip any logic now since `flip()` has already done its
      // work.
      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
      const initialSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(initialPlacement);
      const isBasePlacement = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(initialPlacement) === initialPlacement;
      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositePlacement)(initialPlacement)] : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getExpandedPlacements)(initialPlacement));
      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';
      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
        fallbackPlacements.push(...(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxisPlacements)(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignmentSides)(placement, rects, rtl);
        overflows.push(overflow[sides[0]], overflow[sides[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];

      // One or more sides is overflowing.
      if (!overflows.every(side => side <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          // Try next placement and re-run the lifecycle.
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }

        // First, find the candidates that fit on the mainAxis side of overflow,
        // then find the placement that fits the best on the main crossAxis side.
        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;

        // Otherwise fallback.
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case 'bestFit':
              {
                var _overflowsData$filter2;
                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {
                  if (hasFallbackAxisSideDirection) {
                    const currentSideAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(d.placement);
                    return currentSideAxis === initialSideAxis ||
                    // Create a bias to the `y` side axis due to horizontal
                    // reading directions favoring greater width.
                    currentSideAxis === 'y';
                  }
                  return true;
                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
                if (placement) {
                  resetPlacement = placement;
                }
                break;
              }
            case 'initialPlacement':
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};

function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return _floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.sides.some(side => overflow[side] >= 0);
}
/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */
const hide = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'hide',
    options,
    async fn(state) {
      const {
        rects
      } = state;
      const {
        strategy = 'referenceHidden',
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      switch (strategy) {
        case 'referenceHidden':
          {
            const overflow = await detectOverflow(state, {
              ...detectOverflowOptions,
              elementContext: 'reference'
            });
            const offsets = getSideOffsets(overflow, rects.reference);
            return {
              data: {
                referenceHiddenOffsets: offsets,
                referenceHidden: isAnySideFullyClipped(offsets)
              }
            };
          }
        case 'escaped':
          {
            const overflow = await detectOverflow(state, {
              ...detectOverflowOptions,
              altBoundary: true
            });
            const offsets = getSideOffsets(overflow, rects.floating);
            return {
              data: {
                escapedOffsets: offsets,
                escaped: isAnySideFullyClipped(offsets)
              }
            };
          }
        default:
          {
            return {};
          }
      }
    }
  };
};

function getBoundingRect(rects) {
  const minX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.left));
  const minY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...rects.map(rect => rect.top));
  const maxX = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.right));
  const maxY = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...rects.map(rect => rect.bottom));
  return {
    x: minX,
    y: minY,
    width: maxX - minX,
    height: maxY - minY
  };
}
function getRectsByLine(rects) {
  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);
  const groups = [];
  let prevRect = null;
  for (let i = 0; i < sortedRects.length; i++) {
    const rect = sortedRects[i];
    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {
      groups.push([rect]);
    } else {
      groups[groups.length - 1].push(rect);
    }
    prevRect = rect;
  }
  return groups.map(rect => (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(rect)));
}
/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */
const inline = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'inline',
    options,
    async fn(state) {
      const {
        placement,
        elements,
        rects,
        platform,
        strategy
      } = state;
      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a
      // ClientRect's bounds, despite the event listener being triggered. A
      // padding of 2 seems to handle this issue.
      const {
        padding = 2,
        x,
        y
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);
      const clientRects = getRectsByLine(nativeClientRects);
      const fallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.rectToClientRect)(getBoundingRect(nativeClientRects));
      const paddingObject = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getPaddingObject)(padding);
      function getBoundingClientRect() {
        // There are two rects and they are disjoined.
        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {
          // Find the first rect in which the point is fully inside.
          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;
        }

        // There are 2 or more connected rects.
        if (clientRects.length >= 2) {
          if ((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y') {
            const firstRect = clientRects[0];
            const lastRect = clientRects[clientRects.length - 1];
            const isTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'top';
            const top = firstRect.top;
            const bottom = lastRect.bottom;
            const left = isTop ? firstRect.left : lastRect.left;
            const right = isTop ? firstRect.right : lastRect.right;
            const width = right - left;
            const height = bottom - top;
            return {
              top,
              bottom,
              left,
              right,
              width,
              height,
              x: left,
              y: top
            };
          }
          const isLeftSide = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement) === 'left';
          const maxRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(...clientRects.map(rect => rect.right));
          const minLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(...clientRects.map(rect => rect.left));
          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);
          const top = measureRects[0].top;
          const bottom = measureRects[measureRects.length - 1].bottom;
          const left = minLeft;
          const right = maxRight;
          const width = right - left;
          const height = bottom - top;
          return {
            top,
            bottom,
            left,
            right,
            width,
            height,
            x: left,
            y: top
          };
        }
        return fallback;
      }
      const resetRects = await platform.getElementRects({
        reference: {
          getBoundingClientRect
        },
        floating: elements.floating,
        strategy
      });
      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {
        return {
          reset: {
            rects: resetRects
          }
        };
      }
      return {};
    }
  };
};

// For type backwards-compatibility, the `OffsetOptions` type was also
// Derivable.

async function convertValueToCoords(state, options) {
  const {
    placement,
    platform,
    elements
  } = state;
  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
  const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
  const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);
  const isVertical = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';
  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);

  // eslint-disable-next-line prefer-const
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === 'number' ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: rawValue.mainAxis || 0,
    crossAxis: rawValue.crossAxis || 0,
    alignmentAxis: rawValue.alignmentAxis
  };
  if (alignment && typeof alignmentAxis === 'number') {
    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}

/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */
const offset = function (options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: 'offset',
    options,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x,
        y,
        placement,
        middlewareData
      } = state;
      const diffCoords = await convertValueToCoords(state, options);

      // If the placement is the same and the arrow caused an alignment offset
      // then we don't need to change the positioning coordinates.
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};

/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */
const shift = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'shift',
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: _ref => {
            let {
              x,
              y
            } = _ref;
            return {
              x,
              y
            };
          }
        },
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));
      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === 'y' ? 'top' : 'left';
        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';
        const min = mainAxisCoord + overflow[minSide];
        const max = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, mainAxisCoord, max);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === 'y' ? 'top' : 'left';
        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';
        const min = crossAxisCoord + overflow[minSide];
        const max = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(min, crossAxisCoord, max);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y,
          enabled: {
            [mainAxis]: checkMainAxis,
            [crossAxis]: checkCrossAxis
          }
        }
      };
    }
  };
};
/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */
const limitShift = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const coords = {
        x,
        y
      };
      const crossAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement);
      const mainAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getOppositeAxis)(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(offset, state);
      const computedOffset = typeof rawOffset === 'number' ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === 'y' ? 'height' : 'width';
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === 'y' ? 'width' : 'height';
        const isOriginSide = ['top', 'left'].includes((0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};

/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */
const size = function (options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: 'size',
    options,
    async fn(state) {
      var _state$middlewareData, _state$middlewareData2;
      const {
        placement,
        rects,
        platform,
        elements
      } = state;
      const {
        apply = () => {},
        ...detectOverflowOptions
      } = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.evaluate)(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSide)(placement);
      const alignment = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getAlignment)(placement);
      const isYAxis = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.getSideAxis)(placement) === 'y';
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === 'top' || side === 'bottom') {
        heightSide = side;
        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';
      } else {
        widthSide = side;
        heightSide = alignment === 'end' ? 'top' : 'bottom';
      }
      const maximumClippingHeight = height - overflow.top - overflow.bottom;
      const maximumClippingWidth = width - overflow.left - overflow.right;
      const overflowAvailableHeight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(height - overflow[heightSide], maximumClippingHeight);
      const overflowAvailableWidth = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.min)(width - overflow[widthSide], maximumClippingWidth);
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {
        availableWidth = maximumClippingWidth;
      }
      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {
        availableHeight = maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, 0);
        const xMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.right, 0);
        const yMin = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, 0);
        const yMax = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_0__.max)(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};




/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+dom@1.6.13/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+dom@1.6.13/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* binding */ arrow),
/* harmony export */   autoPlacement: () => (/* binding */ autoPlacement),
/* harmony export */   autoUpdate: () => (/* binding */ autoUpdate),
/* harmony export */   computePosition: () => (/* binding */ computePosition),
/* harmony export */   detectOverflow: () => (/* binding */ detectOverflow),
/* harmony export */   flip: () => (/* binding */ flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors),
/* harmony export */   hide: () => (/* binding */ hide),
/* harmony export */   inline: () => (/* binding */ inline),
/* harmony export */   limitShift: () => (/* binding */ limitShift),
/* harmony export */   offset: () => (/* binding */ offset),
/* harmony export */   platform: () => (/* binding */ platform),
/* harmony export */   shift: () => (/* binding */ shift),
/* harmony export */   size: () => (/* binding */ size)
/* harmony export */ });
/* harmony import */ var _floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/utils */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs");
/* harmony import */ var _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/core */ "./node_modules/.pnpm/@floating-ui+core@1.6.9/node_modules/@floating-ui/core/dist/floating-ui.core.mjs");
/* harmony import */ var _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils/dom */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");





function getCssDimensions(element) {
  const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element);
  // In testing environments, the `width` and `height` properties are empty
  // strings for SVG elements, returning NaN. Fallback to `0` in this case.
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(width) !== offsetWidth || (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}

function unwrapElement(element) {
  return !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.contextElement : element;
}

function getScale(element) {
  const domElement = unwrapElement(element);
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(domElement)) {
    return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.width) : rect.width) / width;
  let y = ($ ? (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.round)(rect.height) : rect.height) / height;

  // 0, NaN, or Infinity should always fallback to 1.

  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}

const noOffsets = /*#__PURE__*/(0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
function getVisualOffsets(element) {
  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element)) {
    return false;
  }
  return isFixed;
}

function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);
  if (includeScale) {
    if (offsetParent) {
      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(domElement);
    const offsetWin = offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(offsetParent) ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getFrameElement)(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentWin = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(currentIFrame);
      currentIFrame = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getFrameElement)(currentWin);
    }
  }
  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)({
    width,
    height,
    x,
    y
  });
}

// If <html> has a CSS width greater than the viewport, then this will be
// incorrect for RTL.
function getWindowScrollBarX(element, rect) {
  const leftScroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element).scrollLeft;
  if (!rect) {
    return getBoundingClientRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element)).left + leftScroll;
  }
  return rect.left + leftScroll;
}

function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {
  if (ignoreScrollbarX === void 0) {
    ignoreScrollbarX = false;
  }
  const htmlRect = documentElement.getBoundingClientRect();
  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :
  // RTL <body> scrollbar.
  getWindowScrollBarX(documentElement, htmlRect));
  const y = htmlRect.top + scroll.scrollTop;
  return {
    x,
    y
  };
}

function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === 'fixed';
  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);
  const topLayer = elements ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);
  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {
      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);
    }
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
  };
}

function getClientRects(element) {
  return Array.from(element.getClientRects());
}

// Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable.
function getDocumentRect(element) {
  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);
  const scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(element);
  const body = element.ownerDocument.body;
  const width = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(body).direction === 'rtl') {
    x += (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

function getViewportRect(element, strategy) {
  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);
  const html = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isWebKit)();
    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}

// Returns the inner client rect, subtracting scrollbars if present.
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) ? getScale(element) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === 'viewport') {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === 'document') {
    rect = getDocumentRect((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element));
  } else if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y,
      width: clippingAncestor.width,
      height: clippingAncestor.height
    };
  }
  return (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.rectToClientRect)(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);
  if (parentNode === stopNode || !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(parentNode) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(parentNode)) {
    return false;
  }
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);
}

// A "clipping ancestor" is an `overflow` element with the characteristic of
// clipping (or hiding) child elements. This returns all clipping ancestors
// of the given element up the tree.
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(element, [], false).filter(el => (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(el) && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(el) !== 'body');
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed';
  let currentNode = elementIsFixed ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element) : element;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  while ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(currentNode) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(currentNode)) {
    const computedStyle = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(currentNode);
    const currentNodeIsContaining = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      // Drop non-containing blocks.
      result = result.filter(ancestor => ancestor !== currentNode);
    } else {
      // Record last containing block for next iteration.
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(currentNode);
  }
  cache.set(element, result);
  return result;
}

// Gets the maximum area that the element is visible in due to any number of
// clipping ancestors.
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === 'clippingAncestors' ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.top, accRect.top);
    accRect.right = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.right, accRect.right);
    accRect.bottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(rect.bottom, accRect.bottom);
    accRect.left = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}

function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}

function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(offsetParent);
  const documentElement = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(offsetParent);
  const isFixed = strategy === 'fixed';
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeName)(offsetParent) !== 'body' || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isOverflowElement)(documentElement)) {
      scroll = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getNodeScroll)(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use
      // Firefox with layout.scrollbar.side = 3 in about:config to test this.
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.createCoords)(0);
  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
  return {
    x,
    y,
    width: rect.width,
    height: rect.height
  };
}

function isStaticPositioned(element) {
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'static';
}

function getTrueOffsetParent(element, polyfill) {
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).position === 'fixed') {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  let rawOffsetParent = element.offsetParent;

  // Firefox returns the <html> element as the offsetParent if it's non-static,
  // while Chrome and Safari return the <body> element. The <body> element must
  // be used to perform the correct calculations even if the <html> element is
  // non-static.
  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element) === rawOffsetParent) {
    rawOffsetParent = rawOffsetParent.ownerDocument.body;
  }
  return rawOffsetParent;
}

// Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.
function getOffsetParent(element, polyfill) {
  const win = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getWindow)(element);
  if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTopLayer)(element)) {
    return win;
  }
  if (!(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
    let svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(element);
    while (svgOffsetParent && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(svgOffsetParent)) {
      if ((0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement)(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getParentNode)(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isTableElement)(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isLastTraversableNode)(offsetParent) && isStaticPositioned(offsetParent) && !(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isContainingBlock)(offsetParent)) {
    return win;
  }
  return offsetParent || (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getContainingBlock)(element) || win;
}

const getElementRects = async function (data) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data.floating);
  return {
    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};

function isRTL(element) {
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(element).direction === 'rtl';
}

const platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isElement,
  isRTL
};

function rectsAreEqual(a, b) {
  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;
}

// https://samthor.au/2021/observing-dom/
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDocumentElement)(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const elementRectForRootMargin = element.getBoundingClientRect();
    const {
      left,
      top,
      width,
      height
    } = elementRectForRootMargin;
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(top);
    const insetRight = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientWidth - (left + width));
    const insetBottom = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(root.clientHeight - (top + height));
    const insetLeft = (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.floor)(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.max)(0, (0,_floating_ui_utils__WEBPACK_IMPORTED_MODULE_1__.min)(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          // If the reference is clipped, the ratio is 0. Throttle the refresh
          // to prevent an infinite loop of updates.
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1000);
        } else {
          refresh(false, ratio);
        }
      }
      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {
        // It's possible that even though the ratio is reported as 1, the
        // element is not actually fully within the IntersectionObserver's root
        // area anymore. This can happen under performance constraints. This may
        // be a bug in the browser's IntersectionObserver implementation. To
        // work around this, we compare the element's bounding rect now with
        // what it was at the time we created the IntersectionObserver. If they
        // are not equal then the element moved, so we refresh.
        refresh();
      }
      isFirstUpdate = false;
    }

    // Older browsers don't support a `document` as the root and will throw an
    // error.
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}

/**
 * Automatically updates the position of the floating element when necessary.
 * Should only be called when the floating element is mounted on the DOM or
 * visible on the screen.
 * @returns cleanup function that should be invoked when the floating element is
 * removed from the DOM or hidden from the screen.
 * @see https://floating-ui.com/docs/autoUpdate
 */
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === 'function',
    layoutShift = typeof IntersectionObserver === 'function',
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(referenceEl) : []), ...(0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getOverflowAncestors)(floating)] : [];
  ancestors.forEach(ancestor => {
    ancestorScroll && ancestor.addEventListener('scroll', update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener('resize', update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver(_ref => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        // Prevent update loops when using the `size` middleware.
        // https://github.com/floating-ui/floating-ui/issues/1740
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach(ancestor => {
      ancestorScroll && ancestor.removeEventListener('scroll', update);
      ancestorResize && ancestor.removeEventListener('resize', update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}

/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */
const detectOverflow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.detectOverflow;

/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */
const offset = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.offset;

/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */
const autoPlacement = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.autoPlacement;

/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */
const shift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.shift;

/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */
const flip = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.flip;

/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */
const size = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.size;

/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */
const hide = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.hide;

/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.arrow;

/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */
const inline = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.inline;

/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */
const limitShift = _floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.limitShift;

/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a given reference element.
 */
const computePosition = (reference, floating, options) => {
  // This caches the expensive `getClippingElementAncestors` function so that
  // multiple lifecycle resets re-use the same result. It only lives for a
  // single call. If other functions become expensive, we can add them as well.
  const cache = new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return (0,_floating_ui_core__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};




/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+react-dom@2.1.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs":
/*!************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+react-dom@2.1.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* binding */ arrow),
/* harmony export */   autoPlacement: () => (/* binding */ autoPlacement),
/* harmony export */   autoUpdate: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoUpdate),
/* harmony export */   computePosition: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.detectOverflow),
/* harmony export */   flip: () => (/* binding */ flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors),
/* harmony export */   hide: () => (/* binding */ hide),
/* harmony export */   inline: () => (/* binding */ inline),
/* harmony export */   limitShift: () => (/* binding */ limitShift),
/* harmony export */   offset: () => (/* binding */ offset),
/* harmony export */   platform: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.platform),
/* harmony export */   shift: () => (/* binding */ shift),
/* harmony export */   size: () => (/* binding */ size),
/* harmony export */   useFloating: () => (/* binding */ useFloating)
/* harmony export */ });
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/.pnpm/@floating-ui+dom@1.6.13/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "react-dom");






var index = typeof document !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__.useEffect;

// Fork of `fast-deep-equal` that only does the comparisons we need and compares
// functions
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === 'function' && a.toString() === b.toString()) {
    return true;
  }
  let length;
  let i;
  let keys;
  if (a && b && typeof a === 'object') {
    if (Array.isArray(a)) {
      length = a.length;
      if (length !== b.length) return false;
      for (i = length; i-- !== 0;) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0;) {
      if (!{}.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0;) {
      const key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}

function getDPR(element) {
  if (typeof window === 'undefined') {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}

function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}

function useLatestRef(value) {
  const ref = react__WEBPACK_IMPORTED_MODULE_2__.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}

/**
 * Provides data to position a floating element.
 * @see https://floating-ui.com/docs/useFloating
 */
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = react__WEBPACK_IMPORTED_MODULE_2__.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = react__WEBPACK_IMPORTED_MODULE_2__.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);
  const [_floating, _setFloating] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);
  const setReference = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {
    if (node !== referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);
  const floatingRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);
  const dataRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(data);
  const hasWhileElementsMounted = whileElementsMounted != null;
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform);
  const openRef = useLatestRef(open);
  const update = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition)(referenceRef.current, floatingRef.current, config).then(data => {
      const fullData = {
        ...data,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: openRef.current !== false
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef, openRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData(data => ({
        ...data,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl) referenceRef.current = referenceEl;
    if (floatingEl) floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      }
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);
  const refs = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data.x);
    const y = roundByDPR(elements.floating, data.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...(getDPR(elements.floating) >= 1.5 && {
          willChange: 'transform'
        })
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}

/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow$1 = options => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, 'current');
  }
  return {
    name: 'arrow',
    options,
    fn(state) {
      const {
        element,
        padding
      } = typeof options === 'function' ? options(state) : options;
      if (element && isRef(element)) {
        if (element.current != null) {
          return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({
            element: element.current,
            padding
          }).fn(state);
        }
        return {};
      }
      if (element) {
        return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({
          element,
          padding
        }).fn(state);
      }
      return {};
    }
  };
};

/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */
const offset = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.offset)(options),
  options: [options, deps]
});

/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */
const shift = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.shift)(options),
  options: [options, deps]
});

/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */
const limitShift = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.limitShift)(options),
  options: [options, deps]
});

/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */
const flip = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.flip)(options),
  options: [options, deps]
});

/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */
const size = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.size)(options),
  options: [options, deps]
});

/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */
const autoPlacement = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoPlacement)(options),
  options: [options, deps]
});

/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */
const hide = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.hide)(options),
  options: [options, deps]
});

/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */
const inline = (options, deps) => ({
  ...(0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.inline)(options),
  options: [options, deps]
});

/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = (options, deps) => ({
  ...arrow$1(options),
  options: [options, deps]
});




/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+react@0.27.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs ***!
  \*******************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TYPEABLE_SELECTOR: () => (/* binding */ TYPEABLE_SELECTOR),
/* harmony export */   activeElement: () => (/* binding */ activeElement),
/* harmony export */   contains: () => (/* binding */ contains),
/* harmony export */   getDocument: () => (/* binding */ getDocument),
/* harmony export */   getPlatform: () => (/* binding */ getPlatform),
/* harmony export */   getTarget: () => (/* binding */ getTarget),
/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),
/* harmony export */   isAndroid: () => (/* binding */ isAndroid),
/* harmony export */   isEventTargetWithin: () => (/* binding */ isEventTargetWithin),
/* harmony export */   isJSDOM: () => (/* binding */ isJSDOM),
/* harmony export */   isMac: () => (/* binding */ isMac),
/* harmony export */   isMouseLikePointerType: () => (/* binding */ isMouseLikePointerType),
/* harmony export */   isReactEvent: () => (/* binding */ isReactEvent),
/* harmony export */   isRootElement: () => (/* binding */ isRootElement),
/* harmony export */   isSafari: () => (/* binding */ isSafari),
/* harmony export */   isTypeableCombobox: () => (/* binding */ isTypeableCombobox),
/* harmony export */   isTypeableElement: () => (/* binding */ isTypeableElement),
/* harmony export */   isVirtualClick: () => (/* binding */ isVirtualClick),
/* harmony export */   isVirtualPointerEvent: () => (/* binding */ isVirtualPointerEvent),
/* harmony export */   stopEvent: () => (/* binding */ stopEvent)
/* harmony export */ });
/* harmony import */ var _floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/utils/dom */ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");


function activeElement(doc) {
  let activeElement = doc.activeElement;
  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {
    var _activeElement;
    activeElement = activeElement.shadowRoot.activeElement;
  }
  return activeElement;
}
function contains(parent, child) {
  if (!parent || !child) {
    return false;
  }
  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();

  // First, attempt with faster native method
  if (parent.contains(child)) {
    return true;
  }

  // then fallback to custom implementation with Shadow DOM support
  if (rootNode && (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {
    let next = child;
    while (next) {
      if (parent === next) {
        return true;
      }
      // @ts-ignore
      next = next.parentNode || next.host;
    }
  }

  // Give up, the result is false
  return false;
}
// Avoid Chrome DevTools blue warning.
function getPlatform() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.platform) {
    return uaData.platform;
  }
  return navigator.platform;
}
function getUserAgent() {
  const uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    return uaData.brands.map(_ref => {
      let {
        brand,
        version
      } = _ref;
      return brand + "/" + version;
    }).join(' ');
  }
  return navigator.userAgent;
}

// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts
function isVirtualClick(event) {
  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.
  // Try to find a workaround for this. `react-aria` source still has the check.
  if (event.mozInputSource === 0 && event.isTrusted) {
    return true;
  }
  if (isAndroid() && event.pointerType) {
    return event.type === 'click' && event.buttons === 1;
  }
  return event.detail === 0 && !event.pointerType;
}
function isVirtualPointerEvent(event) {
  if (isJSDOM()) return false;
  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||
  // iOS VoiceOver returns 0.333• for width/height.
  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';
}
function isSafari() {
  // Chrome DevTools does not complain about navigator.vendor
  return /apple/i.test(navigator.vendor);
}
function isAndroid() {
  const re = /android/i;
  return re.test(getPlatform()) || re.test(getUserAgent());
}
function isMac() {
  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;
}
function isJSDOM() {
  return getUserAgent().includes('jsdom/');
}
function isMouseLikePointerType(pointerType, strict) {
  // On some Linux machines with Chromium, mouse inputs return a `pointerType`
  // of "pen": https://github.com/floating-ui/floating-ui/issues/2015
  const values = ['mouse', 'pen'];
  if (!strict) {
    values.push('', undefined);
  }
  return values.includes(pointerType);
}
function isReactEvent(event) {
  return 'nativeEvent' in event;
}
function isRootElement(element) {
  return element.matches('html,body');
}
function getDocument(node) {
  return (node == null ? void 0 : node.ownerDocument) || document;
}
function isEventTargetWithin(event, node) {
  if (node == null) {
    return false;
  }
  if ('composedPath' in event) {
    return event.composedPath().includes(node);
  }

  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't
  const e = event;
  return e.target != null && node.contains(e.target);
}
function getTarget(event) {
  if ('composedPath' in event) {
    return event.composedPath()[0];
  }

  // TS thinks `event` is of type never as it assumes all browsers support
  // `composedPath()`, but browsers without shadow DOM don't.
  return event.target;
}
const TYPEABLE_SELECTOR = "input:not([type='hidden']):not([disabled])," + "[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
function isTypeableElement(element) {
  return (0,_floating_ui_utils_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) && element.matches(TYPEABLE_SELECTOR);
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
function isTypeableCombobox(element) {
  if (!element) return false;
  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);
}




/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),
/* harmony export */   getContainingBlock: () => (/* binding */ getContainingBlock),
/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),
/* harmony export */   getFrameElement: () => (/* binding */ getFrameElement),
/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),
/* harmony export */   getNodeName: () => (/* binding */ getNodeName),
/* harmony export */   getNodeScroll: () => (/* binding */ getNodeScroll),
/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),
/* harmony export */   getParentNode: () => (/* binding */ getParentNode),
/* harmony export */   getWindow: () => (/* binding */ getWindow),
/* harmony export */   isContainingBlock: () => (/* binding */ isContainingBlock),
/* harmony export */   isElement: () => (/* binding */ isElement),
/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),
/* harmony export */   isLastTraversableNode: () => (/* binding */ isLastTraversableNode),
/* harmony export */   isNode: () => (/* binding */ isNode),
/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),
/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),
/* harmony export */   isTableElement: () => (/* binding */ isTableElement),
/* harmony export */   isTopLayer: () => (/* binding */ isTopLayer),
/* harmony export */   isWebKit: () => (/* binding */ isWebKit)
/* harmony export */ });
function hasWindow() {
  return typeof window !== 'undefined';
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || '').toLowerCase();
  }
  // Mocked nodes in testing environments may not be instances of Node. By
  // returning `#document` an infinite loop won't occur.
  // https://github.com/floating-ui/floating-ui/issues/2317
  return '#document';
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (!hasWindow() || typeof ShadowRoot === 'undefined') {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);
}
function isTableElement(element) {
  return ['table', 'td', 'th'].includes(getNodeName(element));
}
function isTopLayer(element) {
  return [':popover-open', ':modal'].some(selector => {
    try {
      return element.matches(selector);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  // https://drafts.csswg.org/css-transforms-2/#individual-transforms
  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === 'undefined' || !CSS.supports) return false;
  return CSS.supports('-webkit-backdrop-filter', 'none');
}
function isLastTraversableNode(node) {
  return ['html', 'body', '#document'].includes(getNodeName(node));
}
function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === 'html') {
    return node;
  }
  const result =
  // Step into the shadow DOM of the parent of a slotted node.
  node.assignedSlot ||
  // DOM Element detected.
  node.parentNode ||
  // ShadowRoot detected.
  isShadowRoot(node) && node.host ||
  // Fallback.
  getDocumentElement(node);
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}




/***/ }),

/***/ "./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@floating-ui+utils@0.2.9/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alignments: () => (/* binding */ alignments),
/* harmony export */   clamp: () => (/* binding */ clamp),
/* harmony export */   createCoords: () => (/* binding */ createCoords),
/* harmony export */   evaluate: () => (/* binding */ evaluate),
/* harmony export */   expandPaddingObject: () => (/* binding */ expandPaddingObject),
/* harmony export */   floor: () => (/* binding */ floor),
/* harmony export */   getAlignment: () => (/* binding */ getAlignment),
/* harmony export */   getAlignmentAxis: () => (/* binding */ getAlignmentAxis),
/* harmony export */   getAlignmentSides: () => (/* binding */ getAlignmentSides),
/* harmony export */   getAxisLength: () => (/* binding */ getAxisLength),
/* harmony export */   getExpandedPlacements: () => (/* binding */ getExpandedPlacements),
/* harmony export */   getOppositeAlignmentPlacement: () => (/* binding */ getOppositeAlignmentPlacement),
/* harmony export */   getOppositeAxis: () => (/* binding */ getOppositeAxis),
/* harmony export */   getOppositeAxisPlacements: () => (/* binding */ getOppositeAxisPlacements),
/* harmony export */   getOppositePlacement: () => (/* binding */ getOppositePlacement),
/* harmony export */   getPaddingObject: () => (/* binding */ getPaddingObject),
/* harmony export */   getSide: () => (/* binding */ getSide),
/* harmony export */   getSideAxis: () => (/* binding */ getSideAxis),
/* harmony export */   max: () => (/* binding */ max),
/* harmony export */   min: () => (/* binding */ min),
/* harmony export */   placements: () => (/* binding */ placements),
/* harmony export */   rectToClientRect: () => (/* binding */ rectToClientRect),
/* harmony export */   round: () => (/* binding */ round),
/* harmony export */   sides: () => (/* binding */ sides)
/* harmony export */ });
/**
 * Custom positioning reference element.
 * @see https://floating-ui.com/docs/virtual-elements
 */

const sides = ['top', 'right', 'bottom', 'left'];
const alignments = ['start', 'end'];
const placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = v => ({
  x: v,
  y: v
});
const oppositeSideMap = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
const oppositeAlignmentMap = {
  start: 'end',
  end: 'start'
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === 'function' ? value(param) : value;
}
function getSide(placement) {
  return placement.split('-')[0];
}
function getAlignment(placement) {
  return placement.split('-')[1];
}
function getOppositeAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
function getAxisLength(axis) {
  return axis === 'y' ? 'height' : 'width';
}
function getSideAxis(placement) {
  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ['left', 'right'];
  const rl = ['right', 'left'];
  const tb = ['top', 'bottom'];
  const bt = ['bottom', 'top'];
  switch (side) {
    case 'top':
    case 'bottom':
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case 'left':
    case 'right':
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === 'start', rtl);
  if (alignment) {
    list = list.map(side => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== 'number' ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}




/***/ }),

/***/ "./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);

/***/ }),

/***/ "./node_modules/.pnpm/qrcode.react@4.2.0_react@18.3.1/node_modules/qrcode.react/lib/esm/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/qrcode.react@4.2.0_react@18.3.1/node_modules/qrcode.react/lib/esm/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QRCodeCanvas: () => (/* binding */ QRCodeCanvas),
/* harmony export */   QRCodeSVG: () => (/* binding */ QRCodeSVG)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/index.tsx


// src/third-party/qrcodegen/index.ts
/**
 * @license QR Code generator library (TypeScript)
 * Copyright (c) Project Nayuki.
 * SPDX-License-Identifier: MIT
 */
var qrcodegen;
((qrcodegen2) => {
  const _QrCode = class _QrCode {
    /*-- Constructor (low level) and fields --*/
    // Creates a new QR Code with the given version number,
    // error correction level, data codeword bytes, and mask number.
    // This is a low-level API that most users should not use directly.
    // A mid-level API is the encodeSegments() function.
    constructor(version, errorCorrectionLevel, dataCodewords, msk) {
      this.version = version;
      this.errorCorrectionLevel = errorCorrectionLevel;
      // The modules of this QR Code (false = light, true = dark).
      // Immutable after constructor finishes. Accessed through getModule().
      this.modules = [];
      // Indicates function modules that are not subjected to masking. Discarded when constructor finishes.
      this.isFunction = [];
      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)
        throw new RangeError("Version value out of range");
      if (msk < -1 || msk > 7)
        throw new RangeError("Mask value out of range");
      this.size = version * 4 + 17;
      let row = [];
      for (let i = 0; i < this.size; i++)
        row.push(false);
      for (let i = 0; i < this.size; i++) {
        this.modules.push(row.slice());
        this.isFunction.push(row.slice());
      }
      this.drawFunctionPatterns();
      const allCodewords = this.addEccAndInterleave(dataCodewords);
      this.drawCodewords(allCodewords);
      if (msk == -1) {
        let minPenalty = 1e9;
        for (let i = 0; i < 8; i++) {
          this.applyMask(i);
          this.drawFormatBits(i);
          const penalty = this.getPenaltyScore();
          if (penalty < minPenalty) {
            msk = i;
            minPenalty = penalty;
          }
          this.applyMask(i);
        }
      }
      assert(0 <= msk && msk <= 7);
      this.mask = msk;
      this.applyMask(msk);
      this.drawFormatBits(msk);
      this.isFunction = [];
    }
    /*-- Static factory functions (high level) --*/
    // Returns a QR Code representing the given Unicode text string at the given error correction level.
    // As a conservative upper bound, this function is guaranteed to succeed for strings that have 738 or fewer
    // Unicode code points (not UTF-16 code units) if the low error correction level is used. The smallest possible
    // QR Code version is automatically chosen for the output. The ECC level of the result may be higher than the
    // ecl argument if it can be done without increasing the version.
    static encodeText(text, ecl) {
      const segs = qrcodegen2.QrSegment.makeSegments(text);
      return _QrCode.encodeSegments(segs, ecl);
    }
    // Returns a QR Code representing the given binary data at the given error correction level.
    // This function always encodes using the binary segment mode, not any text mode. The maximum number of
    // bytes allowed is 2953. The smallest possible QR Code version is automatically chosen for the output.
    // The ECC level of the result may be higher than the ecl argument if it can be done without increasing the version.
    static encodeBinary(data, ecl) {
      const seg = qrcodegen2.QrSegment.makeBytes(data);
      return _QrCode.encodeSegments([seg], ecl);
    }
    /*-- Static factory functions (mid level) --*/
    // Returns a QR Code representing the given segments with the given encoding parameters.
    // The smallest possible QR Code version within the given range is automatically
    // chosen for the output. Iff boostEcl is true, then the ECC level of the result
    // may be higher than the ecl argument if it can be done without increasing the
    // version. The mask number is either between 0 to 7 (inclusive) to force that
    // mask, or -1 to automatically choose an appropriate mask (which may be slow).
    // This function allows the user to create a custom sequence of segments that switches
    // between modes (such as alphanumeric and byte) to encode text in less space.
    // This is a mid-level API; the high-level API is encodeText() and encodeBinary().
    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {
      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)
        throw new RangeError("Invalid value");
      let version;
      let dataUsedBits;
      for (version = minVersion; ; version++) {
        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;
        const usedBits = QrSegment.getTotalBits(segs, version);
        if (usedBits <= dataCapacityBits2) {
          dataUsedBits = usedBits;
          break;
        }
        if (version >= maxVersion)
          throw new RangeError("Data too long");
      }
      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {
        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)
          ecl = newEcl;
      }
      let bb = [];
      for (const seg of segs) {
        appendBits(seg.mode.modeBits, 4, bb);
        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);
        for (const b of seg.getData())
          bb.push(b);
      }
      assert(bb.length == dataUsedBits);
      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;
      assert(bb.length <= dataCapacityBits);
      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);
      appendBits(0, (8 - bb.length % 8) % 8, bb);
      assert(bb.length % 8 == 0);
      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)
        appendBits(padByte, 8, bb);
      let dataCodewords = [];
      while (dataCodewords.length * 8 < bb.length)
        dataCodewords.push(0);
      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));
      return new _QrCode(version, ecl, dataCodewords, mask);
    }
    /*-- Accessor methods --*/
    // Returns the color of the module (pixel) at the given coordinates, which is false
    // for light or true for dark. The top left corner has the coordinates (x=0, y=0).
    // If the given coordinates are out of bounds, then false (light) is returned.
    getModule(x, y) {
      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];
    }
    // Modified to expose modules for easy access
    getModules() {
      return this.modules;
    }
    /*-- Private helper methods for constructor: Drawing function modules --*/
    // Reads this object's version field, and draws and marks all function modules.
    drawFunctionPatterns() {
      for (let i = 0; i < this.size; i++) {
        this.setFunctionModule(6, i, i % 2 == 0);
        this.setFunctionModule(i, 6, i % 2 == 0);
      }
      this.drawFinderPattern(3, 3);
      this.drawFinderPattern(this.size - 4, 3);
      this.drawFinderPattern(3, this.size - 4);
      const alignPatPos = this.getAlignmentPatternPositions();
      const numAlign = alignPatPos.length;
      for (let i = 0; i < numAlign; i++) {
        for (let j = 0; j < numAlign; j++) {
          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))
            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);
        }
      }
      this.drawFormatBits(0);
      this.drawVersion();
    }
    // Draws two copies of the format bits (with its own error correction code)
    // based on the given mask and this object's error correction level field.
    drawFormatBits(mask) {
      const data = this.errorCorrectionLevel.formatBits << 3 | mask;
      let rem = data;
      for (let i = 0; i < 10; i++)
        rem = rem << 1 ^ (rem >>> 9) * 1335;
      const bits = (data << 10 | rem) ^ 21522;
      assert(bits >>> 15 == 0);
      for (let i = 0; i <= 5; i++)
        this.setFunctionModule(8, i, getBit(bits, i));
      this.setFunctionModule(8, 7, getBit(bits, 6));
      this.setFunctionModule(8, 8, getBit(bits, 7));
      this.setFunctionModule(7, 8, getBit(bits, 8));
      for (let i = 9; i < 15; i++)
        this.setFunctionModule(14 - i, 8, getBit(bits, i));
      for (let i = 0; i < 8; i++)
        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));
      for (let i = 8; i < 15; i++)
        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));
      this.setFunctionModule(8, this.size - 8, true);
    }
    // Draws two copies of the version bits (with its own error correction code),
    // based on this object's version field, iff 7 <= version <= 40.
    drawVersion() {
      if (this.version < 7)
        return;
      let rem = this.version;
      for (let i = 0; i < 12; i++)
        rem = rem << 1 ^ (rem >>> 11) * 7973;
      const bits = this.version << 12 | rem;
      assert(bits >>> 18 == 0);
      for (let i = 0; i < 18; i++) {
        const color = getBit(bits, i);
        const a = this.size - 11 + i % 3;
        const b = Math.floor(i / 3);
        this.setFunctionModule(a, b, color);
        this.setFunctionModule(b, a, color);
      }
    }
    // Draws a 9*9 finder pattern including the border separator,
    // with the center module at (x, y). Modules can be out of bounds.
    drawFinderPattern(x, y) {
      for (let dy = -4; dy <= 4; dy++) {
        for (let dx = -4; dx <= 4; dx++) {
          const dist = Math.max(Math.abs(dx), Math.abs(dy));
          const xx = x + dx;
          const yy = y + dy;
          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)
            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);
        }
      }
    }
    // Draws a 5*5 alignment pattern, with the center module
    // at (x, y). All modules must be in bounds.
    drawAlignmentPattern(x, y) {
      for (let dy = -2; dy <= 2; dy++) {
        for (let dx = -2; dx <= 2; dx++)
          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);
      }
    }
    // Sets the color of a module and marks it as a function module.
    // Only used by the constructor. Coordinates must be in bounds.
    setFunctionModule(x, y, isDark) {
      this.modules[y][x] = isDark;
      this.isFunction[y][x] = true;
    }
    /*-- Private helper methods for constructor: Codewords and masking --*/
    // Returns a new byte string representing the given data with the appropriate error correction
    // codewords appended to it, based on this object's version and error correction level.
    addEccAndInterleave(data) {
      const ver = this.version;
      const ecl = this.errorCorrectionLevel;
      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))
        throw new RangeError("Invalid argument");
      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];
      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];
      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);
      const numShortBlocks = numBlocks - rawCodewords % numBlocks;
      const shortBlockLen = Math.floor(rawCodewords / numBlocks);
      let blocks = [];
      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);
      for (let i = 0, k = 0; i < numBlocks; i++) {
        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));
        k += dat.length;
        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);
        if (i < numShortBlocks)
          dat.push(0);
        blocks.push(dat.concat(ecc));
      }
      let result = [];
      for (let i = 0; i < blocks[0].length; i++) {
        blocks.forEach((block, j) => {
          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)
            result.push(block[i]);
        });
      }
      assert(result.length == rawCodewords);
      return result;
    }
    // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire
    // data area of this QR Code. Function modules need to be marked off before this is called.
    drawCodewords(data) {
      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))
        throw new RangeError("Invalid argument");
      let i = 0;
      for (let right = this.size - 1; right >= 1; right -= 2) {
        if (right == 6)
          right = 5;
        for (let vert = 0; vert < this.size; vert++) {
          for (let j = 0; j < 2; j++) {
            const x = right - j;
            const upward = (right + 1 & 2) == 0;
            const y = upward ? this.size - 1 - vert : vert;
            if (!this.isFunction[y][x] && i < data.length * 8) {
              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));
              i++;
            }
          }
        }
      }
      assert(i == data.length * 8);
    }
    // XORs the codeword modules in this QR Code with the given mask pattern.
    // The function modules must be marked and the codeword bits must be drawn
    // before masking. Due to the arithmetic of XOR, calling applyMask() with
    // the same mask value a second time will undo the mask. A final well-formed
    // QR Code needs exactly one (not zero, two, etc.) mask applied.
    applyMask(mask) {
      if (mask < 0 || mask > 7)
        throw new RangeError("Mask value out of range");
      for (let y = 0; y < this.size; y++) {
        for (let x = 0; x < this.size; x++) {
          let invert;
          switch (mask) {
            case 0:
              invert = (x + y) % 2 == 0;
              break;
            case 1:
              invert = y % 2 == 0;
              break;
            case 2:
              invert = x % 3 == 0;
              break;
            case 3:
              invert = (x + y) % 3 == 0;
              break;
            case 4:
              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;
              break;
            case 5:
              invert = x * y % 2 + x * y % 3 == 0;
              break;
            case 6:
              invert = (x * y % 2 + x * y % 3) % 2 == 0;
              break;
            case 7:
              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;
              break;
            default:
              throw new Error("Unreachable");
          }
          if (!this.isFunction[y][x] && invert)
            this.modules[y][x] = !this.modules[y][x];
        }
      }
    }
    // Calculates and returns the penalty score based on state of this QR Code's current modules.
    // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.
    getPenaltyScore() {
      let result = 0;
      for (let y = 0; y < this.size; y++) {
        let runColor = false;
        let runX = 0;
        let runHistory = [0, 0, 0, 0, 0, 0, 0];
        for (let x = 0; x < this.size; x++) {
          if (this.modules[y][x] == runColor) {
            runX++;
            if (runX == 5)
              result += _QrCode.PENALTY_N1;
            else if (runX > 5)
              result++;
          } else {
            this.finderPenaltyAddHistory(runX, runHistory);
            if (!runColor)
              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;
            runColor = this.modules[y][x];
            runX = 1;
          }
        }
        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;
      }
      for (let x = 0; x < this.size; x++) {
        let runColor = false;
        let runY = 0;
        let runHistory = [0, 0, 0, 0, 0, 0, 0];
        for (let y = 0; y < this.size; y++) {
          if (this.modules[y][x] == runColor) {
            runY++;
            if (runY == 5)
              result += _QrCode.PENALTY_N1;
            else if (runY > 5)
              result++;
          } else {
            this.finderPenaltyAddHistory(runY, runHistory);
            if (!runColor)
              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;
            runColor = this.modules[y][x];
            runY = 1;
          }
        }
        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;
      }
      for (let y = 0; y < this.size - 1; y++) {
        for (let x = 0; x < this.size - 1; x++) {
          const color = this.modules[y][x];
          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])
            result += _QrCode.PENALTY_N2;
        }
      }
      let dark = 0;
      for (const row of this.modules)
        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);
      const total = this.size * this.size;
      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;
      assert(0 <= k && k <= 9);
      result += k * _QrCode.PENALTY_N4;
      assert(0 <= result && result <= 2568888);
      return result;
    }
    /*-- Private helper functions --*/
    // Returns an ascending list of positions of alignment patterns for this version number.
    // Each position is in the range [0,177), and are used on both the x and y axes.
    // This could be implemented as lookup table of 40 variable-length lists of integers.
    getAlignmentPatternPositions() {
      if (this.version == 1)
        return [];
      else {
        const numAlign = Math.floor(this.version / 7) + 2;
        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;
        let result = [6];
        for (let pos = this.size - 7; result.length < numAlign; pos -= step)
          result.splice(1, 0, pos);
        return result;
      }
    }
    // Returns the number of data bits that can be stored in a QR Code of the given version number, after
    // all function modules are excluded. This includes remainder bits, so it might not be a multiple of 8.
    // The result is in the range [208, 29648]. This could be implemented as a 40-entry lookup table.
    static getNumRawDataModules(ver) {
      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)
        throw new RangeError("Version number out of range");
      let result = (16 * ver + 128) * ver + 64;
      if (ver >= 2) {
        const numAlign = Math.floor(ver / 7) + 2;
        result -= (25 * numAlign - 10) * numAlign - 55;
        if (ver >= 7)
          result -= 36;
      }
      assert(208 <= result && result <= 29648);
      return result;
    }
    // Returns the number of 8-bit data (i.e. not error correction) codewords contained in any
    // QR Code of the given version number and error correction level, with remainder bits discarded.
    // This stateless pure function could be implemented as a (40*4)-cell lookup table.
    static getNumDataCodewords(ver, ecl) {
      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];
    }
    // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be
    // implemented as a lookup table over all possible parameter values, instead of as an algorithm.
    static reedSolomonComputeDivisor(degree) {
      if (degree < 1 || degree > 255)
        throw new RangeError("Degree out of range");
      let result = [];
      for (let i = 0; i < degree - 1; i++)
        result.push(0);
      result.push(1);
      let root = 1;
      for (let i = 0; i < degree; i++) {
        for (let j = 0; j < result.length; j++) {
          result[j] = _QrCode.reedSolomonMultiply(result[j], root);
          if (j + 1 < result.length)
            result[j] ^= result[j + 1];
        }
        root = _QrCode.reedSolomonMultiply(root, 2);
      }
      return result;
    }
    // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.
    static reedSolomonComputeRemainder(data, divisor) {
      let result = divisor.map((_) => 0);
      for (const b of data) {
        const factor = b ^ result.shift();
        result.push(0);
        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));
      }
      return result;
    }
    // Returns the product of the two given field elements modulo GF(2^8/0x11D). The arguments and result
    // are unsigned 8-bit integers. This could be implemented as a lookup table of 256*256 entries of uint8.
    static reedSolomonMultiply(x, y) {
      if (x >>> 8 != 0 || y >>> 8 != 0)
        throw new RangeError("Byte out of range");
      let z = 0;
      for (let i = 7; i >= 0; i--) {
        z = z << 1 ^ (z >>> 7) * 285;
        z ^= (y >>> i & 1) * x;
      }
      assert(z >>> 8 == 0);
      return z;
    }
    // Can only be called immediately after a light run is added, and
    // returns either 0, 1, or 2. A helper function for getPenaltyScore().
    finderPenaltyCountPatterns(runHistory) {
      const n = runHistory[1];
      assert(n <= this.size * 3);
      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;
      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);
    }
    // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().
    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {
      if (currentRunColor) {
        this.finderPenaltyAddHistory(currentRunLength, runHistory);
        currentRunLength = 0;
      }
      currentRunLength += this.size;
      this.finderPenaltyAddHistory(currentRunLength, runHistory);
      return this.finderPenaltyCountPatterns(runHistory);
    }
    // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().
    finderPenaltyAddHistory(currentRunLength, runHistory) {
      if (runHistory[0] == 0)
        currentRunLength += this.size;
      runHistory.pop();
      runHistory.unshift(currentRunLength);
    }
  };
  /*-- Constants and tables --*/
  // The minimum version number supported in the QR Code Model 2 standard.
  _QrCode.MIN_VERSION = 1;
  // The maximum version number supported in the QR Code Model 2 standard.
  _QrCode.MAX_VERSION = 40;
  // For use in getPenaltyScore(), when evaluating which mask is best.
  _QrCode.PENALTY_N1 = 3;
  _QrCode.PENALTY_N2 = 3;
  _QrCode.PENALTY_N3 = 40;
  _QrCode.PENALTY_N4 = 10;
  _QrCode.ECC_CODEWORDS_PER_BLOCK = [
    // Version: (note that index 0 is for padding, and is set to an illegal value)
    //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level
    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
    // Low
    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],
    // Medium
    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
    // Quartile
    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]
    // High
  ];
  _QrCode.NUM_ERROR_CORRECTION_BLOCKS = [
    // Version: (note that index 0 is for padding, and is set to an illegal value)
    //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level
    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],
    // Low
    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],
    // Medium
    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],
    // Quartile
    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]
    // High
  ];
  let QrCode = _QrCode;
  qrcodegen2.QrCode = _QrCode;
  function appendBits(val, len, bb) {
    if (len < 0 || len > 31 || val >>> len != 0)
      throw new RangeError("Value out of range");
    for (let i = len - 1; i >= 0; i--)
      bb.push(val >>> i & 1);
  }
  function getBit(x, i) {
    return (x >>> i & 1) != 0;
  }
  function assert(cond) {
    if (!cond)
      throw new Error("Assertion error");
  }
  const _QrSegment = class _QrSegment {
    /*-- Constructor (low level) and fields --*/
    // Creates a new QR Code segment with the given attributes and data.
    // The character count (numChars) must agree with the mode and the bit buffer length,
    // but the constraint isn't checked. The given bit buffer is cloned and stored.
    constructor(mode, numChars, bitData) {
      this.mode = mode;
      this.numChars = numChars;
      this.bitData = bitData;
      if (numChars < 0)
        throw new RangeError("Invalid argument");
      this.bitData = bitData.slice();
    }
    /*-- Static factory functions (mid level) --*/
    // Returns a segment representing the given binary data encoded in
    // byte mode. All input byte arrays are acceptable. Any text string
    // can be converted to UTF-8 bytes and encoded as a byte mode segment.
    static makeBytes(data) {
      let bb = [];
      for (const b of data)
        appendBits(b, 8, bb);
      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);
    }
    // Returns a segment representing the given string of decimal digits encoded in numeric mode.
    static makeNumeric(digits) {
      if (!_QrSegment.isNumeric(digits))
        throw new RangeError("String contains non-numeric characters");
      let bb = [];
      for (let i = 0; i < digits.length; ) {
        const n = Math.min(digits.length - i, 3);
        appendBits(parseInt(digits.substring(i, i + n), 10), n * 3 + 1, bb);
        i += n;
      }
      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);
    }
    // Returns a segment representing the given text string encoded in alphanumeric mode.
    // The characters allowed are: 0 to 9, A to Z (uppercase only), space,
    // dollar, percent, asterisk, plus, hyphen, period, slash, colon.
    static makeAlphanumeric(text) {
      if (!_QrSegment.isAlphanumeric(text))
        throw new RangeError("String contains unencodable characters in alphanumeric mode");
      let bb = [];
      let i;
      for (i = 0; i + 2 <= text.length; i += 2) {
        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;
        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));
        appendBits(temp, 11, bb);
      }
      if (i < text.length)
        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);
      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);
    }
    // Returns a new mutable list of zero or more segments to represent the given Unicode text string.
    // The result may use various segment modes and switch modes to optimize the length of the bit stream.
    static makeSegments(text) {
      if (text == "")
        return [];
      else if (_QrSegment.isNumeric(text))
        return [_QrSegment.makeNumeric(text)];
      else if (_QrSegment.isAlphanumeric(text))
        return [_QrSegment.makeAlphanumeric(text)];
      else
        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];
    }
    // Returns a segment representing an Extended Channel Interpretation
    // (ECI) designator with the given assignment value.
    static makeEci(assignVal) {
      let bb = [];
      if (assignVal < 0)
        throw new RangeError("ECI assignment value out of range");
      else if (assignVal < 1 << 7)
        appendBits(assignVal, 8, bb);
      else if (assignVal < 1 << 14) {
        appendBits(2, 2, bb);
        appendBits(assignVal, 14, bb);
      } else if (assignVal < 1e6) {
        appendBits(6, 3, bb);
        appendBits(assignVal, 21, bb);
      } else
        throw new RangeError("ECI assignment value out of range");
      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);
    }
    // Tests whether the given string can be encoded as a segment in numeric mode.
    // A string is encodable iff each character is in the range 0 to 9.
    static isNumeric(text) {
      return _QrSegment.NUMERIC_REGEX.test(text);
    }
    // Tests whether the given string can be encoded as a segment in alphanumeric mode.
    // A string is encodable iff each character is in the following set: 0 to 9, A to Z
    // (uppercase only), space, dollar, percent, asterisk, plus, hyphen, period, slash, colon.
    static isAlphanumeric(text) {
      return _QrSegment.ALPHANUMERIC_REGEX.test(text);
    }
    /*-- Methods --*/
    // Returns a new copy of the data bits of this segment.
    getData() {
      return this.bitData.slice();
    }
    // (Package-private) Calculates and returns the number of bits needed to encode the given segments at
    // the given version. The result is infinity if a segment has too many characters to fit its length field.
    static getTotalBits(segs, version) {
      let result = 0;
      for (const seg of segs) {
        const ccbits = seg.mode.numCharCountBits(version);
        if (seg.numChars >= 1 << ccbits)
          return Infinity;
        result += 4 + ccbits + seg.bitData.length;
      }
      return result;
    }
    // Returns a new array of bytes representing the given string encoded in UTF-8.
    static toUtf8ByteArray(str) {
      str = encodeURI(str);
      let result = [];
      for (let i = 0; i < str.length; i++) {
        if (str.charAt(i) != "%")
          result.push(str.charCodeAt(i));
        else {
          result.push(parseInt(str.substring(i + 1, i + 3), 16));
          i += 2;
        }
      }
      return result;
    }
  };
  /*-- Constants --*/
  // Describes precisely all strings that are encodable in numeric mode.
  _QrSegment.NUMERIC_REGEX = /^[0-9]*$/;
  // Describes precisely all strings that are encodable in alphanumeric mode.
  _QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\/:-]*$/;
  // The set of all legal characters in alphanumeric mode,
  // where each character value maps to the index in the string.
  _QrSegment.ALPHANUMERIC_CHARSET = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";
  let QrSegment = _QrSegment;
  qrcodegen2.QrSegment = _QrSegment;
})(qrcodegen || (qrcodegen = {}));
((qrcodegen2) => {
  let QrCode;
  ((QrCode2) => {
    const _Ecc = class _Ecc {
      // The QR Code can tolerate about 30% erroneous codewords
      /*-- Constructor and fields --*/
      constructor(ordinal, formatBits) {
        this.ordinal = ordinal;
        this.formatBits = formatBits;
      }
    };
    /*-- Constants --*/
    _Ecc.LOW = new _Ecc(0, 1);
    // The QR Code can tolerate about  7% erroneous codewords
    _Ecc.MEDIUM = new _Ecc(1, 0);
    // The QR Code can tolerate about 15% erroneous codewords
    _Ecc.QUARTILE = new _Ecc(2, 3);
    // The QR Code can tolerate about 25% erroneous codewords
    _Ecc.HIGH = new _Ecc(3, 2);
    let Ecc = _Ecc;
    QrCode2.Ecc = _Ecc;
  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));
})(qrcodegen || (qrcodegen = {}));
((qrcodegen2) => {
  let QrSegment;
  ((QrSegment2) => {
    const _Mode = class _Mode {
      /*-- Constructor and fields --*/
      constructor(modeBits, numBitsCharCount) {
        this.modeBits = modeBits;
        this.numBitsCharCount = numBitsCharCount;
      }
      /*-- Method --*/
      // (Package-private) Returns the bit width of the character count field for a segment in
      // this mode in a QR Code at the given version number. The result is in the range [0, 16].
      numCharCountBits(ver) {
        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];
      }
    };
    /*-- Constants --*/
    _Mode.NUMERIC = new _Mode(1, [10, 12, 14]);
    _Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);
    _Mode.BYTE = new _Mode(4, [8, 16, 16]);
    _Mode.KANJI = new _Mode(8, [8, 10, 12]);
    _Mode.ECI = new _Mode(7, [0, 0, 0]);
    let Mode = _Mode;
    QrSegment2.Mode = _Mode;
  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));
})(qrcodegen || (qrcodegen = {}));
var qrcodegen_default = qrcodegen;

// src/index.tsx
/**
 * @license qrcode.react
 * Copyright (c) Paul O'Shannessy
 * SPDX-License-Identifier: ISC
 */
var ERROR_LEVEL_MAP = {
  L: qrcodegen_default.QrCode.Ecc.LOW,
  M: qrcodegen_default.QrCode.Ecc.MEDIUM,
  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,
  H: qrcodegen_default.QrCode.Ecc.HIGH
};
var DEFAULT_SIZE = 128;
var DEFAULT_LEVEL = "L";
var DEFAULT_BGCOLOR = "#FFFFFF";
var DEFAULT_FGCOLOR = "#000000";
var DEFAULT_INCLUDEMARGIN = false;
var DEFAULT_MINVERSION = 1;
var SPEC_MARGIN_SIZE = 4;
var DEFAULT_MARGIN_SIZE = 0;
var DEFAULT_IMG_SCALE = 0.1;
function generatePath(modules, margin = 0) {
  const ops = [];
  modules.forEach(function(row, y) {
    let start = null;
    row.forEach(function(cell, x) {
      if (!cell && start !== null) {
        ops.push(
          `M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`
        );
        start = null;
        return;
      }
      if (x === row.length - 1) {
        if (!cell) {
          return;
        }
        if (start === null) {
          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);
        } else {
          ops.push(
            `M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`
          );
        }
        return;
      }
      if (cell && start === null) {
        start = x;
      }
    });
  });
  return ops.join("");
}
function excavateModules(modules, excavation) {
  return modules.slice().map((row, y) => {
    if (y < excavation.y || y >= excavation.y + excavation.h) {
      return row;
    }
    return row.map((cell, x) => {
      if (x < excavation.x || x >= excavation.x + excavation.w) {
        return cell;
      }
      return false;
    });
  });
}
function getImageSettings(cells, size, margin, imageSettings) {
  if (imageSettings == null) {
    return null;
  }
  const numCells = cells.length + margin * 2;
  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);
  const scale = numCells / size;
  const w = (imageSettings.width || defaultSize) * scale;
  const h = (imageSettings.height || defaultSize) * scale;
  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;
  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;
  const opacity = imageSettings.opacity == null ? 1 : imageSettings.opacity;
  let excavation = null;
  if (imageSettings.excavate) {
    let floorX = Math.floor(x);
    let floorY = Math.floor(y);
    let ceilW = Math.ceil(w + x - floorX);
    let ceilH = Math.ceil(h + y - floorY);
    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };
  }
  const crossOrigin = imageSettings.crossOrigin;
  return { x, y, h, w, excavation, opacity, crossOrigin };
}
function getMarginSize(includeMargin, marginSize) {
  if (marginSize != null) {
    return Math.max(Math.floor(marginSize), 0);
  }
  return includeMargin ? SPEC_MARGIN_SIZE : DEFAULT_MARGIN_SIZE;
}
function useQRCode({
  value,
  level,
  minVersion,
  includeMargin,
  marginSize,
  imageSettings,
  size,
  boostLevel
}) {
  let qrcode = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    const values = Array.isArray(value) ? value : [value];
    const segments = values.reduce((accum, v) => {
      accum.push(...qrcodegen_default.QrSegment.makeSegments(v));
      return accum;
    }, []);
    return qrcodegen_default.QrCode.encodeSegments(
      segments,
      ERROR_LEVEL_MAP[level],
      minVersion,
      void 0,
      void 0,
      boostLevel
    );
  }, [value, level, minVersion, boostLevel]);
  const { cells, margin, numCells, calculatedImageSettings } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    let cells2 = qrcode.getModules();
    const margin2 = getMarginSize(includeMargin, marginSize);
    const numCells2 = cells2.length + margin2 * 2;
    const calculatedImageSettings2 = getImageSettings(
      cells2,
      size,
      margin2,
      imageSettings
    );
    return {
      cells: cells2,
      margin: margin2,
      numCells: numCells2,
      calculatedImageSettings: calculatedImageSettings2
    };
  }, [qrcode, size, imageSettings, includeMargin, marginSize]);
  return {
    qrcode,
    margin,
    cells,
    numCells,
    calculatedImageSettings
  };
}
var SUPPORTS_PATH2D = function() {
  try {
    new Path2D().addPath(new Path2D());
  } catch (e) {
    return false;
  }
  return true;
}();
var QRCodeCanvas = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
  function QRCodeCanvas2(props, forwardedRef) {
    const _a = props, {
      value,
      size = DEFAULT_SIZE,
      level = DEFAULT_LEVEL,
      bgColor = DEFAULT_BGCOLOR,
      fgColor = DEFAULT_FGCOLOR,
      includeMargin = DEFAULT_INCLUDEMARGIN,
      minVersion = DEFAULT_MINVERSION,
      boostLevel,
      marginSize,
      imageSettings
    } = _a, extraProps = __objRest(_a, [
      "value",
      "size",
      "level",
      "bgColor",
      "fgColor",
      "includeMargin",
      "minVersion",
      "boostLevel",
      "marginSize",
      "imageSettings"
    ]);
    const _b = extraProps, { style } = _b, otherProps = __objRest(_b, ["style"]);
    const imgSrc = imageSettings == null ? void 0 : imageSettings.src;
    const _canvas = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
    const _image = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
    const setCanvasRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
      (node) => {
        _canvas.current = node;
        if (typeof forwardedRef === "function") {
          forwardedRef(node);
        } else if (forwardedRef) {
          forwardedRef.current = node;
        }
      },
      [forwardedRef]
    );
    const [isImgLoaded, setIsImageLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
    const { margin, cells, numCells, calculatedImageSettings } = useQRCode({
      value,
      level,
      minVersion,
      boostLevel,
      includeMargin,
      marginSize,
      imageSettings,
      size
    });
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
      if (_canvas.current != null) {
        const canvas = _canvas.current;
        const ctx = canvas.getContext("2d");
        if (!ctx) {
          return;
        }
        let cellsToDraw = cells;
        const image = _image.current;
        const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;
        if (haveImageToRender) {
          if (calculatedImageSettings.excavation != null) {
            cellsToDraw = excavateModules(
              cells,
              calculatedImageSettings.excavation
            );
          }
        }
        const pixelRatio = window.devicePixelRatio || 1;
        canvas.height = canvas.width = size * pixelRatio;
        const scale = size / numCells * pixelRatio;
        ctx.scale(scale, scale);
        ctx.fillStyle = bgColor;
        ctx.fillRect(0, 0, numCells, numCells);
        ctx.fillStyle = fgColor;
        if (SUPPORTS_PATH2D) {
          ctx.fill(new Path2D(generatePath(cellsToDraw, margin)));
        } else {
          cells.forEach(function(row, rdx) {
            row.forEach(function(cell, cdx) {
              if (cell) {
                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);
              }
            });
          });
        }
        if (calculatedImageSettings) {
          ctx.globalAlpha = calculatedImageSettings.opacity;
        }
        if (haveImageToRender) {
          ctx.drawImage(
            image,
            calculatedImageSettings.x + margin,
            calculatedImageSettings.y + margin,
            calculatedImageSettings.w,
            calculatedImageSettings.h
          );
        }
      }
    });
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
      setIsImageLoaded(false);
    }, [imgSrc]);
    const canvasStyle = __spreadValues({ height: size, width: size }, style);
    let img = null;
    if (imgSrc != null) {
      img = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        "img",
        {
          src: imgSrc,
          key: imgSrc,
          style: { display: "none" },
          onLoad: () => {
            setIsImageLoaded(true);
          },
          ref: _image,
          crossOrigin: calculatedImageSettings == null ? void 0 : calculatedImageSettings.crossOrigin
        }
      );
    }
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "canvas",
      __spreadValues({
        style: canvasStyle,
        height: size,
        width: size,
        ref: setCanvasRef,
        role: "img"
      }, otherProps)
    ), img);
  }
);
QRCodeCanvas.displayName = "QRCodeCanvas";
var QRCodeSVG = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
  function QRCodeSVG2(props, forwardedRef) {
    const _a = props, {
      value,
      size = DEFAULT_SIZE,
      level = DEFAULT_LEVEL,
      bgColor = DEFAULT_BGCOLOR,
      fgColor = DEFAULT_FGCOLOR,
      includeMargin = DEFAULT_INCLUDEMARGIN,
      minVersion = DEFAULT_MINVERSION,
      boostLevel,
      title,
      marginSize,
      imageSettings
    } = _a, otherProps = __objRest(_a, [
      "value",
      "size",
      "level",
      "bgColor",
      "fgColor",
      "includeMargin",
      "minVersion",
      "boostLevel",
      "title",
      "marginSize",
      "imageSettings"
    ]);
    const { margin, cells, numCells, calculatedImageSettings } = useQRCode({
      value,
      level,
      minVersion,
      boostLevel,
      includeMargin,
      marginSize,
      imageSettings,
      size
    });
    let cellsToDraw = cells;
    let image = null;
    if (imageSettings != null && calculatedImageSettings != null) {
      if (calculatedImageSettings.excavation != null) {
        cellsToDraw = excavateModules(
          cells,
          calculatedImageSettings.excavation
        );
      }
      image = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        "image",
        {
          href: imageSettings.src,
          height: calculatedImageSettings.h,
          width: calculatedImageSettings.w,
          x: calculatedImageSettings.x + margin,
          y: calculatedImageSettings.y + margin,
          preserveAspectRatio: "none",
          opacity: calculatedImageSettings.opacity,
          crossOrigin: calculatedImageSettings.crossOrigin
        }
      );
    }
    const fgPath = generatePath(cellsToDraw, margin);
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "svg",
      __spreadValues({
        height: size,
        width: size,
        viewBox: `0 0 ${numCells} ${numCells}`,
        ref: forwardedRef,
        role: "img"
      }, otherProps),
      !!title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", null, title),
      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        "path",
        {
          fill: bgColor,
          d: `M0,0 h${numCells}v${numCells}H0z`,
          shapeRendering: "crispEdges"
        }
      ),
      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", { fill: fgColor, d: fgPath, shapeRendering: "crispEdges" }),
      image
    );
  }
);
QRCodeSVG.displayName = "QRCodeSVG";



/***/ }),

/***/ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Action: () => (/* binding */ Action),
/* harmony export */   Await: () => (/* binding */ Await),
/* harmony export */   BrowserRouter: () => (/* binding */ BrowserRouter),
/* harmony export */   DataRouterContext: () => (/* binding */ DataRouterContext),
/* harmony export */   DataRouterStateContext: () => (/* binding */ DataRouterStateContext),
/* harmony export */   ErrorResponseImpl: () => (/* binding */ ErrorResponseImpl),
/* harmony export */   FetchersContext: () => (/* binding */ FetchersContext),
/* harmony export */   Form: () => (/* binding */ Form),
/* harmony export */   FrameworkContext: () => (/* binding */ FrameworkContext),
/* harmony export */   HashRouter: () => (/* binding */ HashRouter),
/* harmony export */   HistoryRouter: () => (/* binding */ HistoryRouter),
/* harmony export */   IDLE_BLOCKER: () => (/* binding */ IDLE_BLOCKER),
/* harmony export */   IDLE_FETCHER: () => (/* binding */ IDLE_FETCHER),
/* harmony export */   IDLE_NAVIGATION: () => (/* binding */ IDLE_NAVIGATION),
/* harmony export */   Link: () => (/* binding */ Link),
/* harmony export */   Links: () => (/* binding */ Links),
/* harmony export */   LocationContext: () => (/* binding */ LocationContext),
/* harmony export */   MemoryRouter: () => (/* binding */ MemoryRouter),
/* harmony export */   Meta: () => (/* binding */ Meta),
/* harmony export */   NavLink: () => (/* binding */ NavLink),
/* harmony export */   Navigate: () => (/* binding */ Navigate),
/* harmony export */   NavigationContext: () => (/* binding */ NavigationContext),
/* harmony export */   Outlet: () => (/* binding */ Outlet),
/* harmony export */   PrefetchPageLinks: () => (/* binding */ PrefetchPageLinks),
/* harmony export */   RemixErrorBoundary: () => (/* binding */ RemixErrorBoundary),
/* harmony export */   Route: () => (/* binding */ Route),
/* harmony export */   RouteContext: () => (/* binding */ RouteContext),
/* harmony export */   Router: () => (/* binding */ Router),
/* harmony export */   RouterProvider: () => (/* binding */ RouterProvider),
/* harmony export */   Routes: () => (/* binding */ Routes),
/* harmony export */   Scripts: () => (/* binding */ Scripts),
/* harmony export */   ScrollRestoration: () => (/* binding */ ScrollRestoration),
/* harmony export */   ServerMode: () => (/* binding */ ServerMode),
/* harmony export */   ServerRouter: () => (/* binding */ ServerRouter),
/* harmony export */   SingleFetchRedirectSymbol: () => (/* binding */ SingleFetchRedirectSymbol),
/* harmony export */   StaticRouter: () => (/* binding */ StaticRouter),
/* harmony export */   StaticRouterProvider: () => (/* binding */ StaticRouterProvider),
/* harmony export */   ViewTransitionContext: () => (/* binding */ ViewTransitionContext),
/* harmony export */   createBrowserHistory: () => (/* binding */ createBrowserHistory),
/* harmony export */   createBrowserRouter: () => (/* binding */ createBrowserRouter),
/* harmony export */   createClientRoutes: () => (/* binding */ createClientRoutes),
/* harmony export */   createClientRoutesWithHMRRevalidationOptOut: () => (/* binding */ createClientRoutesWithHMRRevalidationOptOut),
/* harmony export */   createCookie: () => (/* binding */ createCookie),
/* harmony export */   createCookieSessionStorage: () => (/* binding */ createCookieSessionStorage),
/* harmony export */   createHashRouter: () => (/* binding */ createHashRouter),
/* harmony export */   createMemoryRouter: () => (/* binding */ createMemoryRouter),
/* harmony export */   createMemorySessionStorage: () => (/* binding */ createMemorySessionStorage),
/* harmony export */   createPath: () => (/* binding */ createPath),
/* harmony export */   createRequestHandler: () => (/* binding */ createRequestHandler),
/* harmony export */   createRouter: () => (/* binding */ createRouter),
/* harmony export */   createRoutesFromChildren: () => (/* binding */ createRoutesFromChildren),
/* harmony export */   createRoutesFromElements: () => (/* binding */ createRoutesFromElements),
/* harmony export */   createRoutesStub: () => (/* binding */ createRoutesStub),
/* harmony export */   createSearchParams: () => (/* binding */ createSearchParams),
/* harmony export */   createSession: () => (/* binding */ createSession),
/* harmony export */   createSessionStorage: () => (/* binding */ createSessionStorage),
/* harmony export */   createStaticHandler: () => (/* binding */ createStaticHandler2),
/* harmony export */   createStaticRouter: () => (/* binding */ createStaticRouter),
/* harmony export */   data: () => (/* binding */ data),
/* harmony export */   decodeViaTurboStream: () => (/* binding */ decodeViaTurboStream),
/* harmony export */   deserializeErrors: () => (/* binding */ deserializeErrors2),
/* harmony export */   generatePath: () => (/* binding */ generatePath),
/* harmony export */   getPatchRoutesOnNavigationFunction: () => (/* binding */ getPatchRoutesOnNavigationFunction),
/* harmony export */   getSingleFetchDataStrategy: () => (/* binding */ getSingleFetchDataStrategy),
/* harmony export */   invariant: () => (/* binding */ invariant),
/* harmony export */   isCookie: () => (/* binding */ isCookie),
/* harmony export */   isRouteErrorResponse: () => (/* binding */ isRouteErrorResponse),
/* harmony export */   isSession: () => (/* binding */ isSession),
/* harmony export */   mapRouteProperties: () => (/* binding */ mapRouteProperties),
/* harmony export */   matchPath: () => (/* binding */ matchPath),
/* harmony export */   matchRoutes: () => (/* binding */ matchRoutes),
/* harmony export */   parsePath: () => (/* binding */ parsePath),
/* harmony export */   redirect: () => (/* binding */ redirect),
/* harmony export */   redirectDocument: () => (/* binding */ redirectDocument),
/* harmony export */   renderMatches: () => (/* binding */ renderMatches),
/* harmony export */   replace: () => (/* binding */ replace),
/* harmony export */   resolvePath: () => (/* binding */ resolvePath),
/* harmony export */   setDevServerHooks: () => (/* binding */ setDevServerHooks),
/* harmony export */   shouldHydrateRouteLoader: () => (/* binding */ shouldHydrateRouteLoader),
/* harmony export */   useActionData: () => (/* binding */ useActionData),
/* harmony export */   useAsyncError: () => (/* binding */ useAsyncError),
/* harmony export */   useAsyncValue: () => (/* binding */ useAsyncValue),
/* harmony export */   useBeforeUnload: () => (/* binding */ useBeforeUnload),
/* harmony export */   useBlocker: () => (/* binding */ useBlocker),
/* harmony export */   useFetcher: () => (/* binding */ useFetcher),
/* harmony export */   useFetchers: () => (/* binding */ useFetchers),
/* harmony export */   useFogOFWarDiscovery: () => (/* binding */ useFogOFWarDiscovery),
/* harmony export */   useFormAction: () => (/* binding */ useFormAction),
/* harmony export */   useHref: () => (/* binding */ useHref),
/* harmony export */   useInRouterContext: () => (/* binding */ useInRouterContext),
/* harmony export */   useLinkClickHandler: () => (/* binding */ useLinkClickHandler),
/* harmony export */   useLoaderData: () => (/* binding */ useLoaderData),
/* harmony export */   useLocation: () => (/* binding */ useLocation),
/* harmony export */   useMatch: () => (/* binding */ useMatch),
/* harmony export */   useMatches: () => (/* binding */ useMatches),
/* harmony export */   useNavigate: () => (/* binding */ useNavigate),
/* harmony export */   useNavigation: () => (/* binding */ useNavigation),
/* harmony export */   useNavigationType: () => (/* binding */ useNavigationType),
/* harmony export */   useOutlet: () => (/* binding */ useOutlet),
/* harmony export */   useOutletContext: () => (/* binding */ useOutletContext),
/* harmony export */   useParams: () => (/* binding */ useParams),
/* harmony export */   usePrompt: () => (/* binding */ usePrompt),
/* harmony export */   useResolvedPath: () => (/* binding */ useResolvedPath),
/* harmony export */   useRevalidator: () => (/* binding */ useRevalidator),
/* harmony export */   useRouteError: () => (/* binding */ useRouteError),
/* harmony export */   useRouteLoaderData: () => (/* binding */ useRouteLoaderData),
/* harmony export */   useRoutes: () => (/* binding */ useRoutes),
/* harmony export */   useScrollRestoration: () => (/* binding */ useScrollRestoration),
/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),
/* harmony export */   useSubmit: () => (/* binding */ useSubmit),
/* harmony export */   useViewTransitionState: () => (/* binding */ useViewTransitionState)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var turbo_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! turbo-stream */ "./node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.mjs");
/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cookie */ "./node_modules/.pnpm/cookie@1.0.2/node_modules/cookie/dist/index.js");
/* harmony import */ var set_cookie_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! set-cookie-parser */ "./node_modules/.pnpm/set-cookie-parser@2.7.1/node_modules/set-cookie-parser/lib/set-cookie.js");
/**
 * react-router v7.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */

// lib/router/history.ts
var Action = /* @__PURE__ */ ((Action2) => {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
  return Action2;
})(Action || {});
var PopStateEventType = "popstate";
function createMemoryHistory(options = {}) {
  let { initialEntries = ["/"], initialIndex, v5Compat = false } = options;
  let entries;
  entries = initialEntries.map(
    (entry, index2) => createMemoryLocation(
      entry,
      typeof entry === "string" ? null : entry.state,
      index2 === 0 ? "default" : void 0
    )
  );
  let index = clampIndex(
    initialIndex == null ? entries.length - 1 : initialIndex
  );
  let action = "POP" /* Pop */;
  let listener = null;
  function clampIndex(n) {
    return Math.min(Math.max(n, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index];
  }
  function createMemoryLocation(to, state = null, key) {
    let location = createLocation(
      entries ? getCurrentLocation().pathname : "/",
      to,
      state,
      key
    );
    warning(
      location.pathname.charAt(0) === "/",
      `relative pathnames are not supported in memory history: ${JSON.stringify(
        to
      )}`
    );
    return location;
  }
  function createHref2(to) {
    return typeof to === "string" ? to : createPath(to);
  }
  let history = {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref: createHref2,
    createURL(to) {
      return new URL(createHref2(to), "http://localhost");
    },
    encodeLocation(to) {
      let path = typeof to === "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push(to, state) {
      action = "PUSH" /* Push */;
      let nextLocation = createMemoryLocation(to, state);
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      if (v5Compat && listener) {
        listener({ action, location: nextLocation, delta: 1 });
      }
    },
    replace(to, state) {
      action = "REPLACE" /* Replace */;
      let nextLocation = createMemoryLocation(to, state);
      entries[index] = nextLocation;
      if (v5Compat && listener) {
        listener({ action, location: nextLocation, delta: 0 });
      }
    },
    go(delta) {
      action = "POP" /* Pop */;
      let nextIndex = clampIndex(index + delta);
      let nextLocation = entries[nextIndex];
      index = nextIndex;
      if (listener) {
        listener({ action, location: nextLocation, delta });
      }
    },
    listen(fn) {
      listener = fn;
      return () => {
        listener = null;
      };
    }
  };
  return history;
}
function createBrowserHistory(options = {}) {
  function createBrowserLocation(window2, globalHistory) {
    let { pathname, search, hash } = window2.location;
    return createLocation(
      "",
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(
    createBrowserLocation,
    createBrowserHref,
    null,
    options
  );
}
function createHashHistory(options = {}) {
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window2.location.hash.substring(1));
    if (!pathname.startsWith("/") && !pathname.startsWith(".")) {
      pathname = "/" + pathname;
    }
    return createLocation(
      "",
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base");
    let href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href;
      let hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(
      location.pathname.charAt(0) === "/",
      `relative pathnames are not supported in hash history.push(${JSON.stringify(
        to
      )})`
    );
  }
  return getUrlBasedHistory(
    createHashLocation,
    createHashHref,
    validateHashLocation,
    options
  );
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined") console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
function createLocation(current, to, state = null, key) {
  let location = {
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: "",
    ...typeof to === "string" ? parsePath(to) : to,
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  };
  return location;
}
function createPath({
  pathname = "/",
  search = "",
  hash = ""
}) {
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substring(hashIndex);
      path = path.substring(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substring(searchIndex);
      path = path.substring(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {
  let { window: window2 = document.defaultView, v5Compat = false } = options;
  let globalHistory = window2.history;
  let action = "POP" /* Pop */;
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState({ ...globalHistory.state, idx: index }, "");
  }
  function getIndex() {
    let state = globalHistory.state || { idx: null };
    return state.idx;
  }
  function handlePop() {
    action = "POP" /* Pop */;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({ action, location: history.location, delta });
    }
  }
  function push(to, state) {
    action = "PUSH" /* Push */;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex() + 1;
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 1 });
    }
  }
  function replace2(to, state) {
    action = "REPLACE" /* Replace */;
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex();
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 0 });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    href = href.replace(/ $/, "%20");
    invariant(
      base,
      `No window.location.(origin|href) available to create URL for href: ${href}`
    );
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref2(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace: replace2,
    go(n) {
      return globalHistory.go(n);
    }
  };
  return history;
}

// lib/router/utils.ts
var immutableRouteKeys = /* @__PURE__ */ new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "children"
]);
function isIndexRoute(route) {
  return route.index === true;
}
function convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {
  return routes.map((route, index) => {
    let treePath = [...parentPath, String(index)];
    let id = typeof route.id === "string" ? route.id : treePath.join("-");
    invariant(
      route.index !== true || !route.children,
      `Cannot specify children on an index route`
    );
    invariant(
      !manifest[id],
      `Found a route id collision on id "${id}".  Route id's must be globally unique within Data Router usages`
    );
    if (isIndexRoute(route)) {
      let indexRoute = {
        ...route,
        ...mapRouteProperties2(route),
        id
      };
      manifest[id] = indexRoute;
      return indexRoute;
    } else {
      let pathOrLayoutRoute = {
        ...route,
        ...mapRouteProperties2(route),
        id,
        children: void 0
      };
      manifest[id] = pathOrLayoutRoute;
      if (route.children) {
        pathOrLayoutRoute.children = convertRoutesToDataRoutes(
          route.children,
          mapRouteProperties2,
          treePath,
          manifest
        );
      }
      return pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes, locationArg, basename = "/") {
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i = 0; matches == null && i < branches.length; ++i) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(
      branches[i],
      decoded,
      allowPartial
    );
  }
  return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
  let { route, pathname, params } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = "") {
  let flattenRoute = (route, index, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(
        meta.relativePath.startsWith(parentPath),
        `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
      );
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        `Index routes must not have child routes. Please remove all child routes from route path "${path}".`
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    if (route.path === "" || !route.path?.includes("?")) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(
    ...restExploded.map(
      (subpath) => subpath === "" ? required : [required, subpath].join("/")
    )
  );
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map(
    (exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded
  );
}
function rankRouteBranches(branches) {
  branches.sort(
    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(
      a.routesMeta.map((meta) => meta.childrenIndex),
      b.routesMeta.map((meta) => meta.childrenIndex)
    )
  );
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s) => s === "*";
function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s) => !isSplat(s)).reduce(
    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue),
    initialScore
  );
}
function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
  let { routesMeta } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath(
      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },
      remainingPathname
    );
    let route = meta.route;
    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {
      match = matchPath(
        {
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end: false
        },
        remainingPathname
      );
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(
        joinPaths([matchedPathname, match.pathnameBase])
      ),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function generatePath(originalPath, params = {}) {
  let path = originalPath;
  if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
    warning(
      false,
      `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`
    );
    path = path.replace(/\*$/, "/*");
  }
  const prefix = path.startsWith("/") ? "/" : "";
  const stringify = (p) => p == null ? "" : typeof p === "string" ? p : String(p);
  const segments = path.split(/\/+/).map((segment, index, array) => {
    const isLastSegment = index === array.length - 1;
    if (isLastSegment && segment === "*") {
      const star = "*";
      return stringify(params[star]);
    }
    const keyMatch = segment.match(/^:([\w-]+)(\??)$/);
    if (keyMatch) {
      const [, key, optional] = keyMatch;
      let param = params[key];
      invariant(optional === "?" || param != null, `Missing ":${key}" param`);
      return stringify(param);
    }
    return segment.replace(/\?$/g, "");
  }).filter((segment) => !!segment);
  return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = { path: pattern, caseSensitive: false, end: true };
  }
  let [matcher, compiledParams] = compilePath(
    pattern.path,
    pattern.caseSensitive,
    pattern.end
  );
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce(
    (memo2, { paramName, isOptional }, index) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      const value = captureGroups[index];
      if (isOptional && !value) {
        memo2[paramName] = void 0;
      } else {
        memo2[paramName] = (value || "").replace(/%2F/g, "/");
      }
      return memo2;
    },
    {}
  );
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive = false, end = true) {
  warning(
    path === "*" || !path.endsWith("*") || path.endsWith("/*"),
    `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`
  );
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(
    /\/:([\w-]+)(\?)?/g,
    (_, paramName, isOptional) => {
      params.push({ paramName, isOptional: isOptional != null });
      return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    }
  );
  if (path.endsWith("*")) {
    params.push({ paramName: "*" });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else {
  }
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v) => decodeURIComponent(v).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(
      false,
      `The URL path "${value}" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`
    );
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname = "/") {
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(
    path
  )}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
  return matches.filter(
    (match, index) => index === 0 || match.route.path && match.route.path.length > 0
  );
}
function getResolveToMatches(matches) {
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches.map(
    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase
  );
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = { ...toArg };
    invariant(
      !to.pathname || !to.pathname.includes("?"),
      getInvalidPathError("?", "pathname", "search", to)
    );
    invariant(
      !to.pathname || !to.pathname.includes("#"),
      getInvalidPathError("#", "pathname", "hash", to)
    );
    invariant(
      !to.search || !to.search.includes("#"),
      getInvalidPathError("#", "search", "hash", to)
    );
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
var normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
var normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
var normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
var DataWithResponseInit = class {
  constructor(data2, init) {
    this.type = "DataWithResponseInit";
    this.data = data2;
    this.init = init || null;
  }
};
function data(data2, init) {
  return new DataWithResponseInit(
    data2,
    typeof init === "number" ? { status: init } : init
  );
}
var redirect = (url, init = 302) => {
  let responseInit = init;
  if (typeof responseInit === "number") {
    responseInit = { status: responseInit };
  } else if (typeof responseInit.status === "undefined") {
    responseInit.status = 302;
  }
  let headers = new Headers(responseInit.headers);
  headers.set("Location", url);
  return new Response(null, {
    ...responseInit,
    headers
  });
};
var redirectDocument = (url, init) => {
  let response = redirect(url, init);
  response.headers.set("X-Remix-Reload-Document", "true");
  return response;
};
var replace = (url, init) => {
  let response = redirect(url, init);
  response.headers.set("X-Remix-Replace", "true");
  return response;
};
var ErrorResponseImpl = class {
  constructor(status, statusText, data2, internal = false) {
    this.status = status;
    this.statusText = statusText || "";
    this.internal = internal;
    if (data2 instanceof Error) {
      this.data = data2.toString();
      this.error = data2;
    } else {
      this.data = data2;
    }
  }
};
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}

// lib/router/router.ts
var validMutationMethodsArr = [
  "POST",
  "PUT",
  "PATCH",
  "DELETE"
];
var validMutationMethods = new Set(
  validMutationMethodsArr
);
var validRequestMethodsArr = [
  "GET",
  ...validMutationMethodsArr
];
var validRequestMethods = new Set(validRequestMethodsArr);
var redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
var redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);
var IDLE_NAVIGATION = {
  state: "idle",
  location: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
var IDLE_FETCHER = {
  state: "idle",
  data: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0
};
var IDLE_BLOCKER = {
  state: "unblocked",
  proceed: void 0,
  reset: void 0,
  location: void 0
};
var ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var defaultMapRouteProperties = (route) => ({
  hasErrorBoundary: Boolean(route.hasErrorBoundary)
});
var TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
var ResetLoaderDataSymbol = Symbol("ResetLoaderData");
function createRouter(init) {
  const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : void 0;
  const isBrowser2 = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
  invariant(
    init.routes.length > 0,
    "You must provide a non-empty routes array to createRouter"
  );
  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(
    init.routes,
    mapRouteProperties2,
    void 0,
    manifest
  );
  let inFlightDataRoutes;
  let basename = init.basename || "/";
  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;
  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;
  let future = {
    ...init.future
  };
  let unlistenHistory = null;
  let subscribers = /* @__PURE__ */ new Set();
  let savedScrollPositions2 = null;
  let getScrollRestorationKey2 = null;
  let getScrollPosition = null;
  let initialScrollRestored = init.hydrationData != null;
  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
  let initialErrors = null;
  if (initialMatches == null && !patchRoutesOnNavigationImpl) {
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    });
    let { matches, route } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches;
    initialErrors = { [route.id]: error };
  }
  if (initialMatches && !init.hydrationData) {
    let fogOfWar = checkFogOfWar(
      initialMatches,
      dataRoutes,
      init.history.location.pathname
    );
    if (fogOfWar.active) {
      initialMatches = null;
    }
  }
  let initialized;
  if (!initialMatches) {
    initialized = false;
    initialMatches = [];
    let fogOfWar = checkFogOfWar(
      null,
      dataRoutes,
      init.history.location.pathname
    );
    if (fogOfWar.active && fogOfWar.matches) {
      initialMatches = fogOfWar.matches;
    }
  } else if (initialMatches.some((m) => m.route.lazy)) {
    initialized = false;
  } else if (!initialMatches.some((m) => m.route.loader)) {
    initialized = true;
  } else {
    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
    let errors = init.hydrationData ? init.hydrationData.errors : null;
    if (errors) {
      let idx = initialMatches.findIndex(
        (m) => errors[m.route.id] !== void 0
      );
      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));
    } else {
      initialized = initialMatches.every(
        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)
      );
    }
  }
  let router;
  let state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? false : null,
    preventScrollReset: false,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  };
  let pendingAction = "POP" /* Pop */;
  let pendingPreventScrollReset = false;
  let pendingNavigationController;
  let pendingViewTransitionEnabled = false;
  let appliedViewTransitions = /* @__PURE__ */ new Map();
  let removePageHideEventListener = null;
  let isUninterruptedRevalidation = false;
  let isRevalidationRequired = false;
  let cancelledFetcherLoads = /* @__PURE__ */ new Set();
  let fetchControllers = /* @__PURE__ */ new Map();
  let incrementingLoadId = 0;
  let pendingNavigationLoadId = -1;
  let fetchReloadIds = /* @__PURE__ */ new Map();
  let fetchRedirectIds = /* @__PURE__ */ new Set();
  let fetchLoadMatches = /* @__PURE__ */ new Map();
  let activeFetchers = /* @__PURE__ */ new Map();
  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();
  let blockerFunctions = /* @__PURE__ */ new Map();
  let unblockBlockerHistoryUpdate = void 0;
  let pendingRevalidationDfd = null;
  function initialize() {
    unlistenHistory = init.history.listen(
      ({ action: historyAction, location, delta }) => {
        if (unblockBlockerHistoryUpdate) {
          unblockBlockerHistoryUpdate();
          unblockBlockerHistoryUpdate = void 0;
          return;
        }
        warning(
          blockerFunctions.size === 0 || delta != null,
          "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL."
        );
        let blockerKey = shouldBlockNavigation({
          currentLocation: state.location,
          nextLocation: location,
          historyAction
        });
        if (blockerKey && delta != null) {
          let nextHistoryUpdatePromise = new Promise((resolve) => {
            unblockBlockerHistoryUpdate = resolve;
          });
          init.history.go(delta * -1);
          updateBlocker(blockerKey, {
            state: "blocked",
            location,
            proceed() {
              updateBlocker(blockerKey, {
                state: "proceeding",
                proceed: void 0,
                reset: void 0,
                location
              });
              nextHistoryUpdatePromise.then(() => init.history.go(delta));
            },
            reset() {
              let blockers = new Map(state.blockers);
              blockers.set(blockerKey, IDLE_BLOCKER);
              updateState({ blockers });
            }
          });
          return;
        }
        return startNavigation(historyAction, location);
      }
    );
    if (isBrowser2) {
      restoreAppliedTransitions(routerWindow, appliedViewTransitions);
      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);
      routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
      removePageHideEventListener = () => routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
    }
    if (!state.initialized) {
      startNavigation("POP" /* Pop */, state.location, {
        initialHydration: true
      });
    }
    return router;
  }
  function dispose() {
    if (unlistenHistory) {
      unlistenHistory();
    }
    if (removePageHideEventListener) {
      removePageHideEventListener();
    }
    subscribers.clear();
    pendingNavigationController && pendingNavigationController.abort();
    state.fetchers.forEach((_, key) => deleteFetcher(key));
    state.blockers.forEach((_, key) => deleteBlocker(key));
  }
  function subscribe(fn) {
    subscribers.add(fn);
    return () => subscribers.delete(fn);
  }
  function updateState(newState, opts = {}) {
    state = {
      ...state,
      ...newState
    };
    let unmountedFetchers = [];
    let mountedFetchers = [];
    state.fetchers.forEach((fetcher, key) => {
      if (fetcher.state === "idle") {
        if (fetchersQueuedForDeletion.has(key)) {
          unmountedFetchers.push(key);
        } else {
          mountedFetchers.push(key);
        }
      }
    });
    [...subscribers].forEach(
      (subscriber) => subscriber(state, {
        deletedFetchers: unmountedFetchers,
        viewTransitionOpts: opts.viewTransitionOpts,
        flushSync: opts.flushSync === true
      })
    );
    unmountedFetchers.forEach((key) => deleteFetcher(key));
    mountedFetchers.forEach((key) => state.fetchers.delete(key));
  }
  function completeNavigation(location, newState, { flushSync } = {}) {
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && location.state?._isRedirect !== true;
    let actionData;
    if (newState.actionData) {
      if (Object.keys(newState.actionData).length > 0) {
        actionData = newState.actionData;
      } else {
        actionData = null;
      }
    } else if (isActionReload) {
      actionData = state.actionData;
    } else {
      actionData = null;
    }
    let loaderData = newState.loaderData ? mergeLoaderData(
      state.loaderData,
      newState.loaderData,
      newState.matches || [],
      newState.errors
    ) : state.loaderData;
    let blockers = state.blockers;
    if (blockers.size > 0) {
      blockers = new Map(blockers);
      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));
    }
    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;
    if (inFlightDataRoutes) {
      dataRoutes = inFlightDataRoutes;
      inFlightDataRoutes = void 0;
    }
    if (isUninterruptedRevalidation) {
    } else if (pendingAction === "POP" /* Pop */) {
    } else if (pendingAction === "PUSH" /* Push */) {
      init.history.push(location, location.state);
    } else if (pendingAction === "REPLACE" /* Replace */) {
      init.history.replace(location, location.state);
    }
    let viewTransitionOpts;
    if (pendingAction === "POP" /* Pop */) {
      let priorPaths = appliedViewTransitions.get(state.location.pathname);
      if (priorPaths && priorPaths.has(location.pathname)) {
        viewTransitionOpts = {
          currentLocation: state.location,
          nextLocation: location
        };
      } else if (appliedViewTransitions.has(location.pathname)) {
        viewTransitionOpts = {
          currentLocation: location,
          nextLocation: state.location
        };
      }
    } else if (pendingViewTransitionEnabled) {
      let toPaths = appliedViewTransitions.get(state.location.pathname);
      if (toPaths) {
        toPaths.add(location.pathname);
      } else {
        toPaths = /* @__PURE__ */ new Set([location.pathname]);
        appliedViewTransitions.set(state.location.pathname, toPaths);
      }
      viewTransitionOpts = {
        currentLocation: state.location,
        nextLocation: location
      };
    }
    updateState(
      {
        ...newState,
        // matches, errors, fetchers go through as-is
        actionData,
        loaderData,
        historyAction: pendingAction,
        location,
        initialized: true,
        navigation: IDLE_NAVIGATION,
        revalidation: "idle",
        restoreScrollPosition: getSavedScrollPosition(
          location,
          newState.matches || state.matches
        ),
        preventScrollReset,
        blockers
      },
      {
        viewTransitionOpts,
        flushSync: flushSync === true
      }
    );
    pendingAction = "POP" /* Pop */;
    pendingPreventScrollReset = false;
    pendingViewTransitionEnabled = false;
    isUninterruptedRevalidation = false;
    isRevalidationRequired = false;
    pendingRevalidationDfd?.resolve();
    pendingRevalidationDfd = null;
  }
  async function navigate(to, opts) {
    if (typeof to === "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(
      state.location,
      state.matches,
      basename,
      to,
      opts?.fromRouteId,
      opts?.relative
    );
    let { path, submission, error } = normalizeNavigateOptions(
      false,
      normalizedPath,
      opts
    );
    let currentLocation = state.location;
    let nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = {
      ...nextLocation,
      ...init.history.encodeLocation(nextLocation)
    };
    let userReplace = opts && opts.replace != null ? opts.replace : void 0;
    let historyAction = "PUSH" /* Push */;
    if (userReplace === true) {
      historyAction = "REPLACE" /* Replace */;
    } else if (userReplace === false) {
    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {
      historyAction = "REPLACE" /* Replace */;
    }
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : void 0;
    let flushSync = (opts && opts.flushSync) === true;
    let blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          });
          navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER);
          updateState({ blockers });
        }
      });
      return;
    }
    await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace,
      enableViewTransition: opts && opts.viewTransition,
      flushSync
    });
  }
  function revalidate() {
    if (!pendingRevalidationDfd) {
      pendingRevalidationDfd = createDeferred();
    }
    interruptActiveLoads();
    updateState({ revalidation: "loading" });
    let promise = pendingRevalidationDfd.promise;
    if (state.navigation.state === "submitting") {
      return promise;
    }
    if (state.navigation.state === "idle") {
      startNavigation(state.historyAction, state.location, {
        startUninterruptedRevalidation: true
      });
      return promise;
    }
    startNavigation(
      pendingAction || state.historyAction,
      state.navigation.location,
      {
        overrideNavigation: state.navigation,
        // Proxy through any rending view transition
        enableViewTransition: pendingViewTransitionEnabled === true
      }
    );
    return promise;
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort();
    pendingNavigationController = null;
    pendingAction = historyAction;
    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
    saveScrollPosition(state.location, state.matches);
    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let loadingNavigation = opts && opts.overrideNavigation;
    let matches = matchRoutes(routesToUse, location, basename);
    let flushSync = (opts && opts.flushSync) === true;
    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      let { error, notFoundMatches, route } = handleNavigational404(
        location.pathname
      );
      completeNavigation(
        location,
        {
          matches: notFoundMatches,
          loaderData: {},
          errors: {
            [route.id]: error
          }
        },
        { flushSync }
      );
      return;
    }
    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location, { matches }, { flushSync });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(
      init.history,
      location,
      pendingNavigationController.signal,
      opts && opts.submission
    );
    let pendingActionResult;
    if (opts && opts.pendingError) {
      pendingActionResult = [
        findNearestBoundary(matches).route.id,
        { type: "error" /* error */, error: opts.pendingError }
      ];
    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionResult = await handleAction(
        request,
        location,
        opts.submission,
        matches,
        fogOfWar.active,
        { replace: opts.replace, flushSync }
      );
      if (actionResult.shortCircuited) {
        return;
      }
      if (actionResult.pendingActionResult) {
        let [routeId, result] = actionResult.pendingActionResult;
        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {
          pendingNavigationController = null;
          completeNavigation(location, {
            matches: actionResult.matches,
            loaderData: {},
            errors: {
              [routeId]: result.error
            }
          });
          return;
        }
      }
      matches = actionResult.matches || matches;
      pendingActionResult = actionResult.pendingActionResult;
      loadingNavigation = getLoadingNavigation(location, opts.submission);
      flushSync = false;
      fogOfWar.active = false;
      request = createClientSideRequest(
        init.history,
        request.url,
        request.signal
      );
    }
    let {
      shortCircuited,
      matches: updatedMatches,
      loaderData,
      errors
    } = await handleLoaders(
      request,
      location,
      matches,
      fogOfWar.active,
      loadingNavigation,
      opts && opts.submission,
      opts && opts.fetcherSubmission,
      opts && opts.replace,
      opts && opts.initialHydration === true,
      flushSync,
      pendingActionResult
    );
    if (shortCircuited) {
      return;
    }
    pendingNavigationController = null;
    completeNavigation(location, {
      matches: updatedMatches || matches,
      ...getActionDataForCommit(pendingActionResult),
      loaderData,
      errors
    });
  }
  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {
    interruptActiveLoads();
    let navigation = getSubmittingNavigation(location, submission);
    updateState({ navigation }, { flushSync: opts.flushSync === true });
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        matches,
        location.pathname,
        request.signal
      );
      if (discoverResult.type === "aborted") {
        return { shortCircuited: true };
      } else if (discoverResult.type === "error") {
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          pendingActionResult: [
            boundaryId,
            {
              type: "error" /* error */,
              error: discoverResult.error
            }
          ]
        };
      } else if (!discoverResult.matches) {
        let { notFoundMatches, error, route } = handleNavigational404(
          location.pathname
        );
        return {
          matches: notFoundMatches,
          pendingActionResult: [
            route.id,
            {
              type: "error" /* error */,
              error
            }
          ]
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let result;
    let actionMatch = getTargetMatch(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      result = {
        type: "error" /* error */,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    } else {
      let results = await callDataStrategy(
        "action",
        state,
        request,
        [actionMatch],
        matches,
        null
      );
      result = results[actionMatch.route.id];
      if (request.signal.aborted) {
        return { shortCircuited: true };
      }
    }
    if (isRedirectResult(result)) {
      let replace2;
      if (opts && opts.replace != null) {
        replace2 = opts.replace;
      } else {
        let location2 = normalizeRedirectLocation(
          result.response.headers.get("Location"),
          new URL(request.url),
          basename
        );
        replace2 = location2 === state.location.pathname + state.location.search;
      }
      await startRedirectNavigation(request, result, true, {
        submission,
        replace: replace2
      });
      return { shortCircuited: true };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      if ((opts && opts.replace) !== true) {
        pendingAction = "PUSH" /* Push */;
      }
      return {
        matches,
        pendingActionResult: [boundaryMatch.route.id, result]
      };
    }
    return {
      matches,
      pendingActionResult: [actionMatch.route.id, result]
    };
  }
  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;
    if (isFogOfWar) {
      if (shouldUpdateNavigationState) {
        let actionData = getUpdatedActionData(pendingActionResult);
        updateState(
          {
            navigation: loadingNavigation,
            ...actionData !== void 0 ? { actionData } : {}
          },
          {
            flushSync
          }
        );
      }
      let discoverResult = await discoverRoutes(
        matches,
        location.pathname,
        request.signal
      );
      if (discoverResult.type === "aborted") {
        return { shortCircuited: true };
      } else if (discoverResult.type === "error") {
        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;
        return {
          matches: discoverResult.partialMatches,
          loaderData: {},
          errors: {
            [boundaryId]: discoverResult.error
          }
        };
      } else if (!discoverResult.matches) {
        let { error, notFoundMatches, route } = handleNavigational404(
          location.pathname
        );
        return {
          matches: notFoundMatches,
          loaderData: {},
          errors: {
            [route.id]: error
          }
        };
      } else {
        matches = discoverResult.matches;
      }
    }
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init.history,
      state,
      matches,
      activeSubmission,
      location,
      initialHydration === true,
      isRevalidationRequired,
      cancelledFetcherLoads,
      fetchersQueuedForDeletion,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      pendingActionResult
    );
    pendingNavigationLoadId = ++incrementingLoadId;
    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      completeNavigation(
        location,
        {
          matches,
          loaderData: {},
          // Commit pending error if we're short circuiting
          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,
          ...getActionDataForCommit(pendingActionResult),
          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}
        },
        { flushSync }
      );
      return { shortCircuited: true };
    }
    if (shouldUpdateNavigationState) {
      let updates = {};
      if (!isFogOfWar) {
        updates.navigation = loadingNavigation;
        let actionData = getUpdatedActionData(pendingActionResult);
        if (actionData !== void 0) {
          updates.actionData = actionData;
        }
      }
      if (revalidatingFetchers.length > 0) {
        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);
      }
      updateState(updates, { flushSync });
    }
    revalidatingFetchers.forEach((rf) => {
      abortFetcher(rf.key);
      if (rf.controller) {
        fetchControllers.set(rf.key, rf.controller);
      }
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));
    if (pendingNavigationController) {
      pendingNavigationController.signal.addEventListener(
        "abort",
        abortPendingFetchRevalidations
      );
    }
    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(
      state,
      matches,
      matchesToLoad,
      revalidatingFetchers,
      request
    );
    if (request.signal.aborted) {
      return { shortCircuited: true };
    }
    if (pendingNavigationController) {
      pendingNavigationController.signal.removeEventListener(
        "abort",
        abortPendingFetchRevalidations
      );
    }
    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
    let redirect2 = findRedirect(loaderResults);
    if (redirect2) {
      await startRedirectNavigation(request, redirect2.result, true, {
        replace: replace2
      });
      return { shortCircuited: true };
    }
    redirect2 = findRedirect(fetcherResults);
    if (redirect2) {
      fetchRedirectIds.add(redirect2.key);
      await startRedirectNavigation(request, redirect2.result, true, {
        replace: replace2
      });
      return { shortCircuited: true };
    }
    let { loaderData, errors } = processLoaderData(
      state,
      matches,
      loaderResults,
      pendingActionResult,
      revalidatingFetchers,
      fetcherResults
    );
    if (initialHydration && state.errors) {
      errors = { ...state.errors, ...errors };
    }
    let updatedFetchers = markFetchRedirectsDone();
    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return {
      matches,
      loaderData,
      errors,
      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}
    };
  }
  function getUpdatedActionData(pendingActionResult) {
    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {
      return {
        [pendingActionResult[0]]: pendingActionResult[1].data
      };
    } else if (state.actionData) {
      if (Object.keys(state.actionData).length === 0) {
        return null;
      } else {
        return state.actionData;
      }
    }
  }
  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {
    revalidatingFetchers.forEach((rf) => {
      let fetcher = state.fetchers.get(rf.key);
      let revalidatingFetcher = getLoadingFetcher(
        void 0,
        fetcher ? fetcher.data : void 0
      );
      state.fetchers.set(rf.key, revalidatingFetcher);
    });
    return new Map(state.fetchers);
  }
  async function fetch2(key, routeId, href, opts) {
    abortFetcher(key);
    let flushSync = (opts && opts.flushSync) === true;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let normalizedPath = normalizeTo(
      state.location,
      state.matches,
      basename,
      href,
      routeId,
      opts?.relative
    );
    let matches = matchRoutes(routesToUse, normalizedPath, basename);
    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);
    if (fogOfWar.active && fogOfWar.matches) {
      matches = fogOfWar.matches;
    }
    if (!matches) {
      setFetcherError(
        key,
        routeId,
        getInternalRouterError(404, { pathname: normalizedPath }),
        { flushSync }
      );
      return;
    }
    let { path, submission, error } = normalizeNavigateOptions(
      true,
      normalizedPath,
      opts
    );
    if (error) {
      setFetcherError(key, routeId, error, { flushSync });
      return;
    }
    let match = getTargetMatch(matches, path);
    let preventScrollReset = (opts && opts.preventScrollReset) === true;
    if (submission && isMutationMethod(submission.formMethod)) {
      await handleFetcherAction(
        key,
        routeId,
        path,
        match,
        matches,
        fogOfWar.active,
        flushSync,
        preventScrollReset,
        submission
      );
      return;
    }
    fetchLoadMatches.set(key, { routeId, path });
    await handleFetcherLoader(
      key,
      routeId,
      path,
      match,
      matches,
      fogOfWar.active,
      flushSync,
      preventScrollReset,
      submission
    );
  }
  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {
    interruptActiveLoads();
    fetchLoadMatches.delete(key);
    function detectAndHandle405Error(m) {
      if (!m.route.action && !m.route.lazy) {
        let error = getInternalRouterError(405, {
          method: submission.formMethod,
          pathname: path,
          routeId
        });
        setFetcherError(key, routeId, error, { flushSync });
        return true;
      }
      return false;
    }
    if (!isFogOfWar && detectAndHandle405Error(match)) {
      return;
    }
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
      flushSync
    });
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(
      init.history,
      path,
      abortController.signal,
      submission
    );
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        requestMatches,
        path,
        fetchRequest.signal
      );
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, { flushSync });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(
          key,
          routeId,
          getInternalRouterError(404, { pathname: path }),
          { flushSync }
        );
        return;
      } else {
        requestMatches = discoverResult.matches;
        match = getTargetMatch(requestMatches, path);
        if (detectAndHandle405Error(match)) {
          return;
        }
      }
    }
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let actionResults = await callDataStrategy(
      "action",
      state,
      fetchRequest,
      [match],
      requestMatches,
      key
    );
    let actionResult = actionResults[match.route.id];
    if (fetchRequest.signal.aborted) {
      if (fetchControllers.get(key) === abortController) {
        fetchControllers.delete(key);
      }
      return;
    }
    if (fetchersQueuedForDeletion.has(key)) {
      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      }
    } else {
      if (isRedirectResult(actionResult)) {
        fetchControllers.delete(key);
        if (pendingNavigationLoadId > originatingLoadId) {
          updateFetcherState(key, getDoneFetcher(void 0));
          return;
        } else {
          fetchRedirectIds.add(key);
          updateFetcherState(key, getLoadingFetcher(submission));
          return startRedirectNavigation(fetchRequest, actionResult, false, {
            fetcherSubmission: submission,
            preventScrollReset
          });
        }
      }
      if (isErrorResult(actionResult)) {
        setFetcherError(key, routeId, actionResult.error);
        return;
      }
    }
    let nextLocation = state.navigation.location || state.location;
    let revalidationRequest = createClientSideRequest(
      init.history,
      nextLocation,
      abortController.signal
    );
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init.history,
      state,
      matches,
      submission,
      nextLocation,
      false,
      isRevalidationRequired,
      cancelledFetcherLoads,
      fetchersQueuedForDeletion,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      [match.route.id, actionResult]
    );
    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
      let staleKey = rf.key;
      let existingFetcher2 = state.fetchers.get(staleKey);
      let revalidatingFetcher = getLoadingFetcher(
        void 0,
        existingFetcher2 ? existingFetcher2.data : void 0
      );
      state.fetchers.set(staleKey, revalidatingFetcher);
      abortFetcher(staleKey);
      if (rf.controller) {
        fetchControllers.set(staleKey, rf.controller);
      }
    });
    updateState({ fetchers: new Map(state.fetchers) });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
    abortController.signal.addEventListener(
      "abort",
      abortPendingFetchRevalidations
    );
    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(
      state,
      matches,
      matchesToLoad,
      revalidatingFetchers,
      revalidationRequest
    );
    if (abortController.signal.aborted) {
      return;
    }
    abortController.signal.removeEventListener(
      "abort",
      abortPendingFetchRevalidations
    );
    fetchReloadIds.delete(key);
    fetchControllers.delete(key);
    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));
    let redirect2 = findRedirect(loaderResults);
    if (redirect2) {
      return startRedirectNavigation(
        revalidationRequest,
        redirect2.result,
        false,
        { preventScrollReset }
      );
    }
    redirect2 = findRedirect(fetcherResults);
    if (redirect2) {
      fetchRedirectIds.add(redirect2.key);
      return startRedirectNavigation(
        revalidationRequest,
        redirect2.result,
        false,
        { preventScrollReset }
      );
    }
    let { loaderData, errors } = processLoaderData(
      state,
      matches,
      loaderResults,
      void 0,
      revalidatingFetchers,
      fetcherResults
    );
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    abortStaleFetchLoads(loadId);
    if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
      invariant(pendingAction, "Expected pending action");
      pendingNavigationController && pendingNavigationController.abort();
      completeNavigation(state.navigation.location, {
        matches,
        loaderData,
        errors,
        fetchers: new Map(state.fetchers)
      });
    } else {
      updateState({
        errors,
        loaderData: mergeLoaderData(
          state.loaderData,
          loaderData,
          matches,
          errors
        ),
        fetchers: new Map(state.fetchers)
      });
      isRevalidationRequired = false;
    }
  }
  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(
      key,
      getLoadingFetcher(
        submission,
        existingFetcher ? existingFetcher.data : void 0
      ),
      { flushSync }
    );
    let abortController = new AbortController();
    let fetchRequest = createClientSideRequest(
      init.history,
      path,
      abortController.signal
    );
    if (isFogOfWar) {
      let discoverResult = await discoverRoutes(
        matches,
        path,
        fetchRequest.signal
      );
      if (discoverResult.type === "aborted") {
        return;
      } else if (discoverResult.type === "error") {
        setFetcherError(key, routeId, discoverResult.error, { flushSync });
        return;
      } else if (!discoverResult.matches) {
        setFetcherError(
          key,
          routeId,
          getInternalRouterError(404, { pathname: path }),
          { flushSync }
        );
        return;
      } else {
        matches = discoverResult.matches;
        match = getTargetMatch(matches, path);
      }
    }
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId;
    let results = await callDataStrategy(
      "loader",
      state,
      fetchRequest,
      [match],
      matches,
      key
    );
    let result = results[match.route.id];
    if (fetchControllers.get(key) === abortController) {
      fetchControllers.delete(key);
    }
    if (fetchRequest.signal.aborted) {
      return;
    }
    if (fetchersQueuedForDeletion.has(key)) {
      updateFetcherState(key, getDoneFetcher(void 0));
      return;
    }
    if (isRedirectResult(result)) {
      if (pendingNavigationLoadId > originatingLoadId) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      } else {
        fetchRedirectIds.add(key);
        await startRedirectNavigation(fetchRequest, result, false, {
          preventScrollReset
        });
        return;
      }
    }
    if (isErrorResult(result)) {
      setFetcherError(key, routeId, result.error);
      return;
    }
    updateFetcherState(key, getDoneFetcher(result.data));
  }
  async function startRedirectNavigation(request, redirect2, isNavigation, {
    submission,
    fetcherSubmission,
    preventScrollReset,
    replace: replace2
  } = {}) {
    if (redirect2.response.headers.has("X-Remix-Revalidate")) {
      isRevalidationRequired = true;
    }
    let location = redirect2.response.headers.get("Location");
    invariant(location, "Expected a Location header on the redirect Response");
    location = normalizeRedirectLocation(
      location,
      new URL(request.url),
      basename
    );
    let redirectLocation = createLocation(state.location, location, {
      _isRedirect: true
    });
    if (isBrowser2) {
      let isDocumentReload = false;
      if (redirect2.response.headers.has("X-Remix-Reload-Document")) {
        isDocumentReload = true;
      } else if (ABSOLUTE_URL_REGEX.test(location)) {
        const url = init.history.createURL(location);
        isDocumentReload = // Hard reload if it's an absolute URL to a new origin
        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
        stripBasename(url.pathname, basename) == null;
      }
      if (isDocumentReload) {
        if (replace2) {
          routerWindow.location.replace(location);
        } else {
          routerWindow.location.assign(location);
        }
        return;
      }
    }
    pendingNavigationController = null;
    let redirectNavigationType = replace2 === true || redirect2.response.headers.has("X-Remix-Replace") ? "REPLACE" /* Replace */ : "PUSH" /* Push */;
    let { formMethod, formAction, formEncType } = state.navigation;
    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {
      submission = getSubmissionFromNavigation(state.navigation);
    }
    let activeSubmission = submission || fetcherSubmission;
    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {
      await startNavigation(redirectNavigationType, redirectLocation, {
        submission: {
          ...activeSubmission,
          formAction: location
        },
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    } else {
      let overrideNavigation = getLoadingNavigation(
        redirectLocation,
        submission
      );
      await startNavigation(redirectNavigationType, redirectLocation, {
        overrideNavigation,
        // Send fetcher submissions through for shouldRevalidate
        fetcherSubmission,
        // Preserve these flags across redirects
        preventScrollReset: preventScrollReset || pendingPreventScrollReset,
        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0
      });
    }
  }
  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {
    let results;
    let dataResults = {};
    try {
      results = await callDataStrategyImpl(
        dataStrategyImpl,
        type,
        state2,
        request,
        matchesToLoad,
        matches,
        fetcherKey,
        manifest,
        mapRouteProperties2
      );
    } catch (e) {
      matchesToLoad.forEach((m) => {
        dataResults[m.route.id] = {
          type: "error" /* error */,
          error: e
        };
      });
      return dataResults;
    }
    for (let [routeId, result] of Object.entries(results)) {
      if (isRedirectDataStrategyResult(result)) {
        let response = result.result;
        dataResults[routeId] = {
          type: "redirect" /* redirect */,
          response: normalizeRelativeRoutingRedirectResponse(
            response,
            request,
            routeId,
            matches,
            basename
          )
        };
      } else {
        dataResults[routeId] = await convertDataStrategyResultToDataResult(
          result
        );
      }
    }
    return dataResults;
  }
  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {
    let loaderResultsPromise = callDataStrategy(
      "loader",
      state2,
      request,
      matchesToLoad,
      matches,
      null
    );
    let fetcherResultsPromise = Promise.all(
      fetchersToLoad.map(async (f) => {
        if (f.matches && f.match && f.controller) {
          let results = await callDataStrategy(
            "loader",
            state2,
            createClientSideRequest(init.history, f.path, f.controller.signal),
            [f.match],
            f.matches,
            f.key
          );
          let result = results[f.match.route.id];
          return { [f.key]: result };
        } else {
          return Promise.resolve({
            [f.key]: {
              type: "error" /* error */,
              error: getInternalRouterError(404, {
                pathname: f.path
              })
            }
          });
        }
      })
    );
    let loaderResults = await loaderResultsPromise;
    let fetcherResults = (await fetcherResultsPromise).reduce(
      (acc, r) => Object.assign(acc, r),
      {}
    );
    return {
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = true;
    fetchLoadMatches.forEach((_, key) => {
      if (fetchControllers.has(key)) {
        cancelledFetcherLoads.add(key);
      }
      abortFetcher(key);
    });
  }
  function updateFetcherState(key, fetcher, opts = {}) {
    state.fetchers.set(key, fetcher);
    updateState(
      { fetchers: new Map(state.fetchers) },
      { flushSync: (opts && opts.flushSync) === true }
    );
  }
  function setFetcherError(key, routeId, error, opts = {}) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key);
    updateState(
      {
        errors: {
          [boundaryMatch.route.id]: error
        },
        fetchers: new Map(state.fetchers)
      },
      { flushSync: (opts && opts.flushSync) === true }
    );
  }
  function getFetcher(key) {
    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
    if (fetchersQueuedForDeletion.has(key)) {
      fetchersQueuedForDeletion.delete(key);
    }
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) {
      abortFetcher(key);
    }
    fetchLoadMatches.delete(key);
    fetchReloadIds.delete(key);
    fetchRedirectIds.delete(key);
    fetchersQueuedForDeletion.delete(key);
    cancelledFetcherLoads.delete(key);
    state.fetchers.delete(key);
  }
  function queueFetcherForDeletion(key) {
    let count = (activeFetchers.get(key) || 0) - 1;
    if (count <= 0) {
      activeFetchers.delete(key);
      fetchersQueuedForDeletion.add(key);
    } else {
      activeFetchers.set(key, count);
    }
    updateState({ fetchers: new Map(state.fetchers) });
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    if (controller) {
      controller.abort();
      fetchControllers.delete(key);
    }
  }
  function markFetchersDone(keys) {
    for (let key of keys) {
      let fetcher = getFetcher(key);
      let doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [];
    let updatedFetchers = false;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, `Expected fetcher: ${key}`);
      if (fetcher.state === "loading") {
        fetchRedirectIds.delete(key);
        doneKeys.push(key);
        updatedFetchers = true;
      }
    }
    markFetchersDone(doneKeys);
    return updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id] of fetchReloadIds) {
      if (id < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, `Expected fetcher: ${key}`);
        if (fetcher.state === "loading") {
          abortFetcher(key);
          fetchReloadIds.delete(key);
          yeetedKeys.push(key);
        }
      }
    }
    markFetchersDone(yeetedKeys);
    return yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    if (blockerFunctions.get(key) !== fn) {
      blockerFunctions.set(key, fn);
    }
    return blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key);
    blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(
      blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked",
      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`
    );
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker);
    updateState({ blockers });
  }
  function shouldBlockNavigation({
    currentLocation,
    nextLocation,
    historyAction
  }) {
    if (blockerFunctions.size === 0) {
      return;
    }
    if (blockerFunctions.size > 1) {
      warning(false, "A router only supports one blocker at a time");
    }
    let entries = Array.from(blockerFunctions.entries());
    let [blockerKey, blockerFunction] = entries[entries.length - 1];
    let blocker = state.blockers.get(blockerKey);
    if (blocker && blocker.state === "proceeding") {
      return;
    }
    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {
      return blockerKey;
    }
  }
  function handleNavigational404(pathname) {
    let error = getInternalRouterError(404, { pathname });
    let routesToUse = inFlightDataRoutes || dataRoutes;
    let { matches, route } = getShortCircuitMatches(routesToUse);
    return { notFoundMatches: matches, route, error };
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    savedScrollPositions2 = positions;
    getScrollPosition = getPosition;
    getScrollRestorationKey2 = getKey || null;
    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = true;
      let y = getSavedScrollPosition(state.location, state.matches);
      if (y != null) {
        updateState({ restoreScrollPosition: y });
      }
    }
    return () => {
      savedScrollPositions2 = null;
      getScrollPosition = null;
      getScrollRestorationKey2 = null;
    };
  }
  function getScrollKey(location, matches) {
    if (getScrollRestorationKey2) {
      let key = getScrollRestorationKey2(
        location,
        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))
      );
      return key || location.key;
    }
    return location.key;
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollPosition) {
      let key = getScrollKey(location, matches);
      savedScrollPositions2[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions2) {
      let key = getScrollKey(location, matches);
      let y = savedScrollPositions2[key];
      if (typeof y === "number") {
        return y;
      }
    }
    return null;
  }
  function checkFogOfWar(matches, routesToUse, pathname) {
    if (patchRoutesOnNavigationImpl) {
      if (!matches) {
        let fogMatches = matchRoutesImpl(
          routesToUse,
          pathname,
          basename,
          true
        );
        return { active: true, matches: fogMatches || [] };
      } else {
        if (Object.keys(matches[0].params).length > 0) {
          let partialMatches = matchRoutesImpl(
            routesToUse,
            pathname,
            basename,
            true
          );
          return { active: true, matches: partialMatches };
        }
      }
    }
    return { active: false, matches: null };
  }
  async function discoverRoutes(matches, pathname, signal) {
    if (!patchRoutesOnNavigationImpl) {
      return { type: "success", matches };
    }
    let partialMatches = matches;
    while (true) {
      let isNonHMR = inFlightDataRoutes == null;
      let routesToUse = inFlightDataRoutes || dataRoutes;
      let localManifest = manifest;
      try {
        await patchRoutesOnNavigationImpl({
          path: pathname,
          matches: partialMatches,
          patch: (routeId, children) => {
            if (signal.aborted) return;
            patchRoutesImpl(
              routeId,
              children,
              routesToUse,
              localManifest,
              mapRouteProperties2
            );
          }
        });
      } catch (e) {
        return { type: "error", error: e, partialMatches };
      } finally {
        if (isNonHMR && !signal.aborted) {
          dataRoutes = [...dataRoutes];
        }
      }
      if (signal.aborted) {
        return { type: "aborted" };
      }
      let newMatches = matchRoutes(routesToUse, pathname, basename);
      if (newMatches) {
        return { type: "success", matches: newMatches };
      }
      let newPartialMatches = matchRoutesImpl(
        routesToUse,
        pathname,
        basename,
        true
      );
      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(
        (m, i) => m.route.id === newPartialMatches[i].route.id
      )) {
        return { type: "success", matches: null };
      }
      partialMatches = newPartialMatches;
    }
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {};
    inFlightDataRoutes = convertRoutesToDataRoutes(
      newRoutes,
      mapRouteProperties2,
      void 0,
      manifest
    );
  }
  function patchRoutes(routeId, children) {
    let isNonHMR = inFlightDataRoutes == null;
    let routesToUse = inFlightDataRoutes || dataRoutes;
    patchRoutesImpl(
      routeId,
      children,
      routesToUse,
      manifest,
      mapRouteProperties2
    );
    if (isNonHMR) {
      dataRoutes = [...dataRoutes];
      updateState({});
    }
  }
  router = {
    get basename() {
      return basename;
    },
    get future() {
      return future;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return routerWindow;
    },
    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher: queueFetcherForDeletion,
    dispose,
    getBlocker,
    deleteBlocker,
    patchRoutes,
    _internalFetchControllers: fetchControllers,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  };
  return router;
}
function createStaticHandler(routes, opts) {
  invariant(
    routes.length > 0,
    "You must provide a non-empty routes array to createStaticHandler"
  );
  let manifest = {};
  let basename = (opts ? opts.basename : null) || "/";
  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;
  let dataRoutes = convertRoutesToDataRoutes(
    routes,
    mapRouteProperties2,
    void 0,
    manifest
  );
  async function query(request, {
    requestContext,
    skipLoaderErrorBubbling,
    dataStrategy
  } = {}) {
    let url = new URL(request.url);
    let method = request.method;
    let location = createLocation("", createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD") {
      let error = getInternalRouterError(405, { method });
      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
    } else if (!matches) {
      let error = getInternalRouterError(404, { pathname: location.pathname });
      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {}
      };
    }
    let result = await queryImpl(
      request,
      location,
      matches,
      requestContext,
      dataStrategy || null,
      skipLoaderErrorBubbling === true,
      null
    );
    if (isResponse(result)) {
      return result;
    }
    return { location, basename, ...result };
  }
  async function queryRoute(request, {
    routeId,
    requestContext,
    dataStrategy
  } = {}) {
    let url = new URL(request.url);
    let method = request.method;
    let location = createLocation("", createPath(url), null, "default");
    let matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") {
      throw getInternalRouterError(405, { method });
    } else if (!matches) {
      throw getInternalRouterError(404, { pathname: location.pathname });
    }
    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);
    if (routeId && !match) {
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    } else if (!match) {
      throw getInternalRouterError(404, { pathname: location.pathname });
    }
    let result = await queryImpl(
      request,
      location,
      matches,
      requestContext,
      dataStrategy || null,
      false,
      match
    );
    if (isResponse(result)) {
      return result;
    }
    let error = result.errors ? Object.values(result.errors)[0] : void 0;
    if (error !== void 0) {
      throw error;
    }
    if (result.actionData) {
      return Object.values(result.actionData)[0];
    }
    if (result.loaderData) {
      return Object.values(result.loaderData)[0];
    }
    return void 0;
  }
  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {
    invariant(
      request.signal,
      "query()/queryRoute() requests must contain an AbortController signal"
    );
    try {
      if (isMutationMethod(request.method)) {
        let result2 = await submit(
          request,
          matches,
          routeMatch || getTargetMatch(matches, location),
          requestContext,
          dataStrategy,
          skipLoaderErrorBubbling,
          routeMatch != null
        );
        return result2;
      }
      let result = await loadRouteData(
        request,
        matches,
        requestContext,
        dataStrategy,
        skipLoaderErrorBubbling,
        routeMatch
      );
      return isResponse(result) ? result : {
        ...result,
        actionData: null,
        actionHeaders: {}
      };
    } catch (e) {
      if (isDataStrategyResult(e) && isResponse(e.result)) {
        if (e.type === "error" /* error */) {
          throw e.result;
        }
        return e.result;
      }
      if (isRedirectResponse(e)) {
        return e;
      }
      throw e;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest) {
        throw error;
      }
      result = {
        type: "error" /* error */,
        error
      };
    } else {
      let results = await callDataStrategy(
        "action",
        request,
        [actionMatch],
        matches,
        isRouteRequest,
        requestContext,
        dataStrategy
      );
      result = results[actionMatch.route.id];
      if (request.signal.aborted) {
        throwStaticHandlerAbortedError(request, isRouteRequest);
      }
    }
    if (isRedirectResult(result)) {
      throw new Response(null, {
        status: result.response.status,
        headers: {
          Location: result.response.headers.get("Location")
        }
      });
    }
    if (isRouteRequest) {
      if (isErrorResult(result)) {
        throw result.error;
      }
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: { [actionMatch.route.id]: result.data },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {}
      };
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    });
    if (isErrorResult(result)) {
      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);
      let context2 = await loadRouteData(
        loaderRequest,
        matches,
        requestContext,
        dataStrategy,
        skipLoaderErrorBubbling,
        null,
        [boundaryMatch.route.id, result]
      );
      return {
        ...context2,
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,
        actionData: null,
        actionHeaders: {
          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}
        }
      };
    }
    let context = await loadRouteData(
      loaderRequest,
      matches,
      requestContext,
      dataStrategy,
      skipLoaderErrorBubbling,
      null
    );
    return {
      ...context,
      actionData: {
        [actionMatch.route.id]: result.data
      },
      // action status codes take precedence over loader status codes
      ...result.statusCode ? { statusCode: result.statusCode } : {},
      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}
    };
  }
  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch?.route.id
      });
    }
    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;
    let matchesToLoad = requestMatches.filter(
      (m) => m.route.loader || m.route.lazy
    );
    if (matchesToLoad.length === 0) {
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce(
          (acc, m) => Object.assign(acc, { [m.route.id]: null }),
          {}
        ),
        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {
          [pendingActionResult[0]]: pendingActionResult[1].error
        } : null,
        statusCode: 200,
        loaderHeaders: {}
      };
    }
    let results = await callDataStrategy(
      "loader",
      request,
      matchesToLoad,
      matches,
      isRouteRequest,
      requestContext,
      dataStrategy
    );
    if (request.signal.aborted) {
      throwStaticHandlerAbortedError(request, isRouteRequest);
    }
    let context = processRouteLoaderData(
      matches,
      results,
      pendingActionResult,
      true,
      skipLoaderErrorBubbling
    );
    let executedLoaders = new Set(
      matchesToLoad.map((match) => match.route.id)
    );
    matches.forEach((match) => {
      if (!executedLoaders.has(match.route.id)) {
        context.loaderData[match.route.id] = null;
      }
    });
    return {
      ...context,
      matches
    };
  }
  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {
    let results = await callDataStrategyImpl(
      dataStrategy || defaultDataStrategy,
      type,
      null,
      request,
      matchesToLoad,
      matches,
      null,
      manifest,
      mapRouteProperties2,
      requestContext
    );
    let dataResults = {};
    await Promise.all(
      matches.map(async (match) => {
        if (!(match.route.id in results)) {
          return;
        }
        let result = results[match.route.id];
        if (isRedirectDataStrategyResult(result)) {
          let response = result.result;
          throw normalizeRelativeRoutingRedirectResponse(
            response,
            request,
            match.route.id,
            matches,
            basename
          );
        }
        if (isResponse(result.result) && isRouteRequest) {
          throw result;
        }
        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);
      })
    );
    return dataResults;
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError(routes, context, error) {
  let newContext = {
    ...context,
    statusCode: isRouteErrorResponse(error) ? error.status : 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes[0].id]: error
    }
  };
  return newContext;
}
function throwStaticHandlerAbortedError(request, isRouteRequest) {
  if (request.signal.reason !== void 0) {
    throw request.signal.reason;
  }
  let method = isRouteRequest ? "queryRoute" : "query";
  throw new Error(
    `${method}() call aborted without an \`AbortSignal.reason\`: ${request.method} ${request.url}`
  );
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, to, fromRouteId, relative) {
  let contextualMatches;
  let activeRouteMatch;
  if (fromRouteId) {
    contextualMatches = [];
    for (let match of matches) {
      contextualMatches.push(match);
      if (match.route.id === fromRouteId) {
        activeRouteMatch = match;
        break;
      }
    }
  } else {
    contextualMatches = matches;
    activeRouteMatch = matches[matches.length - 1];
  }
  let path = resolveTo(
    to ? to : ".",
    getResolveToMatches(contextualMatches),
    stripBasename(location.pathname, basename) || location.pathname,
    relative === "path"
  );
  if (to == null) {
    path.search = location.search;
    path.hash = location.hash;
  }
  if ((to == null || to === "" || to === ".") && activeRouteMatch) {
    let nakedIndex = hasNakedIndexQuery(path.search);
    if (activeRouteMatch.route.index && !nakedIndex) {
      path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    } else if (!activeRouteMatch.route.index && nakedIndex) {
      let params = new URLSearchParams(path.search);
      let indexValues = params.getAll("index");
      params.delete("index");
      indexValues.filter((v) => v).forEach((v) => params.append("index", v));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : "";
    }
  }
  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function normalizeNavigateOptions(isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts)) {
    return { path };
  }
  if (opts.formMethod && !isValidMethod(opts.formMethod)) {
    return {
      path,
      error: getInternalRouterError(405, { method: opts.formMethod })
    };
  }
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError(400, { type: "invalid-body" })
  });
  let rawFormMethod = opts.formMethod || "get";
  let formMethod = rawFormMethod.toUpperCase();
  let formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce(
          (acc, [name, value]) => `${acc}${name}=${value}
`,
          ""
        )
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod(formMethod)) {
        return getInvalidBodyError();
      }
      try {
        let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json,
            text: void 0
          }
        };
      } catch (e) {
        return getInvalidBodyError();
      }
    }
  }
  invariant(
    typeof FormData === "function",
    "FormData is not available in this environment"
  );
  let searchParams;
  let formData;
  if (opts.formData) {
    searchParams = convertFormDataToSearchParams(opts.formData);
    formData = opts.formData;
  } else if (opts.body instanceof FormData) {
    searchParams = convertFormDataToSearchParams(opts.body);
    formData = opts.body;
  } else if (opts.body instanceof URLSearchParams) {
    searchParams = opts.body;
    formData = convertSearchParamsToFormData(searchParams);
  } else if (opts.body == null) {
    searchParams = new URLSearchParams();
    formData = new FormData();
  } else {
    try {
      searchParams = new URLSearchParams(opts.body);
      formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
      return getInvalidBodyError();
    }
  }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod(submission.formMethod)) {
    return { path, submission };
  }
  let parsedPath = parsePath(path);
  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {
    searchParams.append("index", "");
  }
  parsedPath.search = `?${searchParams}`;
  return { path: createPath(parsedPath), submission };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {
  let index = matches.findIndex((m) => m.route.id === boundaryId);
  if (index >= 0) {
    return matches.slice(0, includeBoundary ? index + 1 : index);
  }
  return matches;
}
function getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {
  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;
  let currentUrl = history.createURL(state.location);
  let nextUrl = history.createURL(location);
  let boundaryMatches = matches;
  if (initialHydration && state.errors) {
    boundaryMatches = getLoaderMatchesUntilBoundary(
      matches,
      Object.keys(state.errors)[0],
      true
    );
  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {
    boundaryMatches = getLoaderMatchesUntilBoundary(
      matches,
      pendingActionResult[0]
    );
  }
  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;
  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;
  let navigationMatches = boundaryMatches.filter((match, index) => {
    let { route } = match;
    if (route.lazy) {
      return true;
    }
    if (route.loader == null) {
      return false;
    }
    if (initialHydration) {
      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);
    }
    if (isNewLoader(state.loaderData, state.matches[index], match)) {
      return true;
    }
    let currentRouteMatch = state.matches[index];
    let nextRouteMatch = match;
    return shouldRevalidateLoader(match, {
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params,
      ...submission,
      actionResult,
      actionStatus,
      defaultShouldRevalidate: shouldSkipRevalidation ? false : (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    });
  });
  let revalidatingFetchers = [];
  fetchLoadMatches.forEach((f, key) => {
    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {
      return;
    }
    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcher = state.fetchers.get(key);
    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
    let shouldRevalidate = false;
    if (fetchRedirectIds.has(key)) {
      shouldRevalidate = false;
    } else if (cancelledFetcherLoads.has(key)) {
      cancelledFetcherLoads.delete(key);
      shouldRevalidate = true;
    } else if (fetcher && fetcher.state !== "idle" && fetcher.data === void 0) {
      shouldRevalidate = isRevalidationRequired;
    } else {
      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {
        currentUrl,
        currentParams: state.matches[state.matches.length - 1].params,
        nextUrl,
        nextParams: matches[matches.length - 1].params,
        ...submission,
        actionResult,
        actionStatus,
        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired
      });
    }
    if (shouldRevalidate) {
      revalidatingFetchers.push({
        key,
        routeId: f.routeId,
        path: f.path,
        matches: fetcherMatches,
        match: fetcherMatch,
        controller: new AbortController()
      });
    }
  });
  return [navigationMatches, revalidatingFetchers];
}
function shouldLoadRouteOnHydration(route, loaderData, errors) {
  if (route.lazy) {
    return true;
  }
  if (!route.loader) {
    return false;
  }
  let hasData = loaderData != null && loaderData[route.id] !== void 0;
  let hasError = errors != null && errors[route.id] !== void 0;
  if (!hasData && hasError) {
    return false;
  }
  if (typeof route.loader === "function" && route.loader.hydrate === true) {
    return true;
  }
  return !hasData && !hasError;
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id
  );
  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice === "boolean") {
      return routeChoice;
    }
  }
  return arg.defaultShouldRevalidate;
}
function patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {
  let childrenToPatch;
  if (routeId) {
    let route = manifest[routeId];
    invariant(
      route,
      `No route found to patch children into: routeId = ${routeId}`
    );
    if (!route.children) {
      route.children = [];
    }
    childrenToPatch = route.children;
  } else {
    childrenToPatch = routesToUse;
  }
  let uniqueChildren = children.filter(
    (newRoute) => !childrenToPatch.some(
      (existingRoute) => isSameRoute(newRoute, existingRoute)
    )
  );
  let newRoutes = convertRoutesToDataRoutes(
    uniqueChildren,
    mapRouteProperties2,
    [routeId || "_", "patch", String(childrenToPatch?.length || "0")],
    manifest
  );
  childrenToPatch.push(...newRoutes);
}
function isSameRoute(newRoute, existingRoute) {
  if ("id" in newRoute && "id" in existingRoute && newRoute.id === existingRoute.id) {
    return true;
  }
  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {
    return false;
  }
  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {
    return true;
  }
  return newRoute.children.every(
    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))
  );
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy) {
    return;
  }
  let lazyRoute = await route.lazy();
  if (!route.lazy) {
    return;
  }
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let staticRouteValue = routeToUpdate[lazyRouteProperty];
    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(
      !isPropertyStaticallyDefined,
      `Route "${routeToUpdate.id}" has a static property "${lazyRouteProperty}" defined but its lazy function is also returning a value for this property. The lazy route property "${lazyRouteProperty}" will be ignored.`
    );
    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {
      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
    }
  }
  Object.assign(routeToUpdate, routeUpdates);
  Object.assign(routeToUpdate, {
    // To keep things framework agnostic, we use the provided `mapRouteProperties`
    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)
    // since the logic will differ between frameworks.
    ...mapRouteProperties2(routeToUpdate),
    lazy: void 0
  });
}
async function defaultDataStrategy({
  matches
}) {
  let matchesToLoad = matches.filter((m) => m.shouldLoad);
  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));
  return results.reduce(
    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),
    {}
  );
}
async function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {
  let loadRouteDefinitionsPromises = matches.map(
    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0
  );
  let dsMatches = matches.map((match, i) => {
    let loadRoutePromise = loadRouteDefinitionsPromises[i];
    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);
    let resolve = async (handlerOverride) => {
      if (handlerOverride && request.method === "GET" && (match.route.lazy || match.route.loader)) {
        shouldLoad = true;
      }
      return shouldLoad ? callLoaderOrAction(
        type,
        request,
        match,
        loadRoutePromise,
        handlerOverride,
        requestContext
      ) : Promise.resolve({ type: "data" /* data */, result: void 0 });
    };
    return {
      ...match,
      shouldLoad,
      resolve
    };
  });
  let results = await dataStrategyImpl({
    matches: dsMatches,
    request,
    params: matches[0].params,
    fetcherKey,
    context: requestContext
  });
  try {
    await Promise.all(loadRouteDefinitionsPromises);
  } catch (e) {
  }
  return results;
}
async function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {
  let result;
  let onReject;
  let runHandler = (handler) => {
    let reject;
    let abortPromise = new Promise((_, r) => reject = r);
    onReject = () => reject();
    request.signal.addEventListener("abort", onReject);
    let actualHandler = (ctx) => {
      if (typeof handler !== "function") {
        return Promise.reject(
          new Error(
            `You cannot call the handler for a route which defines a boolean "${type}" [routeId: ${match.route.id}]`
          )
        );
      }
      return handler(
        {
          request,
          params: match.params,
          context: staticContext
        },
        ...ctx !== void 0 ? [ctx] : []
      );
    };
    let handlerPromise = (async () => {
      try {
        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());
        return { type: "data", result: val };
      } catch (e) {
        return { type: "error", result: e };
      }
    })();
    return Promise.race([handlerPromise, abortPromise]);
  };
  try {
    let handler = match.route[type];
    if (loadRoutePromise) {
      if (handler) {
        let handlerError;
        let [value] = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e) => {
            handlerError = e;
          }),
          loadRoutePromise
        ]);
        if (handlerError !== void 0) {
          throw handlerError;
        }
        result = value;
      } else {
        await loadRoutePromise;
        handler = match.route[type];
        if (handler) {
          result = await runHandler(handler);
        } else if (type === "action") {
          let url = new URL(request.url);
          let pathname = url.pathname + url.search;
          throw getInternalRouterError(405, {
            method: request.method,
            pathname,
            routeId: match.route.id
          });
        } else {
          return { type: "data" /* data */, result: void 0 };
        }
      }
    } else if (!handler) {
      let url = new URL(request.url);
      let pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    } else {
      result = await runHandler(handler);
    }
  } catch (e) {
    return { type: "error" /* error */, result: e };
  } finally {
    if (onReject) {
      request.signal.removeEventListener("abort", onReject);
    }
  }
  return result;
}
async function convertDataStrategyResultToDataResult(dataStrategyResult) {
  let { result, type } = dataStrategyResult;
  if (isResponse(result)) {
    let data2;
    try {
      let contentType = result.headers.get("Content-Type");
      if (contentType && /\bapplication\/json\b/.test(contentType)) {
        if (result.body == null) {
          data2 = null;
        } else {
          data2 = await result.json();
        }
      } else {
        data2 = await result.text();
      }
    } catch (e) {
      return { type: "error" /* error */, error: e };
    }
    if (type === "error" /* error */) {
      return {
        type: "error" /* error */,
        error: new ErrorResponseImpl(result.status, result.statusText, data2),
        statusCode: result.status,
        headers: result.headers
      };
    }
    return {
      type: "data" /* data */,
      data: data2,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (type === "error" /* error */) {
    if (isDataWithResponseInit(result)) {
      if (result.data instanceof Error) {
        return {
          type: "error" /* error */,
          error: result.data,
          statusCode: result.init?.status
        };
      }
      result = new ErrorResponseImpl(
        result.init?.status || 500,
        void 0,
        result.data
      );
    }
    return {
      type: "error" /* error */,
      error: result,
      statusCode: isRouteErrorResponse(result) ? result.status : void 0
    };
  }
  if (isDataWithResponseInit(result)) {
    return {
      type: "data" /* data */,
      data: result.data,
      statusCode: result.init?.status,
      headers: result.init?.headers ? new Headers(result.init.headers) : void 0
    };
  }
  return { type: "data" /* data */, data: result };
}
function normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {
  let location = response.headers.get("Location");
  invariant(
    location,
    "Redirects returned/thrown from loaders/actions must have a Location header"
  );
  if (!ABSOLUTE_URL_REGEX.test(location)) {
    let trimmedMatches = matches.slice(
      0,
      matches.findIndex((m) => m.route.id === routeId) + 1
    );
    location = normalizeTo(
      new URL(request.url),
      trimmedMatches,
      basename,
      location
    );
    response.headers.set("Location", location);
  }
  return response;
}
function normalizeRedirectLocation(location, currentUrl, basename) {
  if (ABSOLUTE_URL_REGEX.test(location)) {
    let normalizedLocation = location;
    let url = normalizedLocation.startsWith("//") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);
    let isSameBasename = stripBasename(url.pathname, basename) != null;
    if (url.origin === currentUrl.origin && isSameBasename) {
      return url.pathname + url.search + url.hash;
    }
  }
  return location;
}
function createClientSideRequest(history, location, signal, submission) {
  let url = history.createURL(stripHashFromPath(location)).toString();
  let init = { signal };
  if (submission && isMutationMethod(submission.formMethod)) {
    let { formMethod, formEncType } = submission;
    init.method = formMethod.toUpperCase();
    if (formEncType === "application/json") {
      init.headers = new Headers({ "Content-Type": formEncType });
      init.body = JSON.stringify(submission.json);
    } else if (formEncType === "text/plain") {
      init.body = submission.text;
    } else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) {
      init.body = convertFormDataToSearchParams(submission.formData);
    } else {
      init.body = submission.formData;
    }
  }
  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries()) {
    searchParams.append(key, typeof value === "string" ? value : value.name);
  }
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries()) {
    formData.append(key, value);
  }
  return formData;
}
function processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {
  let loaderData = {};
  let errors = null;
  let statusCode;
  let foundError = false;
  let loaderHeaders = {};
  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;
  matches.forEach((match) => {
    if (!(match.route.id in results)) {
      return;
    }
    let id = match.route.id;
    let result = results[id];
    invariant(
      !isRedirectResult(result),
      "Cannot handle redirect results in processLoaderData"
    );
    if (isErrorResult(result)) {
      let error = result.error;
      if (pendingError !== void 0) {
        error = pendingError;
        pendingError = void 0;
      }
      errors = errors || {};
      if (skipLoaderErrorBubbling) {
        errors[id] = error;
      } else {
        let boundaryMatch = findNearestBoundary(matches, id);
        if (errors[boundaryMatch.route.id] == null) {
          errors[boundaryMatch.route.id] = error;
        }
      }
      if (!isStaticHandler) {
        loaderData[id] = ResetLoaderDataSymbol;
      }
      if (!foundError) {
        foundError = true;
        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    } else {
      loaderData[id] = result.data;
      if (result.statusCode && result.statusCode !== 200 && !foundError) {
        statusCode = result.statusCode;
      }
      if (result.headers) {
        loaderHeaders[id] = result.headers;
      }
    }
  });
  if (pendingError !== void 0 && pendingActionResult) {
    errors = { [pendingActionResult[0]]: pendingError };
    loaderData[pendingActionResult[0]] = void 0;
  }
  return {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {
  let { loaderData, errors } = processRouteLoaderData(
    matches,
    results,
    pendingActionResult
  );
  revalidatingFetchers.forEach((rf) => {
    let { key, match, controller } = rf;
    let result = fetcherResults[key];
    invariant(result, "Did not find corresponding fetcher result");
    if (controller && controller.signal.aborted) {
      return;
    } else if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);
      if (!(errors && errors[boundaryMatch.route.id])) {
        errors = {
          ...errors,
          [boundaryMatch.route.id]: result.error
        };
      }
      state.fetchers.delete(key);
    } else if (isRedirectResult(result)) {
      invariant(false, "Unhandled fetcher revalidation redirect");
    } else {
      let doneFetcher = getDoneFetcher(result.data);
      state.fetchers.set(key, doneFetcher);
    }
  });
  return { loaderData, errors };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {
    merged[k] = v;
    return merged;
  }, {});
  for (let match of matches) {
    let id = match.route.id;
    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {
      mergedLoaderData[id] = loaderData[id];
    }
    if (errors && errors.hasOwnProperty(id)) {
      break;
    }
  }
  return mergedLoaderData;
}
function getActionDataForCommit(pendingActionResult) {
  if (!pendingActionResult) {
    return {};
  }
  return isErrorResult(pendingActionResult[1]) ? {
    // Clear out prior actionData on errors
    actionData: {}
  } : {
    actionData: {
      [pendingActionResult[0]]: pendingActionResult[1].data
    }
  };
}
function findNearestBoundary(matches, routeId) {
  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];
  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === "/") || {
    id: `__shim-error-route__`
  };
  return {
    matches: [
      {
        params: {},
        pathname: "",
        pathnameBase: "",
        route
      }
    ],
    route
  };
}
function getInternalRouterError(status, {
  pathname,
  routeId,
  method,
  type,
  message
} = {}) {
  let statusText = "Unknown Server Error";
  let errorMessage = "Unknown @remix-run/router error";
  if (status === 400) {
    statusText = "Bad Request";
    if (method && pathname && routeId) {
      errorMessage = `You made a ${method} request to "${pathname}" but did not provide a \`loader\` for route "${routeId}", so there is no way to handle the request.`;
    } else if (type === "invalid-body") {
      errorMessage = "Unable to encode submission body";
    }
  } else if (status === 403) {
    statusText = "Forbidden";
    errorMessage = `Route "${routeId}" does not match URL "${pathname}"`;
  } else if (status === 404) {
    statusText = "Not Found";
    errorMessage = `No route matches URL "${pathname}"`;
  } else if (status === 405) {
    statusText = "Method Not Allowed";
    if (method && pathname && routeId) {
      errorMessage = `You made a ${method.toUpperCase()} request to "${pathname}" but did not provide an \`action\` for route "${routeId}", so there is no way to handle the request.`;
    } else if (method) {
      errorMessage = `Invalid request method "${method.toUpperCase()}"`;
    }
  }
  return new ErrorResponseImpl(
    status || 500,
    statusText,
    new Error(errorMessage),
    true
  );
}
function findRedirect(results) {
  let entries = Object.entries(results);
  for (let i = entries.length - 1; i >= 0; i--) {
    let [key, result] = entries[i];
    if (isRedirectResult(result)) {
      return { key, result };
    }
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path === "string" ? parsePath(path) : path;
  return createPath({ ...parsedPath, hash: "" });
}
function isHashChangeOnly(a, b) {
  if (a.pathname !== b.pathname || a.search !== b.search) {
    return false;
  }
  if (a.hash === "") {
    return b.hash !== "";
  } else if (a.hash === b.hash) {
    return true;
  } else if (b.hash !== "") {
    return true;
  }
  return false;
}
function isDataStrategyResult(result) {
  return result != null && typeof result === "object" && "type" in result && "result" in result && (result.type === "data" /* data */ || result.type === "error" /* error */);
}
function isRedirectDataStrategyResult(result) {
  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);
}
function isErrorResult(result) {
  return result.type === "error" /* error */;
}
function isRedirectResult(result) {
  return (result && result.type) === "redirect" /* redirect */;
}
function isDataWithResponseInit(value) {
  return typeof value === "object" && value != null && "type" in value && "data" in value && "init" in value && value.type === "DataWithResponseInit";
}
function isResponse(value) {
  return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectStatusCode(statusCode) {
  return redirectStatusCodes.has(statusCode);
}
function isRedirectResponse(result) {
  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has("Location");
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toUpperCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toUpperCase());
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v) => v === "");
}
function getTargetMatch(matches, location) {
  let search = typeof location === "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) {
    return matches[matches.length - 1];
  }
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let { formMethod, formAction, formEncType, text, formData, json } = navigation;
  if (!formMethod || !formAction || !formEncType) {
    return;
  }
  if (text != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json: void 0,
      text
    };
  } else if (formData != null) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData,
      json: void 0,
      text: void 0
    };
  } else if (json !== void 0) {
    return {
      formMethod,
      formAction,
      formEncType,
      formData: void 0,
      json,
      text: void 0
    };
  }
}
function getLoadingNavigation(location, submission) {
  if (submission) {
    let navigation = {
      state: "loading",
      location,
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text
    };
    return navigation;
  } else {
    let navigation = {
      state: "loading",
      location,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    };
    return navigation;
  }
}
function getSubmittingNavigation(location, submission) {
  let navigation = {
    state: "submitting",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
  return navigation;
}
function getLoadingFetcher(submission, data2) {
  if (submission) {
    let fetcher = {
      state: "loading",
      formMethod: submission.formMethod,
      formAction: submission.formAction,
      formEncType: submission.formEncType,
      formData: submission.formData,
      json: submission.json,
      text: submission.text,
      data: data2
    };
    return fetcher;
  } else {
    let fetcher = {
      state: "loading",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0,
      data: data2
    };
    return fetcher;
  }
}
function getSubmittingFetcher(submission, existingFetcher) {
  let fetcher = {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0
  };
  return fetcher;
}
function getDoneFetcher(data2) {
  let fetcher = {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: data2
  };
  return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
  try {
    let sessionPositions = _window.sessionStorage.getItem(
      TRANSITIONS_STORAGE_KEY
    );
    if (sessionPositions) {
      let json = JSON.parse(sessionPositions);
      for (let [k, v] of Object.entries(json || {})) {
        if (v && Array.isArray(v)) {
          transitions.set(k, new Set(v || []));
        }
      }
    }
  } catch (e) {
  }
}
function persistAppliedTransitions(_window, transitions) {
  if (transitions.size > 0) {
    let json = {};
    for (let [k, v] of transitions) {
      json[k] = [...v];
    }
    try {
      _window.sessionStorage.setItem(
        TRANSITIONS_STORAGE_KEY,
        JSON.stringify(json)
      );
    } catch (error) {
      warning(
        false,
        `Failed to save applied view transitions in sessionStorage (${error}).`
      );
    }
  }
}
function createDeferred() {
  let resolve;
  let reject;
  let promise = new Promise((res, rej) => {
    resolve = async (val) => {
      res(val);
      try {
        await promise;
      } catch (e) {
      }
    };
    reject = async (error) => {
      rej(error);
      try {
        await promise;
      } catch (e) {
      }
    };
  });
  return {
    promise,
    //@ts-ignore
    resolve,
    //@ts-ignore
    reject
  };
}

// lib/components.tsx


// lib/context.ts

var DataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
DataRouterContext.displayName = "DataRouter";
var DataRouterStateContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
var ViewTransitionContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
var FetchersContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(
  /* @__PURE__ */ new Map()
);
FetchersContext.displayName = "Fetchers";
var AwaitContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
AwaitContext.displayName = "Await";
var NavigationContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(
  null
);
NavigationContext.displayName = "Navigation";
var LocationContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(
  null
);
LocationContext.displayName = "Location";
var RouteContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
RouteContext.displayName = "Route";
var RouteErrorContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
RouteErrorContext.displayName = "RouteError";

// lib/hooks.tsx

var ENABLE_DEV_WARNINGS = true;
function useHref(to, { relative } = {}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`
  );
  let { basename, navigator: navigator2 } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let { hash, pathname, search } = useResolvedPath(to, { relative });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({ pathname: joinedPathname, search, hash });
}
function useInRouterContext() {
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext) != null;
}
function useLocation() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`
  );
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).location;
}
function useNavigationType() {
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useMatch() may be used only in the context of a <Router> component.`
  );
  let { pathname } = useLocation();
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => matchPath(pattern, decodePath(pathname)),
    [pathname, pattern]
  );
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect(cb) {
  let isStatic = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext).static;
  if (!isStatic) {
    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(cb);
  }
}
function useNavigate() {
  let { isDataRoute } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`
  );
  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);
  let { basename, navigator: navigator2 } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        navigator2.go(to);
        return;
      }
      let path = resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname,
        options.relative === "path"
      );
      if (dataRouterContext == null && basename !== "/") {
        path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
      }
      (!!options.replace ? navigator2.replace : navigator2.push)(
        path,
        options.state,
        options
      );
    },
    [
      basename,
      navigator2,
      routePathnamesJson,
      locationPathname,
      dataRouterContext
    ]
  );
  return navigate;
}
var OutletContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
function useOutletContext() {
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(OutletContext);
}
function useOutlet(context) {
  let outlet = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext).outlet;
  if (outlet) {
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(OutletContext.Provider, { value: context }, outlet);
  }
  return outlet;
}
function useParams() {
  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, { relative } = {}) {
  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => resolveTo(
      to,
      JSON.parse(routePathnamesJson),
      locationPathname,
      relative === "path"
    ),
    [to, routePathnamesJson, locationPathname, relative]
  );
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`
  );
  let { navigator: navigator2 } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let { matches: parentMatches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;
  if (ENABLE_DEV_WARNINGS) {
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(
      parentPathname,
      !parentRoute || parentPath.endsWith("*") || parentPath.endsWith("*?"),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`
    );
  }
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    invariant(
      parentPathnameBase === "/" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`
    );
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, { pathname: remainingPathname });
  if (ENABLE_DEV_WARNINGS) {
    warning(
      parentRoute || matches != null,
      `No routes matched location "${location.pathname}${location.search}${location.hash}" `
    );
    warning(
      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,
      `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  }
  let renderedMatches = _renderMatches(
    matches && matches.map(
      (match) => Object.assign({}, match, {
        params: Object.assign({}, parentParams, match.params),
        pathname: joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes
          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
        ]),
        pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes
          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
        ])
      })
    ),
    parentMatches,
    dataRouterState,
    future
  );
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      LocationContext.Provider,
      {
        value: {
          location: {
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: "default",
            ...location
          },
          navigationType: "POP" /* Pop */
        }
      },
      renderedMatches
    );
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = { padding: "0.5rem", backgroundColor: lightgrey };
  let codeStyles = { padding: "2px 4px", backgroundColor: lightgrey };
  let devInfo = null;
  if (ENABLE_DEV_WARNINGS) {
    console.error(
      "Error handled by React Router default ErrorBoundary:",
      error
    );
    devInfo = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("code", { style: codeStyles }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("code", { style: codeStyles }, "errorElement"), " prop on your route."));
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3", { style: { fontStyle: "italic" } }, message), stack ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre", { style: preStyles }, stack) : null, devInfo);
}
var defaultErrorElement = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultErrorComponent, null);
var RenderErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error(
      "React Router caught the following error during render",
      error,
      errorInfo
    );
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      RouteErrorContext.Provider,
      {
        value: this.state.error,
        children: this.props.component
      }
    )) : this.props.children;
  }
};
function RenderedRoute({ routeContext, match, children }) {
  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, { value: routeContext }, children);
}
function _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {
  if (matches == null) {
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = dataRouterState?.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex(
      (m) => m.route.id && errors?.[m.route.id] !== void 0
    );
    invariant(
      errorIndex >= 0,
      `Could not find a matching route for errors on route IDs: ${Object.keys(
        errors
      ).join(",")}`
    );
    renderedMatches = renderedMatches.slice(
      0,
      Math.min(renderedMatches.length, errorIndex + 1)
    );
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState) {
    for (let i = 0; i < renderedMatches.length; i++) {
      let match = renderedMatches[i];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i;
      }
      if (match.route.id) {
        let { loaderData, errors: errors2 } = dataRouterState;
        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight((outlet, match, index) => {
    let error;
    let shouldRenderHydrateFallback = false;
    let errorElement = null;
    let hydrateFallbackElement = null;
    if (dataRouterState) {
      error = errors && match.route.id ? errors[match.route.id] : void 0;
      errorElement = match.route.errorElement || defaultErrorElement;
      if (renderFallback) {
        if (fallbackIndex < 0 && index === 0) {
          warningOnce(
            "route-fallback",
            false,
            "No `HydrateFallback` element provided to render during initial hydration"
          );
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = null;
        } else if (fallbackIndex === index) {
          shouldRenderHydrateFallback = true;
          hydrateFallbackElement = match.route.hydrateFallbackElement || null;
        }
      }
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (shouldRenderHydrateFallback) {
        children = hydrateFallbackElement;
      } else if (match.route.Component) {
        children = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(match.route.Component, null);
      } else if (match.route.element) {
        children = match.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        RenderedRoute,
        {
          match,
          routeContext: {
            outlet,
            matches: matches2,
            isDataRoute: dataRouterState != null
          },
          children
        }
      );
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      RenderErrorBoundary,
      {
        location: dataRouterState.location,
        revalidation: dataRouterState.revalidation,
        component: errorElement,
        error,
        children: getChildren(),
        routeContext: { outlet: null, matches: matches2, isDataRoute: true }
      }
    ) : getChildren();
  }, null);
}
function getDataRouterConsoleError(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError(hookName));
  return ctx;
}
function useDataRouterState(hookName) {
  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError(hookName));
  return state;
}
function useRouteContext(hookName) {
  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  invariant(route, getDataRouterConsoleError(hookName));
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName);
  let thisRoute = route.matches[route.matches.length - 1];
  invariant(
    thisRoute.route.id,
    `${hookName} can only be used on routes that contain a unique "id"`
  );
  return thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId("useRouteId" /* UseRouteId */);
}
function useNavigation() {
  let state = useDataRouterState("useNavigation" /* UseNavigation */);
  return state.navigation;
}
function useRevalidator() {
  let dataRouterContext = useDataRouterContext("useRevalidator" /* UseRevalidator */);
  let state = useDataRouterState("useRevalidator" /* UseRevalidator */);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => ({
      async revalidate() {
        await dataRouterContext.router.revalidate();
      },
      state: state.revalidation
    }),
    [dataRouterContext.router, state.revalidation]
  );
}
function useMatches() {
  let { matches, loaderData } = useDataRouterState(
    "useMatches" /* UseMatches */
  );
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),
    [matches, loaderData]
  );
}
function useLoaderData() {
  let state = useDataRouterState("useLoaderData" /* UseLoaderData */);
  let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */);
  return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
  let state = useDataRouterState("useRouteLoaderData" /* UseRouteLoaderData */);
  return state.loaderData[routeId];
}
function useActionData() {
  let state = useDataRouterState("useActionData" /* UseActionData */);
  let routeId = useCurrentRouteId("useLoaderData" /* UseLoaderData */);
  return state.actionData ? state.actionData[routeId] : void 0;
}
function useRouteError() {
  let error = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteErrorContext);
  let state = useDataRouterState("useRouteError" /* UseRouteError */);
  let routeId = useCurrentRouteId("useRouteError" /* UseRouteError */);
  if (error !== void 0) {
    return error;
  }
  return state.errors?.[routeId];
}
function useAsyncValue() {
  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);
  return value?._data;
}
function useAsyncError() {
  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);
  return value?._error;
}
var blockerId = 0;
function useBlocker(shouldBlock) {
  let { router, basename } = useDataRouterContext("useBlocker" /* UseBlocker */);
  let state = useDataRouterState("useBlocker" /* UseBlocker */);
  let [blockerKey, setBlockerKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState("");
  let blockerFunction = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (arg) => {
      if (typeof shouldBlock !== "function") {
        return !!shouldBlock;
      }
      if (basename === "/") {
        return shouldBlock(arg);
      }
      let { currentLocation, nextLocation, historyAction } = arg;
      return shouldBlock({
        currentLocation: {
          ...currentLocation,
          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname
        },
        nextLocation: {
          ...nextLocation,
          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname
        },
        historyAction
      });
    },
    [basename, shouldBlock]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    let key = String(++blockerId);
    setBlockerKey(key);
    return () => router.deleteBlocker(key);
  }, [router]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (blockerKey !== "") {
      router.getBlocker(blockerKey, blockerFunction);
    }
  }, [router, blockerKey, blockerFunction]);
  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
  let { router } = useDataRouterContext("useNavigate" /* UseNavigateStable */);
  let id = useCurrentRouteId("useNavigate" /* UseNavigateStable */);
  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    async (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        router.navigate(to);
      } else {
        await router.navigate(to, { fromRouteId: id, ...options });
      }
    },
    [router, id]
  );
  return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
    warning(false, message);
  }
}

// lib/server-runtime/warnings.ts
var alreadyWarned2 = {};
function warnOnce(condition, message) {
  if (!condition && !alreadyWarned2[message]) {
    alreadyWarned2[message] = true;
    console.warn(message);
  }
}

// lib/components.tsx
var ENABLE_DEV_WARNINGS2 = true;
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null
  };
  if (route.Component) {
    if (ENABLE_DEV_WARNINGS2) {
      if (route.element) {
        warning(
          false,
          "You should not include both `Component` and `element` on your route - `Component` will be used."
        );
      }
    }
    Object.assign(updates, {
      element: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.Component),
      Component: void 0
    });
  }
  if (route.HydrateFallback) {
    if (ENABLE_DEV_WARNINGS2) {
      if (route.hydrateFallbackElement) {
        warning(
          false,
          "You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used."
        );
      }
    }
    Object.assign(updates, {
      hydrateFallbackElement: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.HydrateFallback),
      HydrateFallback: void 0
    });
  }
  if (route.ErrorBoundary) {
    if (ENABLE_DEV_WARNINGS2) {
      if (route.errorElement) {
        warning(
          false,
          "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used."
        );
      }
    }
    Object.assign(updates, {
      errorElement: react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.ErrorBoundary),
      ErrorBoundary: void 0
    });
  }
  return updates;
}
function createMemoryRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    future: opts?.future,
    history: createMemoryHistory({
      initialEntries: opts?.initialEntries,
      initialIndex: opts?.initialIndex
    }),
    hydrationData: opts?.hydrationData,
    routes,
    mapRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation
  }).initialize();
}
var Deferred = class {
  constructor() {
    this.status = "pending";
    this.promise = new Promise((resolve, reject) => {
      this.resolve = (value) => {
        if (this.status === "pending") {
          this.status = "resolved";
          resolve(value);
        }
      };
      this.reject = (reason) => {
        if (this.status === "pending") {
          this.status = "rejected";
          reject(reason);
        }
      };
    });
  }
};
function RouterProvider({
  router,
  flushSync: reactDomFlushSyncImpl
}) {
  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(router.state);
  let [pendingState, setPendingState] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  let [vtContext, setVtContext] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    isTransitioning: false
  });
  let [renderDfd, setRenderDfd] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  let [transition, setTransition] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  let [interruption, setInterruption] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useRef(/* @__PURE__ */ new Map());
  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {
      deletedFetchers.forEach((key) => fetcherData.current.delete(key));
      newState.fetchers.forEach((fetcher, key) => {
        if (fetcher.data !== void 0) {
          fetcherData.current.set(key, fetcher.data);
        }
      });
      warnOnce(
        flushSync === false || reactDomFlushSyncImpl != null,
        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from "react-router/dom"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'
      );
      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === "function";
      warnOnce(
        viewTransitionOpts == null || isViewTransitionAvailable,
        "You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available."
      );
      if (!viewTransitionOpts || !isViewTransitionAvailable) {
        if (reactDomFlushSyncImpl && flushSync) {
          reactDomFlushSyncImpl(() => setStateImpl(newState));
        } else {
          react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
        }
        return;
      }
      if (reactDomFlushSyncImpl && flushSync) {
        reactDomFlushSyncImpl(() => {
          if (transition) {
            renderDfd && renderDfd.resolve();
            transition.skipTransition();
          }
          setVtContext({
            isTransitioning: true,
            flushSync: true,
            currentLocation: viewTransitionOpts.currentLocation,
            nextLocation: viewTransitionOpts.nextLocation
          });
        });
        let t = router.window.document.startViewTransition(() => {
          reactDomFlushSyncImpl(() => setStateImpl(newState));
        });
        t.finished.finally(() => {
          reactDomFlushSyncImpl(() => {
            setRenderDfd(void 0);
            setTransition(void 0);
            setPendingState(void 0);
            setVtContext({ isTransitioning: false });
          });
        });
        reactDomFlushSyncImpl(() => setTransition(t));
        return;
      }
      if (transition) {
        renderDfd && renderDfd.resolve();
        transition.skipTransition();
        setInterruption({
          state: newState,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      } else {
        setPendingState(newState);
        setVtContext({
          isTransitioning: true,
          flushSync: false,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      }
    },
    [router.window, reactDomFlushSyncImpl, transition, renderDfd]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => router.subscribe(setState), [router, setState]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (vtContext.isTransitioning && !vtContext.flushSync) {
      setRenderDfd(new Deferred());
    }
  }, [vtContext]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (renderDfd && pendingState && router.window) {
      let newState = pendingState;
      let renderPromise = renderDfd.promise;
      let transition2 = router.window.document.startViewTransition(async () => {
        react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
        await renderPromise;
      });
      transition2.finished.finally(() => {
        setRenderDfd(void 0);
        setTransition(void 0);
        setPendingState(void 0);
        setVtContext({ isTransitioning: false });
      });
      setTransition(transition2);
    }
  }, [pendingState, renderDfd, router.window]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {
      renderDfd.resolve();
    }
  }, [renderDfd, transition, state.location, pendingState]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!vtContext.isTransitioning && interruption) {
      setPendingState(interruption.state);
      setVtContext({
        isTransitioning: true,
        flushSync: false,
        currentLocation: interruption.currentLocation,
        nextLocation: interruption.nextLocation
      });
      setInterruption(void 0);
    }
  }, [vtContext.isTransitioning, interruption]);
  let navigator2 = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    return {
      createHref: router.createHref,
      encodeLocation: router.encodeLocation,
      go: (n) => router.navigate(n),
      push: (to, state2, opts) => router.navigate(to, {
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      }),
      replace: (to, state2, opts) => router.navigate(to, {
        replace: true,
        state: state2,
        preventScrollReset: opts?.preventScrollReset
      })
    };
  }, [router]);
  let basename = router.basename || "/";
  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => ({
      router,
      navigator: navigator2,
      static: false,
      basename
    }),
    [router, navigator2, basename]
  );
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      location: state.location,
      navigationType: state.historyAction,
      navigator: navigator2
    },
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      MemoizedDataRoutes,
      {
        routes: router.routes,
        future: router.future,
        state
      }
    )
  ))))), null);
}
var MemoizedDataRoutes = react__WEBPACK_IMPORTED_MODULE_0__.memo(DataRoutes);
function DataRoutes({
  routes,
  future,
  state
}) {
  return useRoutesImpl(routes, void 0, state, future);
}
function MemoryRouter({
  basename,
  children,
  initialEntries,
  initialIndex
}) {
  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries,
      initialIndex,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    action: history.action,
    location: history.location
  });
  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (newState) => {
      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function Navigate({
  to,
  replace: replace2,
  state,
  relative
}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    `<Navigate> may be used only in the context of a <Router> component.`
  );
  let { static: isStatic } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  warning(
    !isStatic,
    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`
  );
  let { matches } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let navigate = useNavigate();
  let path = resolveTo(
    to,
    getResolveToMatches(matches),
    locationPathname,
    relative === "path"
  );
  let jsonPath = JSON.stringify(path);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });
  }, [navigate, jsonPath, relative, replace2, state]);
  return null;
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(
    false,
    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`
  );
}
function Router({
  basename: basenameProp = "/",
  children = null,
  location: locationProp,
  navigationType = "POP" /* Pop */,
  navigator: navigator2,
  static: staticProp = false
}) {
  invariant(
    !useInRouterContext(),
    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`
  );
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => ({
      basename,
      navigator: navigator2,
      static: staticProp,
      future: {}
    }),
    [basename, navigator2, staticProp]
  );
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  warning(
    locationContext != null,
    `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`
  );
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, { children, value: locationContext }));
}
function Routes({
  children,
  location
}) {
  return useRoutes(createRoutesFromChildren(children), location);
}
function Await({
  children,
  errorElement,
  resolve
}) {
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResolveAwait, null, children));
}
var AwaitErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  componentDidCatch(error, errorInfo) {
    console.error(
      "<Await> caught the following error during render",
      error,
      errorInfo
    );
  }
  render() {
    let { children, errorElement, resolve } = this.props;
    let promise = null;
    let status = 0 /* pending */;
    if (!(resolve instanceof Promise)) {
      status = 1 /* success */;
      promise = Promise.resolve();
      Object.defineProperty(promise, "_tracked", { get: () => true });
      Object.defineProperty(promise, "_data", { get: () => resolve });
    } else if (this.state.error) {
      status = 2 /* error */;
      let renderError = this.state.error;
      promise = Promise.reject().catch(() => {
      });
      Object.defineProperty(promise, "_tracked", { get: () => true });
      Object.defineProperty(promise, "_error", { get: () => renderError });
    } else if (resolve._tracked) {
      promise = resolve;
      status = "_error" in promise ? 2 /* error */ : "_data" in promise ? 1 /* success */ : 0 /* pending */;
    } else {
      status = 0 /* pending */;
      Object.defineProperty(resolve, "_tracked", { get: () => true });
      promise = resolve.then(
        (data2) => Object.defineProperty(resolve, "_data", { get: () => data2 }),
        (error) => Object.defineProperty(resolve, "_error", { get: () => error })
      );
    }
    if (status === 2 /* error */ && !errorElement) {
      throw promise._error;
    }
    if (status === 2 /* error */) {
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, { value: promise, children: errorElement });
    }
    if (status === 1 /* success */) {
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, { value: promise, children });
    }
    throw promise;
  }
};
function ResolveAwait({
  children
}) {
  let data2 = useAsyncValue();
  let toRender = typeof children === "function" ? children(data2) : children;
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath = []) {
  let routes = [];
  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (element, index) => {
    if (!react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index];
    if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {
      routes.push.apply(
        routes,
        createRoutesFromChildren(element.props.children, treePath)
      );
      return;
    }
    invariant(
      element.type === Route,
      `[${typeof element.type === "string" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
    );
    invariant(
      !element.props.index || !element.props.children,
      "An index route cannot have child routes."
    );
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      hydrateFallbackElement: element.props.hydrateFallbackElement,
      HydrateFallback: element.props.HydrateFallback,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(
        element.props.children,
        treePath
      );
    }
    routes.push(route);
  });
  return routes;
}
var createRoutesFromElements = createRoutesFromChildren;
function renderMatches(matches) {
  return _renderMatches(matches);
}

// lib/dom/lib.tsx


// lib/dom/dom.ts
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
function createSearchParams(init = "") {
  return new URLSearchParams(
    typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {
      let value = init[key];
      return memo2.concat(
        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]
      );
    }, [])
  );
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams) {
    defaultSearchParams.forEach((_, key) => {
      if (!searchParams.has(key)) {
        defaultSearchParams.getAll(key).forEach((value) => {
          searchParams.append(key, value);
        });
      }
    });
  }
  return searchParams;
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null) {
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      );
      _formDataSupportsSubmitter = false;
    } catch (e) {
      _formDataSupportsSubmitter = true;
    }
  }
  return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain"
]);
function getFormEncType(encType) {
  if (encType != null && !supportedFormEncTypes.has(encType)) {
    warning(
      false,
      `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`
    );
    return null;
  }
  return encType;
}
function getFormSubmissionInfo(target, basename) {
  let method;
  let action;
  let encType;
  let formData;
  let body;
  if (isFormElement(target)) {
    let attr = target.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(target);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null) {
      throw new Error(
        `Cannot submit a <button> or <input type="submit"> without a <form>`
      );
    }
    let attr = target.getAttribute("formaction") || form.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(form, target);
    if (!isFormDataSubmitterSupported()) {
      let { name, type, value } = target;
      if (type === "image") {
        let prefix = name ? `${name}.` : "";
        formData.append(`${prefix}x`, "0");
        formData.append(`${prefix}y`, "0");
      } else if (name) {
        formData.append(name, value);
      }
    }
  } else if (isHtmlElement(target)) {
    throw new Error(
      `Cannot submit element that is not <form>, <button>, or <input type="submit|image">`
    );
  } else {
    method = defaultMethod;
    action = null;
    encType = defaultEncType;
    body = target;
  }
  if (formData && encType === "text/plain") {
    body = formData;
    formData = void 0;
  }
  return { action, method: method.toLowerCase(), encType, formData, body };
}

// lib/dom/ssr/components.tsx


// lib/dom/ssr/invariant.ts
function invariant2(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}

// lib/dom/ssr/routeModules.ts
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache) {
    return routeModulesCache[route.id];
  }
  try {
    let routeModule = await import(
      /* @vite-ignore */
      /* webpackIgnore: true */
      route.module
    );
    routeModulesCache[route.id] = routeModule;
    return routeModule;
  } catch (error) {
    console.error(
      `Error loading route module \`${route.module}\`, reloading page...`
    );
    console.error(error);
    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error
    /* unsupported import.meta.hot */ undefined) {}
    window.location.reload();
    return new Promise(() => {
    });
  }
}

// lib/dom/ssr/links.ts
function getKeyedLinksForMatches(matches, routeModules, manifest) {
  let descriptors = matches.map((match) => {
    let module = routeModules[match.route.id];
    let route = manifest.routes[match.route.id];
    return [
      route && route.css ? route.css.map((href) => ({ rel: "stylesheet", href })) : [],
      module?.links?.() || []
    ];
  }).flat(2);
  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
  return dedupeLinkDescriptors(descriptors, preloads);
}
async function prefetchStyleLinks(route, routeModule) {
  if (!route.css && !routeModule.links || !isPreloadSupported()) return;
  let descriptors = [];
  if (route.css) {
    descriptors.push(...route.css.map((href) => ({ rel: "stylesheet", href })));
  }
  if (routeModule.links) {
    descriptors.push(...routeModule.links());
  }
  if (descriptors.length === 0) return;
  let styleLinks = [];
  for (let descriptor of descriptors) {
    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === "stylesheet") {
      styleLinks.push({
        ...descriptor,
        rel: "preload",
        as: "style"
      });
    }
  }
  let matchingLinks = styleLinks.filter(
    (link) => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel="stylesheet"][href="${link.href}"]`)
  );
  await Promise.all(matchingLinks.map(prefetchStyleLink));
}
async function prefetchStyleLink(descriptor) {
  return new Promise((resolve) => {
    let link = document.createElement("link");
    Object.assign(link, descriptor);
    function removeLink() {
      if (document.head.contains(link)) {
        document.head.removeChild(link);
      }
    }
    link.onload = () => {
      removeLink();
      resolve();
    };
    link.onerror = () => {
      removeLink();
      resolve();
    };
    document.head.appendChild(link);
  });
}
function isPageLinkDescriptor(object) {
  return object != null && typeof object.page === "string";
}
function isHtmlLinkDescriptor(object) {
  if (object == null) {
    return false;
  }
  if (object.href == null) {
    return object.rel === "preload" && typeof object.imageSrcSet === "string" && typeof object.imageSizes === "string";
  }
  return typeof object.rel === "string" && typeof object.href === "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
  let links = await Promise.all(
    matches.map(async (match) => {
      let route = manifest.routes[match.route.id];
      if (route) {
        let mod = await loadRouteModule(route, routeModules);
        return mod.links ? mod.links() : [];
      }
      return [];
    })
  );
  return dedupeLinkDescriptors(
    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map(
      (link) => link.rel === "stylesheet" ? { ...link, rel: "prefetch", as: "style" } : { ...link, rel: "prefetch" }
    )
  );
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
  let isNew = (match, index) => {
    if (!currentMatches[index]) return true;
    return match.route.id !== currentMatches[index].route.id;
  };
  let matchPathChanged = (match, index) => {
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      currentMatches[index].route.path?.endsWith("*") && currentMatches[index].params["*"] !== match.params["*"]
    );
  };
  if (mode === "assets") {
    return nextMatches.filter(
      (match, index) => isNew(match, index) || matchPathChanged(match, index)
    );
  }
  if (mode === "data") {
    return nextMatches.filter((match, index) => {
      let manifestRoute = manifest.routes[match.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return false;
      }
      if (isNew(match, index) || matchPathChanged(match, index)) {
        return true;
      }
      if (match.route.shouldRevalidate) {
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(
            location.pathname + location.search + location.hash,
            window.origin
          ),
          currentParams: currentMatches[0]?.params || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: true
        });
        if (typeof routeChoice === "boolean") {
          return routeChoice;
        }
      }
      return true;
    });
  }
  return [];
}
function getModuleLinkHrefs(matches, manifestPatch) {
  return dedupeHrefs(
    matches.map((match) => {
      let route = manifestPatch.routes[match.route.id];
      if (!route) return [];
      let hrefs = [route.module];
      if (route.imports) {
        hrefs = hrefs.concat(route.imports);
      }
      return hrefs;
    }).flat(1)
  );
}
function getCurrentPageModulePreloadHrefs(matches, manifest) {
  return dedupeHrefs(
    matches.map((match) => {
      let route = manifest.routes[match.route.id];
      if (!route) return [];
      let hrefs = [route.module];
      if (route.imports) {
        hrefs = hrefs.concat(route.imports);
      }
      return hrefs;
    }).flat(1)
  );
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function sortKeys(obj) {
  let sorted = {};
  let keys = Object.keys(obj).sort();
  for (let key of keys) {
    sorted[key] = obj[key];
  }
  return sorted;
}
function dedupeLinkDescriptors(descriptors, preloads) {
  let set = /* @__PURE__ */ new Set();
  let preloadsSet = new Set(preloads);
  return descriptors.reduce((deduped, descriptor) => {
    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href);
    if (alreadyModulePreload) {
      return deduped;
    }
    let key = JSON.stringify(sortKeys(descriptor));
    if (!set.has(key)) {
      set.add(key);
      deduped.push({ key, link: descriptor });
    }
    return deduped;
  }, []);
}
var _isPreloadSupported;
function isPreloadSupported() {
  if (_isPreloadSupported !== void 0) {
    return _isPreloadSupported;
  }
  let el = document.createElement("link");
  _isPreloadSupported = el.relList.supports("preload");
  el = null;
  return _isPreloadSupported;
}

// lib/dom/ssr/markup.ts
var ESCAPE_LOOKUP = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var ESCAPE_REGEX = /[&><\u2028\u2029]/g;
function escapeHtml(html) {
  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
}
function createHtml(html) {
  return { __html: html };
}

// lib/dom/ssr/single-fetch.tsx



// lib/dom/ssr/data.ts
async function createRequestInit(request) {
  let init = { signal: request.signal };
  if (request.method !== "GET") {
    init.method = request.method;
    let contentType = request.headers.get("Content-Type");
    if (contentType && /\bapplication\/json\b/.test(contentType)) {
      init.headers = { "Content-Type": contentType };
      init.body = JSON.stringify(await request.json());
    } else if (contentType && /\btext\/plain\b/.test(contentType)) {
      init.headers = { "Content-Type": contentType };
      init.body = await request.text();
    } else if (contentType && /\bapplication\/x-www-form-urlencoded\b/.test(contentType)) {
      init.body = new URLSearchParams(await request.text());
    } else {
      init.body = await request.formData();
    }
  }
  return init;
}

// lib/dom/ssr/single-fetch.tsx
var SingleFetchRedirectSymbol = Symbol("SingleFetchRedirect");
function StreamTransfer({
  context,
  identifier,
  reader,
  textDecoder,
  nonce
}) {
  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {
    return null;
  }
  if (!context.renderMeta.streamCache) {
    context.renderMeta.streamCache = {};
  }
  let { streamCache } = context.renderMeta;
  let promise = streamCache[identifier];
  if (!promise) {
    promise = streamCache[identifier] = reader.read().then((result) => {
      streamCache[identifier].result = {
        done: result.done,
        value: textDecoder.decode(result.value, { stream: true })
      };
    }).catch((e) => {
      streamCache[identifier].error = e;
    });
  }
  if (promise.error) {
    throw promise.error;
  }
  if (promise.result === void 0) {
    throw promise;
  }
  let { done, value } = promise.result;
  let scriptTag = value ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "script",
    {
      nonce,
      dangerouslySetInnerHTML: {
        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(
          JSON.stringify(value)
        )});`
      }
    }
  ) : null;
  if (done) {
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, scriptTag, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "script",
      {
        nonce,
        dangerouslySetInnerHTML: {
          __html: `window.__reactRouterContext.streamController.close();`
        }
      }
    ));
  } else {
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, scriptTag, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      StreamTransfer,
      {
        context,
        identifier: identifier + 1,
        reader,
        textDecoder,
        nonce
      }
    )));
  }
}
function getSingleFetchDataStrategy(manifest, routeModules, getRouter) {
  return async ({ request, matches, fetcherKey }) => {
    if (request.method !== "GET") {
      return singleFetchActionStrategy(request, matches);
    }
    if (fetcherKey) {
      return singleFetchLoaderFetcherStrategy(request, matches);
    }
    return singleFetchLoaderNavigationStrategy(
      manifest,
      routeModules,
      getRouter(),
      request,
      matches
    );
  };
}
async function singleFetchActionStrategy(request, matches) {
  let actionMatch = matches.find((m) => m.shouldLoad);
  invariant2(actionMatch, "No action match found");
  let actionStatus = void 0;
  let result = await actionMatch.resolve(async (handler) => {
    let result2 = await handler(async () => {
      let url = singleFetchUrl(request.url);
      let init = await createRequestInit(request);
      let { data: data2, status } = await fetchAndDecode(url, init);
      actionStatus = status;
      return unwrapSingleFetchResult(
        data2,
        actionMatch.route.id
      );
    });
    return result2;
  });
  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {
    return { [actionMatch.route.id]: result };
  }
  return {
    [actionMatch.route.id]: {
      type: result.type,
      result: data(result.result, actionStatus)
    }
  };
}
async function singleFetchLoaderNavigationStrategy(manifest, routeModules, router, request, matches) {
  let routesParams = /* @__PURE__ */ new Set();
  let foundOptOutRoute = false;
  let routeDfds = matches.map(() => createDeferred2());
  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));
  let singleFetchDfd = createDeferred2();
  let url = stripIndexParam(singleFetchUrl(request.url));
  let init = await createRequestInit(request);
  let results = {};
  let resolvePromise = Promise.all(
    matches.map(
      async (m, i) => m.resolve(async (handler) => {
        routeDfds[i].resolve();
        let manifestRoute = manifest.routes[m.route.id];
        if (!m.shouldLoad) {
          if (!router.state.initialized) {
            return;
          }
          if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {
            foundOptOutRoute = true;
            return;
          }
        }
        if (manifestRoute && manifestRoute.hasClientLoader) {
          if (manifestRoute.hasLoader) {
            foundOptOutRoute = true;
          }
          try {
            let result = await fetchSingleLoader(
              handler,
              url,
              init,
              m.route.id
            );
            results[m.route.id] = { type: "data", result };
          } catch (e) {
            results[m.route.id] = { type: "error", result: e };
          }
          return;
        }
        if (manifestRoute && manifestRoute.hasLoader) {
          routesParams.add(m.route.id);
        }
        try {
          let result = await handler(async () => {
            let data2 = await singleFetchDfd.promise;
            return unwrapSingleFetchResults(data2, m.route.id);
          });
          results[m.route.id] = {
            type: "data",
            result
          };
        } catch (e) {
          results[m.route.id] = {
            type: "error",
            result: e
          };
        }
      })
    )
  );
  await routesLoadedPromise;
  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {
    singleFetchDfd.resolve({});
  } else {
    try {
      if (foundOptOutRoute && routesParams.size > 0) {
        url.searchParams.set(
          "_routes",
          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(",")
        );
      }
      let data2 = await fetchAndDecode(url, init);
      singleFetchDfd.resolve(data2.data);
    } catch (e) {
      singleFetchDfd.reject(e);
    }
  }
  await resolvePromise;
  return results;
}
async function singleFetchLoaderFetcherStrategy(request, matches) {
  let fetcherMatch = matches.find((m) => m.shouldLoad);
  invariant2(fetcherMatch, "No fetcher match found");
  let result = await fetcherMatch.resolve(async (handler) => {
    let url = stripIndexParam(singleFetchUrl(request.url));
    let init = await createRequestInit(request);
    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);
  });
  return { [fetcherMatch.route.id]: result };
}
function fetchSingleLoader(handler, url, init, routeId) {
  return handler(async () => {
    let singleLoaderUrl = new URL(url);
    singleLoaderUrl.searchParams.set("_routes", routeId);
    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);
    return unwrapSingleFetchResults(data2, routeId);
  });
}
function stripIndexParam(url) {
  let indexValues = url.searchParams.getAll("index");
  url.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues) {
    if (indexValue) {
      indexValuesToKeep.push(indexValue);
    }
  }
  for (let toKeep of indexValuesToKeep) {
    url.searchParams.append("index", toKeep);
  }
  return url;
}
function singleFetchUrl(reqUrl) {
  let url = typeof reqUrl === "string" ? new URL(
    reqUrl,
    // This can be called during the SSR flow via PrefetchPageLinksImpl so
    // don't assume window is available
    typeof window === "undefined" ? "server://singlefetch/" : window.location.origin
  ) : reqUrl;
  if (url.pathname === "/") {
    url.pathname = "_root.data";
  } else {
    url.pathname = `${url.pathname.replace(/\/$/, "")}.data`;
  }
  return url;
}
async function fetchAndDecode(url, init) {
  let res = await fetch(url, init);
  if (res.status === 404 && !res.headers.has("X-Remix-Response")) {
    throw new ErrorResponseImpl(404, "Not Found", true);
  }
  invariant2(res.body, "No response body to decode");
  try {
    let decoded = await decodeViaTurboStream(res.body, window);
    return { status: res.status, data: decoded.value };
  } catch (e) {
    throw new Error("Unable to decode turbo-stream response");
  }
}
function decodeViaTurboStream(body, global2) {
  return (0,turbo_stream__WEBPACK_IMPORTED_MODULE_1__.decode)(body, {
    plugins: [
      (type, ...rest) => {
        if (type === "SanitizedError") {
          let [name, message, stack] = rest;
          let Constructor = Error;
          if (name && name in global2 && typeof global2[name] === "function") {
            Constructor = global2[name];
          }
          let error = new Constructor(message);
          error.stack = stack;
          return { value: error };
        }
        if (type === "ErrorResponse") {
          let [data2, status, statusText] = rest;
          return {
            value: new ErrorResponseImpl(status, statusText, data2)
          };
        }
        if (type === "SingleFetchRedirect") {
          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };
        }
        if (type === "SingleFetchClassInstance") {
          return { value: rest[0] };
        }
        if (type === "SingleFetchFallback") {
          return { value: void 0 };
        }
      }
    ]
  });
}
function unwrapSingleFetchResults(results, routeId) {
  let redirect2 = results[SingleFetchRedirectSymbol];
  if (redirect2) {
    return unwrapSingleFetchResult(redirect2, routeId);
  }
  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;
}
function unwrapSingleFetchResult(result, routeId) {
  if ("error" in result) {
    throw result.error;
  } else if ("redirect" in result) {
    let headers = {};
    if (result.revalidate) {
      headers["X-Remix-Revalidate"] = "yes";
    }
    if (result.reload) {
      headers["X-Remix-Reload-Document"] = "yes";
    }
    if (result.replace) {
      headers["X-Remix-Replace"] = "yes";
    }
    throw redirect(result.redirect, { status: result.status, headers });
  } else if ("data" in result) {
    return result.data;
  } else {
    throw new Error(`No response found for routeId "${routeId}"`);
  }
}
function createDeferred2() {
  let resolve;
  let reject;
  let promise = new Promise((res, rej) => {
    resolve = async (val) => {
      res(val);
      try {
        await promise;
      } catch (e) {
      }
    };
    reject = async (error) => {
      rej(error);
      try {
        await promise;
      } catch (e) {
      }
    };
  });
  return {
    promise,
    //@ts-ignore
    resolve,
    //@ts-ignore
    reject
  };
}

// lib/dom/ssr/fog-of-war.ts


// lib/dom/ssr/routes.tsx


// lib/dom/ssr/errorBoundaries.tsx

var RemixErrorBoundary = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    this.state = { error: props.error || null, location: props.location };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location) {
      return { error: props.error || null, location: props.location };
    }
    return { error: props.error || state.error, location: state.location };
  }
  render() {
    if (this.state.error) {
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        RemixRootDefaultErrorBoundary,
        {
          error: this.state.error,
          isOutsideRemixApp: true
        }
      );
    } else {
      return this.props.children;
    }
  }
};
function RemixRootDefaultErrorBoundary({
  error,
  isOutsideRemixApp
}) {
  console.error(error);
  let heyDeveloper = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "script",
    {
      dangerouslySetInnerHTML: {
        __html: `
        console.log(
          "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
        );
      `
      }
    }
  );
  if (isRouteErrorResponse(error)) {
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BoundaryShell, { title: "Unhandled Thrown Response!" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1", { style: { fontSize: "24px" } }, error.status, " ", error.statusText), heyDeveloper);
  }
  let errorInstance;
  if (error instanceof Error) {
    errorInstance = error;
  } else {
    let errorString = error == null ? "Unknown Error" : typeof error === "object" && "toString" in error ? error.toString() : JSON.stringify(error);
    errorInstance = new Error(errorString);
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    BoundaryShell,
    {
      title: "Application Error!",
      isOutsideRemixApp
    },
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1", { style: { fontSize: "24px" } }, "Application Error"),
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "pre",
      {
        style: {
          padding: "2rem",
          background: "hsla(10, 50%, 50%, 0.1)",
          color: "red",
          overflow: "auto"
        }
      },
      errorInstance.stack
    ),
    heyDeveloper
  );
}
function BoundaryShell({
  title,
  renderScripts,
  isOutsideRemixApp,
  children
}) {
  let { routeModules } = useFrameworkContext();
  if (routeModules.root?.Layout && !isOutsideRemixApp) {
    return children;
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("html", { lang: "en" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("head", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("meta", { charSet: "utf-8" }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "meta",
    {
      name: "viewport",
      content: "width=device-width,initial-scale=1,viewport-fit=cover"
    }
  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", null, title)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("body", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("main", { style: { fontFamily: "system-ui, sans-serif", padding: "2rem" } }, children, renderScripts ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Scripts, null) : null)));
}

// lib/dom/ssr/fallback.tsx

function RemixRootDefaultHydrateFallback() {
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BoundaryShell, { title: "Loading...", renderScripts: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "script",
    {
      dangerouslySetInnerHTML: {
        __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this " +
                "when your app is loading JS modules and/or running \`clientLoader\` " +
                "functions. Check out https://remix.run/route/hydrate-fallback " +
                "for more information."
              );
            `
      }
    }
  ));
}

// lib/dom/ssr/routes.tsx
function groupRoutesByParentId(manifest) {
  let routes = {};
  Object.values(manifest).forEach((route) => {
    if (route) {
      let parentId = route.parentId || "";
      if (!routes[parentId]) {
        routes[parentId] = [];
      }
      routes[parentId].push(route);
    }
  });
  return routes;
}
function getRouteComponents(route, routeModule, isSpaMode) {
  let Component4 = getRouteModuleComponent(routeModule);
  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === "root") ? routeModule.HydrateFallback : route.id === "root" ? RemixRootDefaultHydrateFallback : void 0;
  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === "root" ? () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;
  if (route.id === "root" && routeModule.Layout) {
    return {
      ...Component4 ? {
        element: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component4, null))
      } : { Component: Component4 },
      ...ErrorBoundary ? {
        errorElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary, null))
      } : { ErrorBoundary },
      ...HydrateFallback ? {
        hydrateFallbackElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(routeModule.Layout, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(HydrateFallback, null))
      } : { HydrateFallback }
    };
  }
  return { Component: Component4, ErrorBoundary, HydrateFallback };
}
function createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {
  return (routesByParentId[parentId] || []).map((route) => {
    let routeModule = routeModules[route.id];
    invariant2(
      routeModule,
      "No `routeModule` available to create server routes"
    );
    let dataRoute = {
      ...getRouteComponents(route, routeModule, isSpaMode),
      caseSensitive: route.caseSensitive,
      id: route.id,
      index: route.index,
      path: route.path,
      handle: routeModule.handle,
      // For SPA Mode, all routes are lazy except root.  However we tell the
      // router root is also lazy here too since we don't need a full
      // implementation - we just need a `lazy` prop to tell the RR rendering
      // where to stop which is always at the root route in SPA mode
      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,
      // For partial hydration rendering, we need to indicate when the route
      // has a loader/clientLoader, but it won't ever be called during the static
      // render, so just give it a no-op function so we can render down to the
      // proper fallback
      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0
      // We don't need action/shouldRevalidate on these routes since they're
      // for a static render
    };
    let children = createServerRoutes(
      manifest,
      routeModules,
      future,
      isSpaMode,
      route.id,
      routesByParentId,
      spaModeLazyPromise
    );
    if (children.length > 0) dataRoute.children = children;
    return dataRoute;
  });
}
function createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {
  return createClientRoutes(
    manifest,
    routeModulesCache,
    initialState,
    isSpaMode,
    "",
    groupRoutesByParentId(manifest),
    needsRevalidation
  );
}
function preventInvalidServerHandlerCall(type, route, isSpaMode) {
  if (isSpaMode) {
    let fn2 = type === "action" ? "serverAction()" : "serverLoader()";
    let msg2 = `You cannot call ${fn2} in SPA Mode (routeId: "${route.id}")`;
    console.error(msg2);
    throw new ErrorResponseImpl(400, "Bad Request", new Error(msg2), true);
  }
  let fn = type === "action" ? "serverAction()" : "serverLoader()";
  let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: "${route.id}")`;
  if (type === "loader" && !route.hasLoader || type === "action" && !route.hasAction) {
    console.error(msg);
    throw new ErrorResponseImpl(400, "Bad Request", new Error(msg), true);
  }
}
function noActionDefinedError(type, routeId) {
  let article = type === "clientAction" ? "a" : "an";
  let msg = `Route "${routeId}" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \`${type}\` function to the route`;
  console.error(msg);
  throw new ErrorResponseImpl(405, "Method Not Allowed", new Error(msg), true);
}
function createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, parentId = "", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {
  return (routesByParentId[parentId] || []).map((route) => {
    let routeModule = routeModulesCache[route.id];
    function fetchServerHandler(singleFetch) {
      invariant2(
        typeof singleFetch === "function",
        "No single fetch function available for route handler"
      );
      return singleFetch();
    }
    function fetchServerLoader(singleFetch) {
      if (!route.hasLoader) return Promise.resolve(null);
      return fetchServerHandler(singleFetch);
    }
    function fetchServerAction(singleFetch) {
      if (!route.hasAction) {
        throw noActionDefinedError("action", route.id);
      }
      return fetchServerHandler(singleFetch);
    }
    async function prefetchStylesAndCallHandler(handler) {
      let cachedModule = routeModulesCache[route.id];
      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();
      try {
        return handler();
      } finally {
        await linkPrefetchPromise;
      }
    }
    let dataRoute = {
      id: route.id,
      index: route.index,
      path: route.path
    };
    if (routeModule) {
      Object.assign(dataRoute, {
        ...dataRoute,
        ...getRouteComponents(route, routeModule, isSpaMode),
        handle: routeModule.handle,
        shouldRevalidate: getShouldRevalidateFunction(
          routeModule,
          route.id,
          needsRevalidation
        )
      });
      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;
      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;
      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;
      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;
      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);
      dataRoute.loader = async ({ request, params }, singleFetch) => {
        try {
          let result = await prefetchStylesAndCallHandler(async () => {
            invariant2(
              routeModule,
              "No `routeModule` available for critical-route loader"
            );
            if (!routeModule.clientLoader) {
              if (isSpaMode) return null;
              return fetchServerLoader(singleFetch);
            }
            return routeModule.clientLoader({
              request,
              params,
              async serverLoader() {
                preventInvalidServerHandlerCall("loader", route, isSpaMode);
                if (isHydrationRequest) {
                  if (hasInitialData) {
                    return initialData;
                  }
                  if (hasInitialError) {
                    throw initialError;
                  }
                }
                return fetchServerLoader(singleFetch);
              }
            });
          });
          return result;
        } finally {
          isHydrationRequest = false;
        }
      };
      dataRoute.loader.hydrate = shouldHydrateRouteLoader(
        route,
        routeModule,
        isSpaMode
      );
      dataRoute.action = ({ request, params }, singleFetch) => {
        return prefetchStylesAndCallHandler(async () => {
          invariant2(
            routeModule,
            "No `routeModule` available for critical-route action"
          );
          if (!routeModule.clientAction) {
            if (isSpaMode) {
              throw noActionDefinedError("clientAction", route.id);
            }
            return fetchServerAction(singleFetch);
          }
          return routeModule.clientAction({
            request,
            params,
            async serverAction() {
              preventInvalidServerHandlerCall("action", route, isSpaMode);
              return fetchServerAction(singleFetch);
            }
          });
        });
      };
    } else {
      if (!route.hasClientLoader) {
        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {
          if (isSpaMode) return Promise.resolve(null);
          return fetchServerLoader(singleFetch);
        });
      }
      if (!route.hasClientAction) {
        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {
          if (isSpaMode) {
            throw noActionDefinedError("clientAction", route.id);
          }
          return fetchServerAction(singleFetch);
        });
      }
      dataRoute.lazy = async () => {
        let mod = await loadRouteModuleWithBlockingLinks(
          route,
          routeModulesCache
        );
        let lazyRoute = { ...mod };
        if (mod.clientLoader) {
          let clientLoader = mod.clientLoader;
          lazyRoute.loader = (args, singleFetch) => clientLoader({
            ...args,
            async serverLoader() {
              preventInvalidServerHandlerCall("loader", route, isSpaMode);
              return fetchServerLoader(singleFetch);
            }
          });
        }
        if (mod.clientAction) {
          let clientAction = mod.clientAction;
          lazyRoute.action = (args, singleFetch) => clientAction({
            ...args,
            async serverAction() {
              preventInvalidServerHandlerCall("action", route, isSpaMode);
              return fetchServerAction(singleFetch);
            }
          });
        }
        return {
          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},
          ...lazyRoute.action ? { action: lazyRoute.action } : {},
          hasErrorBoundary: lazyRoute.hasErrorBoundary,
          shouldRevalidate: getShouldRevalidateFunction(
            lazyRoute,
            route.id,
            needsRevalidation
          ),
          handle: lazyRoute.handle,
          // No need to wrap these in layout since the root route is never
          // loaded via route.lazy()
          Component: lazyRoute.Component,
          ErrorBoundary: lazyRoute.ErrorBoundary
        };
      };
    }
    let children = createClientRoutes(
      manifest,
      routeModulesCache,
      initialState,
      isSpaMode,
      route.id,
      routesByParentId,
      needsRevalidation
    );
    if (children.length > 0) dataRoute.children = children;
    return dataRoute;
  });
}
function getShouldRevalidateFunction(route, routeId, needsRevalidation) {
  if (needsRevalidation) {
    return wrapShouldRevalidateForHdr(
      routeId,
      route.shouldRevalidate,
      needsRevalidation
    );
  }
  if (route.shouldRevalidate) {
    let fn = route.shouldRevalidate;
    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });
  }
  return route.shouldRevalidate;
}
function wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {
  let handledRevalidation = false;
  return (arg) => {
    if (!handledRevalidation) {
      handledRevalidation = true;
      return needsRevalidation.has(routeId);
    }
    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;
  };
}
async function loadRouteModuleWithBlockingLinks(route, routeModules) {
  let routeModule = await loadRouteModule(route, routeModules);
  await prefetchStyleLinks(route, routeModule);
  return {
    Component: getRouteModuleComponent(routeModule),
    ErrorBoundary: routeModule.ErrorBoundary,
    clientAction: routeModule.clientAction,
    clientLoader: routeModule.clientLoader,
    handle: routeModule.handle,
    links: routeModule.links,
    meta: routeModule.meta,
    shouldRevalidate: routeModule.shouldRevalidate
  };
}
function getRouteModuleComponent(routeModule) {
  if (routeModule.default == null) return void 0;
  let isEmptyObject = typeof routeModule.default === "object" && Object.keys(routeModule.default).length === 0;
  if (!isEmptyObject) {
    return routeModule.default;
  }
}
function shouldHydrateRouteLoader(route, routeModule, isSpaMode) {
  return isSpaMode && route.id !== "root" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);
}

// lib/dom/ssr/fog-of-war.ts
var nextPaths = /* @__PURE__ */ new Set();
var discoveredPathsMaxSize = 1e3;
var discoveredPaths = /* @__PURE__ */ new Set();
var URL_LIMIT = 7680;
function isFogOfWarEnabled(isSpaMode) {
  return !isSpaMode;
}
function getPartialManifest(manifest, router) {
  let routeIds = new Set(router.state.matches.map((m) => m.route.id));
  let segments = router.state.location.pathname.split("/").filter(Boolean);
  let paths = ["/"];
  segments.pop();
  while (segments.length > 0) {
    paths.push(`/${segments.join("/")}`);
    segments.pop();
  }
  paths.forEach((path) => {
    let matches = matchRoutes(router.routes, path, router.basename);
    if (matches) {
      matches.forEach((m) => routeIds.add(m.route.id));
    }
  });
  let initialRoutes = [...routeIds].reduce(
    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),
    {}
  );
  return {
    ...manifest,
    routes: initialRoutes
  };
}
function getPatchRoutesOnNavigationFunction(manifest, routeModules, isSpaMode, basename) {
  if (!isFogOfWarEnabled(isSpaMode)) {
    return void 0;
  }
  return async ({ path, patch }) => {
    if (discoveredPaths.has(path)) {
      return;
    }
    await fetchAndApplyManifestPatches(
      [path],
      manifest,
      routeModules,
      isSpaMode,
      basename,
      patch
    );
  };
}
function useFogOFWarDiscovery(router, manifest, routeModules, isSpaMode) {
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!isFogOfWarEnabled(isSpaMode) || navigator.connection?.saveData === true) {
      return;
    }
    function registerElement(el) {
      let path = el.tagName === "FORM" ? el.getAttribute("action") : el.getAttribute("href");
      if (!path) {
        return;
      }
      let url = new URL(path, window.location.origin);
      if (!discoveredPaths.has(url.pathname)) {
        nextPaths.add(url.pathname);
      }
    }
    async function fetchPatches() {
      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {
        if (discoveredPaths.has(path)) {
          nextPaths.delete(path);
          return false;
        }
        return true;
      });
      if (lazyPaths.length === 0) {
        return;
      }
      try {
        await fetchAndApplyManifestPatches(
          lazyPaths,
          manifest,
          routeModules,
          isSpaMode,
          router.basename,
          router.patchRoutes
        );
      } catch (e) {
        console.error("Failed to fetch manifest patches", e);
      }
    }
    document.body.querySelectorAll("a[data-discover], form[data-discover]").forEach((el) => registerElement(el));
    fetchPatches();
    let debouncedFetchPatches = debounce(fetchPatches, 100);
    function isElement(node) {
      return node.nodeType === Node.ELEMENT_NODE;
    }
    let observer = new MutationObserver((records) => {
      let elements = /* @__PURE__ */ new Set();
      records.forEach((r) => {
        [r.target, ...r.addedNodes].forEach((node) => {
          if (!isElement(node)) return;
          if (node.tagName === "A" && node.getAttribute("data-discover")) {
            elements.add(node);
          } else if (node.tagName === "FORM" && node.getAttribute("data-discover")) {
            elements.add(node);
          }
          if (node.tagName !== "A") {
            node.querySelectorAll("a[data-discover], form[data-discover]").forEach((el) => elements.add(el));
          }
        });
      });
      elements.forEach((el) => registerElement(el));
      debouncedFetchPatches();
    });
    observer.observe(document.documentElement, {
      subtree: true,
      childList: true,
      attributes: true,
      attributeFilter: ["data-discover", "href", "action"]
    });
    return () => observer.disconnect();
  }, [isSpaMode, manifest, routeModules, router]);
}
async function fetchAndApplyManifestPatches(paths, manifest, routeModules, isSpaMode, basename, patchRoutes) {
  let manifestPath = `${basename != null ? basename : "/"}/__manifest`.replace(
    /\/+/g,
    "/"
  );
  let url = new URL(manifestPath, window.location.origin);
  paths.sort().forEach((path) => url.searchParams.append("p", path));
  url.searchParams.set("version", manifest.version);
  if (url.toString().length > URL_LIMIT) {
    nextPaths.clear();
    return;
  }
  let res = await fetch(url);
  if (!res.ok) {
    throw new Error(`${res.status} ${res.statusText}`);
  } else if (res.status >= 400) {
    throw new Error(await res.text());
  }
  let serverPatches = await res.json();
  let knownRoutes = new Set(Object.keys(manifest.routes));
  let patches = Object.values(serverPatches).reduce((acc, route) => {
    if (route && !knownRoutes.has(route.id)) {
      acc[route.id] = route;
    }
    return acc;
  }, {});
  Object.assign(manifest.routes, patches);
  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));
  let parentIds = /* @__PURE__ */ new Set();
  Object.values(patches).forEach((patch) => {
    if (patch && (!patch.parentId || !patches[patch.parentId])) {
      parentIds.add(patch.parentId);
    }
  });
  parentIds.forEach(
    (parentId) => patchRoutes(
      parentId || null,
      createClientRoutes(patches, routeModules, null, isSpaMode, parentId)
    )
  );
}
function addToFifoQueue(path, queue) {
  if (queue.size >= discoveredPathsMaxSize) {
    let first = queue.values().next().value;
    queue.delete(first);
  }
  queue.add(path);
}
function debounce(callback, wait) {
  let timeoutId;
  return (...args) => {
    window.clearTimeout(timeoutId);
    timeoutId = window.setTimeout(() => callback(...args), wait);
  };
}

// lib/dom/ssr/components.tsx
function useDataRouterContext2() {
  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterContext.Provider> element"
  );
  return context;
}
function useDataRouterStateContext() {
  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterStateContext.Provider> element"
  );
  return context;
}
var FrameworkContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);
FrameworkContext.displayName = "FrameworkContext";
function useFrameworkContext() {
  let context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);
  invariant2(
    context,
    "You must render this element inside a <HydratedRouter> element"
  );
  return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let frameworkContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);
  let [maybePrefetch, setMaybePrefetch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
  let [shouldPrefetch, setShouldPrefetch] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;
  let ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (prefetch === "render") {
      setShouldPrefetch(true);
    }
    if (prefetch === "viewport") {
      let callback = (entries) => {
        entries.forEach((entry) => {
          setShouldPrefetch(entry.isIntersecting);
        });
      };
      let observer = new IntersectionObserver(callback, { threshold: 0.5 });
      if (ref.current) observer.observe(ref.current);
      return () => {
        observer.disconnect();
      };
    }
  }, [prefetch]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (maybePrefetch) {
      let id = setTimeout(() => {
        setShouldPrefetch(true);
      }, 100);
      return () => {
        clearTimeout(id);
      };
    }
  }, [maybePrefetch]);
  let setIntent = () => {
    setMaybePrefetch(true);
  };
  let cancelIntent = () => {
    setMaybePrefetch(false);
    setShouldPrefetch(false);
  };
  if (!frameworkContext) {
    return [false, ref, {}];
  }
  if (prefetch !== "intent") {
    return [shouldPrefetch, ref, {}];
  }
  return [
    shouldPrefetch,
    ref,
    {
      onFocus: composeEventHandlers(onFocus, setIntent),
      onBlur: composeEventHandlers(onBlur, cancelIntent),
      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
      onTouchStart: composeEventHandlers(onTouchStart, setIntent)
    }
  ];
}
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event);
    if (!event.defaultPrevented) {
      ourHandler(event);
    }
  };
}
function getActiveMatches(matches, errors, isSpaMode) {
  if (isSpaMode && !isHydrated) {
    return [matches[0]];
  }
  if (errors) {
    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);
    return matches.slice(0, errorIdx + 1);
  }
  return matches;
}
function Links() {
  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();
  let { errors, matches: routerMatches } = useDataRouterStateContext();
  let matches = getActiveMatches(routerMatches, errors, isSpaMode);
  let keyedLinks = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => getKeyedLinksForMatches(matches, routeModules, manifest),
    [matches, routeModules, manifest]
  );
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, criticalCss ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("style", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, keyedLinks.map(
    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("link", { key, ...link })
  ));
}
function PrefetchPageLinks({
  page,
  ...dataLinkProps
}) {
  let { router } = useDataRouterContext2();
  let matches = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => matchRoutes(router.routes, page, router.basename),
    [router.routes, page, router.basename]
  );
  if (!matches) {
    return null;
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });
}
function useKeyedPrefetchLinks(matches) {
  let { manifest, routeModules } = useFrameworkContext();
  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    let interrupted = false;
    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(
      (links) => {
        if (!interrupted) {
          setKeyedPrefetchLinks(links);
        }
      }
    );
    return () => {
      interrupted = true;
    };
  }, [matches, manifest, routeModules]);
  return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation();
  let { manifest, routeModules } = useFrameworkContext();
  let { loaderData, matches } = useDataRouterStateContext();
  let newMatchesForData = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "data"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let newMatchesForAssets = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "assets"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let dataHrefs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (page === location.pathname + location.search + location.hash) {
      return [];
    }
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    nextMatches.forEach((m) => {
      let manifestRoute = manifest.routes[m.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return;
      }
      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {
        foundOptOutRoute = true;
      } else if (manifestRoute.hasClientLoader) {
        foundOptOutRoute = true;
      } else {
        routesParams.add(m.route.id);
      }
    });
    if (routesParams.size === 0) {
      return [];
    }
    let url = singleFetchUrl(page);
    if (foundOptOutRoute && routesParams.size > 0) {
      url.searchParams.set(
        "_routes",
        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(",")
      );
    }
    return [url.pathname + url.search];
  }, [
    loaderData,
    location,
    manifest,
    newMatchesForData,
    nextMatches,
    page,
    routeModules
  ]);
  let moduleHrefs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => getModuleLinkHrefs(newMatchesForAssets, manifest),
    [newMatchesForAssets, manifest]
  );
  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("link", { key: href, rel: "prefetch", as: "fetch", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("link", { key: href, rel: "modulepreload", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("link", { key, ...link })
  )));
}
function Meta() {
  let { isSpaMode, routeModules } = useFrameworkContext();
  let {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext();
  let location = useLocation();
  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);
  let error = null;
  if (errors) {
    error = errors[_matches[_matches.length - 1].route.id];
  }
  let meta = [];
  let leafMeta = null;
  let matches = [];
  for (let i = 0; i < _matches.length; i++) {
    let _match = _matches[i];
    let routeId = _match.route.id;
    let data2 = loaderData[routeId];
    let params = _match.params;
    let routeModule = routeModules[routeId];
    let routeMeta = [];
    let match = {
      id: routeId,
      data: data2,
      meta: [],
      params: _match.params,
      pathname: _match.pathname,
      handle: _match.route.handle,
      error
    };
    matches[i] = match;
    if (routeModule?.meta) {
      routeMeta = typeof routeModule.meta === "function" ? routeModule.meta({
        data: data2,
        params,
        location,
        matches,
        error
      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;
    } else if (leafMeta) {
      routeMeta = [...leafMeta];
    }
    routeMeta = routeMeta || [];
    if (!Array.isArray(routeMeta)) {
      throw new Error(
        "The route at " + _match.route.path + " returns an invalid value. All route meta functions must return an array of meta objects.\n\nTo reference the meta function API, see https://remix.run/route/meta"
      );
    }
    match.meta = routeMeta;
    matches[i] = match;
    meta = [...routeMeta];
    leafMeta = meta;
  }
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, meta.flat().map((metaProps) => {
    if (!metaProps) {
      return null;
    }
    if ("tagName" in metaProps) {
      let { tagName, ...rest } = metaProps;
      if (!isValidMetaTag(tagName)) {
        console.warn(
          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`
        );
        return null;
      }
      let Comp = tagName;
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp, { key: JSON.stringify(rest), ...rest });
    }
    if ("title" in metaProps) {
      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", { key: "title" }, String(metaProps.title));
    }
    if ("charset" in metaProps) {
      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);
      delete metaProps.charset;
    }
    if ("charSet" in metaProps && metaProps.charSet != null) {
      return typeof metaProps.charSet === "string" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("meta", { key: "charSet", charSet: metaProps.charSet }) : null;
    }
    if ("script:ld+json" in metaProps) {
      try {
        let json = JSON.stringify(metaProps["script:ld+json"]);
        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
          "script",
          {
            key: `script:ld+json:${json}`,
            type: "application/ld+json",
            dangerouslySetInnerHTML: { __html: json }
          }
        );
      } catch (err) {
        return null;
      }
    }
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("meta", { key: JSON.stringify(metaProps), ...metaProps });
  }));
}
function isValidMetaTag(tagName) {
  return typeof tagName === "string" && /^(meta|link)$/.test(tagName);
}
var isHydrated = false;
function Scripts(props) {
  let { manifest, serverHandoffString, isSpaMode, renderMeta } = useFrameworkContext();
  let { router, static: isStatic, staticContext } = useDataRouterContext2();
  let { matches: routerMatches } = useDataRouterStateContext();
  let enableFogOfWar = isFogOfWarEnabled(isSpaMode);
  if (renderMeta) {
    renderMeta.didRenderScripts = true;
  }
  let matches = getActiveMatches(routerMatches, null, isSpaMode);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    isHydrated = true;
  }, []);
  let initialScripts = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    let streamScript = "window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());";
    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : " ";
    let routeModulesScript = !isStatic ? " " : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : ""};
${matches.map(
      (match, index) => `import * as route${index} from ${JSON.stringify(
        manifest.routes[match.route.id].module
      )};`
    ).join("\n")}
  ${enableFogOfWar ? (
      // Inline a minimal manifest with the SSR matches
      `window.__reactRouterManifest = ${JSON.stringify(
        getPartialManifest(manifest, router),
        null,
        2
      )};`
    ) : ""}
  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});`;
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "script",
      {
        ...props,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: createHtml(contextScript),
        type: void 0
      }
    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "script",
      {
        ...props,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: createHtml(routeModulesScript),
        type: "module",
        async: true
      }
    ));
  }, []);
  let routePreloads = matches.map((match) => {
    let route = manifest.routes[match.route.id];
    return route ? (route.imports || []).concat([route.module]) : [];
  }).flat(1);
  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
  return isHydrated ? null : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "link",
    {
      rel: "modulepreload",
      href: manifest.url,
      crossOrigin: props.crossOrigin
    }
  ) : null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "link",
    {
      rel: "modulepreload",
      href: manifest.entry.module,
      crossOrigin: props.crossOrigin
    }
  ), dedupe(preloads).map((path) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "link",
    {
      key: path,
      rel: "modulepreload",
      href: path,
      crossOrigin: props.crossOrigin
    }
  )), initialScripts);
}
function dedupe(array) {
  return [...new Set(array)];
}
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref != null) {
        ref.current = value;
      }
    });
  };
}

// lib/dom/lib.tsx
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
try {
  if (isBrowser) {
    window.__reactRouterVersion = "7.1.1";
  }
} catch (e) {
}
function createBrowserRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    future: opts?.future,
    history: createBrowserHistory({ window: opts?.window }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes,
    mapRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
    window: opts?.window
  }).initialize();
}
function createHashRouter(routes, opts) {
  return createRouter({
    basename: opts?.basename,
    future: opts?.future,
    history: createHashHistory({ window: opts?.window }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes,
    mapRouteProperties,
    dataStrategy: opts?.dataStrategy,
    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,
    window: opts?.window
  }).initialize();
}
function parseHydrationData() {
  let state = window?.__staticRouterHydrationData;
  if (state && state.errors) {
    state = {
      ...state,
      errors: deserializeErrors(state.errors)
    };
  }
  return state;
}
function deserializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponseImpl(
        val.status,
        val.statusText,
        val.data,
        val.internal === true
      );
    } else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor === "function") {
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = "";
            serialized[key] = error;
          } catch (e) {
          }
        }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = "";
        serialized[key] = error;
      }
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
function BrowserRouter({
  basename,
  children,
  window: window2
}) {
  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    action: history.action,
    location: history.location
  });
  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (newState) => {
      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function HashRouter({ basename, children, window: window2 }) {
  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  if (historyRef.current == null) {
    historyRef.current = createHashHistory({ window: window2, v5Compat: true });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    action: history.action,
    location: history.location
  });
  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (newState) => {
      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
function HistoryRouter({
  basename,
  children,
  history
}) {
  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    action: history.action,
    location: history.location
  });
  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (newState) => {
      react__WEBPACK_IMPORTED_MODULE_0__.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
HistoryRouter.displayName = "unstable_HistoryRouter";
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
  function LinkWithRef({
    onClick,
    discover = "render",
    prefetch = "none",
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to,
    preventScrollReset,
    viewTransition,
    ...rest
  }, forwardedRef) {
    let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
    let isAbsolute = typeof to === "string" && ABSOLUTE_URL_REGEX2.test(to);
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && isAbsolute) {
      absoluteHref = to;
      if (isBrowser) {
        try {
          let currentUrl = new URL(window.location.href);
          let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
          let path = stripBasename(targetUrl.pathname, basename);
          if (targetUrl.origin === currentUrl.origin && path != null) {
            to = path + targetUrl.search + targetUrl.hash;
          } else {
            isExternal = true;
          }
        } catch (e) {
          warning(
            false,
            `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
          );
        }
      }
    }
    let href = useHref(to, { relative });
    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(
      prefetch,
      rest
    );
    let internalOnClick = useLinkClickHandler(to, {
      replace: replace2,
      state,
      target,
      preventScrollReset,
      relative,
      viewTransition
    });
    function handleClick(event) {
      if (onClick) onClick(event);
      if (!event.defaultPrevented) {
        internalOnClick(event);
      }
    }
    let link = (
      // eslint-disable-next-line jsx-a11y/anchor-has-content
      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
        "a",
        {
          ...rest,
          ...prefetchHandlers,
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref: mergeRefs(forwardedRef, prefetchRef),
          target,
          "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
        }
      )
    );
    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, link, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PrefetchPageLinks, { page: href })) : link;
  }
);
Link.displayName = "Link";
var NavLink = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
  function NavLinkWithRef({
    "aria-current": ariaCurrentProp = "page",
    caseSensitive = false,
    className: classNameProp = "",
    end = false,
    style: styleProp,
    to,
    viewTransition,
    children,
    ...rest
  }, ref) {
    let path = useResolvedPath(to, { relative: rest.relative });
    let location = useLocation();
    let routerState = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);
    let { navigator: navigator2, basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && viewTransition === true;
    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
      locationPathname = locationPathname.toLowerCase();
      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
      toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) {
      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;
    }
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
      isActive,
      isPending,
      isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") {
      className = classNameProp(renderProps);
    } else {
      className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
      ].filter(Boolean).join(" ");
    }
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      Link,
      {
        ...rest,
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        viewTransition
      },
      typeof children === "function" ? children(renderProps) : children
    );
  }
);
NavLink.displayName = "NavLink";
var Form = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
  ({
    discover = "render",
    fetcherKey,
    navigate,
    reloadDocument,
    replace: replace2,
    state,
    method = defaultMethod,
    action,
    onSubmit,
    relative,
    preventScrollReset,
    viewTransition,
    ...props
  }, forwardedRef) => {
    let submit = useSubmit();
    let formAction = useFormAction(action, { relative });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let isAbsolute = typeof action === "string" && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event) => {
      onSubmit && onSubmit(event);
      if (event.defaultPrevented) return;
      event.preventDefault();
      let submitter = event.nativeEvent.submitter;
      let submitMethod = submitter?.getAttribute("formmethod") || method;
      submit(submitter || event.currentTarget, {
        fetcherKey,
        method: submitMethod,
        navigate,
        replace: replace2,
        state,
        relative,
        preventScrollReset,
        viewTransition
      });
    };
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      "form",
      {
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler,
        ...props,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
      }
    );
  }
);
Form.displayName = "Form";
function ScrollRestoration({
  getKey,
  storageKey,
  ...props
}) {
  let remixContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FrameworkContext);
  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let location = useLocation();
  let matches = useMatches();
  useScrollRestoration({ getKey, storageKey });
  let ssrKey = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => {
      if (!remixContext || !getKey) return null;
      let userKey = getScrollRestorationKey(
        location,
        matches,
        basename,
        getKey
      );
      return userKey !== location.key ? userKey : null;
    },
    // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  if (!remixContext || remixContext.isSpaMode) {
    return null;
  }
  let restoreScroll = ((storageKey2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key = Math.random().toString(32).slice(2);
      window.history.replaceState({ key }, "");
    }
    try {
      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || "{}");
      let storedY = positions[restoreKey || window.history.state.key];
      if (typeof storedY === "number") {
        window.scrollTo(0, storedY);
      }
    } catch (error) {
      console.error(error);
      sessionStorage.removeItem(storageKey2);
    }
  }).toString();
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "script",
    {
      ...props,
      suppressHydrationWarning: true,
      dangerouslySetInnerHTML: {
        __html: `(${restoreScroll})(${JSON.stringify(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY
        )}, ${JSON.stringify(ssrKey)})`
      }
    }
  );
}
ScrollRestoration.displayName = "ScrollRestoration";
function getDataRouterConsoleError2(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError2(hookName));
  return ctx;
}
function useDataRouterState2(hookName) {
  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError2(hookName));
  return state;
}
function useLinkClickHandler(to, {
  target,
  replace: replaceProp,
  state,
  preventScrollReset,
  relative,
  viewTransition
} = {}) {
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, { relative });
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (event) => {
      if (shouldProcessLinkClick(event, target)) {
        event.preventDefault();
        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
        navigate(to, {
          replace: replace2,
          state,
          preventScrollReset,
          relative,
          viewTransition
        });
      }
    },
    [
      location,
      navigate,
      path,
      replaceProp,
      state,
      target,
      to,
      preventScrollReset,
      relative,
      viewTransition
    ]
  );
}
function useSearchParams(defaultInit) {
  warning(
    typeof URLSearchParams !== "undefined",
    `You cannot use the \`useSearchParams\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`
  );
  let defaultSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(createSearchParams(defaultInit));
  let hasSetSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  let location = useLocation();
  let searchParams = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => (
      // Only merge in the defaults if we haven't yet called setSearchParams.
      // Once we call that we want those to take precedence, otherwise you can't
      // remove a param with setSearchParams({}) if it has an initial value
      getSearchParamsForLocation(
        location.search,
        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current
      )
    ),
    [location.search]
  );
  let navigate = useNavigate();
  let setSearchParams = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    (nextInit, navigateOptions) => {
      const newSearchParams = createSearchParams(
        typeof nextInit === "function" ? nextInit(searchParams) : nextInit
      );
      hasSetSearchParamsRef.current = true;
      navigate("?" + newSearchParams, navigateOptions);
    },
    [navigate, searchParams]
  );
  return [searchParams, setSearchParams];
}
var fetcherId = 0;
var getUniqueFetcherId = () => `__${String(++fetcherId)}__`;
function useSubmit() {
  let { router } = useDataRouterContext3("useSubmit" /* UseSubmit */);
  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let currentRouteId = useRouteId();
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    async (target, options = {}) => {
      let { action, method, encType, formData, body } = getFormSubmissionInfo(
        target,
        basename
      );
      if (options.navigate === false) {
        let key = options.fetcherKey || getUniqueFetcherId();
        await router.fetch(key, currentRouteId, options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          flushSync: options.flushSync
        });
      } else {
        await router.navigate(options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          replace: options.replace,
          state: options.state,
          fromRouteId: currentRouteId,
          flushSync: options.flushSync,
          viewTransition: options.viewTransition
        });
      }
    },
    [router, basename, currentRouteId]
  );
}
function useFormAction(action, { relative } = {}) {
  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let routeContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  invariant(routeContext, "useFormAction must be used inside a RouteContext");
  let [match] = routeContext.matches.slice(-1);
  let path = { ...useResolvedPath(action ? action : ".", { relative }) };
  let location = useLocation();
  if (action == null) {
    path.search = location.search;
    let params = new URLSearchParams(path.search);
    let indexValues = params.getAll("index");
    let hasNakedIndexParam = indexValues.some((v) => v === "");
    if (hasNakedIndexParam) {
      params.delete("index");
      indexValues.filter((v) => v).forEach((v) => params.append("index", v));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : "";
    }
  }
  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  }
  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function useFetcher({
  key
} = {}) {
  let { router } = useDataRouterContext3("useFetcher" /* UseFetcher */);
  let state = useDataRouterState2("useFetcher" /* UseFetcher */);
  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FetchersContext);
  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);
  let routeId = route.matches[route.matches.length - 1]?.route.id;
  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);
  invariant(route, `useFetcher must be used inside a RouteContext`);
  invariant(
    routeId != null,
    `useFetcher can only be used on routes that contain a unique "id"`
  );
  let defaultKey = react__WEBPACK_IMPORTED_MODULE_0__.useId();
  let [fetcherKey, setFetcherKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState(key || defaultKey);
  if (key && key !== fetcherKey) {
    setFetcherKey(key);
  }
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    router.getFetcher(fetcherKey);
    return () => router.deleteFetcher(fetcherKey);
  }, [router, fetcherKey]);
  let load = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    async (href, opts) => {
      invariant(routeId, "No routeId available for fetcher.load()");
      await router.fetch(fetcherKey, routeId, href, opts);
    },
    [fetcherKey, routeId, router]
  );
  let submitImpl = useSubmit();
  let submit = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(
    async (target, opts) => {
      await submitImpl(target, {
        ...opts,
        navigate: false,
        fetcherKey
      });
    },
    [fetcherKey, submitImpl]
  );
  let FetcherForm = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    let FetcherForm2 = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(
      (props, ref) => {
        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Form, { ...props, navigate: false, fetcherKey, ref });
      }
    );
    FetcherForm2.displayName = "fetcher.Form";
    return FetcherForm2;
  }, [fetcherKey]);
  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;
  let data2 = fetcherData.get(fetcherKey);
  let fetcherWithComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(
    () => ({
      Form: FetcherForm,
      submit,
      load,
      ...fetcher,
      data: data2
    }),
    [FetcherForm, submit, load, fetcher, data2]
  );
  return fetcherWithComponents;
}
function useFetchers() {
  let state = useDataRouterState2("useFetchers" /* UseFetchers */);
  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({
    ...fetcher,
    key
  }));
}
var SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
var savedScrollPositions = {};
function getScrollRestorationKey(location, matches, basename, getKey) {
  let key = null;
  if (getKey) {
    if (basename !== "/") {
      key = getKey(
        {
          ...location,
          pathname: stripBasename(location.pathname, basename) || location.pathname
        },
        matches
      );
    } else {
      key = getKey(location, matches);
    }
  }
  if (key == null) {
    key = location.key;
  }
  return key;
}
function useScrollRestoration({
  getKey,
  storageKey
} = {}) {
  let { router } = useDataRouterContext3("useScrollRestoration" /* UseScrollRestoration */);
  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(
    "useScrollRestoration" /* UseScrollRestoration */
  );
  let { basename } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);
  let location = useLocation();
  let matches = useMatches();
  let navigation = useNavigation();
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    window.history.scrollRestoration = "manual";
    return () => {
      window.history.scrollRestoration = "auto";
    };
  }, []);
  usePageHide(
    react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
      if (navigation.state === "idle") {
        let key = getScrollRestorationKey(location, matches, basename, getKey);
        savedScrollPositions[key] = window.scrollY;
      }
      try {
        sessionStorage.setItem(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY,
          JSON.stringify(savedScrollPositions)
        );
      } catch (error) {
        warning(
          false,
          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`
        );
      }
      window.history.scrollRestoration = "auto";
    }, [navigation.state, getKey, basename, location, matches, storageKey])
  );
  if (typeof document !== "undefined") {
    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {
      try {
        let sessionPositions = sessionStorage.getItem(
          storageKey || SCROLL_RESTORATION_STORAGE_KEY
        );
        if (sessionPositions) {
          savedScrollPositions = JSON.parse(sessionPositions);
        }
      } catch (e) {
      }
    }, [storageKey]);
    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {
      let disableScrollRestoration = router?.enableScrollRestoration(
        savedScrollPositions,
        () => window.scrollY,
        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0
      );
      return () => disableScrollRestoration && disableScrollRestoration();
    }, [router, basename, getKey]);
    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {
      if (restoreScrollPosition === false) {
        return;
      }
      if (typeof restoreScrollPosition === "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      }
      if (location.hash) {
        let el = document.getElementById(
          decodeURIComponent(location.hash.slice(1))
        );
        if (el) {
          el.scrollIntoView();
          return;
        }
      }
      if (preventScrollReset === true) {
        return;
      }
      window.scrollTo(0, 0);
    }, [location, restoreScrollPosition, preventScrollReset]);
  }
}
function useBeforeUnload(callback, options) {
  let { capture } = options || {};
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    let opts = capture != null ? { capture } : void 0;
    window.addEventListener("beforeunload", callback, opts);
    return () => {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
function usePageHide(callback, options) {
  let { capture } = options || {};
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    let opts = capture != null ? { capture } : void 0;
    window.addEventListener("pagehide", callback, opts);
    return () => {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
function usePrompt({
  when,
  message
}) {
  let blocker = useBlocker(when);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (blocker.state === "blocked") {
      let proceed = window.confirm(message);
      if (proceed) {
        setTimeout(blocker.proceed, 0);
      } else {
        blocker.reset();
      }
    }
  }, [blocker, message]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (blocker.state === "blocked" && !when) {
      blocker.reset();
    }
  }, [blocker, when]);
}
function useViewTransitionState(to, opts = {}) {
  let vtContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ViewTransitionContext);
  invariant(
    vtContext != null,
    "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
  );
  let { basename } = useDataRouterContext3(
    "useViewTransitionState" /* useViewTransitionState */
  );
  let path = useResolvedPath(to, { relative: opts.relative });
  if (!vtContext.isTransitioning) {
    return false;
  }
  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;
}

// lib/dom/server.tsx

function StaticRouter({
  basename,
  children,
  location: locationProp = "/"
}) {
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let action = "POP" /* Pop */;
  let location = {
    pathname: locationProp.pathname || "/",
    search: locationProp.search || "",
    hash: locationProp.hash || "",
    state: locationProp.state != null ? locationProp.state : null,
    key: locationProp.key || "default"
  };
  let staticNavigator = getStatelessNavigator();
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename,
      children,
      location,
      navigationType: action,
      navigator: staticNavigator,
      static: true
    }
  );
}
function StaticRouterProvider({
  context,
  router,
  hydrate = true,
  nonce
}) {
  invariant(
    router && context,
    "You must provide `router` and `context` to <StaticRouterProvider>"
  );
  let dataRouterContext = {
    router,
    navigator: getStatelessNavigator(),
    static: true,
    staticContext: context,
    basename: context.basename || "/"
  };
  let fetchersContext = /* @__PURE__ */ new Map();
  let hydrateScript = "";
  if (hydrate !== false) {
    let data2 = {
      loaderData: context.loaderData,
      actionData: context.actionData,
      errors: serializeErrors(context.errors)
    };
    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));
    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;
  }
  let { state } = dataRouterContext.router;
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    Router,
    {
      basename: dataRouterContext.basename,
      location: state.location,
      navigationType: state.historyAction,
      navigator: dataRouterContext.navigator,
      static: dataRouterContext.static
    },
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      DataRoutes2,
      {
        routes: router.routes,
        future: router.future,
        state
      }
    )
  ))))), hydrateScript ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    "script",
    {
      suppressHydrationWarning: true,
      nonce,
      dangerouslySetInnerHTML: { __html: hydrateScript }
    }
  ) : null);
}
function DataRoutes2({
  routes,
  future,
  state
}) {
  return useRoutesImpl(routes, void 0, state, future);
}
function serializeErrors(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (isRouteErrorResponse(val)) {
      serialized[key] = { ...val, __type: "RouteErrorResponse" };
    } else if (val instanceof Error) {
      serialized[key] = {
        message: val.message,
        __type: "Error",
        // If this is a subclass (i.e., ReferenceError), send up the type so we
        // can re-create the same type during hydration.
        ...val.name !== "Error" ? {
          __subType: val.name
        } : {}
      };
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}
function getStatelessNavigator() {
  return {
    createHref,
    encodeLocation,
    push(to) {
      throw new Error(
        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`
      );
    },
    replace(to) {
      throw new Error(
        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`
      );
    },
    go(delta) {
      throw new Error(
        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`
      );
    },
    back() {
      throw new Error(
        `You cannot use navigator.back() on the server because it is a stateless environment.`
      );
    },
    forward() {
      throw new Error(
        `You cannot use navigator.forward() on the server because it is a stateless environment.`
      );
    }
  };
}
function createStaticHandler2(routes, opts) {
  return createStaticHandler(routes, {
    ...opts,
    mapRouteProperties
  });
}
function createStaticRouter(routes, context, opts = {}) {
  let manifest = {};
  let dataRoutes = convertRoutesToDataRoutes(
    routes,
    mapRouteProperties,
    void 0,
    manifest
  );
  let matches = context.matches.map((match) => {
    let route = manifest[match.route.id] || match.route;
    return {
      ...match,
      route
    };
  });
  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
  return {
    get basename() {
      return context.basename;
    },
    get future() {
      return {
        ...opts?.future
      };
    },
    get state() {
      return {
        historyAction: "POP" /* Pop */,
        location: context.location,
        matches,
        loaderData: context.loaderData,
        actionData: context.actionData,
        errors: context.errors,
        initialized: true,
        navigation: IDLE_NAVIGATION,
        restoreScrollPosition: null,
        preventScrollReset: false,
        revalidation: "idle",
        fetchers: /* @__PURE__ */ new Map(),
        blockers: /* @__PURE__ */ new Map()
      };
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return void 0;
    },
    initialize() {
      throw msg("initialize");
    },
    subscribe() {
      throw msg("subscribe");
    },
    enableScrollRestoration() {
      throw msg("enableScrollRestoration");
    },
    navigate() {
      throw msg("navigate");
    },
    fetch() {
      throw msg("fetch");
    },
    revalidate() {
      throw msg("revalidate");
    },
    createHref,
    encodeLocation,
    getFetcher() {
      return IDLE_FETCHER;
    },
    deleteFetcher() {
      throw msg("deleteFetcher");
    },
    dispose() {
      throw msg("dispose");
    },
    getBlocker() {
      return IDLE_BLOCKER;
    },
    deleteBlocker() {
      throw msg("deleteBlocker");
    },
    patchRoutes() {
      throw msg("patchRoutes");
    },
    _internalFetchControllers: /* @__PURE__ */ new Map(),
    _internalSetRoutes() {
      throw msg("_internalSetRoutes");
    }
  };
}
function createHref(to) {
  return typeof to === "string" ? to : createPath(to);
}
function encodeLocation(to) {
  let href = typeof to === "string" ? to : createPath(to);
  href = href.replace(/ $/, "%20");
  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, "http://localhost");
  return {
    pathname: encoded.pathname,
    search: encoded.search,
    hash: encoded.hash
  };
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var ESCAPE_LOOKUP2 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function htmlEscape(str) {
  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);
}

// lib/dom/ssr/server.tsx

function ServerRouter({
  context,
  url,
  nonce
}) {
  if (typeof url === "string") {
    url = new URL(url);
  }
  let { manifest, routeModules, criticalCss, serverHandoffString } = context;
  let routes = createServerRoutes(
    manifest.routes,
    routeModules,
    context.future,
    context.isSpaMode
  );
  context.staticHandlerContext.loaderData = {
    ...context.staticHandlerContext.loaderData
  };
  for (let match of context.staticHandlerContext.matches) {
    let routeId = match.route.id;
    let route = routeModules[routeId];
    let manifestRoute = context.manifest.routes[routeId];
    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {
      delete context.staticHandlerContext.loaderData[routeId];
    }
  }
  let router = createStaticRouter(routes, context.staticHandlerContext);
  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    FrameworkContext.Provider,
    {
      value: {
        manifest,
        routeModules,
        criticalCss,
        serverHandoffString,
        future: context.future,
        isSpaMode: context.isSpaMode,
        serializeError: context.serializeError,
        renderMeta: context.renderMeta
      }
    },
    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      StaticRouterProvider,
      {
        router,
        context: context.staticHandlerContext,
        hydrate: false
      }
    ))
  ), context.serverHandoffStream ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(
    StreamTransfer,
    {
      context,
      identifier: 0,
      reader: context.serverHandoffStream.getReader(),
      textDecoder: new TextDecoder(),
      nonce
    }
  )) : null);
}

// lib/dom/ssr/routes-test-stub.tsx

function createRoutesStub(routes, context = {}) {
  return function RoutesTestStub({
    initialEntries,
    initialIndex,
    hydrationData,
    future
  }) {
    let routerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    let remixContextRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    if (routerRef.current == null) {
      remixContextRef.current = {
        future: {},
        manifest: {
          routes: {},
          entry: { imports: [], module: "" },
          url: "",
          version: ""
        },
        routeModules: {},
        isSpaMode: false
      };
      let patched = processRoutes(
        // @ts-expect-error loader/action context types don't match :/
        convertRoutesToDataRoutes(routes, (r) => r),
        context,
        remixContextRef.current.manifest,
        remixContextRef.current.routeModules
      );
      routerRef.current = createMemoryRouter(patched, {
        initialEntries,
        initialIndex,
        hydrationData
      });
    }
    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouterProvider, { router: routerRef.current }));
  };
}
function processRoutes(routes, context, manifest, routeModules, parentId) {
  return routes.map((route) => {
    if (!route.id) {
      throw new Error(
        "Expected a route.id in @remix-run/testing processRoutes() function"
      );
    }
    let { loader, action } = route;
    let newRoute = {
      id: route.id,
      path: route.path,
      index: route.index,
      Component: route.Component,
      HydrateFallback: route.HydrateFallback,
      ErrorBoundary: route.ErrorBoundary,
      action: action ? (args) => action({ ...args, context }) : void 0,
      loader: loader ? (args) => loader({ ...args, context }) : void 0,
      handle: route.handle,
      shouldRevalidate: route.shouldRevalidate
    };
    let entryRoute = {
      id: route.id,
      path: route.path,
      index: route.index,
      parentId,
      hasAction: route.action != null,
      hasLoader: route.loader != null,
      // When testing routes, you should just be stubbing loader/action, not
      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.
      // That is better tested via E2E tests.
      hasClientAction: false,
      hasClientLoader: false,
      hasErrorBoundary: route.ErrorBoundary != null,
      module: "build/stub-path-to-module.js"
      // any need for this?
    };
    manifest.routes[newRoute.id] = entryRoute;
    routeModules[route.id] = {
      default: route.Component || Outlet,
      ErrorBoundary: route.ErrorBoundary || void 0,
      handle: route.handle,
      links: route.links,
      meta: route.meta,
      shouldRevalidate: route.shouldRevalidate
    };
    if (route.children) {
      newRoute.children = processRoutes(
        route.children,
        context,
        manifest,
        routeModules,
        newRoute.id
      );
    }
    return newRoute;
  });
}

// lib/server-runtime/cookies.ts


// lib/server-runtime/crypto.ts
var encoder = new TextEncoder();
var sign = async (value, secret) => {
  let data2 = encoder.encode(value);
  let key = await createKey2(secret, ["sign"]);
  let signature = await crypto.subtle.sign("HMAC", key, data2);
  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(
    /=+$/,
    ""
  );
  return value + "." + hash;
};
var unsign = async (cookie, secret) => {
  let index = cookie.lastIndexOf(".");
  let value = cookie.slice(0, index);
  let hash = cookie.slice(index + 1);
  let data2 = encoder.encode(value);
  let key = await createKey2(secret, ["verify"]);
  let signature = byteStringToUint8Array(atob(hash));
  let valid = await crypto.subtle.verify("HMAC", key, signature, data2);
  return valid ? value : false;
};
var createKey2 = async (secret, usages) => crypto.subtle.importKey(
  "raw",
  encoder.encode(secret),
  { name: "HMAC", hash: "SHA-256" },
  false,
  usages
);
function byteStringToUint8Array(byteString) {
  let array = new Uint8Array(byteString.length);
  for (let i = 0; i < byteString.length; i++) {
    array[i] = byteString.charCodeAt(i);
  }
  return array;
}

// lib/server-runtime/cookies.ts
var createCookie = (name, cookieOptions = {}) => {
  let { secrets = [], ...options } = {
    path: "/",
    sameSite: "lax",
    ...cookieOptions
  };
  warnOnceAboutExpiresCookie(name, options.expires);
  return {
    get name() {
      return name;
    },
    get isSigned() {
      return secrets.length > 0;
    },
    get expires() {
      return typeof options.maxAge !== "undefined" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
    },
    async parse(cookieHeader, parseOptions) {
      if (!cookieHeader) return null;
      let cookies = (0,cookie__WEBPACK_IMPORTED_MODULE_2__.parse)(cookieHeader, { ...options, ...parseOptions });
      if (name in cookies) {
        let value = cookies[name];
        if (typeof value === "string" && value !== "") {
          let decoded = await decodeCookieValue(value, secrets);
          return decoded;
        } else {
          return "";
        }
      } else {
        return null;
      }
    },
    async serialize(value, serializeOptions) {
      return (0,cookie__WEBPACK_IMPORTED_MODULE_2__.serialize)(
        name,
        value === "" ? "" : await encodeCookieValue(value, secrets),
        {
          ...options,
          ...serializeOptions
        }
      );
    }
  };
};
var isCookie = (object) => {
  return object != null && typeof object.name === "string" && typeof object.isSigned === "boolean" && typeof object.parse === "function" && typeof object.serialize === "function";
};
async function encodeCookieValue(value, secrets) {
  let encoded = encodeData(value);
  if (secrets.length > 0) {
    encoded = await sign(encoded, secrets[0]);
  }
  return encoded;
}
async function decodeCookieValue(value, secrets) {
  if (secrets.length > 0) {
    for (let secret of secrets) {
      let unsignedValue = await unsign(value, secret);
      if (unsignedValue !== false) {
        return decodeData(unsignedValue);
      }
    }
    return null;
  }
  return decodeData(value);
}
function encodeData(value) {
  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
  try {
    return JSON.parse(decodeURIComponent(myEscape(atob(value))));
  } catch (error) {
    return {};
  }
}
function myEscape(value) {
  let str = value.toString();
  let result = "";
  let index = 0;
  let chr, code;
  while (index < str.length) {
    chr = str.charAt(index++);
    if (/[\w*+\-./@]/.exec(chr)) {
      result += chr;
    } else {
      code = chr.charCodeAt(0);
      if (code < 256) {
        result += "%" + hex(code, 2);
      } else {
        result += "%u" + hex(code, 4).toUpperCase();
      }
    }
  }
  return result;
}
function hex(code, length) {
  let result = code.toString(16);
  while (result.length < length) result = "0" + result;
  return result;
}
function myUnescape(value) {
  let str = value.toString();
  let result = "";
  let index = 0;
  let chr, part;
  while (index < str.length) {
    chr = str.charAt(index++);
    if (chr === "%") {
      if (str.charAt(index) === "u") {
        part = str.slice(index + 1, index + 5);
        if (/^[\da-f]{4}$/i.exec(part)) {
          result += String.fromCharCode(parseInt(part, 16));
          index += 5;
          continue;
        }
      } else {
        part = str.slice(index, index + 2);
        if (/^[\da-f]{2}$/i.exec(part)) {
          result += String.fromCharCode(parseInt(part, 16));
          index += 2;
          continue;
        }
      }
    }
    result += chr;
  }
  return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
  warnOnce(
    !expires,
    `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`
  );
}

// lib/server-runtime/entry.ts
function createEntryRouteModules(manifest) {
  return Object.keys(manifest).reduce((memo2, routeId) => {
    let route = manifest[routeId];
    if (route) {
      memo2[routeId] = route.module;
    }
    return memo2;
  }, {});
}

// lib/server-runtime/mode.ts
var ServerMode = /* @__PURE__ */ ((ServerMode2) => {
  ServerMode2["Development"] = "development";
  ServerMode2["Production"] = "production";
  ServerMode2["Test"] = "test";
  return ServerMode2;
})(ServerMode || {});
function isServerMode(value) {
  return value === "development" /* Development */ || value === "production" /* Production */ || value === "test" /* Test */;
}

// lib/server-runtime/errors.ts
function sanitizeError(error, serverMode) {
  if (error instanceof Error && serverMode !== "development" /* Development */) {
    let sanitized = new Error("Unexpected Server Error");
    sanitized.stack = void 0;
    return sanitized;
  }
  return error;
}
function sanitizeErrors(errors, serverMode) {
  return Object.entries(errors).reduce((acc, [routeId, error]) => {
    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });
  }, {});
}
function serializeError(error, serverMode) {
  let sanitized = sanitizeError(error, serverMode);
  return {
    message: sanitized.message,
    stack: sanitized.stack
  };
}
function serializeErrors2(errors, serverMode) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (isRouteErrorResponse(val)) {
      serialized[key] = { ...val, __type: "RouteErrorResponse" };
    } else if (val instanceof Error) {
      let sanitized = sanitizeError(val, serverMode);
      serialized[key] = {
        message: sanitized.message,
        stack: sanitized.stack,
        __type: "Error",
        // If this is a subclass (i.e., ReferenceError), send up the type so we
        // can re-create the same type during hydration.  This will only apply
        // in dev mode since all production errors are sanitized to normal
        // Error instances
        ...sanitized.name !== "Error" ? {
          __subType: sanitized.name
        } : {}
      };
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}

// lib/server-runtime/routeMatching.ts
function matchServerRoutes(routes, pathname, basename) {
  let matches = matchRoutes(
    routes,
    pathname,
    basename
  );
  if (!matches) return null;
  return matches.map((match) => ({
    params: match.params,
    pathname: match.pathname,
    route: match.route
  }));
}

// lib/server-runtime/data.ts
async function callRouteHandler(handler, args) {
  let result = await handler({
    request: stripRoutesParam(stripIndexParam2(args.request)),
    params: args.params,
    context: args.context
  });
  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {
    throw new Response(null, result.init);
  }
  return result;
}
function stripIndexParam2(request) {
  let url = new URL(request.url);
  let indexValues = url.searchParams.getAll("index");
  url.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues) {
    if (indexValue) {
      indexValuesToKeep.push(indexValue);
    }
  }
  for (let toKeep of indexValuesToKeep) {
    url.searchParams.append("index", toKeep);
  }
  let init = {
    method: request.method,
    body: request.body,
    headers: request.headers,
    signal: request.signal
  };
  if (init.body) {
    init.duplex = "half";
  }
  return new Request(url.href, init);
}
function stripRoutesParam(request) {
  let url = new URL(request.url);
  url.searchParams.delete("_routes");
  let init = {
    method: request.method,
    body: request.body,
    headers: request.headers,
    signal: request.signal
  };
  if (init.body) {
    init.duplex = "half";
  }
  return new Request(url.href, init);
}

// lib/server-runtime/invariant.ts
function invariant3(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    console.error(
      "The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose"
    );
    throw new Error(message);
  }
}

// lib/server-runtime/routes.ts
function groupRoutesByParentId2(manifest) {
  let routes = {};
  Object.values(manifest).forEach((route) => {
    if (route) {
      let parentId = route.parentId || "";
      if (!routes[parentId]) {
        routes[parentId] = [];
      }
      routes[parentId].push(route);
    }
  });
  return routes;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => ({
    ...route,
    children: createRoutes(manifest, route.id, routesByParentId)
  }));
}
function createStaticHandlerDataRoutes(manifest, future, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let commonRoute = {
      // Always include root due to default boundaries
      hasErrorBoundary: route.id === "root" || route.module.ErrorBoundary != null,
      id: route.id,
      path: route.path,
      // Need to use RR's version in the param typed here to permit the optional
      // context even though we know it'll always be provided in remix
      loader: route.module.loader ? async (args) => {
        if (args.request.headers.has("X-React-Router-Prerender-Data")) {
          const preRenderedData = args.request.headers.get(
            "X-React-Router-Prerender-Data"
          );
          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;
          invariant3(encoded, "Missing prerendered data for route");
          let uint8array = new TextEncoder().encode(encoded);
          let stream = new ReadableStream({
            start(controller) {
              controller.enqueue(uint8array);
              controller.close();
            }
          });
          let decoded = await decodeViaTurboStream(stream, global);
          let data2 = decoded.value;
          invariant3(
            data2 && route.id in data2,
            "Unable to decode prerendered data"
          );
          let result = data2[route.id];
          invariant3("data" in result, "Unable to process prerendered data");
          return result.data;
        }
        let val = await callRouteHandler(route.module.loader, args);
        return val;
      } : void 0,
      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,
      handle: route.module.handle
    };
    return route.index ? {
      index: true,
      ...commonRoute
    } : {
      caseSensitive: route.caseSensitive,
      children: createStaticHandlerDataRoutes(
        manifest,
        future,
        route.id,
        routesByParentId
      ),
      ...commonRoute
    };
  });
}

// lib/server-runtime/markup.ts
var ESCAPE_LOOKUP3 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);
}

// lib/server-runtime/serverHandoff.ts
function createServerHandoffString(serverHandoff) {
  return escapeHtml2(JSON.stringify(serverHandoff));
}

// lib/server-runtime/dev.ts
var globalDevServerHooksKey = "__reactRouterDevServerHooks";
function setDevServerHooks(devServerHooks) {
  globalThis[globalDevServerHooksKey] = devServerHooks;
}
function getDevServerHooks() {
  return globalThis[globalDevServerHooksKey];
}

// lib/server-runtime/single-fetch.ts


// lib/server-runtime/headers.ts

function getDocumentHeaders(build, context) {
  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;
  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;
  let errorHeaders;
  if (boundaryIdx >= 0) {
    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;
    context.matches.slice(boundaryIdx).some((match) => {
      let id = match.route.id;
      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {
        errorHeaders = actionHeaders[id];
      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {
        errorHeaders = loaderHeaders[id];
      }
      return errorHeaders != null;
    });
  }
  return matches.reduce((parentHeaders, match, idx) => {
    let { id } = match.route;
    let route = build.routes[id];
    invariant3(route, `Route with id "${id}" not found in build`);
    let routeModule = route.module;
    let loaderHeaders = context.loaderHeaders[id] || new Headers();
    let actionHeaders = context.actionHeaders[id] || new Headers();
    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;
    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
    if (routeModule.headers == null) {
      let headers2 = new Headers(parentHeaders);
      if (includeErrorCookies) {
        prependCookies(errorHeaders, headers2);
      }
      prependCookies(actionHeaders, headers2);
      prependCookies(loaderHeaders, headers2);
      return headers2;
    }
    let headers = new Headers(
      routeModule.headers ? typeof routeModule.headers === "function" ? routeModule.headers({
        loaderHeaders,
        parentHeaders,
        actionHeaders,
        errorHeaders: includeErrorHeaders ? errorHeaders : void 0
      }) : routeModule.headers : void 0
    );
    if (includeErrorCookies) {
      prependCookies(errorHeaders, headers);
    }
    prependCookies(actionHeaders, headers);
    prependCookies(loaderHeaders, headers);
    prependCookies(parentHeaders, headers);
    return headers;
  }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
  let parentSetCookieString = parentHeaders.get("Set-Cookie");
  if (parentSetCookieString) {
    let cookies = (0,set_cookie_parser__WEBPACK_IMPORTED_MODULE_3__.splitCookiesString)(parentSetCookieString);
    cookies.forEach((cookie) => {
      childHeaders.append("Set-Cookie", cookie);
    });
  }
}

// lib/server-runtime/single-fetch.ts
var SINGLE_FETCH_REDIRECT_STATUS = 202;
function getSingleFetchDataStrategy2({
  isActionDataRequest,
  loadRouteIds
} = {}) {
  return async ({ request, matches }) => {
    if (isActionDataRequest && request.method === "GET") {
      return {};
    }
    let matchesToLoad = loadRouteIds ? matches.filter((m) => loadRouteIds.includes(m.route.id)) : matches;
    let results = await Promise.all(
      matchesToLoad.map((match) => match.resolve())
    );
    return results.reduce(
      (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),
      {}
    );
  };
}
async function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
  try {
    let handlerRequest = new Request(handlerUrl, {
      method: request.method,
      body: request.body,
      headers: request.headers,
      signal: request.signal,
      ...request.body ? { duplex: "half" } : void 0
    });
    let result = await staticHandler.query(handlerRequest, {
      requestContext: loadContext,
      skipLoaderErrorBubbling: true,
      dataStrategy: getSingleFetchDataStrategy2({
        isActionDataRequest: true
      })
    });
    if (isResponse(result)) {
      return {
        result: getSingleFetchRedirect(
          result.status,
          result.headers,
          build.basename
        ),
        headers: result.headers,
        status: SINGLE_FETCH_REDIRECT_STATUS
      };
    }
    let context = result;
    let headers = getDocumentHeaders(build, context);
    if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) {
      return {
        result: getSingleFetchRedirect(
          context.statusCode,
          headers,
          build.basename
        ),
        headers,
        status: SINGLE_FETCH_REDIRECT_STATUS
      };
    }
    if (context.errors) {
      Object.values(context.errors).forEach((err) => {
        if (!isRouteErrorResponse(err) || err.error) {
          handleError(err);
        }
      });
      context.errors = sanitizeErrors(context.errors, serverMode);
    }
    let singleFetchResult;
    if (context.errors) {
      singleFetchResult = { error: Object.values(context.errors)[0] };
    } else {
      singleFetchResult = { data: Object.values(context.actionData || {})[0] };
    }
    return {
      result: singleFetchResult,
      headers,
      status: context.statusCode
    };
  } catch (error) {
    handleError(error);
    return {
      result: { error },
      headers: new Headers(),
      status: 500
    };
  }
}
async function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {
  try {
    let handlerRequest = new Request(handlerUrl, {
      headers: request.headers,
      signal: request.signal
    });
    let loadRouteIds = new URL(request.url).searchParams.get("_routes")?.split(",") || void 0;
    let result = await staticHandler.query(handlerRequest, {
      requestContext: loadContext,
      skipLoaderErrorBubbling: true,
      dataStrategy: getSingleFetchDataStrategy2({
        loadRouteIds
      })
    });
    if (isResponse(result)) {
      return {
        result: {
          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(
            result.status,
            result.headers,
            build.basename
          )
        },
        headers: result.headers,
        status: SINGLE_FETCH_REDIRECT_STATUS
      };
    }
    let context = result;
    let headers = getDocumentHeaders(build, context);
    if (isRedirectStatusCode(context.statusCode) && headers.has("Location")) {
      return {
        result: {
          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(
            context.statusCode,
            headers,
            build.basename
          )
        },
        headers,
        status: SINGLE_FETCH_REDIRECT_STATUS
      };
    }
    if (context.errors) {
      Object.values(context.errors).forEach((err) => {
        if (!isRouteErrorResponse(err) || err.error) {
          handleError(err);
        }
      });
      context.errors = sanitizeErrors(context.errors, serverMode);
    }
    let results = {};
    let loadedMatches = loadRouteIds ? context.matches.filter(
      (m) => m.route.loader && loadRouteIds.includes(m.route.id)
    ) : context.matches;
    loadedMatches.forEach((m) => {
      let { id } = m.route;
      if (context.errors && context.errors.hasOwnProperty(id)) {
        results[id] = { error: context.errors[id] };
      } else if (context.loaderData.hasOwnProperty(id)) {
        results[id] = { data: context.loaderData[id] };
      }
    });
    return {
      result: results,
      headers,
      status: context.statusCode
    };
  } catch (error) {
    handleError(error);
    return {
      result: { root: { error } },
      headers: new Headers(),
      status: 500
    };
  }
}
function getSingleFetchRedirect(status, headers, basename) {
  let redirect2 = headers.get("Location");
  if (basename) {
    redirect2 = stripBasename(redirect2, basename) || redirect2;
  }
  return {
    redirect: redirect2,
    status,
    revalidate: (
      // Technically X-Remix-Revalidate isn't needed here - that was an implementation
      // detail of ?_data requests as our way to tell the front end to revalidate when
      // we didn't have a response body to include that information in.
      // With single fetch, we tell the front end via this revalidate boolean field.
      // However, we're respecting it for now because it may be something folks have
      // used in their own responses
      // TODO(v3): Consider removing or making this official public API
      headers.has("X-Remix-Revalidate") || headers.has("Set-Cookie")
    ),
    reload: headers.has("X-Remix-Reload-Document"),
    replace: headers.has("X-Remix-Replace")
  };
}
function encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {
  let controller = new AbortController();
  let timeoutId = setTimeout(
    () => controller.abort(new Error("Server Timeout")),
    typeof streamTimeout === "number" ? streamTimeout : 4950
  );
  requestSignal.addEventListener("abort", () => clearTimeout(timeoutId));
  return (0,turbo_stream__WEBPACK_IMPORTED_MODULE_1__.encode)(data2, {
    signal: controller.signal,
    plugins: [
      (value) => {
        if (value instanceof Error) {
          let { name, message, stack } = serverMode === "production" /* Production */ ? sanitizeError(value, serverMode) : value;
          return ["SanitizedError", name, message, stack];
        }
        if (value instanceof ErrorResponseImpl) {
          let { data: data3, status, statusText } = value;
          return ["ErrorResponse", data3, status, statusText];
        }
        if (value && typeof value === "object" && SingleFetchRedirectSymbol in value) {
          return ["SingleFetchRedirect", value[SingleFetchRedirectSymbol]];
        }
      }
    ],
    postPlugins: [
      (value) => {
        if (!value) return;
        if (typeof value !== "object") return;
        return [
          "SingleFetchClassInstance",
          Object.fromEntries(Object.entries(value))
        ];
      },
      () => ["SingleFetchFallback"]
    ]
  });
}

// lib/server-runtime/server.ts
function derive(build, mode) {
  let routes = createRoutes(build.routes);
  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);
  let serverMode = isServerMode(mode) ? mode : "production" /* Production */;
  let staticHandler = createStaticHandler(dataRoutes, {
    basename: build.basename
  });
  let errorHandler = build.entry.module.handleError || ((error, { request }) => {
    if (serverMode !== "test" /* Test */ && !request.signal.aborted) {
      console.error(
        // @ts-expect-error This is "private" from users but intended for internal use
        isRouteErrorResponse(error) && error.error ? error.error : error
      );
    }
  });
  return {
    routes,
    dataRoutes,
    serverMode,
    staticHandler,
    errorHandler
  };
}
var createRequestHandler = (build, mode) => {
  let _build;
  let routes;
  let serverMode;
  let staticHandler;
  let errorHandler;
  return async function requestHandler(request, loadContext = {}) {
    _build = typeof build === "function" ? await build() : build;
    if (typeof build === "function") {
      let derived = derive(_build, mode);
      routes = derived.routes;
      serverMode = derived.serverMode;
      staticHandler = derived.staticHandler;
      errorHandler = derived.errorHandler;
    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {
      let derived = derive(_build, mode);
      routes = derived.routes;
      serverMode = derived.serverMode;
      staticHandler = derived.staticHandler;
      errorHandler = derived.errorHandler;
    }
    let url = new URL(request.url);
    let params = {};
    let handleError = (error) => {
      if (mode === "development" /* Development */) {
        getDevServerHooks()?.processRequestError?.(error);
      }
      errorHandler(error, {
        context: loadContext,
        params,
        request
      });
    };
    let manifestUrl = `${_build.basename ?? "/"}/__manifest`.replace(
      /\/+/g,
      "/"
    );
    if (url.pathname === manifestUrl) {
      try {
        let res = await handleManifestRequest(_build, routes, url);
        return res;
      } catch (e) {
        handleError(e);
        return new Response("Unknown Server Error", { status: 500 });
      }
    }
    let matches = matchServerRoutes(routes, url.pathname, _build.basename);
    if (matches && matches.length > 0) {
      Object.assign(params, matches[0].params);
    }
    let response;
    if (url.pathname.endsWith(".data")) {
      let handlerUrl = new URL(request.url);
      handlerUrl.pathname = handlerUrl.pathname.replace(/\.data$/, "").replace(/^\/_root$/, "/");
      let singleFetchMatches = matchServerRoutes(
        routes,
        handlerUrl.pathname,
        _build.basename
      );
      response = await handleSingleFetchRequest(
        serverMode,
        _build,
        staticHandler,
        request,
        handlerUrl,
        loadContext,
        handleError
      );
      if (_build.entry.module.handleDataRequest) {
        response = await _build.entry.module.handleDataRequest(response, {
          context: loadContext,
          params: singleFetchMatches ? singleFetchMatches[0].params : {},
          request
        });
        if (isRedirectResponse(response)) {
          let result = getSingleFetchRedirect(
            response.status,
            response.headers,
            _build.basename
          );
          if (request.method === "GET") {
            result = {
              [SingleFetchRedirectSymbol]: result
            };
          }
          let headers = new Headers(response.headers);
          headers.set("Content-Type", "text/x-script");
          return new Response(
            encodeViaTurboStream(
              result,
              request.signal,
              _build.entry.module.streamTimeout,
              serverMode
            ),
            {
              status: SINGLE_FETCH_REDIRECT_STATUS,
              headers
            }
          );
        }
      }
    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {
      response = await handleResourceRequest(
        serverMode,
        staticHandler,
        matches.slice(-1)[0].route.id,
        request,
        loadContext,
        handleError
      );
    } else {
      let criticalCss = mode === "development" /* Development */ ? await getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;
      response = await handleDocumentRequest(
        serverMode,
        _build,
        staticHandler,
        request,
        loadContext,
        handleError,
        criticalCss
      );
    }
    if (request.method === "HEAD") {
      return new Response(null, {
        headers: response.headers,
        status: response.status,
        statusText: response.statusText
      });
    }
    return response;
  };
};
async function handleManifestRequest(build, routes, url) {
  let patches = {};
  if (url.searchParams.has("p")) {
    for (let path of url.searchParams.getAll("p")) {
      let matches = matchServerRoutes(routes, path, build.basename);
      if (matches) {
        for (let match of matches) {
          let routeId = match.route.id;
          let route = build.assets.routes[routeId];
          if (route) {
            patches[routeId] = route;
          }
        }
      }
    }
    return Response.json(patches, {
      headers: {
        "Cache-Control": "public, max-age=31536000, immutable"
      }
    });
  }
  return new Response("Invalid Request", { status: 400 });
}
async function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {
  let { result, headers, status } = request.method !== "GET" ? await singleFetchAction(
    build,
    serverMode,
    staticHandler,
    request,
    handlerUrl,
    loadContext,
    handleError
  ) : await singleFetchLoaders(
    build,
    serverMode,
    staticHandler,
    request,
    handlerUrl,
    loadContext,
    handleError
  );
  let resultHeaders = new Headers(headers);
  resultHeaders.set("X-Remix-Response", "yes");
  if (status === 304) {
    return new Response(null, { status: 304, headers: resultHeaders });
  }
  resultHeaders.set("Content-Type", "text/x-script");
  return new Response(
    encodeViaTurboStream(
      result,
      request.signal,
      build.entry.module.streamTimeout,
      serverMode
    ),
    {
      status: status || 200,
      headers: resultHeaders
    }
  );
}
async function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {
  let context;
  try {
    context = await staticHandler.query(request, {
      requestContext: loadContext
    });
  } catch (error) {
    handleError(error);
    return new Response(null, { status: 500 });
  }
  if (isResponse(context)) {
    return context;
  }
  let headers = getDocumentHeaders(build, context);
  if (context.statusCode === 304) {
    return new Response(null, { status: 304, headers });
  }
  if (context.errors) {
    Object.values(context.errors).forEach((err) => {
      if (!isRouteErrorResponse(err) || err.error) {
        handleError(err);
      }
    });
    context.errors = sanitizeErrors(context.errors, serverMode);
  }
  let state = {
    loaderData: context.loaderData,
    actionData: context.actionData,
    errors: serializeErrors2(context.errors, serverMode)
  };
  let entryContext = {
    manifest: build.assets,
    routeModules: createEntryRouteModules(build.routes),
    staticHandlerContext: context,
    criticalCss,
    serverHandoffString: createServerHandoffString({
      basename: build.basename,
      criticalCss,
      future: build.future,
      isSpaMode: build.isSpaMode
    }),
    serverHandoffStream: encodeViaTurboStream(
      state,
      request.signal,
      build.entry.module.streamTimeout,
      serverMode
    ),
    renderMeta: {},
    future: build.future,
    isSpaMode: build.isSpaMode,
    serializeError: (err) => serializeError(err, serverMode)
  };
  let handleDocumentRequestFunction = build.entry.module.default;
  try {
    return await handleDocumentRequestFunction(
      request,
      context.statusCode,
      headers,
      entryContext,
      loadContext
    );
  } catch (error) {
    handleError(error);
    let errorForSecondRender = error;
    if (isResponse(error)) {
      try {
        let data2 = await unwrapResponse(error);
        errorForSecondRender = new ErrorResponseImpl(
          error.status,
          error.statusText,
          data2
        );
      } catch (e) {
      }
    }
    context = getStaticContextFromError(
      staticHandler.dataRoutes,
      context,
      errorForSecondRender
    );
    if (context.errors) {
      context.errors = sanitizeErrors(context.errors, serverMode);
    }
    let state2 = {
      loaderData: context.loaderData,
      actionData: context.actionData,
      errors: serializeErrors2(context.errors, serverMode)
    };
    entryContext = {
      ...entryContext,
      staticHandlerContext: context,
      serverHandoffString: createServerHandoffString({
        basename: build.basename,
        future: build.future,
        isSpaMode: build.isSpaMode
      }),
      serverHandoffStream: encodeViaTurboStream(
        state2,
        request.signal,
        build.entry.module.streamTimeout,
        serverMode
      ),
      renderMeta: {}
    };
    try {
      return await handleDocumentRequestFunction(
        request,
        context.statusCode,
        headers,
        entryContext,
        loadContext
      );
    } catch (error2) {
      handleError(error2);
      return returnLastResortErrorResponse(error2, serverMode);
    }
  }
}
async function handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    invariant3(
      isResponse(response),
      "Expected a Response to be returned from resource route handler"
    );
    return response;
  } catch (error) {
    if (isResponse(error)) {
      error.headers.set("X-Remix-Catch", "yes");
      return error;
    }
    if (isRouteErrorResponse(error)) {
      if (error) {
        handleError(error);
      }
      return errorResponseToJson(error, serverMode);
    }
    handleError(error);
    return returnLastResortErrorResponse(error, serverMode);
  }
}
function errorResponseToJson(errorResponse, serverMode) {
  return Response.json(
    serializeError(
      // @ts-expect-error This is "private" from users but intended for internal use
      errorResponse.error || new Error("Unexpected Server Error"),
      serverMode
    ),
    {
      status: errorResponse.status,
      statusText: errorResponse.statusText,
      headers: {
        "X-Remix-Error": "yes"
      }
    }
  );
}
function returnLastResortErrorResponse(error, serverMode) {
  let message = "Unexpected Server Error";
  if (serverMode !== "production" /* Production */) {
    message += `

${String(error)}`;
  }
  return new Response(message, {
    status: 500,
    headers: {
      "Content-Type": "text/plain"
    }
  });
}
function unwrapResponse(response) {
  let contentType = response.headers.get("Content-Type");
  return contentType && /\bapplication\/json\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();
}

// lib/server-runtime/sessions.ts
function flash(name) {
  return `__flash_${name}__`;
}
var createSession = (initialData = {}, id = "") => {
  let map = new Map(Object.entries(initialData));
  return {
    get id() {
      return id;
    },
    get data() {
      return Object.fromEntries(map);
    },
    has(name) {
      return map.has(name) || map.has(flash(name));
    },
    get(name) {
      if (map.has(name)) return map.get(name);
      let flashName = flash(name);
      if (map.has(flashName)) {
        let value = map.get(flashName);
        map.delete(flashName);
        return value;
      }
      return void 0;
    },
    set(name, value) {
      map.set(name, value);
    },
    flash(name, value) {
      map.set(flash(name), value);
    },
    unset(name) {
      map.delete(name);
    }
  };
};
var isSession = (object) => {
  return object != null && typeof object.id === "string" && typeof object.data !== "undefined" && typeof object.has === "function" && typeof object.get === "function" && typeof object.set === "function" && typeof object.flash === "function" && typeof object.unset === "function";
};
function createSessionStorage({
  cookie: cookieArg,
  createData,
  readData,
  updateData,
  deleteData
}) {
  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
  warnOnceAboutSigningSessionCookie(cookie);
  return {
    async getSession(cookieHeader, options) {
      let id = cookieHeader && await cookie.parse(cookieHeader, options);
      let data2 = id && await readData(id);
      return createSession(data2 || {}, id || "");
    },
    async commitSession(session, options) {
      let { id, data: data2 } = session;
      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;
      if (id) {
        await updateData(id, data2, expires);
      } else {
        id = await createData(data2, expires);
      }
      return cookie.serialize(id, options);
    },
    async destroySession(session, options) {
      await deleteData(session.id);
      return cookie.serialize("", {
        ...options,
        maxAge: void 0,
        expires: /* @__PURE__ */ new Date(0)
      });
    }
  };
}
function warnOnceAboutSigningSessionCookie(cookie) {
  warnOnce(
    cookie.isSigned,
    `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`
  );
}

// lib/server-runtime/sessions/cookieStorage.ts
function createCookieSessionStorage({ cookie: cookieArg } = {}) {
  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
  warnOnceAboutSigningSessionCookie(cookie);
  return {
    async getSession(cookieHeader, options) {
      return createSession(
        cookieHeader && await cookie.parse(cookieHeader, options) || {}
      );
    },
    async commitSession(session, options) {
      let serializedCookie = await cookie.serialize(session.data, options);
      if (serializedCookie.length > 4096) {
        throw new Error(
          "Cookie length will exceed browser maximum. Length: " + serializedCookie.length
        );
      }
      return serializedCookie;
    },
    async destroySession(_session, options) {
      return cookie.serialize("", {
        ...options,
        maxAge: void 0,
        expires: /* @__PURE__ */ new Date(0)
      });
    }
  };
}

// lib/server-runtime/sessions/memoryStorage.ts
function createMemorySessionStorage({ cookie } = {}) {
  let map = /* @__PURE__ */ new Map();
  return createSessionStorage({
    cookie,
    async createData(data2, expires) {
      let id = Math.random().toString(36).substring(2, 10);
      map.set(id, { data: data2, expires });
      return id;
    },
    async readData(id) {
      if (map.has(id)) {
        let { data: data2, expires } = map.get(id);
        if (!expires || expires > /* @__PURE__ */ new Date()) {
          return data2;
        }
        if (expires) map.delete(id);
      }
      return null;
    },
    async updateData(id, data2, expires) {
      map.set(id, { data: data2, expires });
    },
    async deleteData(id) {
      map.delete(id);
    }
  });
}

// lib/dom/ssr/errors.ts
function deserializeErrors2(errors) {
  if (!errors) return null;
  let entries = Object.entries(errors);
  let serialized = {};
  for (let [key, val] of entries) {
    if (val && val.__type === "RouteErrorResponse") {
      serialized[key] = new ErrorResponseImpl(
        val.status,
        val.statusText,
        val.data,
        val.internal === true
      );
    } else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor === "function") {
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = val.stack;
            serialized[key] = error;
          } catch (e) {
          }
        }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = val.stack;
        serialized[key] = error;
      }
    } else {
      serialized[key] = val;
    }
  }
  return serialized;
}




/***/ }),

/***/ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Bounce: () => (/* binding */ lt),
/* harmony export */   Flip: () => (/* binding */ uo),
/* harmony export */   Icons: () => (/* binding */ W),
/* harmony export */   Slide: () => (/* binding */ mo),
/* harmony export */   ToastContainer: () => (/* binding */ Lt),
/* harmony export */   Zoom: () => (/* binding */ po),
/* harmony export */   collapseToast: () => (/* binding */ Z),
/* harmony export */   cssTransition: () => (/* binding */ $),
/* harmony export */   toast: () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs");
"use client";
function Mt(t){if(!t||typeof document=="undefined")return;let o=document.head||document.getElementsByTagName("head")[0],e=document.createElement("style");e.type="text/css",o.firstChild?o.insertBefore(e,o.firstChild):o.appendChild(e),e.styleSheet?e.styleSheet.cssText=t:e.appendChild(document.createTextNode(t))}Mt(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:"";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:"";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}
`);var L=t=>typeof t=="number"&&!isNaN(t),N=t=>typeof t=="string",P=t=>typeof t=="function",mt=t=>N(t)||L(t),B=t=>N(t)||P(t)?t:null,pt=(t,o)=>t===!1||L(t)&&t>0?t:o,z=t=>(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(t)||N(t)||P(t)||L(t);function Z(t,o,e=300){let{scrollHeight:r,style:s}=t;requestAnimationFrame(()=>{s.minHeight="initial",s.height=r+"px",s.transition=`all ${e}ms`,requestAnimationFrame(()=>{s.height="0",s.padding="0",s.margin="0",setTimeout(o,e)})})}function $({enter:t,exit:o,appendPosition:e=!1,collapse:r=!0,collapseDuration:s=300}){return function({children:a,position:d,preventExitTransition:c,done:T,nodeRef:g,isIn:v,playToast:x}){let C=e?`${t}--${d}`:t,S=e?`${o}--${d}`:o,E=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);return (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(()=>{let f=g.current,p=C.split(" "),b=n=>{n.target===g.current&&(x(),f.removeEventListener("animationend",b),f.removeEventListener("animationcancel",b),E.current===0&&n.type!=="animationcancel"&&f.classList.remove(...p))};(()=>{f.classList.add(...p),f.addEventListener("animationend",b),f.addEventListener("animationcancel",b)})()},[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let f=g.current,p=()=>{f.removeEventListener("animationend",p),r?Z(f,T,s):T()};v||(c?p():(()=>{E.current=1,f.className+=` ${S}`,f.addEventListener("animationend",p)})())},[v]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,a)}}function J(t,o){return{content:tt(t.content,t.props),containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,reason:t.removalReason,status:o}}function tt(t,o,e=!1){return (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(t)&&!N(t.type)?(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(t,{closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):P(t)?t({closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):t}function yt({closeToast:t,theme:o,ariaLabel:e="close"}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:`Toastify__close-button Toastify__close-button--${o}`,type:"button",onClick:r=>{r.stopPropagation(),t(!0)},"aria-label":e},react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{"aria-hidden":"true",viewBox:"0 0 14 16"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fillRule:"evenodd",d:"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"})))}function gt({delay:t,isRunning:o,closeToast:e,type:r="default",hide:s,className:l,controlledProgress:a,progress:d,rtl:c,isIn:T,theme:g}){let v=s||a&&d===0,x={animationDuration:`${t}ms`,animationPlayState:o?"running":"paused"};a&&(x.transform=`scaleX(${d})`);let C=(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])("Toastify__progress-bar",a?"Toastify__progress-bar--controlled":"Toastify__progress-bar--animated",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${r}`,{["Toastify__progress-bar--rtl"]:c}),S=P(l)?l({rtl:c,type:r,defaultClassName:C}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(C,l),E={[a&&d>=1?"onTransitionEnd":"onAnimationEnd"]:a&&d<1?null:()=>{T&&e()}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"Toastify__progress-bar--wrp","data-hidden":v},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${r}`}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{role:"progressbar","aria-hidden":v?"true":"false","aria-label":"notification timer",className:S,style:x,...E}))}var Xt=1,at=()=>`${Xt++}`;function _t(t,o,e){let r=1,s=0,l=[],a=[],d=o,c=new Map,T=new Set,g=i=>(T.add(i),()=>T.delete(i)),v=()=>{a=Array.from(c.values()),T.forEach(i=>i())},x=({containerId:i,toastId:n,updateId:u})=>{let h=i?i!==t:t!==1,m=c.has(n)&&u==null;return h||m},C=(i,n)=>{c.forEach(u=>{var h;(n==null||n===u.props.toastId)&&((h=u.toggle)==null||h.call(u,i))})},S=i=>{var n,u;(u=(n=i.props)==null?void 0:n.onClose)==null||u.call(n,i.removalReason),i.isActive=!1},E=i=>{if(i==null)c.forEach(S);else{let n=c.get(i);n&&S(n)}v()},f=()=>{s-=l.length,l=[]},p=i=>{var m,_;let{toastId:n,updateId:u}=i.props,h=u==null;i.staleId&&c.delete(i.staleId),i.isActive=!0,c.set(n,i),v(),e(J(i,h?"added":"updated")),h&&((_=(m=i.props).onOpen)==null||_.call(m))};return{id:t,props:d,observe:g,toggle:C,removeToast:E,toasts:c,clearQueue:f,buildToast:(i,n)=>{if(x(n))return;let{toastId:u,updateId:h,data:m,staleId:_,delay:k}=n,M=h==null;M&&s++;let A={...d,style:d.toastStyle,key:r++,...Object.fromEntries(Object.entries(n).filter(([D,Y])=>Y!=null)),toastId:u,updateId:h,data:m,isIn:!1,className:B(n.className||d.toastClassName),progressClassName:B(n.progressClassName||d.progressClassName),autoClose:n.isLoading?!1:pt(n.autoClose,d.autoClose),closeToast(D){c.get(u).removalReason=D,E(u)},deleteToast(){let D=c.get(u);if(D!=null){if(e(J(D,"removed")),c.delete(u),s--,s<0&&(s=0),l.length>0){p(l.shift());return}v()}}};A.closeButton=d.closeButton,n.closeButton===!1||z(n.closeButton)?A.closeButton=n.closeButton:n.closeButton===!0&&(A.closeButton=z(d.closeButton)?d.closeButton:!0);let R={content:i,props:A,staleId:_};d.limit&&d.limit>0&&s>d.limit&&M?l.push(R):L(k)?setTimeout(()=>{p(R)},k):p(R)},setProps(i){d=i},setToggle:(i,n)=>{let u=c.get(i);u&&(u.toggle=n)},isToastActive:i=>{var n;return(n=c.get(i))==null?void 0:n.isActive},getSnapshot:()=>a}}var I=new Map,F=[],st=new Set,Vt=t=>st.forEach(o=>o(t)),bt=()=>I.size>0;function Qt(){F.forEach(t=>nt(t.content,t.options)),F=[]}var vt=(t,{containerId:o})=>{var e;return(e=I.get(o||1))==null?void 0:e.toasts.get(t)};function X(t,o){var r;if(o)return!!((r=I.get(o))!=null&&r.isToastActive(t));let e=!1;return I.forEach(s=>{s.isToastActive(t)&&(e=!0)}),e}function ht(t){if(!bt()){F=F.filter(o=>t!=null&&o.options.toastId!==t);return}if(t==null||mt(t))I.forEach(o=>{o.removeToast(t)});else if(t&&("containerId"in t||"id"in t)){let o=I.get(t.containerId);o?o.removeToast(t.id):I.forEach(e=>{e.removeToast(t.id)})}}var Ct=(t={})=>{I.forEach(o=>{o.props.limit&&(!t.containerId||o.id===t.containerId)&&o.clearQueue()})};function nt(t,o){z(t)&&(bt()||F.push({content:t,options:o}),I.forEach(e=>{e.buildToast(t,o)}))}function xt(t){var o;(o=I.get(t.containerId||1))==null||o.setToggle(t.id,t.fn)}function rt(t,o){I.forEach(e=>{(o==null||!(o!=null&&o.containerId)||(o==null?void 0:o.containerId)===e.id)&&e.toggle(t,o==null?void 0:o.id)})}function Et(t){let o=t.containerId||1;return{subscribe(e){let r=_t(o,t,Vt);I.set(o,r);let s=r.observe(e);return Qt(),()=>{s(),I.delete(o)}},setProps(e){var r;(r=I.get(o))==null||r.setProps(e)},getSnapshot(){var e;return(e=I.get(o))==null?void 0:e.getSnapshot()}}}function Pt(t){return st.add(t),()=>{st.delete(t)}}function Wt(t){return t&&(N(t.toastId)||L(t.toastId))?t.toastId:at()}function U(t,o){return nt(t,o),o.toastId}function V(t,o){return{...o,type:o&&o.type||t,toastId:Wt(o)}}function Q(t){return(o,e)=>U(o,V(t,e))}function y(t,o){return U(t,V("default",o))}y.loading=(t,o)=>U(t,V("default",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...o}));function Gt(t,{pending:o,error:e,success:r},s){let l;o&&(l=N(o)?y.loading(o,s):y.loading(o.render,{...s,...o}));let a={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},d=(T,g,v)=>{if(g==null){y.dismiss(l);return}let x={type:T,...a,...s,data:v},C=N(g)?{render:g}:g;return l?y.update(l,{...x,...C}):y(C.render,{...x,...C}),v},c=P(t)?t():t;return c.then(T=>d("success",r,T)).catch(T=>d("error",e,T)),c}y.promise=Gt;y.success=Q("success");y.info=Q("info");y.error=Q("error");y.warning=Q("warning");y.warn=y.warning;y.dark=(t,o)=>U(t,V("default",{theme:"dark",...o}));function qt(t){ht(t)}y.dismiss=qt;y.clearWaitingQueue=Ct;y.isActive=X;y.update=(t,o={})=>{let e=vt(t,o);if(e){let{props:r,content:s}=e,l={delay:100,...r,...o,toastId:o.toastId||t,updateId:at()};l.toastId!==t&&(l.staleId=t);let a=l.render||s;delete l.render,U(a,l)}};y.done=t=>{y.update(t,{progress:1})};y.onChange=Pt;y.play=t=>rt(!0,t);y.pause=t=>rt(!1,t);function It(t){var a;let{subscribe:o,getSnapshot:e,setProps:r}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(Et(t)).current;r(t);let s=(a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(o,e,e))==null?void 0:a.slice();function l(d){if(!s)return[];let c=new Map;return t.newestOnTop&&s.reverse(),s.forEach(T=>{let{position:g}=T.props;c.has(g)||c.set(g,[]),c.get(g).push(T)}),Array.from(c,T=>d(T[0],T[1]))}return{getToastToRender:l,isToastActive:X,count:s==null?void 0:s.length}}function At(t){let[o,e]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[r,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),l=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),a=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:d,pauseOnHover:c,closeToast:T,onClick:g,closeOnClick:v}=t;xt({id:t.toastId,containerId:t.containerId,fn:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(t.pauseOnFocusLoss)return x(),()=>{C()}},[t.pauseOnFocusLoss]);function x(){document.hasFocus()||p(),window.addEventListener("focus",f),window.addEventListener("blur",p)}function C(){window.removeEventListener("focus",f),window.removeEventListener("blur",p)}function S(m){if(t.draggable===!0||t.draggable===m.pointerType){b();let _=l.current;a.canCloseOnClick=!0,a.canDrag=!0,_.style.transition="none",t.draggableDirection==="x"?(a.start=m.clientX,a.removalDistance=_.offsetWidth*(t.draggablePercent/100)):(a.start=m.clientY,a.removalDistance=_.offsetHeight*(t.draggablePercent===80?t.draggablePercent*1.5:t.draggablePercent)/100)}}function E(m){let{top:_,bottom:k,left:M,right:A}=l.current.getBoundingClientRect();m.nativeEvent.type!=="touchend"&&t.pauseOnHover&&m.clientX>=M&&m.clientX<=A&&m.clientY>=_&&m.clientY<=k?p():f()}function f(){e(!0)}function p(){e(!1)}function b(){a.didMove=!1,document.addEventListener("pointermove",n),document.addEventListener("pointerup",u)}function i(){document.removeEventListener("pointermove",n),document.removeEventListener("pointerup",u)}function n(m){let _=l.current;if(a.canDrag&&_){a.didMove=!0,o&&p(),t.draggableDirection==="x"?a.delta=m.clientX-a.start:a.delta=m.clientY-a.start,a.start!==m.clientX&&(a.canCloseOnClick=!1);let k=t.draggableDirection==="x"?`${a.delta}px, var(--y)`:`0, calc(${a.delta}px + var(--y))`;_.style.transform=`translate3d(${k},0)`,_.style.opacity=`${1-Math.abs(a.delta/a.removalDistance)}`}}function u(){i();let m=l.current;if(a.canDrag&&a.didMove&&m){if(a.canDrag=!1,Math.abs(a.delta)>a.removalDistance){s(!0),t.closeToast(!0),t.collapseAll();return}m.style.transition="transform 0.2s, opacity 0.2s",m.style.removeProperty("transform"),m.style.removeProperty("opacity")}}let h={onPointerDown:S,onPointerUp:E};return d&&c&&(h.onMouseEnter=p,t.stacked||(h.onMouseLeave=f)),v&&(h.onClick=m=>{g&&g(m),a.canCloseOnClick&&T(!0)}),{playToast:f,pauseToast:p,isRunning:o,preventExitTransition:r,toastRef:l,eventHandlers:h}}var Ot=typeof window!="undefined"?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect;var G=({theme:t,type:o,isLoading:e,...r})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{viewBox:"0 0 24 24",width:"100%",height:"100%",fill:t==="colored"?"currentColor":`var(--toastify-icon-color-${o})`,...r});function ao(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"}))}function so(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"}))}function no(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"}))}function ro(t){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(G,{...t},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"}))}function io(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"Toastify__spinner"})}var W={info:so,warning:ao,success:no,error:ro,spinner:io},lo=t=>t in W;function Nt({theme:t,type:o,isLoading:e,icon:r}){let s=null,l={theme:t,type:o};return r===!1||(P(r)?s=r({...l,isLoading:e}):(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(r)?s=(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(r,l):e?s=W.spinner():lo(o)&&(s=W[o](l))),s}var wt=t=>{let{isRunning:o,preventExitTransition:e,toastRef:r,eventHandlers:s,playToast:l}=At(t),{closeButton:a,children:d,autoClose:c,onClick:T,type:g,hideProgressBar:v,closeToast:x,transition:C,position:S,className:E,style:f,progressClassName:p,updateId:b,role:i,progress:n,rtl:u,toastId:h,deleteToast:m,isIn:_,isLoading:k,closeOnClick:M,theme:A,ariaLabel:R}=t,D=(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])("Toastify__toast",`Toastify__toast-theme--${A}`,`Toastify__toast--${g}`,{["Toastify__toast--rtl"]:u},{["Toastify__toast--close-on-click"]:M}),Y=P(E)?E({rtl:u,position:S,type:g,defaultClassName:D}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(D,E),ft=Nt(t),dt=!!n||!c,j={closeToast:x,type:g,theme:A},H=null;return a===!1||(P(a)?H=a(j):(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(a)?H=(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(a,j):H=yt(j)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(C,{isIn:_,done:m,position:S,preventExitTransition:e,nodeRef:r,playToast:l},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{id:h,tabIndex:0,onClick:T,"data-in":_,className:Y,...s,style:f,ref:r,..._&&{role:i,"aria-label":R}},ft!=null&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])("Toastify__toast-icon",{["Toastify--animate-icon Toastify__zoom-enter"]:!k})},ft),tt(d,t,!o),H,!t.customProgressBar&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(gt,{...b&&!dt?{key:`p-${b}`}:{},rtl:u,theme:A,delay:c,isRunning:o,isIn:_,closeToast:x,hide:v,type:g,className:p,controlledProgress:dt,progress:n||0})))};var K=(t,o=!1)=>({enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:o}),lt=$(K("bounce",!0)),mo=$(K("slide",!0)),po=$(K("zoom")),uo=$(K("flip"));var _o={position:"top-right",transition:lt,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:"touch",draggablePercent:80,draggableDirection:"x",role:"alert",theme:"light","aria-label":"Notifications Alt+T",hotKeys:t=>t.altKey&&t.code==="KeyT"};function Lt(t){let o={..._o,...t},e=t.stacked,[r,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),l=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),{getToastToRender:a,isToastActive:d,count:c}=It(o),{className:T,style:g,rtl:v,containerId:x,hotKeys:C}=o;function S(f){let p=(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])("Toastify__toast-container",`Toastify__toast-container--${f}`,{["Toastify__toast-container--rtl"]:v});return P(T)?T({position:f,rtl:v,defaultClassName:p}):(0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(p,B(T))}function E(){e&&(s(!0),y.play())}return Ot(()=>{var f;if(e){let p=l.current.querySelectorAll('[data-in="true"]'),b=12,i=(f=o.position)==null?void 0:f.includes("top"),n=0,u=0;Array.from(p).reverse().forEach((h,m)=>{let _=h;_.classList.add("Toastify__toast--stacked"),m>0&&(_.dataset.collapsed=`${r}`),_.dataset.pos||(_.dataset.pos=i?"top":"bot");let k=n*(r?.2:1)+(r?0:b*m);_.style.setProperty("--y",`${i?k:k*-1}px`),_.style.setProperty("--g",`${b}`),_.style.setProperty("--s",`${1-(r?u:0)}`),n+=_.offsetHeight,u+=.025})}},[r,c,e]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{function f(p){var i;let b=l.current;C(p)&&((i=b.querySelector('[tabIndex="0"]'))==null||i.focus(),s(!1),y.pause()),p.key==="Escape"&&(document.activeElement===b||b!=null&&b.contains(document.activeElement))&&(s(!0),y.play())}return document.addEventListener("keydown",f),()=>{document.removeEventListener("keydown",f)}},[C]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("section",{ref:l,className:"Toastify",id:x,onMouseEnter:()=>{e&&(s(!1),y.pause())},onMouseLeave:E,"aria-live":"polite","aria-atomic":"false","aria-relevant":"additions text","aria-label":o["aria-label"]},a((f,p)=>{let b=p.length?{...g}:{...g,pointerEvents:"none"};return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{tabIndex:-1,className:S(f),"data-stacked":e,style:b,key:`c-${f}`},p.map(({content:i,props:n})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(wt,{...n,stacked:e,collapseAll:E,isIn:d(n.toastId,n.containerId),key:`t-${n.key}`},i)))}))}
//# sourceMappingURL=index.mjs.map

/***/ }),

/***/ "./node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/turbo-stream@2.4.0/node_modules/turbo-stream/dist/turbo-stream.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   decode: () => (/* binding */ decode),
/* harmony export */   encode: () => (/* binding */ encode)
/* harmony export */ });
// src/utils.ts
var HOLE = -1;
var NAN = -2;
var NEGATIVE_INFINITY = -3;
var NEGATIVE_ZERO = -4;
var NULL = -5;
var POSITIVE_INFINITY = -6;
var UNDEFINED = -7;
var TYPE_BIGINT = "B";
var TYPE_DATE = "D";
var TYPE_ERROR = "E";
var TYPE_MAP = "M";
var TYPE_NULL_OBJECT = "N";
var TYPE_PROMISE = "P";
var TYPE_REGEXP = "R";
var TYPE_SET = "S";
var TYPE_SYMBOL = "Y";
var TYPE_URL = "U";
var TYPE_PREVIOUS_RESOLVED = "Z";
var Deferred = class {
  promise;
  resolve;
  reject;
  constructor() {
    this.promise = new Promise((resolve, reject) => {
      this.resolve = resolve;
      this.reject = reject;
    });
  }
};
function createLineSplittingTransform() {
  const decoder = new TextDecoder();
  let leftover = "";
  return new TransformStream({
    transform(chunk, controller) {
      const str = decoder.decode(chunk, { stream: true });
      const parts = (leftover + str).split("\n");
      leftover = parts.pop() || "";
      for (const part of parts) {
        controller.enqueue(part);
      }
    },
    flush(controller) {
      if (leftover) {
        controller.enqueue(leftover);
      }
    }
  });
}

// src/flatten.ts
function flatten(input) {
  const { indices } = this;
  const existing = indices.get(input);
  if (existing)
    return [existing];
  if (input === void 0)
    return UNDEFINED;
  if (input === null)
    return NULL;
  if (Number.isNaN(input))
    return NAN;
  if (input === Number.POSITIVE_INFINITY)
    return POSITIVE_INFINITY;
  if (input === Number.NEGATIVE_INFINITY)
    return NEGATIVE_INFINITY;
  if (input === 0 && 1 / input < 0)
    return NEGATIVE_ZERO;
  const index = this.index++;
  indices.set(input, index);
  stringify.call(this, input, index);
  return index;
}
function stringify(input, index) {
  const { deferred, plugins, postPlugins } = this;
  const str = this.stringified;
  const stack = [[input, index]];
  while (stack.length > 0) {
    const [input2, index2] = stack.pop();
    const partsForObj = (obj) => Object.keys(obj).map((k) => `"_${flatten.call(this, k)}":${flatten.call(this, obj[k])}`).join(",");
    let error = null;
    switch (typeof input2) {
      case "boolean":
      case "number":
      case "string":
        str[index2] = JSON.stringify(input2);
        break;
      case "bigint":
        str[index2] = `["${TYPE_BIGINT}","${input2}"]`;
        break;
      case "symbol": {
        const keyFor = Symbol.keyFor(input2);
        if (!keyFor) {
          error = new Error(
            "Cannot encode symbol unless created with Symbol.for()"
          );
        } else {
          str[index2] = `["${TYPE_SYMBOL}",${JSON.stringify(keyFor)}]`;
        }
        break;
      }
      case "object": {
        if (!input2) {
          str[index2] = `${NULL}`;
          break;
        }
        const isArray = Array.isArray(input2);
        let pluginHandled = false;
        if (!isArray && plugins) {
          for (const plugin of plugins) {
            const pluginResult = plugin(input2);
            if (Array.isArray(pluginResult)) {
              pluginHandled = true;
              const [pluginIdentifier, ...rest] = pluginResult;
              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
              if (rest.length > 0) {
                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
              }
              str[index2] += "]";
              break;
            }
          }
        }
        if (!pluginHandled) {
          let result = isArray ? "[" : "{";
          if (isArray) {
            for (let i = 0; i < input2.length; i++)
              result += (i ? "," : "") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);
            str[index2] = `${result}]`;
          } else if (input2 instanceof Date) {
            str[index2] = `["${TYPE_DATE}",${input2.getTime()}]`;
          } else if (input2 instanceof URL) {
            str[index2] = `["${TYPE_URL}",${JSON.stringify(input2.href)}]`;
          } else if (input2 instanceof RegExp) {
            str[index2] = `["${TYPE_REGEXP}",${JSON.stringify(
              input2.source
            )},${JSON.stringify(input2.flags)}]`;
          } else if (input2 instanceof Set) {
            if (input2.size > 0) {
              str[index2] = `["${TYPE_SET}",${[...input2].map((val) => flatten.call(this, val)).join(",")}]`;
            } else {
              str[index2] = `["${TYPE_SET}"]`;
            }
          } else if (input2 instanceof Map) {
            if (input2.size > 0) {
              str[index2] = `["${TYPE_MAP}",${[...input2].flatMap(([k, v]) => [
                flatten.call(this, k),
                flatten.call(this, v)
              ]).join(",")}]`;
            } else {
              str[index2] = `["${TYPE_MAP}"]`;
            }
          } else if (input2 instanceof Promise) {
            str[index2] = `["${TYPE_PROMISE}",${index2}]`;
            deferred[index2] = input2;
          } else if (input2 instanceof Error) {
            str[index2] = `["${TYPE_ERROR}",${JSON.stringify(input2.message)}`;
            if (input2.name !== "Error") {
              str[index2] += `,${JSON.stringify(input2.name)}`;
            }
            str[index2] += "]";
          } else if (Object.getPrototypeOf(input2) === null) {
            str[index2] = `["${TYPE_NULL_OBJECT}",{${partsForObj(input2)}}]`;
          } else if (isPlainObject(input2)) {
            str[index2] = `{${partsForObj(input2)}}`;
          } else {
            error = new Error("Cannot encode object with prototype");
          }
        }
        break;
      }
      default: {
        const isArray = Array.isArray(input2);
        let pluginHandled = false;
        if (!isArray && plugins) {
          for (const plugin of plugins) {
            const pluginResult = plugin(input2);
            if (Array.isArray(pluginResult)) {
              pluginHandled = true;
              const [pluginIdentifier, ...rest] = pluginResult;
              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
              if (rest.length > 0) {
                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
              }
              str[index2] += "]";
              break;
            }
          }
        }
        if (!pluginHandled) {
          error = new Error("Cannot encode function or unexpected type");
        }
      }
    }
    if (error) {
      let pluginHandled = false;
      if (postPlugins) {
        for (const plugin of postPlugins) {
          const pluginResult = plugin(input2);
          if (Array.isArray(pluginResult)) {
            pluginHandled = true;
            const [pluginIdentifier, ...rest] = pluginResult;
            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;
            if (rest.length > 0) {
              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(",")}`;
            }
            str[index2] += "]";
            break;
          }
        }
      }
      if (!pluginHandled) {
        throw error;
      }
    }
  }
}
var objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function isPlainObject(thing) {
  const proto = Object.getPrototypeOf(thing);
  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === objectProtoNames;
}

// src/unflatten.ts
var globalObj = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : void 0;
function unflatten(parsed) {
  const { hydrated, values } = this;
  if (typeof parsed === "number")
    return hydrate.call(this, parsed);
  if (!Array.isArray(parsed) || !parsed.length)
    throw new SyntaxError();
  const startIndex = values.length;
  for (const value of parsed) {
    values.push(value);
  }
  hydrated.length = values.length;
  return hydrate.call(this, startIndex);
}
function hydrate(index) {
  const { hydrated, values, deferred, plugins } = this;
  let result;
  const stack = [
    [
      index,
      (v) => {
        result = v;
      }
    ]
  ];
  let postRun = [];
  while (stack.length > 0) {
    const [index2, set] = stack.pop();
    switch (index2) {
      case UNDEFINED:
        set(void 0);
        continue;
      case NULL:
        set(null);
        continue;
      case NAN:
        set(NaN);
        continue;
      case POSITIVE_INFINITY:
        set(Infinity);
        continue;
      case NEGATIVE_INFINITY:
        set(-Infinity);
        continue;
      case NEGATIVE_ZERO:
        set(-0);
        continue;
    }
    if (hydrated[index2]) {
      set(hydrated[index2]);
      continue;
    }
    const value = values[index2];
    if (!value || typeof value !== "object") {
      hydrated[index2] = value;
      set(value);
      continue;
    }
    if (Array.isArray(value)) {
      if (typeof value[0] === "string") {
        const [type, b, c] = value;
        switch (type) {
          case TYPE_DATE:
            set(hydrated[index2] = new Date(b));
            continue;
          case TYPE_URL:
            set(hydrated[index2] = new URL(b));
            continue;
          case TYPE_BIGINT:
            set(hydrated[index2] = BigInt(b));
            continue;
          case TYPE_REGEXP:
            set(hydrated[index2] = new RegExp(b, c));
            continue;
          case TYPE_SYMBOL:
            set(hydrated[index2] = Symbol.for(b));
            continue;
          case TYPE_SET:
            const newSet = /* @__PURE__ */ new Set();
            hydrated[index2] = newSet;
            for (let i = 1; i < value.length; i++)
              stack.push([
                value[i],
                (v) => {
                  newSet.add(v);
                }
              ]);
            set(newSet);
            continue;
          case TYPE_MAP:
            const map = /* @__PURE__ */ new Map();
            hydrated[index2] = map;
            for (let i = 1; i < value.length; i += 2) {
              const r = [];
              stack.push([
                value[i + 1],
                (v) => {
                  r[1] = v;
                }
              ]);
              stack.push([
                value[i],
                (k) => {
                  r[0] = k;
                }
              ]);
              postRun.push(() => {
                map.set(r[0], r[1]);
              });
            }
            set(map);
            continue;
          case TYPE_NULL_OBJECT:
            const obj = /* @__PURE__ */ Object.create(null);
            hydrated[index2] = obj;
            for (const key of Object.keys(b).reverse()) {
              const r = [];
              stack.push([
                b[key],
                (v) => {
                  r[1] = v;
                }
              ]);
              stack.push([
                Number(key.slice(1)),
                (k) => {
                  r[0] = k;
                }
              ]);
              postRun.push(() => {
                obj[r[0]] = r[1];
              });
            }
            set(obj);
            continue;
          case TYPE_PROMISE:
            if (hydrated[b]) {
              set(hydrated[index2] = hydrated[b]);
            } else {
              const d = new Deferred();
              deferred[b] = d;
              set(hydrated[index2] = d.promise);
            }
            continue;
          case TYPE_ERROR:
            const [, message, errorType] = value;
            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);
            hydrated[index2] = error;
            set(error);
            continue;
          case TYPE_PREVIOUS_RESOLVED:
            set(hydrated[index2] = hydrated[b]);
            continue;
          default:
            if (Array.isArray(plugins)) {
              const r = [];
              const vals = value.slice(1);
              for (let i = 0; i < vals.length; i++) {
                const v = vals[i];
                stack.push([
                  v,
                  (v2) => {
                    r[i] = v2;
                  }
                ]);
              }
              postRun.push(() => {
                for (const plugin of plugins) {
                  const result2 = plugin(value[0], ...r);
                  if (result2) {
                    set(hydrated[index2] = result2.value);
                    return;
                  }
                }
                throw new SyntaxError();
              });
              continue;
            }
            throw new SyntaxError();
        }
      } else {
        const array = [];
        hydrated[index2] = array;
        for (let i = 0; i < value.length; i++) {
          const n = value[i];
          if (n !== HOLE) {
            stack.push([
              n,
              (v) => {
                array[i] = v;
              }
            ]);
          }
        }
        set(array);
        continue;
      }
    } else {
      const object = {};
      hydrated[index2] = object;
      for (const key of Object.keys(value).reverse()) {
        const r = [];
        stack.push([
          value[key],
          (v) => {
            r[1] = v;
          }
        ]);
        stack.push([
          Number(key.slice(1)),
          (k) => {
            r[0] = k;
          }
        ]);
        postRun.push(() => {
          object[r[0]] = r[1];
        });
      }
      set(object);
      continue;
    }
  }
  while (postRun.length > 0) {
    postRun.pop()();
  }
  return result;
}

// src/turbo-stream.ts
async function decode(readable, options) {
  const { plugins } = options ?? {};
  const done = new Deferred();
  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();
  const decoder = {
    values: [],
    hydrated: [],
    deferred: {},
    plugins
  };
  const decoded = await decodeInitial.call(decoder, reader);
  let donePromise = done.promise;
  if (decoded.done) {
    done.resolve();
  } else {
    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {
      for (const deferred of Object.values(decoder.deferred)) {
        deferred.reject(reason);
      }
      done.reject(reason);
    });
  }
  return {
    done: donePromise.then(() => reader.closed),
    value: decoded.value
  };
}
async function decodeInitial(reader) {
  const read = await reader.read();
  if (!read.value) {
    throw new SyntaxError();
  }
  let line;
  try {
    line = JSON.parse(read.value);
  } catch (reason) {
    throw new SyntaxError();
  }
  return {
    done: read.done,
    value: unflatten.call(this, line)
  };
}
async function decodeDeferred(reader) {
  let read = await reader.read();
  while (!read.done) {
    if (!read.value)
      continue;
    const line = read.value;
    switch (line[0]) {
      case TYPE_PROMISE: {
        const colonIndex = line.indexOf(":");
        const deferredId = Number(line.slice(1, colonIndex));
        const deferred = this.deferred[deferredId];
        if (!deferred) {
          throw new Error(`Deferred ID ${deferredId} not found in stream`);
        }
        const lineData = line.slice(colonIndex + 1);
        let jsonLine;
        try {
          jsonLine = JSON.parse(lineData);
        } catch (reason) {
          throw new SyntaxError();
        }
        const value = unflatten.call(this, jsonLine);
        deferred.resolve(value);
        break;
      }
      case TYPE_ERROR: {
        const colonIndex = line.indexOf(":");
        const deferredId = Number(line.slice(1, colonIndex));
        const deferred = this.deferred[deferredId];
        if (!deferred) {
          throw new Error(`Deferred ID ${deferredId} not found in stream`);
        }
        const lineData = line.slice(colonIndex + 1);
        let jsonLine;
        try {
          jsonLine = JSON.parse(lineData);
        } catch (reason) {
          throw new SyntaxError();
        }
        const value = unflatten.call(this, jsonLine);
        deferred.reject(value);
        break;
      }
      default:
        throw new SyntaxError();
    }
    read = await reader.read();
  }
}
function encode(input, options) {
  const { plugins, postPlugins, signal } = options ?? {};
  const encoder = {
    deferred: {},
    index: 0,
    indices: /* @__PURE__ */ new Map(),
    stringified: [],
    plugins,
    postPlugins,
    signal
  };
  const textEncoder = new TextEncoder();
  let lastSentIndex = 0;
  const readable = new ReadableStream({
    async start(controller) {
      const id = flatten.call(encoder, input);
      if (Array.isArray(id)) {
        throw new Error("This should never happen");
      }
      if (id < 0) {
        controller.enqueue(textEncoder.encode(`${id}
`));
      } else {
        controller.enqueue(
          textEncoder.encode(`[${encoder.stringified.join(",")}]
`)
        );
        lastSentIndex = encoder.stringified.length - 1;
      }
      const seenPromises = /* @__PURE__ */ new WeakSet();
      while (Object.keys(encoder.deferred).length > 0) {
        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {
          if (seenPromises.has(deferred))
            continue;
          seenPromises.add(
            encoder.deferred[Number(deferredId)] = raceSignal(
              deferred,
              encoder.signal
            ).then(
              (resolved) => {
                const id2 = flatten.call(encoder, resolved);
                if (Array.isArray(id2)) {
                  controller.enqueue(
                    textEncoder.encode(
                      `${TYPE_PROMISE}${deferredId}:[["${TYPE_PREVIOUS_RESOLVED}",${id2[0]}]]
`
                    )
                  );
                  encoder.index++;
                  lastSentIndex++;
                } else if (id2 < 0) {
                  controller.enqueue(
                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}
`)
                  );
                } else {
                  const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                  controller.enqueue(
                    textEncoder.encode(
                      `${TYPE_PROMISE}${deferredId}:[${values}]
`
                    )
                  );
                  lastSentIndex = encoder.stringified.length - 1;
                }
              },
              (reason) => {
                if (!reason || typeof reason !== "object" || !(reason instanceof Error)) {
                  reason = new Error("An unknown error occurred");
                }
                const id2 = flatten.call(encoder, reason);
                if (Array.isArray(id2)) {
                  controller.enqueue(
                    textEncoder.encode(
                      `${TYPE_ERROR}${deferredId}:[["${TYPE_PREVIOUS_RESOLVED}",${id2[0]}]]
`
                    )
                  );
                  encoder.index++;
                  lastSentIndex++;
                } else if (id2 < 0) {
                  controller.enqueue(
                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}
`)
                  );
                } else {
                  const values = encoder.stringified.slice(lastSentIndex + 1).join(",");
                  controller.enqueue(
                    textEncoder.encode(
                      `${TYPE_ERROR}${deferredId}:[${values}]
`
                    )
                  );
                  lastSentIndex = encoder.stringified.length - 1;
                }
              }
            ).finally(() => {
              delete encoder.deferred[Number(deferredId)];
            })
          );
        }
        await Promise.race(Object.values(encoder.deferred));
      }
      await Promise.all(Object.values(encoder.deferred));
      controller.close();
    }
  });
  return readable;
}
function raceSignal(promise, signal) {
  if (!signal)
    return promise;
  if (signal.aborted)
    return Promise.reject(signal.reason || new Error("Signal was aborted."));
  const abort = new Promise((resolve, reject) => {
    signal.addEventListener("abort", (event) => {
      reject(signal.reason || new Error("Signal was aborted."));
    });
    promise.then(resolve).catch(reject);
  });
  abort.catch(() => {
  });
  return Promise.race([abort, promise]);
}



/***/ }),

/***/ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/country.json":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/country.json ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[{"name":"Afghanistan","isoCode":"AF","flag":"🇦🇫","phonecode":"93","currency":"AFN","latitude":"33.00000000","longitude":"65.00000000","timezones":[{"zoneName":"Asia/Kabul","gmtOffset":16200,"gmtOffsetName":"UTC+04:30","abbreviation":"AFT","tzName":"Afghanistan Time"}]},{"name":"Aland Islands","isoCode":"AX","flag":"🇦🇽","phonecode":"+358-18","currency":"EUR","latitude":"60.11666700","longitude":"19.90000000","timezones":[{"zoneName":"Europe/Mariehamn","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Albania","isoCode":"AL","flag":"🇦🇱","phonecode":"355","currency":"ALL","latitude":"41.00000000","longitude":"20.00000000","timezones":[{"zoneName":"Europe/Tirane","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Algeria","isoCode":"DZ","flag":"🇩🇿","phonecode":"213","currency":"DZD","latitude":"28.00000000","longitude":"3.00000000","timezones":[{"zoneName":"Africa/Algiers","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"American Samoa","isoCode":"AS","flag":"🇦🇸","phonecode":"+1-684","currency":"USD","latitude":"-14.33333333","longitude":"-170.00000000","timezones":[{"zoneName":"Pacific/Pago_Pago","gmtOffset":-39600,"gmtOffsetName":"UTC-11:00","abbreviation":"SST","tzName":"Samoa Standard Time"}]},{"name":"Andorra","isoCode":"AD","flag":"🇦🇩","phonecode":"376","currency":"EUR","latitude":"42.50000000","longitude":"1.50000000","timezones":[{"zoneName":"Europe/Andorra","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Angola","isoCode":"AO","flag":"🇦🇴","phonecode":"244","currency":"AOA","latitude":"-12.50000000","longitude":"18.50000000","timezones":[{"zoneName":"Africa/Luanda","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Anguilla","isoCode":"AI","flag":"🇦🇮","phonecode":"+1-264","currency":"XCD","latitude":"18.25000000","longitude":"-63.16666666","timezones":[{"zoneName":"America/Anguilla","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Antarctica","isoCode":"AQ","flag":"🇦🇶","phonecode":"672","currency":"AAD","latitude":"-74.65000000","longitude":"4.48000000","timezones":[{"zoneName":"Antarctica/Casey","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"AWST","tzName":"Australian Western Standard Time"},{"zoneName":"Antarctica/Davis","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"DAVT","tzName":"Davis Time"},{"zoneName":"Antarctica/DumontDUrville","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"DDUT","tzName":"Dumont d\'Urville Time"},{"zoneName":"Antarctica/Mawson","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"MAWT","tzName":"Mawson Station Time"},{"zoneName":"Antarctica/McMurdo","gmtOffset":46800,"gmtOffsetName":"UTC+13:00","abbreviation":"NZDT","tzName":"New Zealand Daylight Time"},{"zoneName":"Antarctica/Palmer","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"CLST","tzName":"Chile Summer Time"},{"zoneName":"Antarctica/Rothera","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ROTT","tzName":"Rothera Research Station Time"},{"zoneName":"Antarctica/Syowa","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"SYOT","tzName":"Showa Station Time"},{"zoneName":"Antarctica/Troll","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"},{"zoneName":"Antarctica/Vostok","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"VOST","tzName":"Vostok Station Time"}]},{"name":"Antigua And Barbuda","isoCode":"AG","flag":"🇦🇬","phonecode":"+1-268","currency":"XCD","latitude":"17.05000000","longitude":"-61.80000000","timezones":[{"zoneName":"America/Antigua","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Argentina","isoCode":"AR","flag":"🇦🇷","phonecode":"54","currency":"ARS","latitude":"-34.00000000","longitude":"-64.00000000","timezones":[{"zoneName":"America/Argentina/Buenos_Aires","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Catamarca","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Cordoba","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Jujuy","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/La_Rioja","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Mendoza","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Rio_Gallegos","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Salta","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/San_Juan","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/San_Luis","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Tucuman","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"},{"zoneName":"America/Argentina/Ushuaia","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"ART","tzName":"Argentina Time"}]},{"name":"Armenia","isoCode":"AM","flag":"🇦🇲","phonecode":"374","currency":"AMD","latitude":"40.00000000","longitude":"45.00000000","timezones":[{"zoneName":"Asia/Yerevan","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"AMT","tzName":"Armenia Time"}]},{"name":"Aruba","isoCode":"AW","flag":"🇦🇼","phonecode":"297","currency":"AWG","latitude":"12.50000000","longitude":"-69.96666666","timezones":[{"zoneName":"America/Aruba","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Australia","isoCode":"AU","flag":"🇦🇺","phonecode":"61","currency":"AUD","latitude":"-27.00000000","longitude":"133.00000000","timezones":[{"zoneName":"Antarctica/Macquarie","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"MIST","tzName":"Macquarie Island Station Time"},{"zoneName":"Australia/Adelaide","gmtOffset":37800,"gmtOffsetName":"UTC+10:30","abbreviation":"ACDT","tzName":"Australian Central Daylight Saving Time"},{"zoneName":"Australia/Brisbane","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"AEST","tzName":"Australian Eastern Standard Time"},{"zoneName":"Australia/Broken_Hill","gmtOffset":37800,"gmtOffsetName":"UTC+10:30","abbreviation":"ACDT","tzName":"Australian Central Daylight Saving Time"},{"zoneName":"Australia/Currie","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"AEDT","tzName":"Australian Eastern Daylight Saving Time"},{"zoneName":"Australia/Darwin","gmtOffset":34200,"gmtOffsetName":"UTC+09:30","abbreviation":"ACST","tzName":"Australian Central Standard Time"},{"zoneName":"Australia/Eucla","gmtOffset":31500,"gmtOffsetName":"UTC+08:45","abbreviation":"ACWST","tzName":"Australian Central Western Standard Time (Unofficial)"},{"zoneName":"Australia/Hobart","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"AEDT","tzName":"Australian Eastern Daylight Saving Time"},{"zoneName":"Australia/Lindeman","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"AEST","tzName":"Australian Eastern Standard Time"},{"zoneName":"Australia/Lord_Howe","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"LHST","tzName":"Lord Howe Summer Time"},{"zoneName":"Australia/Melbourne","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"AEDT","tzName":"Australian Eastern Daylight Saving Time"},{"zoneName":"Australia/Perth","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"AWST","tzName":"Australian Western Standard Time"},{"zoneName":"Australia/Sydney","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"AEDT","tzName":"Australian Eastern Daylight Saving Time"}]},{"name":"Austria","isoCode":"AT","flag":"🇦🇹","phonecode":"43","currency":"EUR","latitude":"47.33333333","longitude":"13.33333333","timezones":[{"zoneName":"Europe/Vienna","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Azerbaijan","isoCode":"AZ","flag":"🇦🇿","phonecode":"994","currency":"AZN","latitude":"40.50000000","longitude":"47.50000000","timezones":[{"zoneName":"Asia/Baku","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"AZT","tzName":"Azerbaijan Time"}]},{"name":"The Bahamas","isoCode":"BS","flag":"🇧🇸","phonecode":"+1-242","currency":"BSD","latitude":"24.25000000","longitude":"-76.00000000","timezones":[{"zoneName":"America/Nassau","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America)"}]},{"name":"Bahrain","isoCode":"BH","flag":"🇧🇭","phonecode":"973","currency":"BHD","latitude":"26.00000000","longitude":"50.55000000","timezones":[{"zoneName":"Asia/Bahrain","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Bangladesh","isoCode":"BD","flag":"🇧🇩","phonecode":"880","currency":"BDT","latitude":"24.00000000","longitude":"90.00000000","timezones":[{"zoneName":"Asia/Dhaka","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"BDT","tzName":"Bangladesh Standard Time"}]},{"name":"Barbados","isoCode":"BB","flag":"🇧🇧","phonecode":"+1-246","currency":"BBD","latitude":"13.16666666","longitude":"-59.53333333","timezones":[{"zoneName":"America/Barbados","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Belarus","isoCode":"BY","flag":"🇧🇾","phonecode":"375","currency":"BYN","latitude":"53.00000000","longitude":"28.00000000","timezones":[{"zoneName":"Europe/Minsk","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"MSK","tzName":"Moscow Time"}]},{"name":"Belgium","isoCode":"BE","flag":"🇧🇪","phonecode":"32","currency":"EUR","latitude":"50.83333333","longitude":"4.00000000","timezones":[{"zoneName":"Europe/Brussels","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Belize","isoCode":"BZ","flag":"🇧🇿","phonecode":"501","currency":"BZD","latitude":"17.25000000","longitude":"-88.75000000","timezones":[{"zoneName":"America/Belize","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America)"}]},{"name":"Benin","isoCode":"BJ","flag":"🇧🇯","phonecode":"229","currency":"XOF","latitude":"9.50000000","longitude":"2.25000000","timezones":[{"zoneName":"Africa/Porto-Novo","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Bermuda","isoCode":"BM","flag":"🇧🇲","phonecode":"+1-441","currency":"BMD","latitude":"32.33333333","longitude":"-64.75000000","timezones":[{"zoneName":"Atlantic/Bermuda","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Bhutan","isoCode":"BT","flag":"🇧🇹","phonecode":"975","currency":"BTN","latitude":"27.50000000","longitude":"90.50000000","timezones":[{"zoneName":"Asia/Thimphu","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"BTT","tzName":"Bhutan Time"}]},{"name":"Bolivia","isoCode":"BO","flag":"🇧🇴","phonecode":"591","currency":"BOB","latitude":"-17.00000000","longitude":"-65.00000000","timezones":[{"zoneName":"America/La_Paz","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"BOT","tzName":"Bolivia Time"}]},{"name":"Bosnia and Herzegovina","isoCode":"BA","flag":"🇧🇦","phonecode":"387","currency":"BAM","latitude":"44.00000000","longitude":"18.00000000","timezones":[{"zoneName":"Europe/Sarajevo","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Botswana","isoCode":"BW","flag":"🇧🇼","phonecode":"267","currency":"BWP","latitude":"-22.00000000","longitude":"24.00000000","timezones":[{"zoneName":"Africa/Gaborone","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Bouvet Island","isoCode":"BV","flag":"🇧🇻","phonecode":"0055","currency":"NOK","latitude":"-54.43333333","longitude":"3.40000000","timezones":[{"zoneName":"Europe/Oslo","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Brazil","isoCode":"BR","flag":"🇧🇷","phonecode":"55","currency":"BRL","latitude":"-10.00000000","longitude":"-55.00000000","timezones":[{"zoneName":"America/Araguaina","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Bahia","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Belem","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Boa_Vista","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AMT","tzName":"Amazon Time (Brazil)[3"},{"zoneName":"America/Campo_Grande","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AMT","tzName":"Amazon Time (Brazil)[3"},{"zoneName":"America/Cuiaba","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"BRT","tzName":"Brasilia Time"},{"zoneName":"America/Eirunepe","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"ACT","tzName":"Acre Time"},{"zoneName":"America/Fortaleza","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Maceio","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Manaus","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AMT","tzName":"Amazon Time (Brazil)"},{"zoneName":"America/Noronha","gmtOffset":-7200,"gmtOffsetName":"UTC-02:00","abbreviation":"FNT","tzName":"Fernando de Noronha Time"},{"zoneName":"America/Porto_Velho","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AMT","tzName":"Amazon Time (Brazil)[3"},{"zoneName":"America/Recife","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Rio_Branco","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"ACT","tzName":"Acre Time"},{"zoneName":"America/Santarem","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"},{"zoneName":"America/Sao_Paulo","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"BRT","tzName":"Brasília Time"}]},{"name":"British Indian Ocean Territory","isoCode":"IO","flag":"🇮🇴","phonecode":"246","currency":"USD","latitude":"-6.00000000","longitude":"71.50000000","timezones":[{"zoneName":"Indian/Chagos","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"IOT","tzName":"Indian Ocean Time"}]},{"name":"Brunei","isoCode":"BN","flag":"🇧🇳","phonecode":"673","currency":"BND","latitude":"4.50000000","longitude":"114.66666666","timezones":[{"zoneName":"Asia/Brunei","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"BNT","tzName":"Brunei Darussalam Time"}]},{"name":"Bulgaria","isoCode":"BG","flag":"🇧🇬","phonecode":"359","currency":"BGN","latitude":"43.00000000","longitude":"25.00000000","timezones":[{"zoneName":"Europe/Sofia","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Burkina Faso","isoCode":"BF","flag":"🇧🇫","phonecode":"226","currency":"XOF","latitude":"13.00000000","longitude":"-2.00000000","timezones":[{"zoneName":"Africa/Ouagadougou","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Burundi","isoCode":"BI","flag":"🇧🇮","phonecode":"257","currency":"BIF","latitude":"-3.50000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Bujumbura","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Cambodia","isoCode":"KH","flag":"🇰🇭","phonecode":"855","currency":"KHR","latitude":"13.00000000","longitude":"105.00000000","timezones":[{"zoneName":"Asia/Phnom_Penh","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"ICT","tzName":"Indochina Time"}]},{"name":"Cameroon","isoCode":"CM","flag":"🇨🇲","phonecode":"237","currency":"XAF","latitude":"6.00000000","longitude":"12.00000000","timezones":[{"zoneName":"Africa/Douala","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Canada","isoCode":"CA","flag":"🇨🇦","phonecode":"1","currency":"CAD","latitude":"60.00000000","longitude":"-95.00000000","timezones":[{"zoneName":"America/Atikokan","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America)"},{"zoneName":"America/Blanc-Sablon","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"},{"zoneName":"America/Cambridge_Bay","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Creston","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Dawson","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Dawson_Creek","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Edmonton","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Fort_Nelson","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America)"},{"zoneName":"America/Glace_Bay","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"},{"zoneName":"America/Goose_Bay","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"},{"zoneName":"America/Halifax","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"},{"zoneName":"America/Inuvik","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Iqaluit","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Moncton","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"},{"zoneName":"America/Nipigon","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Pangnirtung","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Rainy_River","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Rankin_Inlet","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Regina","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Resolute","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/St_Johns","gmtOffset":-12600,"gmtOffsetName":"UTC-03:30","abbreviation":"NST","tzName":"Newfoundland Standard Time"},{"zoneName":"America/Swift_Current","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Thunder_Bay","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Toronto","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Vancouver","gmtOffset":-28800,"gmtOffsetName":"UTC-08:00","abbreviation":"PST","tzName":"Pacific Standard Time (North America"},{"zoneName":"America/Whitehorse","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Winnipeg","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Yellowknife","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"}]},{"name":"Cape Verde","isoCode":"CV","flag":"🇨🇻","phonecode":"238","currency":"CVE","latitude":"16.00000000","longitude":"-24.00000000","timezones":[{"zoneName":"Atlantic/Cape_Verde","gmtOffset":-3600,"gmtOffsetName":"UTC-01:00","abbreviation":"CVT","tzName":"Cape Verde Time"}]},{"name":"Cayman Islands","isoCode":"KY","flag":"🇰🇾","phonecode":"+1-345","currency":"KYD","latitude":"19.50000000","longitude":"-80.50000000","timezones":[{"zoneName":"America/Cayman","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"}]},{"name":"Central African Republic","isoCode":"CF","flag":"🇨🇫","phonecode":"236","currency":"XAF","latitude":"7.00000000","longitude":"21.00000000","timezones":[{"zoneName":"Africa/Bangui","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Chad","isoCode":"TD","flag":"🇹🇩","phonecode":"235","currency":"XAF","latitude":"15.00000000","longitude":"19.00000000","timezones":[{"zoneName":"Africa/Ndjamena","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Chile","isoCode":"CL","flag":"🇨🇱","phonecode":"56","currency":"CLP","latitude":"-30.00000000","longitude":"-71.00000000","timezones":[{"zoneName":"America/Punta_Arenas","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"CLST","tzName":"Chile Summer Time"},{"zoneName":"America/Santiago","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"CLST","tzName":"Chile Summer Time"},{"zoneName":"Pacific/Easter","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EASST","tzName":"Easter Island Summer Time"}]},{"name":"China","isoCode":"CN","flag":"🇨🇳","phonecode":"86","currency":"CNY","latitude":"35.00000000","longitude":"105.00000000","timezones":[{"zoneName":"Asia/Shanghai","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"CST","tzName":"China Standard Time"},{"zoneName":"Asia/Urumqi","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"XJT","tzName":"China Standard Time"}]},{"name":"Christmas Island","isoCode":"CX","flag":"🇨🇽","phonecode":"61","currency":"AUD","latitude":"-10.50000000","longitude":"105.66666666","timezones":[{"zoneName":"Indian/Christmas","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"CXT","tzName":"Christmas Island Time"}]},{"name":"Cocos (Keeling) Islands","isoCode":"CC","flag":"🇨🇨","phonecode":"61","currency":"AUD","latitude":"-12.50000000","longitude":"96.83333333","timezones":[{"zoneName":"Indian/Cocos","gmtOffset":23400,"gmtOffsetName":"UTC+06:30","abbreviation":"CCT","tzName":"Cocos Islands Time"}]},{"name":"Colombia","isoCode":"CO","flag":"🇨🇴","phonecode":"57","currency":"COP","latitude":"4.00000000","longitude":"-72.00000000","timezones":[{"zoneName":"America/Bogota","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"COT","tzName":"Colombia Time"}]},{"name":"Comoros","isoCode":"KM","flag":"🇰🇲","phonecode":"269","currency":"KMF","latitude":"-12.16666666","longitude":"44.25000000","timezones":[{"zoneName":"Indian/Comoro","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Congo","isoCode":"CG","flag":"🇨🇬","phonecode":"242","currency":"XAF","latitude":"-1.00000000","longitude":"15.00000000","timezones":[{"zoneName":"Africa/Brazzaville","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Democratic Republic of the Congo","isoCode":"CD","flag":"🇨🇩","phonecode":"243","currency":"CDF","latitude":"0.00000000","longitude":"25.00000000","timezones":[{"zoneName":"Africa/Kinshasa","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"},{"zoneName":"Africa/Lubumbashi","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Cook Islands","isoCode":"CK","flag":"🇨🇰","phonecode":"682","currency":"NZD","latitude":"-21.23333333","longitude":"-159.76666666","timezones":[{"zoneName":"Pacific/Rarotonga","gmtOffset":-36000,"gmtOffsetName":"UTC-10:00","abbreviation":"CKT","tzName":"Cook Island Time"}]},{"name":"Costa Rica","isoCode":"CR","flag":"🇨🇷","phonecode":"506","currency":"CRC","latitude":"10.00000000","longitude":"-84.00000000","timezones":[{"zoneName":"America/Costa_Rica","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"}]},{"name":"Cote D\'Ivoire (Ivory Coast)","isoCode":"CI","flag":"🇨🇮","phonecode":"225","currency":"XOF","latitude":"8.00000000","longitude":"-5.00000000","timezones":[{"zoneName":"Africa/Abidjan","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Croatia","isoCode":"HR","flag":"🇭🇷","phonecode":"385","currency":"HRK","latitude":"45.16666666","longitude":"15.50000000","timezones":[{"zoneName":"Europe/Zagreb","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Cuba","isoCode":"CU","flag":"🇨🇺","phonecode":"53","currency":"CUP","latitude":"21.50000000","longitude":"-80.00000000","timezones":[{"zoneName":"America/Havana","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"CST","tzName":"Cuba Standard Time"}]},{"name":"Cyprus","isoCode":"CY","flag":"🇨🇾","phonecode":"357","currency":"EUR","latitude":"35.00000000","longitude":"33.00000000","timezones":[{"zoneName":"Asia/Famagusta","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"},{"zoneName":"Asia/Nicosia","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Czech Republic","isoCode":"CZ","flag":"🇨🇿","phonecode":"420","currency":"CZK","latitude":"49.75000000","longitude":"15.50000000","timezones":[{"zoneName":"Europe/Prague","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Denmark","isoCode":"DK","flag":"🇩🇰","phonecode":"45","currency":"DKK","latitude":"56.00000000","longitude":"10.00000000","timezones":[{"zoneName":"Europe/Copenhagen","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Djibouti","isoCode":"DJ","flag":"🇩🇯","phonecode":"253","currency":"DJF","latitude":"11.50000000","longitude":"43.00000000","timezones":[{"zoneName":"Africa/Djibouti","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Dominica","isoCode":"DM","flag":"🇩🇲","phonecode":"+1-767","currency":"XCD","latitude":"15.41666666","longitude":"-61.33333333","timezones":[{"zoneName":"America/Dominica","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Dominican Republic","isoCode":"DO","flag":"🇩🇴","phonecode":"+1-809 and 1-829","currency":"DOP","latitude":"19.00000000","longitude":"-70.66666666","timezones":[{"zoneName":"America/Santo_Domingo","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"East Timor","isoCode":"TL","flag":"🇹🇱","phonecode":"670","currency":"USD","latitude":"-8.83333333","longitude":"125.91666666","timezones":[{"zoneName":"Asia/Dili","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"TLT","tzName":"Timor Leste Time"}]},{"name":"Ecuador","isoCode":"EC","flag":"🇪🇨","phonecode":"593","currency":"USD","latitude":"-2.00000000","longitude":"-77.50000000","timezones":[{"zoneName":"America/Guayaquil","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"ECT","tzName":"Ecuador Time"},{"zoneName":"Pacific/Galapagos","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"GALT","tzName":"Galápagos Time"}]},{"name":"Egypt","isoCode":"EG","flag":"🇪🇬","phonecode":"20","currency":"EGP","latitude":"27.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Cairo","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"El Salvador","isoCode":"SV","flag":"🇸🇻","phonecode":"503","currency":"USD","latitude":"13.83333333","longitude":"-88.91666666","timezones":[{"zoneName":"America/El_Salvador","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"}]},{"name":"Equatorial Guinea","isoCode":"GQ","flag":"🇬🇶","phonecode":"240","currency":"XAF","latitude":"2.00000000","longitude":"10.00000000","timezones":[{"zoneName":"Africa/Malabo","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Eritrea","isoCode":"ER","flag":"🇪🇷","phonecode":"291","currency":"ERN","latitude":"15.00000000","longitude":"39.00000000","timezones":[{"zoneName":"Africa/Asmara","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Estonia","isoCode":"EE","flag":"🇪🇪","phonecode":"372","currency":"EUR","latitude":"59.00000000","longitude":"26.00000000","timezones":[{"zoneName":"Europe/Tallinn","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Ethiopia","isoCode":"ET","flag":"🇪🇹","phonecode":"251","currency":"ETB","latitude":"8.00000000","longitude":"38.00000000","timezones":[{"zoneName":"Africa/Addis_Ababa","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Falkland Islands","isoCode":"FK","flag":"🇫🇰","phonecode":"500","currency":"FKP","latitude":"-51.75000000","longitude":"-59.00000000","timezones":[{"zoneName":"Atlantic/Stanley","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"FKST","tzName":"Falkland Islands Summer Time"}]},{"name":"Faroe Islands","isoCode":"FO","flag":"🇫🇴","phonecode":"298","currency":"DKK","latitude":"62.00000000","longitude":"-7.00000000","timezones":[{"zoneName":"Atlantic/Faroe","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"WET","tzName":"Western European Time"}]},{"name":"Fiji Islands","isoCode":"FJ","flag":"🇫🇯","phonecode":"679","currency":"FJD","latitude":"-18.00000000","longitude":"175.00000000","timezones":[{"zoneName":"Pacific/Fiji","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"FJT","tzName":"Fiji Time"}]},{"name":"Finland","isoCode":"FI","flag":"🇫🇮","phonecode":"358","currency":"EUR","latitude":"64.00000000","longitude":"26.00000000","timezones":[{"zoneName":"Europe/Helsinki","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"France","isoCode":"FR","flag":"🇫🇷","phonecode":"33","currency":"EUR","latitude":"46.00000000","longitude":"2.00000000","timezones":[{"zoneName":"Europe/Paris","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"French Guiana","isoCode":"GF","flag":"🇬🇫","phonecode":"594","currency":"EUR","latitude":"4.00000000","longitude":"-53.00000000","timezones":[{"zoneName":"America/Cayenne","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"GFT","tzName":"French Guiana Time"}]},{"name":"French Polynesia","isoCode":"PF","flag":"🇵🇫","phonecode":"689","currency":"XPF","latitude":"-15.00000000","longitude":"-140.00000000","timezones":[{"zoneName":"Pacific/Gambier","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"GAMT","tzName":"Gambier Islands Time"},{"zoneName":"Pacific/Marquesas","gmtOffset":-34200,"gmtOffsetName":"UTC-09:30","abbreviation":"MART","tzName":"Marquesas Islands Time"},{"zoneName":"Pacific/Tahiti","gmtOffset":-36000,"gmtOffsetName":"UTC-10:00","abbreviation":"TAHT","tzName":"Tahiti Time"}]},{"name":"French Southern Territories","isoCode":"TF","flag":"🇹🇫","phonecode":"262","currency":"EUR","latitude":"-49.25000000","longitude":"69.16700000","timezones":[{"zoneName":"Indian/Kerguelen","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"TFT","tzName":"French Southern and Antarctic Time"}]},{"name":"Gabon","isoCode":"GA","flag":"🇬🇦","phonecode":"241","currency":"XAF","latitude":"-1.00000000","longitude":"11.75000000","timezones":[{"zoneName":"Africa/Libreville","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"The Gambia","isoCode":"GM","flag":"🇬🇲","phonecode":"220","currency":"GMD","latitude":"13.46666666","longitude":"-16.56666666","timezones":[{"zoneName":"Africa/Banjul","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Georgia","isoCode":"GE","flag":"🇬🇪","phonecode":"995","currency":"GEL","latitude":"42.00000000","longitude":"43.50000000","timezones":[{"zoneName":"Asia/Tbilisi","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"GET","tzName":"Georgia Standard Time"}]},{"name":"Germany","isoCode":"DE","flag":"🇩🇪","phonecode":"49","currency":"EUR","latitude":"51.00000000","longitude":"9.00000000","timezones":[{"zoneName":"Europe/Berlin","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"},{"zoneName":"Europe/Busingen","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Ghana","isoCode":"GH","flag":"🇬🇭","phonecode":"233","currency":"GHS","latitude":"8.00000000","longitude":"-2.00000000","timezones":[{"zoneName":"Africa/Accra","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Gibraltar","isoCode":"GI","flag":"🇬🇮","phonecode":"350","currency":"GIP","latitude":"36.13333333","longitude":"-5.35000000","timezones":[{"zoneName":"Europe/Gibraltar","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Greece","isoCode":"GR","flag":"🇬🇷","phonecode":"30","currency":"EUR","latitude":"39.00000000","longitude":"22.00000000","timezones":[{"zoneName":"Europe/Athens","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Greenland","isoCode":"GL","flag":"🇬🇱","phonecode":"299","currency":"DKK","latitude":"72.00000000","longitude":"-40.00000000","timezones":[{"zoneName":"America/Danmarkshavn","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"},{"zoneName":"America/Nuuk","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"WGT","tzName":"West Greenland Time"},{"zoneName":"America/Scoresbysund","gmtOffset":-3600,"gmtOffsetName":"UTC-01:00","abbreviation":"EGT","tzName":"Eastern Greenland Time"},{"zoneName":"America/Thule","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Grenada","isoCode":"GD","flag":"🇬🇩","phonecode":"+1-473","currency":"XCD","latitude":"12.11666666","longitude":"-61.66666666","timezones":[{"zoneName":"America/Grenada","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Guadeloupe","isoCode":"GP","flag":"🇬🇵","phonecode":"590","currency":"EUR","latitude":"16.25000000","longitude":"-61.58333300","timezones":[{"zoneName":"America/Guadeloupe","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Guam","isoCode":"GU","flag":"🇬🇺","phonecode":"+1-671","currency":"USD","latitude":"13.46666666","longitude":"144.78333333","timezones":[{"zoneName":"Pacific/Guam","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"CHST","tzName":"Chamorro Standard Time"}]},{"name":"Guatemala","isoCode":"GT","flag":"🇬🇹","phonecode":"502","currency":"GTQ","latitude":"15.50000000","longitude":"-90.25000000","timezones":[{"zoneName":"America/Guatemala","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"}]},{"name":"Guernsey and Alderney","isoCode":"GG","flag":"🇬🇬","phonecode":"+44-1481","currency":"GBP","latitude":"49.46666666","longitude":"-2.58333333","timezones":[{"zoneName":"Europe/Guernsey","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Guinea","isoCode":"GN","flag":"🇬🇳","phonecode":"224","currency":"GNF","latitude":"11.00000000","longitude":"-10.00000000","timezones":[{"zoneName":"Africa/Conakry","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Guinea-Bissau","isoCode":"GW","flag":"🇬🇼","phonecode":"245","currency":"XOF","latitude":"12.00000000","longitude":"-15.00000000","timezones":[{"zoneName":"Africa/Bissau","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Guyana","isoCode":"GY","flag":"🇬🇾","phonecode":"592","currency":"GYD","latitude":"5.00000000","longitude":"-59.00000000","timezones":[{"zoneName":"America/Guyana","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"GYT","tzName":"Guyana Time"}]},{"name":"Haiti","isoCode":"HT","flag":"🇭🇹","phonecode":"509","currency":"HTG","latitude":"19.00000000","longitude":"-72.41666666","timezones":[{"zoneName":"America/Port-au-Prince","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"}]},{"name":"Heard Island and McDonald Islands","isoCode":"HM","flag":"🇭🇲","phonecode":"672","currency":"AUD","latitude":"-53.10000000","longitude":"72.51666666","timezones":[{"zoneName":"Indian/Kerguelen","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"TFT","tzName":"French Southern and Antarctic Time"}]},{"name":"Honduras","isoCode":"HN","flag":"🇭🇳","phonecode":"504","currency":"HNL","latitude":"15.00000000","longitude":"-86.50000000","timezones":[{"zoneName":"America/Tegucigalpa","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"}]},{"name":"Hong Kong S.A.R.","isoCode":"HK","flag":"🇭🇰","phonecode":"852","currency":"HKD","latitude":"22.25000000","longitude":"114.16666666","timezones":[{"zoneName":"Asia/Hong_Kong","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"HKT","tzName":"Hong Kong Time"}]},{"name":"Hungary","isoCode":"HU","flag":"🇭🇺","phonecode":"36","currency":"HUF","latitude":"47.00000000","longitude":"20.00000000","timezones":[{"zoneName":"Europe/Budapest","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Iceland","isoCode":"IS","flag":"🇮🇸","phonecode":"354","currency":"ISK","latitude":"65.00000000","longitude":"-18.00000000","timezones":[{"zoneName":"Atlantic/Reykjavik","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"India","isoCode":"IN","flag":"🇮🇳","phonecode":"91","currency":"INR","latitude":"20.00000000","longitude":"77.00000000","timezones":[{"zoneName":"Asia/Kolkata","gmtOffset":19800,"gmtOffsetName":"UTC+05:30","abbreviation":"IST","tzName":"Indian Standard Time"}]},{"name":"Indonesia","isoCode":"ID","flag":"🇮🇩","phonecode":"62","currency":"IDR","latitude":"-5.00000000","longitude":"120.00000000","timezones":[{"zoneName":"Asia/Jakarta","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"WIB","tzName":"Western Indonesian Time"},{"zoneName":"Asia/Jayapura","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"WIT","tzName":"Eastern Indonesian Time"},{"zoneName":"Asia/Makassar","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"WITA","tzName":"Central Indonesia Time"},{"zoneName":"Asia/Pontianak","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"WIB","tzName":"Western Indonesian Time"}]},{"name":"Iran","isoCode":"IR","flag":"🇮🇷","phonecode":"98","currency":"IRR","latitude":"32.00000000","longitude":"53.00000000","timezones":[{"zoneName":"Asia/Tehran","gmtOffset":12600,"gmtOffsetName":"UTC+03:30","abbreviation":"IRDT","tzName":"Iran Daylight Time"}]},{"name":"Iraq","isoCode":"IQ","flag":"🇮🇶","phonecode":"964","currency":"IQD","latitude":"33.00000000","longitude":"44.00000000","timezones":[{"zoneName":"Asia/Baghdad","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Ireland","isoCode":"IE","flag":"🇮🇪","phonecode":"353","currency":"EUR","latitude":"53.00000000","longitude":"-8.00000000","timezones":[{"zoneName":"Europe/Dublin","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Israel","isoCode":"IL","flag":"🇮🇱","phonecode":"972","currency":"ILS","latitude":"31.50000000","longitude":"34.75000000","timezones":[{"zoneName":"Asia/Jerusalem","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"IST","tzName":"Israel Standard Time"}]},{"name":"Italy","isoCode":"IT","flag":"🇮🇹","phonecode":"39","currency":"EUR","latitude":"42.83333333","longitude":"12.83333333","timezones":[{"zoneName":"Europe/Rome","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Jamaica","isoCode":"JM","flag":"🇯🇲","phonecode":"+1-876","currency":"JMD","latitude":"18.25000000","longitude":"-77.50000000","timezones":[{"zoneName":"America/Jamaica","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"}]},{"name":"Japan","isoCode":"JP","flag":"🇯🇵","phonecode":"81","currency":"JPY","latitude":"36.00000000","longitude":"138.00000000","timezones":[{"zoneName":"Asia/Tokyo","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"JST","tzName":"Japan Standard Time"}]},{"name":"Jersey","isoCode":"JE","flag":"🇯🇪","phonecode":"+44-1534","currency":"GBP","latitude":"49.25000000","longitude":"-2.16666666","timezones":[{"zoneName":"Europe/Jersey","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Jordan","isoCode":"JO","flag":"🇯🇴","phonecode":"962","currency":"JOD","latitude":"31.00000000","longitude":"36.00000000","timezones":[{"zoneName":"Asia/Amman","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Kazakhstan","isoCode":"KZ","flag":"🇰🇿","phonecode":"7","currency":"KZT","latitude":"48.00000000","longitude":"68.00000000","timezones":[{"zoneName":"Asia/Almaty","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"ALMT","tzName":"Alma-Ata Time[1"},{"zoneName":"Asia/Aqtau","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"AQTT","tzName":"Aqtobe Time"},{"zoneName":"Asia/Aqtobe","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"AQTT","tzName":"Aqtobe Time"},{"zoneName":"Asia/Atyrau","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"MSD+1","tzName":"Moscow Daylight Time+1"},{"zoneName":"Asia/Oral","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"ORAT","tzName":"Oral Time"},{"zoneName":"Asia/Qostanay","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"QYZST","tzName":"Qyzylorda Summer Time"},{"zoneName":"Asia/Qyzylorda","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"QYZT","tzName":"Qyzylorda Summer Time"}]},{"name":"Kenya","isoCode":"KE","flag":"🇰🇪","phonecode":"254","currency":"KES","latitude":"1.00000000","longitude":"38.00000000","timezones":[{"zoneName":"Africa/Nairobi","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Kiribati","isoCode":"KI","flag":"🇰🇮","phonecode":"686","currency":"AUD","latitude":"1.41666666","longitude":"173.00000000","timezones":[{"zoneName":"Pacific/Enderbury","gmtOffset":46800,"gmtOffsetName":"UTC+13:00","abbreviation":"PHOT","tzName":"Phoenix Island Time"},{"zoneName":"Pacific/Kiritimati","gmtOffset":50400,"gmtOffsetName":"UTC+14:00","abbreviation":"LINT","tzName":"Line Islands Time"},{"zoneName":"Pacific/Tarawa","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"GILT","tzName":"Gilbert Island Time"}]},{"name":"North Korea","isoCode":"KP","flag":"🇰🇵","phonecode":"850","currency":"KPW","latitude":"40.00000000","longitude":"127.00000000","timezones":[{"zoneName":"Asia/Pyongyang","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"KST","tzName":"Korea Standard Time"}]},{"name":"South Korea","isoCode":"KR","flag":"🇰🇷","phonecode":"82","currency":"KRW","latitude":"37.00000000","longitude":"127.50000000","timezones":[{"zoneName":"Asia/Seoul","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"KST","tzName":"Korea Standard Time"}]},{"name":"Kuwait","isoCode":"KW","flag":"🇰🇼","phonecode":"965","currency":"KWD","latitude":"29.50000000","longitude":"45.75000000","timezones":[{"zoneName":"Asia/Kuwait","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Kyrgyzstan","isoCode":"KG","flag":"🇰🇬","phonecode":"996","currency":"KGS","latitude":"41.00000000","longitude":"75.00000000","timezones":[{"zoneName":"Asia/Bishkek","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"KGT","tzName":"Kyrgyzstan Time"}]},{"name":"Laos","isoCode":"LA","flag":"🇱🇦","phonecode":"856","currency":"LAK","latitude":"18.00000000","longitude":"105.00000000","timezones":[{"zoneName":"Asia/Vientiane","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"ICT","tzName":"Indochina Time"}]},{"name":"Latvia","isoCode":"LV","flag":"🇱🇻","phonecode":"371","currency":"EUR","latitude":"57.00000000","longitude":"25.00000000","timezones":[{"zoneName":"Europe/Riga","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Lebanon","isoCode":"LB","flag":"🇱🇧","phonecode":"961","currency":"LBP","latitude":"33.83333333","longitude":"35.83333333","timezones":[{"zoneName":"Asia/Beirut","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Lesotho","isoCode":"LS","flag":"🇱🇸","phonecode":"266","currency":"LSL","latitude":"-29.50000000","longitude":"28.50000000","timezones":[{"zoneName":"Africa/Maseru","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"SAST","tzName":"South African Standard Time"}]},{"name":"Liberia","isoCode":"LR","flag":"🇱🇷","phonecode":"231","currency":"LRD","latitude":"6.50000000","longitude":"-9.50000000","timezones":[{"zoneName":"Africa/Monrovia","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Libya","isoCode":"LY","flag":"🇱🇾","phonecode":"218","currency":"LYD","latitude":"25.00000000","longitude":"17.00000000","timezones":[{"zoneName":"Africa/Tripoli","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Liechtenstein","isoCode":"LI","flag":"🇱🇮","phonecode":"423","currency":"CHF","latitude":"47.26666666","longitude":"9.53333333","timezones":[{"zoneName":"Europe/Vaduz","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Lithuania","isoCode":"LT","flag":"🇱🇹","phonecode":"370","currency":"EUR","latitude":"56.00000000","longitude":"24.00000000","timezones":[{"zoneName":"Europe/Vilnius","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Luxembourg","isoCode":"LU","flag":"🇱🇺","phonecode":"352","currency":"EUR","latitude":"49.75000000","longitude":"6.16666666","timezones":[{"zoneName":"Europe/Luxembourg","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Macau S.A.R.","isoCode":"MO","flag":"🇲🇴","phonecode":"853","currency":"MOP","latitude":"22.16666666","longitude":"113.55000000","timezones":[{"zoneName":"Asia/Macau","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"CST","tzName":"China Standard Time"}]},{"name":"Macedonia","isoCode":"MK","flag":"🇲🇰","phonecode":"389","currency":"MKD","latitude":"41.83333333","longitude":"22.00000000","timezones":[{"zoneName":"Europe/Skopje","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Madagascar","isoCode":"MG","flag":"🇲🇬","phonecode":"261","currency":"MGA","latitude":"-20.00000000","longitude":"47.00000000","timezones":[{"zoneName":"Indian/Antananarivo","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Malawi","isoCode":"MW","flag":"🇲🇼","phonecode":"265","currency":"MWK","latitude":"-13.50000000","longitude":"34.00000000","timezones":[{"zoneName":"Africa/Blantyre","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Malaysia","isoCode":"MY","flag":"🇲🇾","phonecode":"60","currency":"MYR","latitude":"2.50000000","longitude":"112.50000000","timezones":[{"zoneName":"Asia/Kuala_Lumpur","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"MYT","tzName":"Malaysia Time"},{"zoneName":"Asia/Kuching","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"MYT","tzName":"Malaysia Time"}]},{"name":"Maldives","isoCode":"MV","flag":"🇲🇻","phonecode":"960","currency":"MVR","latitude":"3.25000000","longitude":"73.00000000","timezones":[{"zoneName":"Indian/Maldives","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"MVT","tzName":"Maldives Time"}]},{"name":"Mali","isoCode":"ML","flag":"🇲🇱","phonecode":"223","currency":"XOF","latitude":"17.00000000","longitude":"-4.00000000","timezones":[{"zoneName":"Africa/Bamako","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Malta","isoCode":"MT","flag":"🇲🇹","phonecode":"356","currency":"EUR","latitude":"35.83333333","longitude":"14.58333333","timezones":[{"zoneName":"Europe/Malta","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Man (Isle of)","isoCode":"IM","flag":"🇮🇲","phonecode":"+44-1624","currency":"GBP","latitude":"54.25000000","longitude":"-4.50000000","timezones":[{"zoneName":"Europe/Isle_of_Man","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Marshall Islands","isoCode":"MH","flag":"🇲🇭","phonecode":"692","currency":"USD","latitude":"9.00000000","longitude":"168.00000000","timezones":[{"zoneName":"Pacific/Kwajalein","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"MHT","tzName":"Marshall Islands Time"},{"zoneName":"Pacific/Majuro","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"MHT","tzName":"Marshall Islands Time"}]},{"name":"Martinique","isoCode":"MQ","flag":"🇲🇶","phonecode":"596","currency":"EUR","latitude":"14.66666700","longitude":"-61.00000000","timezones":[{"zoneName":"America/Martinique","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Mauritania","isoCode":"MR","flag":"🇲🇷","phonecode":"222","currency":"MRO","latitude":"20.00000000","longitude":"-12.00000000","timezones":[{"zoneName":"Africa/Nouakchott","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Mauritius","isoCode":"MU","flag":"🇲🇺","phonecode":"230","currency":"MUR","latitude":"-20.28333333","longitude":"57.55000000","timezones":[{"zoneName":"Indian/Mauritius","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"MUT","tzName":"Mauritius Time"}]},{"name":"Mayotte","isoCode":"YT","flag":"🇾🇹","phonecode":"262","currency":"EUR","latitude":"-12.83333333","longitude":"45.16666666","timezones":[{"zoneName":"Indian/Mayotte","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Mexico","isoCode":"MX","flag":"🇲🇽","phonecode":"52","currency":"MXN","latitude":"23.00000000","longitude":"-102.00000000","timezones":[{"zoneName":"America/Bahia_Banderas","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Cancun","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Chihuahua","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Hermosillo","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Matamoros","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Mazatlan","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Merida","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Mexico_City","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Monterrey","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Ojinaga","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Tijuana","gmtOffset":-28800,"gmtOffsetName":"UTC-08:00","abbreviation":"PST","tzName":"Pacific Standard Time (North America"}]},{"name":"Micronesia","isoCode":"FM","flag":"🇫🇲","phonecode":"691","currency":"USD","latitude":"6.91666666","longitude":"158.25000000","timezones":[{"zoneName":"Pacific/Chuuk","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"CHUT","tzName":"Chuuk Time"},{"zoneName":"Pacific/Kosrae","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"KOST","tzName":"Kosrae Time"},{"zoneName":"Pacific/Pohnpei","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"PONT","tzName":"Pohnpei Standard Time"}]},{"name":"Moldova","isoCode":"MD","flag":"🇲🇩","phonecode":"373","currency":"MDL","latitude":"47.00000000","longitude":"29.00000000","timezones":[{"zoneName":"Europe/Chisinau","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Monaco","isoCode":"MC","flag":"🇲🇨","phonecode":"377","currency":"EUR","latitude":"43.73333333","longitude":"7.40000000","timezones":[{"zoneName":"Europe/Monaco","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Mongolia","isoCode":"MN","flag":"🇲🇳","phonecode":"976","currency":"MNT","latitude":"46.00000000","longitude":"105.00000000","timezones":[{"zoneName":"Asia/Choibalsan","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"CHOT","tzName":"Choibalsan Standard Time"},{"zoneName":"Asia/Hovd","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"HOVT","tzName":"Hovd Time"},{"zoneName":"Asia/Ulaanbaatar","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"ULAT","tzName":"Ulaanbaatar Standard Time"}]},{"name":"Montenegro","isoCode":"ME","flag":"🇲🇪","phonecode":"382","currency":"EUR","latitude":"42.50000000","longitude":"19.30000000","timezones":[{"zoneName":"Europe/Podgorica","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Montserrat","isoCode":"MS","flag":"🇲🇸","phonecode":"+1-664","currency":"XCD","latitude":"16.75000000","longitude":"-62.20000000","timezones":[{"zoneName":"America/Montserrat","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Morocco","isoCode":"MA","flag":"🇲🇦","phonecode":"212","currency":"MAD","latitude":"32.00000000","longitude":"-5.00000000","timezones":[{"zoneName":"Africa/Casablanca","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WEST","tzName":"Western European Summer Time"}]},{"name":"Mozambique","isoCode":"MZ","flag":"🇲🇿","phonecode":"258","currency":"MZN","latitude":"-18.25000000","longitude":"35.00000000","timezones":[{"zoneName":"Africa/Maputo","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Myanmar","isoCode":"MM","flag":"🇲🇲","phonecode":"95","currency":"MMK","latitude":"22.00000000","longitude":"98.00000000","timezones":[{"zoneName":"Asia/Yangon","gmtOffset":23400,"gmtOffsetName":"UTC+06:30","abbreviation":"MMT","tzName":"Myanmar Standard Time"}]},{"name":"Namibia","isoCode":"NA","flag":"🇳🇦","phonecode":"264","currency":"NAD","latitude":"-22.00000000","longitude":"17.00000000","timezones":[{"zoneName":"Africa/Windhoek","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"WAST","tzName":"West Africa Summer Time"}]},{"name":"Nauru","isoCode":"NR","flag":"🇳🇷","phonecode":"674","currency":"AUD","latitude":"-0.53333333","longitude":"166.91666666","timezones":[{"zoneName":"Pacific/Nauru","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"NRT","tzName":"Nauru Time"}]},{"name":"Nepal","isoCode":"NP","flag":"🇳🇵","phonecode":"977","currency":"NPR","latitude":"28.00000000","longitude":"84.00000000","timezones":[{"zoneName":"Asia/Kathmandu","gmtOffset":20700,"gmtOffsetName":"UTC+05:45","abbreviation":"NPT","tzName":"Nepal Time"}]},{"name":"Bonaire, Sint Eustatius and Saba","isoCode":"BQ","flag":"🇧🇶","phonecode":"599","currency":"USD","latitude":"12.15000000","longitude":"-68.26666700","timezones":[{"zoneName":"America/Anguilla","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Netherlands","isoCode":"NL","flag":"🇳🇱","phonecode":"31","currency":"EUR","latitude":"52.50000000","longitude":"5.75000000","timezones":[{"zoneName":"Europe/Amsterdam","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"New Caledonia","isoCode":"NC","flag":"🇳🇨","phonecode":"687","currency":"XPF","latitude":"-21.50000000","longitude":"165.50000000","timezones":[{"zoneName":"Pacific/Noumea","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"NCT","tzName":"New Caledonia Time"}]},{"name":"New Zealand","isoCode":"NZ","flag":"🇳🇿","phonecode":"64","currency":"NZD","latitude":"-41.00000000","longitude":"174.00000000","timezones":[{"zoneName":"Pacific/Auckland","gmtOffset":46800,"gmtOffsetName":"UTC+13:00","abbreviation":"NZDT","tzName":"New Zealand Daylight Time"},{"zoneName":"Pacific/Chatham","gmtOffset":49500,"gmtOffsetName":"UTC+13:45","abbreviation":"CHAST","tzName":"Chatham Standard Time"}]},{"name":"Nicaragua","isoCode":"NI","flag":"🇳🇮","phonecode":"505","currency":"NIO","latitude":"13.00000000","longitude":"-85.00000000","timezones":[{"zoneName":"America/Managua","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"}]},{"name":"Niger","isoCode":"NE","flag":"🇳🇪","phonecode":"227","currency":"XOF","latitude":"16.00000000","longitude":"8.00000000","timezones":[{"zoneName":"Africa/Niamey","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Nigeria","isoCode":"NG","flag":"🇳🇬","phonecode":"234","currency":"NGN","latitude":"10.00000000","longitude":"8.00000000","timezones":[{"zoneName":"Africa/Lagos","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WAT","tzName":"West Africa Time"}]},{"name":"Niue","isoCode":"NU","flag":"🇳🇺","phonecode":"683","currency":"NZD","latitude":"-19.03333333","longitude":"-169.86666666","timezones":[{"zoneName":"Pacific/Niue","gmtOffset":-39600,"gmtOffsetName":"UTC-11:00","abbreviation":"NUT","tzName":"Niue Time"}]},{"name":"Norfolk Island","isoCode":"NF","flag":"🇳🇫","phonecode":"672","currency":"AUD","latitude":"-29.03333333","longitude":"167.95000000","timezones":[{"zoneName":"Pacific/Norfolk","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"NFT","tzName":"Norfolk Time"}]},{"name":"Northern Mariana Islands","isoCode":"MP","flag":"🇲🇵","phonecode":"+1-670","currency":"USD","latitude":"15.20000000","longitude":"145.75000000","timezones":[{"zoneName":"Pacific/Saipan","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"ChST","tzName":"Chamorro Standard Time"}]},{"name":"Norway","isoCode":"NO","flag":"🇳🇴","phonecode":"47","currency":"NOK","latitude":"62.00000000","longitude":"10.00000000","timezones":[{"zoneName":"Europe/Oslo","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Oman","isoCode":"OM","flag":"🇴🇲","phonecode":"968","currency":"OMR","latitude":"21.00000000","longitude":"57.00000000","timezones":[{"zoneName":"Asia/Muscat","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"GST","tzName":"Gulf Standard Time"}]},{"name":"Pakistan","isoCode":"PK","flag":"🇵🇰","phonecode":"92","currency":"PKR","latitude":"30.00000000","longitude":"70.00000000","timezones":[{"zoneName":"Asia/Karachi","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"PKT","tzName":"Pakistan Standard Time"}]},{"name":"Palau","isoCode":"PW","flag":"🇵🇼","phonecode":"680","currency":"USD","latitude":"7.50000000","longitude":"134.50000000","timezones":[{"zoneName":"Pacific/Palau","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"PWT","tzName":"Palau Time"}]},{"name":"Palestinian Territory Occupied","isoCode":"PS","flag":"🇵🇸","phonecode":"970","currency":"ILS","latitude":"31.90000000","longitude":"35.20000000","timezones":[{"zoneName":"Asia/Gaza","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"},{"zoneName":"Asia/Hebron","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Panama","isoCode":"PA","flag":"🇵🇦","phonecode":"507","currency":"PAB","latitude":"9.00000000","longitude":"-80.00000000","timezones":[{"zoneName":"America/Panama","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"}]},{"name":"Papua new Guinea","isoCode":"PG","flag":"🇵🇬","phonecode":"675","currency":"PGK","latitude":"-6.00000000","longitude":"147.00000000","timezones":[{"zoneName":"Pacific/Bougainville","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"BST","tzName":"Bougainville Standard Time[6"},{"zoneName":"Pacific/Port_Moresby","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"PGT","tzName":"Papua New Guinea Time"}]},{"name":"Paraguay","isoCode":"PY","flag":"🇵🇾","phonecode":"595","currency":"PYG","latitude":"-23.00000000","longitude":"-58.00000000","timezones":[{"zoneName":"America/Asuncion","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"PYST","tzName":"Paraguay Summer Time"}]},{"name":"Peru","isoCode":"PE","flag":"🇵🇪","phonecode":"51","currency":"PEN","latitude":"-10.00000000","longitude":"-76.00000000","timezones":[{"zoneName":"America/Lima","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"PET","tzName":"Peru Time"}]},{"name":"Philippines","isoCode":"PH","flag":"🇵🇭","phonecode":"63","currency":"PHP","latitude":"13.00000000","longitude":"122.00000000","timezones":[{"zoneName":"Asia/Manila","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"PHT","tzName":"Philippine Time"}]},{"name":"Pitcairn Island","isoCode":"PN","flag":"🇵🇳","phonecode":"870","currency":"NZD","latitude":"-25.06666666","longitude":"-130.10000000","timezones":[{"zoneName":"Pacific/Pitcairn","gmtOffset":-28800,"gmtOffsetName":"UTC-08:00","abbreviation":"PST","tzName":"Pacific Standard Time (North America"}]},{"name":"Poland","isoCode":"PL","flag":"🇵🇱","phonecode":"48","currency":"PLN","latitude":"52.00000000","longitude":"20.00000000","timezones":[{"zoneName":"Europe/Warsaw","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Portugal","isoCode":"PT","flag":"🇵🇹","phonecode":"351","currency":"EUR","latitude":"39.50000000","longitude":"-8.00000000","timezones":[{"zoneName":"Atlantic/Azores","gmtOffset":-3600,"gmtOffsetName":"UTC-01:00","abbreviation":"AZOT","tzName":"Azores Standard Time"},{"zoneName":"Atlantic/Madeira","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"WET","tzName":"Western European Time"},{"zoneName":"Europe/Lisbon","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"WET","tzName":"Western European Time"}]},{"name":"Puerto Rico","isoCode":"PR","flag":"🇵🇷","phonecode":"+1-787 and 1-939","currency":"USD","latitude":"18.25000000","longitude":"-66.50000000","timezones":[{"zoneName":"America/Puerto_Rico","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Qatar","isoCode":"QA","flag":"🇶🇦","phonecode":"974","currency":"QAR","latitude":"25.50000000","longitude":"51.25000000","timezones":[{"zoneName":"Asia/Qatar","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Reunion","isoCode":"RE","flag":"🇷🇪","phonecode":"262","currency":"EUR","latitude":"-21.15000000","longitude":"55.50000000","timezones":[{"zoneName":"Indian/Reunion","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"RET","tzName":"Réunion Time"}]},{"name":"Romania","isoCode":"RO","flag":"🇷🇴","phonecode":"40","currency":"RON","latitude":"46.00000000","longitude":"25.00000000","timezones":[{"zoneName":"Europe/Bucharest","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Russia","isoCode":"RU","flag":"🇷🇺","phonecode":"7","currency":"RUB","latitude":"60.00000000","longitude":"100.00000000","timezones":[{"zoneName":"Asia/Anadyr","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"ANAT","tzName":"Anadyr Time[4"},{"zoneName":"Asia/Barnaul","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"KRAT","tzName":"Krasnoyarsk Time"},{"zoneName":"Asia/Chita","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"YAKT","tzName":"Yakutsk Time"},{"zoneName":"Asia/Irkutsk","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"IRKT","tzName":"Irkutsk Time"},{"zoneName":"Asia/Kamchatka","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"PETT","tzName":"Kamchatka Time"},{"zoneName":"Asia/Khandyga","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"YAKT","tzName":"Yakutsk Time"},{"zoneName":"Asia/Krasnoyarsk","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"KRAT","tzName":"Krasnoyarsk Time"},{"zoneName":"Asia/Magadan","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"MAGT","tzName":"Magadan Time"},{"zoneName":"Asia/Novokuznetsk","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"KRAT","tzName":"Krasnoyarsk Time"},{"zoneName":"Asia/Novosibirsk","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"NOVT","tzName":"Novosibirsk Time"},{"zoneName":"Asia/Omsk","gmtOffset":21600,"gmtOffsetName":"UTC+06:00","abbreviation":"OMST","tzName":"Omsk Time"},{"zoneName":"Asia/Sakhalin","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"SAKT","tzName":"Sakhalin Island Time"},{"zoneName":"Asia/Srednekolymsk","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"SRET","tzName":"Srednekolymsk Time"},{"zoneName":"Asia/Tomsk","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"MSD+3","tzName":"Moscow Daylight Time+3"},{"zoneName":"Asia/Ust-Nera","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"VLAT","tzName":"Vladivostok Time"},{"zoneName":"Asia/Vladivostok","gmtOffset":36000,"gmtOffsetName":"UTC+10:00","abbreviation":"VLAT","tzName":"Vladivostok Time"},{"zoneName":"Asia/Yakutsk","gmtOffset":32400,"gmtOffsetName":"UTC+09:00","abbreviation":"YAKT","tzName":"Yakutsk Time"},{"zoneName":"Asia/Yekaterinburg","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"YEKT","tzName":"Yekaterinburg Time"},{"zoneName":"Europe/Astrakhan","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"SAMT","tzName":"Samara Time"},{"zoneName":"Europe/Kaliningrad","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"},{"zoneName":"Europe/Kirov","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"MSK","tzName":"Moscow Time"},{"zoneName":"Europe/Moscow","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"MSK","tzName":"Moscow Time"},{"zoneName":"Europe/Samara","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"SAMT","tzName":"Samara Time"},{"zoneName":"Europe/Saratov","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"MSD","tzName":"Moscow Daylight Time+4"},{"zoneName":"Europe/Ulyanovsk","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"SAMT","tzName":"Samara Time"},{"zoneName":"Europe/Volgograd","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"MSK","tzName":"Moscow Standard Time"}]},{"name":"Rwanda","isoCode":"RW","flag":"🇷🇼","phonecode":"250","currency":"RWF","latitude":"-2.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Kigali","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Saint Helena","isoCode":"SH","flag":"🇸🇭","phonecode":"290","currency":"SHP","latitude":"-15.95000000","longitude":"-5.70000000","timezones":[{"zoneName":"Atlantic/St_Helena","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Saint Kitts And Nevis","isoCode":"KN","flag":"🇰🇳","phonecode":"+1-869","currency":"XCD","latitude":"17.33333333","longitude":"-62.75000000","timezones":[{"zoneName":"America/St_Kitts","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Saint Lucia","isoCode":"LC","flag":"🇱🇨","phonecode":"+1-758","currency":"XCD","latitude":"13.88333333","longitude":"-60.96666666","timezones":[{"zoneName":"America/St_Lucia","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Saint Pierre and Miquelon","isoCode":"PM","flag":"🇵🇲","phonecode":"508","currency":"EUR","latitude":"46.83333333","longitude":"-56.33333333","timezones":[{"zoneName":"America/Miquelon","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"PMDT","tzName":"Pierre & Miquelon Daylight Time"}]},{"name":"Saint Vincent And The Grenadines","isoCode":"VC","flag":"🇻🇨","phonecode":"+1-784","currency":"XCD","latitude":"13.25000000","longitude":"-61.20000000","timezones":[{"zoneName":"America/St_Vincent","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Saint-Barthelemy","isoCode":"BL","flag":"🇧🇱","phonecode":"590","currency":"EUR","latitude":"18.50000000","longitude":"-63.41666666","timezones":[{"zoneName":"America/St_Barthelemy","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Saint-Martin (French part)","isoCode":"MF","flag":"🇲🇫","phonecode":"590","currency":"EUR","latitude":"18.08333333","longitude":"-63.95000000","timezones":[{"zoneName":"America/Marigot","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Samoa","isoCode":"WS","flag":"🇼🇸","phonecode":"685","currency":"WST","latitude":"-13.58333333","longitude":"-172.33333333","timezones":[{"zoneName":"Pacific/Apia","gmtOffset":50400,"gmtOffsetName":"UTC+14:00","abbreviation":"WST","tzName":"West Samoa Time"}]},{"name":"San Marino","isoCode":"SM","flag":"🇸🇲","phonecode":"378","currency":"EUR","latitude":"43.76666666","longitude":"12.41666666","timezones":[{"zoneName":"Europe/San_Marino","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Sao Tome and Principe","isoCode":"ST","flag":"🇸🇹","phonecode":"239","currency":"STD","latitude":"1.00000000","longitude":"7.00000000","timezones":[{"zoneName":"Africa/Sao_Tome","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Saudi Arabia","isoCode":"SA","flag":"🇸🇦","phonecode":"966","currency":"SAR","latitude":"25.00000000","longitude":"45.00000000","timezones":[{"zoneName":"Asia/Riyadh","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Senegal","isoCode":"SN","flag":"🇸🇳","phonecode":"221","currency":"XOF","latitude":"14.00000000","longitude":"-14.00000000","timezones":[{"zoneName":"Africa/Dakar","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Serbia","isoCode":"RS","flag":"🇷🇸","phonecode":"381","currency":"RSD","latitude":"44.00000000","longitude":"21.00000000","timezones":[{"zoneName":"Europe/Belgrade","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Seychelles","isoCode":"SC","flag":"🇸🇨","phonecode":"248","currency":"SCR","latitude":"-4.58333333","longitude":"55.66666666","timezones":[{"zoneName":"Indian/Mahe","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"SCT","tzName":"Seychelles Time"}]},{"name":"Sierra Leone","isoCode":"SL","flag":"🇸🇱","phonecode":"232","currency":"SLL","latitude":"8.50000000","longitude":"-11.50000000","timezones":[{"zoneName":"Africa/Freetown","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Singapore","isoCode":"SG","flag":"🇸🇬","phonecode":"65","currency":"SGD","latitude":"1.36666666","longitude":"103.80000000","timezones":[{"zoneName":"Asia/Singapore","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"SGT","tzName":"Singapore Time"}]},{"name":"Slovakia","isoCode":"SK","flag":"🇸🇰","phonecode":"421","currency":"EUR","latitude":"48.66666666","longitude":"19.50000000","timezones":[{"zoneName":"Europe/Bratislava","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Slovenia","isoCode":"SI","flag":"🇸🇮","phonecode":"386","currency":"EUR","latitude":"46.11666666","longitude":"14.81666666","timezones":[{"zoneName":"Europe/Ljubljana","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Solomon Islands","isoCode":"SB","flag":"🇸🇧","phonecode":"677","currency":"SBD","latitude":"-8.00000000","longitude":"159.00000000","timezones":[{"zoneName":"Pacific/Guadalcanal","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"SBT","tzName":"Solomon Islands Time"}]},{"name":"Somalia","isoCode":"SO","flag":"🇸🇴","phonecode":"252","currency":"SOS","latitude":"10.00000000","longitude":"49.00000000","timezones":[{"zoneName":"Africa/Mogadishu","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"South Africa","isoCode":"ZA","flag":"🇿🇦","phonecode":"27","currency":"ZAR","latitude":"-29.00000000","longitude":"24.00000000","timezones":[{"zoneName":"Africa/Johannesburg","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"SAST","tzName":"South African Standard Time"}]},{"name":"South Georgia","isoCode":"GS","flag":"🇬🇸","phonecode":"500","currency":"GBP","latitude":"-54.50000000","longitude":"-37.00000000","timezones":[{"zoneName":"Atlantic/South_Georgia","gmtOffset":-7200,"gmtOffsetName":"UTC-02:00","abbreviation":"GST","tzName":"South Georgia and the South Sandwich Islands Time"}]},{"name":"South Sudan","isoCode":"SS","flag":"🇸🇸","phonecode":"211","currency":"SSP","latitude":"7.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Juba","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Spain","isoCode":"ES","flag":"🇪🇸","phonecode":"34","currency":"EUR","latitude":"40.00000000","longitude":"-4.00000000","timezones":[{"zoneName":"Africa/Ceuta","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"},{"zoneName":"Atlantic/Canary","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"WET","tzName":"Western European Time"},{"zoneName":"Europe/Madrid","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Sri Lanka","isoCode":"LK","flag":"🇱🇰","phonecode":"94","currency":"LKR","latitude":"7.00000000","longitude":"81.00000000","timezones":[{"zoneName":"Asia/Colombo","gmtOffset":19800,"gmtOffsetName":"UTC+05:30","abbreviation":"IST","tzName":"Indian Standard Time"}]},{"name":"Sudan","isoCode":"SD","flag":"🇸🇩","phonecode":"249","currency":"SDG","latitude":"15.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Khartoum","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EAT","tzName":"Eastern African Time"}]},{"name":"Suriname","isoCode":"SR","flag":"🇸🇷","phonecode":"597","currency":"SRD","latitude":"4.00000000","longitude":"-56.00000000","timezones":[{"zoneName":"America/Paramaribo","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"SRT","tzName":"Suriname Time"}]},{"name":"Svalbard And Jan Mayen Islands","isoCode":"SJ","flag":"🇸🇯","phonecode":"47","currency":"NOK","latitude":"78.00000000","longitude":"20.00000000","timezones":[{"zoneName":"Arctic/Longyearbyen","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Swaziland","isoCode":"SZ","flag":"🇸🇿","phonecode":"268","currency":"SZL","latitude":"-26.50000000","longitude":"31.50000000","timezones":[{"zoneName":"Africa/Mbabane","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"SAST","tzName":"South African Standard Time"}]},{"name":"Sweden","isoCode":"SE","flag":"🇸🇪","phonecode":"46","currency":"SEK","latitude":"62.00000000","longitude":"15.00000000","timezones":[{"zoneName":"Europe/Stockholm","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Switzerland","isoCode":"CH","flag":"🇨🇭","phonecode":"41","currency":"CHF","latitude":"47.00000000","longitude":"8.00000000","timezones":[{"zoneName":"Europe/Zurich","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Syria","isoCode":"SY","flag":"🇸🇾","phonecode":"963","currency":"SYP","latitude":"35.00000000","longitude":"38.00000000","timezones":[{"zoneName":"Asia/Damascus","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Taiwan","isoCode":"TW","flag":"🇹🇼","phonecode":"886","currency":"TWD","latitude":"23.50000000","longitude":"121.00000000","timezones":[{"zoneName":"Asia/Taipei","gmtOffset":28800,"gmtOffsetName":"UTC+08:00","abbreviation":"CST","tzName":"China Standard Time"}]},{"name":"Tajikistan","isoCode":"TJ","flag":"🇹🇯","phonecode":"992","currency":"TJS","latitude":"39.00000000","longitude":"71.00000000","timezones":[{"zoneName":"Asia/Dushanbe","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"TJT","tzName":"Tajikistan Time"}]},{"name":"Tanzania","isoCode":"TZ","flag":"🇹🇿","phonecode":"255","currency":"TZS","latitude":"-6.00000000","longitude":"35.00000000","timezones":[{"zoneName":"Africa/Dar_es_Salaam","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Thailand","isoCode":"TH","flag":"🇹🇭","phonecode":"66","currency":"THB","latitude":"15.00000000","longitude":"100.00000000","timezones":[{"zoneName":"Asia/Bangkok","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"ICT","tzName":"Indochina Time"}]},{"name":"Togo","isoCode":"TG","flag":"🇹🇬","phonecode":"228","currency":"XOF","latitude":"8.00000000","longitude":"1.16666666","timezones":[{"zoneName":"Africa/Lome","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"Tokelau","isoCode":"TK","flag":"🇹🇰","phonecode":"690","currency":"NZD","latitude":"-9.00000000","longitude":"-172.00000000","timezones":[{"zoneName":"Pacific/Fakaofo","gmtOffset":46800,"gmtOffsetName":"UTC+13:00","abbreviation":"TKT","tzName":"Tokelau Time"}]},{"name":"Tonga","isoCode":"TO","flag":"🇹🇴","phonecode":"676","currency":"TOP","latitude":"-20.00000000","longitude":"-175.00000000","timezones":[{"zoneName":"Pacific/Tongatapu","gmtOffset":46800,"gmtOffsetName":"UTC+13:00","abbreviation":"TOT","tzName":"Tonga Time"}]},{"name":"Trinidad And Tobago","isoCode":"TT","flag":"🇹🇹","phonecode":"+1-868","currency":"TTD","latitude":"11.00000000","longitude":"-61.00000000","timezones":[{"zoneName":"America/Port_of_Spain","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Tunisia","isoCode":"TN","flag":"🇹🇳","phonecode":"216","currency":"TND","latitude":"34.00000000","longitude":"9.00000000","timezones":[{"zoneName":"Africa/Tunis","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Turkey","isoCode":"TR","flag":"🇹🇷","phonecode":"90","currency":"TRY","latitude":"39.00000000","longitude":"35.00000000","timezones":[{"zoneName":"Europe/Istanbul","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"Turkmenistan","isoCode":"TM","flag":"🇹🇲","phonecode":"993","currency":"TMT","latitude":"40.00000000","longitude":"60.00000000","timezones":[{"zoneName":"Asia/Ashgabat","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"TMT","tzName":"Turkmenistan Time"}]},{"name":"Turks And Caicos Islands","isoCode":"TC","flag":"🇹🇨","phonecode":"+1-649","currency":"USD","latitude":"21.75000000","longitude":"-71.58333333","timezones":[{"zoneName":"America/Grand_Turk","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"}]},{"name":"Tuvalu","isoCode":"TV","flag":"🇹🇻","phonecode":"688","currency":"AUD","latitude":"-8.00000000","longitude":"178.00000000","timezones":[{"zoneName":"Pacific/Funafuti","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"TVT","tzName":"Tuvalu Time"}]},{"name":"Uganda","isoCode":"UG","flag":"🇺🇬","phonecode":"256","currency":"UGX","latitude":"1.00000000","longitude":"32.00000000","timezones":[{"zoneName":"Africa/Kampala","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"EAT","tzName":"East Africa Time"}]},{"name":"Ukraine","isoCode":"UA","flag":"🇺🇦","phonecode":"380","currency":"UAH","latitude":"49.00000000","longitude":"32.00000000","timezones":[{"zoneName":"Europe/Kiev","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"},{"zoneName":"Europe/Simferopol","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"MSK","tzName":"Moscow Time"},{"zoneName":"Europe/Uzhgorod","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"},{"zoneName":"Europe/Zaporozhye","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"EET","tzName":"Eastern European Time"}]},{"name":"United Arab Emirates","isoCode":"AE","flag":"🇦🇪","phonecode":"971","currency":"AED","latitude":"24.00000000","longitude":"54.00000000","timezones":[{"zoneName":"Asia/Dubai","gmtOffset":14400,"gmtOffsetName":"UTC+04:00","abbreviation":"GST","tzName":"Gulf Standard Time"}]},{"name":"United Kingdom","isoCode":"GB","flag":"🇬🇧","phonecode":"44","currency":"GBP","latitude":"54.00000000","longitude":"-2.00000000","timezones":[{"zoneName":"Europe/London","gmtOffset":0,"gmtOffsetName":"UTC±00","abbreviation":"GMT","tzName":"Greenwich Mean Time"}]},{"name":"United States","isoCode":"US","flag":"🇺🇸","phonecode":"1","currency":"USD","latitude":"38.00000000","longitude":"-97.00000000","timezones":[{"zoneName":"America/Adak","gmtOffset":-36000,"gmtOffsetName":"UTC-10:00","abbreviation":"HST","tzName":"Hawaii–Aleutian Standard Time"},{"zoneName":"America/Anchorage","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"America/Boise","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Chicago","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Denver","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Detroit","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Indianapolis","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Knox","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Indiana/Marengo","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Petersburg","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Tell_City","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Indiana/Vevay","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Vincennes","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Indiana/Winamac","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Juneau","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"America/Kentucky/Louisville","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Kentucky/Monticello","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Los_Angeles","gmtOffset":-28800,"gmtOffsetName":"UTC-08:00","abbreviation":"PST","tzName":"Pacific Standard Time (North America"},{"zoneName":"America/Menominee","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Metlakatla","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"America/New_York","gmtOffset":-18000,"gmtOffsetName":"UTC-05:00","abbreviation":"EST","tzName":"Eastern Standard Time (North America"},{"zoneName":"America/Nome","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"America/North_Dakota/Beulah","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/North_Dakota/Center","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/North_Dakota/New_Salem","gmtOffset":-21600,"gmtOffsetName":"UTC-06:00","abbreviation":"CST","tzName":"Central Standard Time (North America"},{"zoneName":"America/Phoenix","gmtOffset":-25200,"gmtOffsetName":"UTC-07:00","abbreviation":"MST","tzName":"Mountain Standard Time (North America"},{"zoneName":"America/Sitka","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"America/Yakutat","gmtOffset":-32400,"gmtOffsetName":"UTC-09:00","abbreviation":"AKST","tzName":"Alaska Standard Time"},{"zoneName":"Pacific/Honolulu","gmtOffset":-36000,"gmtOffsetName":"UTC-10:00","abbreviation":"HST","tzName":"Hawaii–Aleutian Standard Time"}]},{"name":"United States Minor Outlying Islands","isoCode":"UM","flag":"🇺🇲","phonecode":"1","currency":"USD","latitude":"0.00000000","longitude":"0.00000000","timezones":[{"zoneName":"Pacific/Midway","gmtOffset":-39600,"gmtOffsetName":"UTC-11:00","abbreviation":"SST","tzName":"Samoa Standard Time"},{"zoneName":"Pacific/Wake","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"WAKT","tzName":"Wake Island Time"}]},{"name":"Uruguay","isoCode":"UY","flag":"🇺🇾","phonecode":"598","currency":"UYU","latitude":"-33.00000000","longitude":"-56.00000000","timezones":[{"zoneName":"America/Montevideo","gmtOffset":-10800,"gmtOffsetName":"UTC-03:00","abbreviation":"UYT","tzName":"Uruguay Standard Time"}]},{"name":"Uzbekistan","isoCode":"UZ","flag":"🇺🇿","phonecode":"998","currency":"UZS","latitude":"41.00000000","longitude":"64.00000000","timezones":[{"zoneName":"Asia/Samarkand","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"UZT","tzName":"Uzbekistan Time"},{"zoneName":"Asia/Tashkent","gmtOffset":18000,"gmtOffsetName":"UTC+05:00","abbreviation":"UZT","tzName":"Uzbekistan Time"}]},{"name":"Vanuatu","isoCode":"VU","flag":"🇻🇺","phonecode":"678","currency":"VUV","latitude":"-16.00000000","longitude":"167.00000000","timezones":[{"zoneName":"Pacific/Efate","gmtOffset":39600,"gmtOffsetName":"UTC+11:00","abbreviation":"VUT","tzName":"Vanuatu Time"}]},{"name":"Vatican City State (Holy See)","isoCode":"VA","flag":"🇻🇦","phonecode":"379","currency":"EUR","latitude":"41.90000000","longitude":"12.45000000","timezones":[{"zoneName":"Europe/Vatican","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Venezuela","isoCode":"VE","flag":"🇻🇪","phonecode":"58","currency":"VEF","latitude":"8.00000000","longitude":"-66.00000000","timezones":[{"zoneName":"America/Caracas","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"VET","tzName":"Venezuelan Standard Time"}]},{"name":"Vietnam","isoCode":"VN","flag":"🇻🇳","phonecode":"84","currency":"VND","latitude":"16.16666666","longitude":"107.83333333","timezones":[{"zoneName":"Asia/Ho_Chi_Minh","gmtOffset":25200,"gmtOffsetName":"UTC+07:00","abbreviation":"ICT","tzName":"Indochina Time"}]},{"name":"Virgin Islands (British)","isoCode":"VG","flag":"🇻🇬","phonecode":"+1-284","currency":"USD","latitude":"18.43138300","longitude":"-64.62305000","timezones":[{"zoneName":"America/Tortola","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Virgin Islands (US)","isoCode":"VI","flag":"🇻🇮","phonecode":"+1-340","currency":"USD","latitude":"18.34000000","longitude":"-64.93000000","timezones":[{"zoneName":"America/St_Thomas","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Wallis And Futuna Islands","isoCode":"WF","flag":"🇼🇫","phonecode":"681","currency":"XPF","latitude":"-13.30000000","longitude":"-176.20000000","timezones":[{"zoneName":"Pacific/Wallis","gmtOffset":43200,"gmtOffsetName":"UTC+12:00","abbreviation":"WFT","tzName":"Wallis & Futuna Time"}]},{"name":"Western Sahara","isoCode":"EH","flag":"🇪🇭","phonecode":"212","currency":"MAD","latitude":"24.50000000","longitude":"-13.00000000","timezones":[{"zoneName":"Africa/El_Aaiun","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"WEST","tzName":"Western European Summer Time"}]},{"name":"Yemen","isoCode":"YE","flag":"🇾🇪","phonecode":"967","currency":"YER","latitude":"15.00000000","longitude":"48.00000000","timezones":[{"zoneName":"Asia/Aden","gmtOffset":10800,"gmtOffsetName":"UTC+03:00","abbreviation":"AST","tzName":"Arabia Standard Time"}]},{"name":"Zambia","isoCode":"ZM","flag":"🇿🇲","phonecode":"260","currency":"ZMW","latitude":"-15.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Lusaka","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Zimbabwe","isoCode":"ZW","flag":"🇿🇼","phonecode":"263","currency":"ZWL","latitude":"-20.00000000","longitude":"30.00000000","timezones":[{"zoneName":"Africa/Harare","gmtOffset":7200,"gmtOffsetName":"UTC+02:00","abbreviation":"CAT","tzName":"Central Africa Time"}]},{"name":"Kosovo","isoCode":"XK","flag":"🇽🇰","phonecode":"383","currency":"EUR","latitude":"42.56129090","longitude":"20.34030350","timezones":[{"zoneName":"Europe/Belgrade","gmtOffset":3600,"gmtOffsetName":"UTC+01:00","abbreviation":"CET","tzName":"Central European Time"}]},{"name":"Curaçao","isoCode":"CW","flag":"🇨🇼","phonecode":"599","currency":"ANG","latitude":"12.11666700","longitude":"-68.93333300","timezones":[{"zoneName":"America/Curacao","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]},{"name":"Sint Maarten (Dutch part)","isoCode":"SX","flag":"🇸🇽","phonecode":"1721","currency":"ANG","latitude":"18.03333300","longitude":"-63.05000000","timezones":[{"zoneName":"America/Anguilla","gmtOffset":-14400,"gmtOffsetName":"UTC-04:00","abbreviation":"AST","tzName":"Atlantic Standard Time"}]}]');

/***/ }),

/***/ "./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/state.json":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/country-state-city@3.2.1/node_modules/country-state-city/lib/assets/state.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[{"name":"Canillo","isoCode":"02","countryCode":"AD","latitude":"42.59782490","longitude":"1.65663770"},{"name":"Encamp","isoCode":"03","countryCode":"AD","latitude":"42.53597640","longitude":"1.58367730"},{"name":"La Massana","isoCode":"04","countryCode":"AD","latitude":"42.54562500","longitude":"1.51473920"},{"name":"Ordino","isoCode":"05","countryCode":"AD","latitude":"42.59944330","longitude":"1.54023270"},{"name":"Sant Julià de Lòria","isoCode":"06","countryCode":"AD","latitude":"42.45296310","longitude":"1.49182350"},{"name":"Andorra la Vella","isoCode":"07","countryCode":"AD","latitude":"42.50631740","longitude":"1.52183550"},{"name":"Escaldes-Engordany","isoCode":"08","countryCode":"AD","latitude":"42.49093790","longitude":"1.58869660"},{"name":"Ajman Emirate","isoCode":"AJ","countryCode":"AE","latitude":"25.40521650","longitude":"55.51364330"},{"name":"Abu Dhabi Emirate","isoCode":"AZ","countryCode":"AE","latitude":"24.45388400","longitude":"54.37734380"},{"name":"Dubai","isoCode":"DU","countryCode":"AE","latitude":"25.20484930","longitude":"55.27078280"},{"name":"Fujairah","isoCode":"FU","countryCode":"AE","latitude":"25.12880990","longitude":"56.32648490"},{"name":"Ras al-Khaimah","isoCode":"RK","countryCode":"AE","latitude":"25.67413430","longitude":"55.98041730"},{"name":"Sharjah Emirate","isoCode":"SH","countryCode":"AE","latitude":"25.07539740","longitude":"55.75784030"},{"name":"Umm al-Quwain","isoCode":"UQ","countryCode":"AE","latitude":"25.54263240","longitude":"55.54753480"},{"name":"Balkh","isoCode":"BAL","countryCode":"AF","latitude":"36.75506030","longitude":"66.89753720"},{"name":"Bamyan","isoCode":"BAM","countryCode":"AF","latitude":"34.81000670","longitude":"67.82121040"},{"name":"Badghis","isoCode":"BDG","countryCode":"AF","latitude":"35.16713390","longitude":"63.76953840"},{"name":"Badakhshan","isoCode":"BDS","countryCode":"AF","latitude":"36.73477250","longitude":"70.81199530"},{"name":"Baghlan","isoCode":"BGL","countryCode":"AF","latitude":"36.17890260","longitude":"68.74530640"},{"name":"Daykundi","isoCode":"DAY","countryCode":"AF","latitude":"33.66949500","longitude":"66.04635340"},{"name":"Farah","isoCode":"FRA","countryCode":"AF","latitude":"32.49532800","longitude":"62.26266270"},{"name":"Faryab","isoCode":"FYB","countryCode":"AF","latitude":"36.07956130","longitude":"64.90595500"},{"name":"Ghazni","isoCode":"GHA","countryCode":"AF","latitude":"33.54505870","longitude":"68.41739720"},{"name":"Ghōr","isoCode":"GHO","countryCode":"AF","latitude":"34.09957760","longitude":"64.90595500"},{"name":"Helmand","isoCode":"HEL","countryCode":"AF","latitude":"39.29893610","longitude":"-76.61604720"},{"name":"Herat","isoCode":"HER","countryCode":"AF","latitude":"34.35286500","longitude":"62.20402870"},{"name":"Jowzjan","isoCode":"JOW","countryCode":"AF","latitude":"36.89696920","longitude":"65.66585680"},{"name":"Kabul","isoCode":"KAB","countryCode":"AF","latitude":"34.55534940","longitude":"69.20748600"},{"name":"Kandahar","isoCode":"KAN","countryCode":"AF","latitude":"31.62887100","longitude":"65.73717490"},{"name":"Kapisa","isoCode":"KAP","countryCode":"AF","latitude":"34.98105720","longitude":"69.62145620"},{"name":"Kunduz Province","isoCode":"KDZ","countryCode":"AF","latitude":"36.72855110","longitude":"68.86789820"},{"name":"Khost","isoCode":"KHO","countryCode":"AF","latitude":"33.33384720","longitude":"69.93716730"},{"name":"Kunar","isoCode":"KNR","countryCode":"AF","latitude":"34.84658930","longitude":"71.09731700"},{"name":"Laghman","isoCode":"LAG","countryCode":"AF","latitude":"34.68976870","longitude":"70.14558050"},{"name":"Logar","isoCode":"LOG","countryCode":"AF","latitude":"34.01455180","longitude":"69.19239160"},{"name":"Nangarhar","isoCode":"NAN","countryCode":"AF","latitude":"34.17183130","longitude":"70.62167940"},{"name":"Nimruz","isoCode":"NIM","countryCode":"AF","latitude":"31.02614880","longitude":"62.45041540"},{"name":"Nuristan","isoCode":"NUR","countryCode":"AF","latitude":"35.32502230","longitude":"70.90712360"},{"name":"Panjshir","isoCode":"PAN","countryCode":"AF","latitude":"38.88023910","longitude":"-77.17172380"},{"name":"Parwan","isoCode":"PAR","countryCode":"AF","latitude":"34.96309770","longitude":"68.81088490"},{"name":"Paktia","isoCode":"PIA","countryCode":"AF","latitude":"33.70619900","longitude":"69.38310790"},{"name":"Paktika","isoCode":"PKA","countryCode":"AF","latitude":"32.26453860","longitude":"68.52471490"},{"name":"Samangan","isoCode":"SAM","countryCode":"AF","latitude":"36.31555060","longitude":"67.96428630"},{"name":"Sar-e Pol","isoCode":"SAR","countryCode":"AF","latitude":"36.21662800","longitude":"65.93336000"},{"name":"Takhar","isoCode":"TAK","countryCode":"AF","latitude":"36.66980130","longitude":"69.47845410"},{"name":"Urozgan","isoCode":"URU","countryCode":"AF","latitude":"32.92712870","longitude":"66.14152630"},{"name":"Zabul","isoCode":"ZAB","countryCode":"AF","latitude":"32.19187820","longitude":"67.18944880"},{"name":"Saint George Parish","isoCode":"03","countryCode":"AG","latitude":null,"longitude":null},{"name":"Saint John Parish","isoCode":"04","countryCode":"AG","latitude":null,"longitude":null},{"name":"Saint Mary Parish","isoCode":"05","countryCode":"AG","latitude":null,"longitude":null},{"name":"Saint Paul Parish","isoCode":"06","countryCode":"AG","latitude":null,"longitude":null},{"name":"Saint Peter Parish","isoCode":"07","countryCode":"AG","latitude":null,"longitude":null},{"name":"Saint Philip Parish","isoCode":"08","countryCode":"AG","latitude":"40.43682580","longitude":"-80.06855320"},{"name":"Barbuda","isoCode":"10","countryCode":"AG","latitude":"17.62662420","longitude":"-61.77130280"},{"name":"Redonda","isoCode":"11","countryCode":"AG","latitude":"16.93841600","longitude":"-62.34551480"},{"name":"Berat County","isoCode":"01","countryCode":"AL","latitude":"40.69530120","longitude":"20.04496620"},{"name":"Durrës County","isoCode":"02","countryCode":"AL","latitude":"41.50809720","longitude":"19.61631850"},{"name":"Elbasan County","isoCode":"03","countryCode":"AL","latitude":"41.12666720","longitude":"20.23556470"},{"name":"Fier County","isoCode":"04","countryCode":"AL","latitude":"40.91913920","longitude":"19.66393090"},{"name":"Gjirokastër County","isoCode":"05","countryCode":"AL","latitude":"40.06728740","longitude":"20.10452290"},{"name":"Korçë County","isoCode":"06","countryCode":"AL","latitude":"40.59056700","longitude":"20.61689210"},{"name":"Kukës County","isoCode":"07","countryCode":"AL","latitude":"42.08074640","longitude":"20.41429230"},{"name":"Lezhë County","isoCode":"08","countryCode":"AL","latitude":"41.78137590","longitude":"19.80679160"},{"name":"Dibër County","isoCode":"09","countryCode":"AL","latitude":"41.58881630","longitude":"20.23556470"},{"name":"Shkodër County","isoCode":"10","countryCode":"AL","latitude":"42.15037100","longitude":"19.66393090"},{"name":"Tirana County","isoCode":"11","countryCode":"AL","latitude":"41.24275980","longitude":"19.80679160"},{"name":"Vlorë County","isoCode":"12","countryCode":"AL","latitude":"40.15009600","longitude":"19.80679160"},{"name":"Berat District","isoCode":"BR","countryCode":"AL","latitude":"40.70863770","longitude":"19.94373140"},{"name":"Bulqizë District","isoCode":"BU","countryCode":"AL","latitude":"41.49425870","longitude":"20.21471570"},{"name":"Dibër District","isoCode":"DI","countryCode":"AL","latitude":"41.58881630","longitude":"20.23556470"},{"name":"Delvinë District","isoCode":"DL","countryCode":"AL","latitude":"39.94813640","longitude":"20.09558910"},{"name":"Durrës District","isoCode":"DR","countryCode":"AL","latitude":"41.37065170","longitude":"19.52110630"},{"name":"Devoll District","isoCode":"DV","countryCode":"AL","latitude":"40.64473470","longitude":"20.95066360"},{"name":"Kolonjë District","isoCode":"ER","countryCode":"AL","latitude":"40.33732620","longitude":"20.67946760"},{"name":"Fier District","isoCode":"FR","countryCode":"AL","latitude":"40.72750400","longitude":"19.56275960"},{"name":"Gjirokastër District","isoCode":"GJ","countryCode":"AL","latitude":"40.06728740","longitude":"20.10452290"},{"name":"Gramsh District","isoCode":"GR","countryCode":"AL","latitude":"40.86698730","longitude":"20.18493230"},{"name":"Has District","isoCode":"HA","countryCode":"AL","latitude":"42.79013360","longitude":"-83.61220120"},{"name":"Kavajë District","isoCode":"KA","countryCode":"AL","latitude":"41.18445290","longitude":"19.56275960"},{"name":"Kurbin District","isoCode":"KB","countryCode":"AL","latitude":"41.64126440","longitude":"19.70559500"},{"name":"Kuçovë District","isoCode":"KC","countryCode":"AL","latitude":"40.78370630","longitude":"19.87823480"},{"name":"Korçë District","isoCode":"KO","countryCode":"AL","latitude":"40.59056700","longitude":"20.61689210"},{"name":"Krujë District","isoCode":"KR","countryCode":"AL","latitude":"41.50947650","longitude":"19.77107320"},{"name":"Kukës District","isoCode":"KU","countryCode":"AL","latitude":"42.08074640","longitude":"20.41429230"},{"name":"Librazhd District","isoCode":"LB","countryCode":"AL","latitude":"41.18292320","longitude":"20.31747690"},{"name":"Lezhë District","isoCode":"LE","countryCode":"AL","latitude":"41.78607300","longitude":"19.64607580"},{"name":"Lushnjë District","isoCode":"LU","countryCode":"AL","latitude":"40.94198300","longitude":"19.69964280"},{"name":"Mallakastër District","isoCode":"MK","countryCode":"AL","latitude":"40.52733760","longitude":"19.78297910"},{"name":"Malësi e Madhe District","isoCode":"MM","countryCode":"AL","latitude":"42.42451730","longitude":"19.61631850"},{"name":"Mirditë District","isoCode":"MR","countryCode":"AL","latitude":"41.76428600","longitude":"19.90205090"},{"name":"Mat District","isoCode":"MT","countryCode":"AL","latitude":"41.59376750","longitude":"19.99732440"},{"name":"Pogradec District","isoCode":"PG","countryCode":"AL","latitude":"40.90153140","longitude":"20.65562890"},{"name":"Peqin District","isoCode":"PQ","countryCode":"AL","latitude":"41.04709020","longitude":"19.75023840"},{"name":"Përmet District","isoCode":"PR","countryCode":"AL","latitude":"40.23618370","longitude":"20.35173340"},{"name":"Pukë District","isoCode":"PU","countryCode":"AL","latitude":"42.04697720","longitude":"19.89609680"},{"name":"Shkodër District","isoCode":"SH","countryCode":"AL","latitude":"42.06929850","longitude":"19.50325590"},{"name":"Skrapar District","isoCode":"SK","countryCode":"AL","latitude":"40.53499460","longitude":"20.28322170"},{"name":"Sarandë District","isoCode":"SR","countryCode":"AL","latitude":"39.85921190","longitude":"20.02710010"},{"name":"Tepelenë District","isoCode":"TE","countryCode":"AL","latitude":"40.29666320","longitude":"20.01816730"},{"name":"Tropojë District","isoCode":"TP","countryCode":"AL","latitude":"42.39821510","longitude":"20.16259550"},{"name":"Tirana District","isoCode":"TR","countryCode":"AL","latitude":"41.32754590","longitude":"19.81869820"},{"name":"Vlorë District","isoCode":"VL","countryCode":"AL","latitude":"40.46606680","longitude":"19.49135600"},{"name":"Aragatsotn Region","isoCode":"AG","countryCode":"AM","latitude":"40.33473010","longitude":"44.37482960"},{"name":"Ararat Province","isoCode":"AR","countryCode":"AM","latitude":"39.91394150","longitude":"44.72000040"},{"name":"Armavir Region","isoCode":"AV","countryCode":"AM","latitude":"40.15546310","longitude":"44.03724460"},{"name":"Yerevan","isoCode":"ER","countryCode":"AM","latitude":"40.18720230","longitude":"44.51520900"},{"name":"Gegharkunik Province","isoCode":"GR","countryCode":"AM","latitude":"40.35264260","longitude":"45.12604140"},{"name":"Kotayk Region","isoCode":"KT","countryCode":"AM","latitude":"40.54102140","longitude":"44.76901480"},{"name":"Lori Region","isoCode":"LO","countryCode":"AM","latitude":"40.96984520","longitude":"44.49001380"},{"name":"Shirak Region","isoCode":"SH","countryCode":"AM","latitude":"40.96308140","longitude":"43.81024610"},{"name":"Syunik Province","isoCode":"SU","countryCode":"AM","latitude":"39.51331120","longitude":"46.33932340"},{"name":"Tavush Region","isoCode":"TV","countryCode":"AM","latitude":"40.88662960","longitude":"45.33934900"},{"name":"Vayots Dzor Region","isoCode":"VD","countryCode":"AM","latitude":"39.76419960","longitude":"45.33375280"},{"name":"Bengo Province","isoCode":"BGO","countryCode":"AO","latitude":"-9.10422570","longitude":"13.72891670"},{"name":"Benguela Province","isoCode":"BGU","countryCode":"AO","latitude":"-12.80037440","longitude":"13.91439900"},{"name":"Bié Province","isoCode":"BIE","countryCode":"AO","latitude":"-12.57279070","longitude":"17.66888700"},{"name":"Cabinda Province","isoCode":"CAB","countryCode":"AO","latitude":"-5.02487490","longitude":"12.34638750"},{"name":"Cuando Cubango Province","isoCode":"CCU","countryCode":"AO","latitude":"-16.41808240","longitude":"18.80761950"},{"name":"Cunene Province","isoCode":"CNN","countryCode":"AO","latitude":"-16.28022210","longitude":"16.15809370"},{"name":"Cuanza Norte Province","isoCode":"CNO","countryCode":"AO","latitude":"-9.23985130","longitude":"14.65878210"},{"name":"Cuanza Sul","isoCode":"CUS","countryCode":"AO","latitude":"-10.59519100","longitude":"15.40680790"},{"name":"Huambo Province","isoCode":"HUA","countryCode":"AO","latitude":"-12.52682210","longitude":"15.59433880"},{"name":"Huíla Province","isoCode":"HUI","countryCode":"AO","latitude":"-14.92805530","longitude":"14.65878210"},{"name":"Lunda Norte Province","isoCode":"LNO","countryCode":"AO","latitude":"-8.35250220","longitude":"19.18800470"},{"name":"Lunda Sul Province","isoCode":"LSU","countryCode":"AO","latitude":"-10.28665780","longitude":"20.71224650"},{"name":"Luanda Province","isoCode":"LUA","countryCode":"AO","latitude":"-9.03508800","longitude":"13.26634790"},{"name":"Malanje Province","isoCode":"MAL","countryCode":"AO","latitude":"-9.82511830","longitude":"16.91225100"},{"name":"Moxico Province","isoCode":"MOX","countryCode":"AO","latitude":"-13.42935790","longitude":"20.33088140"},{"name":"Uíge Province","isoCode":"UIG","countryCode":"AO","latitude":"-7.17367320","longitude":"15.40680790"},{"name":"Zaire Province","isoCode":"ZAI","countryCode":"AO","latitude":"-6.57334580","longitude":"13.17403480"},{"name":"Salta","isoCode":"A","countryCode":"AR","latitude":"-24.79976880","longitude":"-65.41503670"},{"name":"Buenos Aires","isoCode":"B","countryCode":"AR","latitude":"-37.20172850","longitude":"-59.84106970"},{"name":"Ciudad Autónoma de Buenos Aires","isoCode":"C","countryCode":"AR","latitude":"-34.60368440","longitude":"-58.38155910"},{"name":"San Luis","isoCode":"D","countryCode":"AR","latitude":"-33.29620420","longitude":"-66.32949480"},{"name":"Entre Ríos","isoCode":"E","countryCode":"AR","latitude":"-31.77466540","longitude":"-60.49564610"},{"name":"La Rioja","isoCode":"F","countryCode":"AR","latitude":"-29.41937930","longitude":"-66.85599320"},{"name":"Santiago del Estero","isoCode":"G","countryCode":"AR","latitude":"-27.78335740","longitude":"-64.26416700"},{"name":"Chaco","isoCode":"H","countryCode":"AR","latitude":"-27.42571750","longitude":"-59.02437840"},{"name":"San Juan","isoCode":"J","countryCode":"AR","latitude":"-31.53169760","longitude":"-68.56769620"},{"name":"Catamarca","isoCode":"K","countryCode":"AR","latitude":"-28.47158770","longitude":"-65.78772090"},{"name":"La Pampa","isoCode":"L","countryCode":"AR","latitude":"-36.61475730","longitude":"-64.28392090"},{"name":"Mendoza","isoCode":"M","countryCode":"AR","latitude":"-32.88945870","longitude":"-68.84583860"},{"name":"Misiones","isoCode":"N","countryCode":"AR","latitude":"-27.42692550","longitude":"-55.94670760"},{"name":"Formosa","isoCode":"P","countryCode":"AR","latitude":"-26.18948040","longitude":"-58.22428060"},{"name":"Neuquén","isoCode":"Q","countryCode":"AR","latitude":"-38.94587000","longitude":"-68.07309250"},{"name":"Río Negro","isoCode":"R","countryCode":"AR","latitude":"-40.82614340","longitude":"-63.02663390"},{"name":"Santa Fe","isoCode":"S","countryCode":"AR","latitude":"-31.58551090","longitude":"-60.72380160"},{"name":"Tucumán","isoCode":"T","countryCode":"AR","latitude":"-26.82211270","longitude":"-65.21929030"},{"name":"Chubut","isoCode":"U","countryCode":"AR","latitude":"-43.29342460","longitude":"-65.11148180"},{"name":"Tierra del Fuego","isoCode":"V","countryCode":"AR","latitude":"-54.80539980","longitude":"-68.32420610"},{"name":"Corrientes","isoCode":"W","countryCode":"AR","latitude":"-27.46921310","longitude":"-58.83063490"},{"name":"Córdoba","isoCode":"X","countryCode":"AR","latitude":"-31.39928760","longitude":"-64.26438420"},{"name":"Jujuy","isoCode":"Y","countryCode":"AR","latitude":"-24.18433970","longitude":"-65.30217700"},{"name":"Santa Cruz","isoCode":"Z","countryCode":"AR","latitude":"-51.63528210","longitude":"-69.24743530"},{"name":"Burgenland","isoCode":"1","countryCode":"AT","latitude":"47.15371650","longitude":"16.26887970"},{"name":"Carinthia","isoCode":"2","countryCode":"AT","latitude":"46.72220300","longitude":"14.18058820"},{"name":"Lower Austria","isoCode":"3","countryCode":"AT","latitude":"48.10807700","longitude":"15.80495580"},{"name":"Upper Austria","isoCode":"4","countryCode":"AT","latitude":"48.02585400","longitude":"13.97236650"},{"name":"Salzburg","isoCode":"5","countryCode":"AT","latitude":"47.80949000","longitude":"13.05501000"},{"name":"Styria","isoCode":"6","countryCode":"AT","latitude":"47.35934420","longitude":"14.46998270"},{"name":"Tyrol","isoCode":"7","countryCode":"AT","latitude":"47.25374140","longitude":"11.60148700"},{"name":"Vorarlberg","isoCode":"8","countryCode":"AT","latitude":"47.24974270","longitude":"9.97973730"},{"name":"Vienna","isoCode":"9","countryCode":"AT","latitude":"48.20817430","longitude":"16.37381890"},{"name":"Australian Capital Territory","isoCode":"ACT","countryCode":"AU","latitude":"-35.47346790","longitude":"149.01236790"},{"name":"New South Wales","isoCode":"NSW","countryCode":"AU","latitude":"-31.25321830","longitude":"146.92109900"},{"name":"Northern Territory","isoCode":"NT","countryCode":"AU","latitude":"-19.49141080","longitude":"132.55096030"},{"name":"Queensland","isoCode":"QLD","countryCode":"AU","latitude":"-20.91757380","longitude":"142.70279560"},{"name":"South Australia","isoCode":"SA","countryCode":"AU","latitude":"-30.00023150","longitude":"136.20915470"},{"name":"Tasmania","isoCode":"TAS","countryCode":"AU","latitude":"-41.45451960","longitude":"145.97066470"},{"name":"Victoria","isoCode":"VIC","countryCode":"AU","latitude":"-36.48564230","longitude":"140.97794250"},{"name":"Western Australia","isoCode":"WA","countryCode":"AU","latitude":"-27.67281680","longitude":"121.62830980"},{"name":"Absheron District","isoCode":"ABS","countryCode":"AZ","latitude":"40.36296930","longitude":"49.27368150"},{"name":"Agstafa District","isoCode":"AGA","countryCode":"AZ","latitude":"41.26559330","longitude":"45.51342910"},{"name":"Aghjabadi District","isoCode":"AGC","countryCode":"AZ","latitude":"28.78918410","longitude":"77.51607880"},{"name":"Agdam District","isoCode":"AGM","countryCode":"AZ","latitude":"39.99318530","longitude":"46.99495620"},{"name":"Agdash District","isoCode":"AGS","countryCode":"AZ","latitude":"40.63354270","longitude":"47.46743100"},{"name":"Agsu District","isoCode":"AGU","countryCode":"AZ","latitude":"40.52833390","longitude":"48.36508350"},{"name":"Astara District","isoCode":"AST","countryCode":"AZ","latitude":"38.49378450","longitude":"48.69443650"},{"name":"Baku","isoCode":"BA","countryCode":"AZ","latitude":"40.40926170","longitude":"49.86709240"},{"name":"Babek District","isoCode":"BAB","countryCode":"AZ","latitude":"39.15076130","longitude":"45.44853680"},{"name":"Balakan District","isoCode":"BAL","countryCode":"AZ","latitude":"41.70375090","longitude":"46.40442130"},{"name":"Barda District","isoCode":"BAR","countryCode":"AZ","latitude":"40.37065550","longitude":"47.13789090"},{"name":"Beylagan District","isoCode":"BEY","countryCode":"AZ","latitude":"39.77230730","longitude":"47.61541660"},{"name":"Bilasuvar District","isoCode":"BIL","countryCode":"AZ","latitude":"39.45988330","longitude":"48.55098130"},{"name":"Jabrayil District","isoCode":"CAB","countryCode":"AZ","latitude":"39.26455440","longitude":"46.96215620"},{"name":"Jalilabad District","isoCode":"CAL","countryCode":"AZ","latitude":"39.20516320","longitude":"48.51006040"},{"name":"Julfa District","isoCode":"CUL","countryCode":"AZ","latitude":"38.96049830","longitude":"45.62929390"},{"name":"Dashkasan District","isoCode":"DAS","countryCode":"AZ","latitude":"40.52022570","longitude":"46.07793040"},{"name":"Fizuli District","isoCode":"FUZ","countryCode":"AZ","latitude":"39.53786050","longitude":"47.30338770"},{"name":"Ganja","isoCode":"GA","countryCode":"AZ","latitude":"36.36873380","longitude":"-95.99857670"},{"name":"Gədəbəy","isoCode":"GAD","countryCode":"AZ","latitude":"40.56996390","longitude":"45.81068830"},{"name":"Goranboy District","isoCode":"GOR","countryCode":"AZ","latitude":"40.53805060","longitude":"46.59908910"},{"name":"Goychay","isoCode":"GOY","countryCode":"AZ","latitude":"40.62361680","longitude":"47.74030340"},{"name":"Goygol District","isoCode":"GYG","countryCode":"AZ","latitude":"40.55953780","longitude":"46.33149530"},{"name":"Hajigabul District","isoCode":"HAC","countryCode":"AZ","latitude":"40.03937700","longitude":"48.92025330"},{"name":"Imishli District","isoCode":"IMI","countryCode":"AZ","latitude":"39.86946860","longitude":"48.06652180"},{"name":"Ismailli District","isoCode":"ISM","countryCode":"AZ","latitude":"40.74299360","longitude":"48.21255560"},{"name":"Kalbajar District","isoCode":"KAL","countryCode":"AZ","latitude":"40.10243290","longitude":"46.03648720"},{"name":"Kangarli District","isoCode":"KAN","countryCode":"AZ","latitude":"39.38719400","longitude":"45.16398520"},{"name":"Kurdamir District","isoCode":"KUR","countryCode":"AZ","latitude":"40.36986510","longitude":"48.16446260"},{"name":"Lankaran District","isoCode":"LA","countryCode":"AZ","latitude":"38.75286690","longitude":"48.84750150"},{"name":"Lachin District","isoCode":"LAC","countryCode":"AZ","latitude":"39.63834140","longitude":"46.54608530"},{"name":"Lankaran","isoCode":"LAN","countryCode":"AZ","latitude":"38.75286690","longitude":"48.84750150"},{"name":"Lerik District","isoCode":"LER","countryCode":"AZ","latitude":"38.77361920","longitude":"48.41514830"},{"name":"Masally District","isoCode":"MAS","countryCode":"AZ","latitude":"39.03407220","longitude":"48.65893540"},{"name":"Mingachevir","isoCode":"MI","countryCode":"AZ","latitude":"40.77025630","longitude":"47.04960150"},{"name":"Neftchala District","isoCode":"NEF","countryCode":"AZ","latitude":"39.38810520","longitude":"49.24137430"},{"name":"Nakhchivan Autonomous Republic","isoCode":"NX","countryCode":"AZ","latitude":"39.32568140","longitude":"45.49126480"},{"name":"Oghuz District","isoCode":"OGU","countryCode":"AZ","latitude":"41.07279240","longitude":"47.46506720"},{"name":"Ordubad District","isoCode":"ORD","countryCode":"AZ","latitude":"38.90216220","longitude":"46.02376250"},{"name":"Qabala District","isoCode":"QAB","countryCode":"AZ","latitude":"40.92539250","longitude":"47.80161060"},{"name":"Qakh District","isoCode":"QAX","countryCode":"AZ","latitude":"41.42068270","longitude":"46.93201840"},{"name":"Qazakh District","isoCode":"QAZ","countryCode":"AZ","latitude":"41.09710740","longitude":"45.35163310"},{"name":"Quba District","isoCode":"QBA","countryCode":"AZ","latitude":"41.15642420","longitude":"48.41350210"},{"name":"Qubadli District","isoCode":"QBI","countryCode":"AZ","latitude":"39.27139960","longitude":"46.63543120"},{"name":"Gobustan District","isoCode":"QOB","countryCode":"AZ","latitude":"40.53261040","longitude":"48.92737500"},{"name":"Qusar District","isoCode":"QUS","countryCode":"AZ","latitude":"41.42668860","longitude":"48.43455770"},{"name":"Shaki","isoCode":"SA","countryCode":"AZ","latitude":"41.19747530","longitude":"47.15712410"},{"name":"Sabirabad District","isoCode":"SAB","countryCode":"AZ","latitude":"39.98706630","longitude":"48.46925450"},{"name":"Sadarak District","isoCode":"SAD","countryCode":"AZ","latitude":"39.71051140","longitude":"44.88642770"},{"name":"Shahbuz District","isoCode":"SAH","countryCode":"AZ","latitude":"39.44521030","longitude":"45.65680090"},{"name":"Shaki District","isoCode":"SAK","countryCode":"AZ","latitude":"41.11346620","longitude":"47.13169270"},{"name":"Salyan District","isoCode":"SAL","countryCode":"AZ","latitude":"28.35248110","longitude":"82.12784000"},{"name":"Sharur District","isoCode":"SAR","countryCode":"AZ","latitude":"39.55363320","longitude":"44.98456800"},{"name":"Saatly District","isoCode":"SAT","countryCode":"AZ","latitude":"39.90955030","longitude":"48.35951220"},{"name":"Shabran District","isoCode":"SBN","countryCode":"AZ","latitude":"41.22283760","longitude":"48.84573040"},{"name":"Siazan District","isoCode":"SIY","countryCode":"AZ","latitude":"41.07838330","longitude":"49.11184770"},{"name":"Shamkir District","isoCode":"SKR","countryCode":"AZ","latitude":"40.82881440","longitude":"46.01668790"},{"name":"Sumqayit","isoCode":"SM","countryCode":"AZ","latitude":"40.58547650","longitude":"49.63174110"},{"name":"Shamakhi District","isoCode":"SMI","countryCode":"AZ","latitude":"40.63187310","longitude":"48.63638010"},{"name":"Samukh District","isoCode":"SMX","countryCode":"AZ","latitude":"40.76046310","longitude":"46.40631810"},{"name":"Shirvan","isoCode":"SR","countryCode":"AZ","latitude":"39.94697070","longitude":"48.92239190"},{"name":"Shusha District","isoCode":"SUS","countryCode":"AZ","latitude":"39.75374380","longitude":"46.74647550"},{"name":"Tartar District","isoCode":"TAR","countryCode":"AZ","latitude":"40.34438750","longitude":"46.93765190"},{"name":"Tovuz District","isoCode":"TOV","countryCode":"AZ","latitude":"40.99545230","longitude":"45.61659070"},{"name":"Ujar District","isoCode":"UCA","countryCode":"AZ","latitude":"40.50675250","longitude":"47.64896410"},{"name":"Khachmaz District","isoCode":"XAC","countryCode":"AZ","latitude":"41.45911680","longitude":"48.80206260"},{"name":"Khojali District","isoCode":"XCI","countryCode":"AZ","latitude":"39.91325530","longitude":"46.79430500"},{"name":"Khizi District","isoCode":"XIZ","countryCode":"AZ","latitude":"40.91094890","longitude":"49.07292640"},{"name":"Martuni","isoCode":"XVD","countryCode":"AZ","latitude":"39.79146930","longitude":"47.11008140"},{"name":"Yardymli District","isoCode":"YAR","countryCode":"AZ","latitude":"38.90589170","longitude":"48.24961270"},{"name":"Yevlakh","isoCode":"YE","countryCode":"AZ","latitude":"40.61966380","longitude":"47.15003240"},{"name":"Yevlakh District","isoCode":"YEV","countryCode":"AZ","latitude":"40.61966380","longitude":"47.15003240"},{"name":"Zangilan District","isoCode":"ZAN","countryCode":"AZ","latitude":"39.08568990","longitude":"46.65247280"},{"name":"Zaqatala District","isoCode":"ZAQ","countryCode":"AZ","latitude":"41.59068890","longitude":"46.72403730"},{"name":"Zardab District","isoCode":"ZAR","countryCode":"AZ","latitude":"40.21481140","longitude":"47.71494400"},{"name":"Una-Sana Canton","isoCode":"01","countryCode":"BA","latitude":"44.65031160","longitude":"16.31716290"},{"name":"Posavina Canton","isoCode":"02","countryCode":"BA","latitude":"45.07520940","longitude":"18.37763040"},{"name":"Tuzla Canton","isoCode":"03","countryCode":"BA","latitude":"44.53434630","longitude":"18.69727970"},{"name":"Zenica-Doboj Canton","isoCode":"04","countryCode":"BA","latitude":"44.21271090","longitude":"18.16046250"},{"name":"Bosnian Podrinje Canton","isoCode":"05","countryCode":"BA","latitude":"43.68749000","longitude":"18.82443940"},{"name":"Central Bosnia Canton","isoCode":"06","countryCode":"BA","latitude":"44.13818560","longitude":"17.68667140"},{"name":"Herzegovina-Neretva Canton","isoCode":"07","countryCode":"BA","latitude":"43.52651590","longitude":"17.76362100"},{"name":"West Herzegovina Canton","isoCode":"08","countryCode":"BA","latitude":"43.43692440","longitude":"17.38488310"},{"name":"Sarajevo Canton","isoCode":"09","countryCode":"BA","latitude":"43.85125640","longitude":"18.29534420"},{"name":"Canton 10","isoCode":"10","countryCode":"BA","latitude":"43.95341550","longitude":"16.94251870"},{"name":"Federation of Bosnia and Herzegovina","isoCode":"BIH","countryCode":"BA","latitude":"43.88748970","longitude":"17.84279300"},{"name":"Brčko District","isoCode":"BRC","countryCode":"BA","latitude":"44.84059440","longitude":"18.74215300"},{"name":"Republika Srpska","isoCode":"SRP","countryCode":"BA","latitude":"44.72801860","longitude":"17.31481360"},{"name":"Christ Church","isoCode":"01","countryCode":"BB","latitude":"36.00604070","longitude":"-95.92112100"},{"name":"Saint Andrew","isoCode":"02","countryCode":"BB","latitude":null,"longitude":null},{"name":"Saint George","isoCode":"03","countryCode":"BB","latitude":"37.09652780","longitude":"-113.56841640"},{"name":"Saint James","isoCode":"04","countryCode":"BB","latitude":"48.52356600","longitude":"-1.32378850"},{"name":"Saint John","isoCode":"05","countryCode":"BB","latitude":"45.27331530","longitude":"-66.06330800"},{"name":"Saint Joseph","isoCode":"06","countryCode":"BB","latitude":"39.76745780","longitude":"-94.84668100"},{"name":"Saint Lucy","isoCode":"07","countryCode":"BB","latitude":"38.76146250","longitude":"-77.44914390"},{"name":"Saint Michael","isoCode":"08","countryCode":"BB","latitude":"36.03597700","longitude":"-95.84905200"},{"name":"Saint Peter","isoCode":"09","countryCode":"BB","latitude":"37.08271190","longitude":"-94.51712500"},{"name":"Saint Philip","isoCode":"10","countryCode":"BB","latitude":"35.23311400","longitude":"-89.43640420"},{"name":"Saint Thomas","isoCode":"11","countryCode":"BB","latitude":"18.33809650","longitude":"-64.89409460"},{"name":"Bandarban District","isoCode":"01","countryCode":"BD","latitude":"21.83110020","longitude":"92.36863210"},{"name":"Barguna District","isoCode":"02","countryCode":"BD","latitude":"22.09529150","longitude":"90.11206960"},{"name":"Bogra District","isoCode":"03","countryCode":"BD","latitude":"24.85104020","longitude":"89.36972250"},{"name":"Brahmanbaria District","isoCode":"04","countryCode":"BD","latitude":"23.96081810","longitude":"91.11150140"},{"name":"Bagerhat District","isoCode":"05","countryCode":"BD","latitude":"22.66024360","longitude":"89.78954780"},{"name":"Barisal District","isoCode":"06","countryCode":"BD","latitude":"22.70220980","longitude":"90.36963160"},{"name":"Bhola District","isoCode":"07","countryCode":"BD","latitude":"22.17853150","longitude":"90.71010230"},{"name":"Comilla District","isoCode":"08","countryCode":"BD","latitude":"23.45756670","longitude":"91.18089960"},{"name":"Chandpur District","isoCode":"09","countryCode":"BD","latitude":"23.25131480","longitude":"90.85178460"},{"name":"Chittagong District","isoCode":"10","countryCode":"BD","latitude":"22.51501050","longitude":"91.75388170"},{"name":"Cox\'s Bazar District","isoCode":"11","countryCode":"BD","latitude":"21.56406260","longitude":"92.02821290"},{"name":"Chuadanga District","isoCode":"12","countryCode":"BD","latitude":"23.61605120","longitude":"88.82630060"},{"name":"Dhaka District","isoCode":"13","countryCode":"BD","latitude":"23.81051400","longitude":"90.33718890"},{"name":"Dinajpur District","isoCode":"14","countryCode":"BD","latitude":"25.62791230","longitude":"88.63317580"},{"name":"Faridpur District","isoCode":"15","countryCode":"BD","latitude":"23.54239190","longitude":"89.63089210"},{"name":"Feni District","isoCode":"16","countryCode":"BD","latitude":"22.94087840","longitude":"91.40666460"},{"name":"Gopalganj District","isoCode":"17","countryCode":"BD","latitude":"26.48315840","longitude":"84.43655000"},{"name":"Gazipur District","isoCode":"18","countryCode":"BD","latitude":"24.09581710","longitude":"90.41251810"},{"name":"Gaibandha District","isoCode":"19","countryCode":"BD","latitude":"25.32969280","longitude":"89.54296520"},{"name":"Habiganj District","isoCode":"20","countryCode":"BD","latitude":"24.47712360","longitude":"91.45065650"},{"name":"Jamalpur District","isoCode":"21","countryCode":"BD","latitude":"25.08309260","longitude":"89.78532180"},{"name":"Jessore District","isoCode":"22","countryCode":"BD","latitude":"23.16340140","longitude":"89.21816640"},{"name":"Jhenaidah District","isoCode":"23","countryCode":"BD","latitude":"23.54498730","longitude":"89.17260310"},{"name":"Joypurhat District","isoCode":"24","countryCode":"BD","latitude":"25.09473490","longitude":"89.09449370"},{"name":"Jhalokati District","isoCode":"25","countryCode":"BD","latitude":"22.57208000","longitude":"90.18696440"},{"name":"Kishoreganj District","isoCode":"26","countryCode":"BD","latitude":"24.42604570","longitude":"90.98206680"},{"name":"Khulna District","isoCode":"27","countryCode":"BD","latitude":"22.67377350","longitude":"89.39665810"},{"name":"Kurigram District","isoCode":"28","countryCode":"BD","latitude":"25.80724140","longitude":"89.62947460"},{"name":"Khagrachari District","isoCode":"29","countryCode":"BD","latitude":"23.13217510","longitude":"91.94902100"},{"name":"Kushtia District","isoCode":"30","countryCode":"BD","latitude":"23.89069950","longitude":"89.10993680"},{"name":"Lakshmipur District","isoCode":"31","countryCode":"BD","latitude":"22.94467440","longitude":"90.82819070"},{"name":"Lalmonirhat District","isoCode":"32","countryCode":"BD","latitude":"25.99233980","longitude":"89.28472510"},{"name":"Bahadia","isoCode":"33","countryCode":"BD","latitude":"23.78987120","longitude":"90.16714830"},{"name":"Mymensingh District","isoCode":"34","countryCode":"BD","latitude":"24.75385750","longitude":"90.40729190"},{"name":"Munshiganj District","isoCode":"35","countryCode":"BD","latitude":"23.49809310","longitude":"90.41266210"},{"name":"Madaripur District","isoCode":"36","countryCode":"BD","latitude":"23.23933460","longitude":"90.18696440"},{"name":"Moulvibazar District","isoCode":"38","countryCode":"BD","latitude":"24.30953440","longitude":"91.73149030"},{"name":"Meherpur District","isoCode":"39","countryCode":"BD","latitude":"23.80519910","longitude":"88.67235780"},{"name":"Narayanganj District","isoCode":"40","countryCode":"BD","latitude":"23.71466010","longitude":"90.56360900"},{"name":"Netrokona District","isoCode":"41","countryCode":"BD","latitude":"24.81032840","longitude":"90.86564150"},{"name":"Narail District","isoCode":"43","countryCode":"BD","latitude":"23.11629290","longitude":"89.58404040"},{"name":"Natore District","isoCode":"44","countryCode":"BD","latitude":"24.41024300","longitude":"89.00761770"},{"name":"Chapai Nawabganj District","isoCode":"45","countryCode":"BD","latitude":"24.74131110","longitude":"88.29120690"},{"name":"Nilphamari District","isoCode":"46","countryCode":"BD","latitude":"25.84827980","longitude":"88.94141340"},{"name":"Noakhali District","isoCode":"47","countryCode":"BD","latitude":"22.87237890","longitude":"91.09731840"},{"name":"Naogaon District","isoCode":"48","countryCode":"BD","latitude":"24.91315970","longitude":"88.75309520"},{"name":"Pabna District","isoCode":"49","countryCode":"BD","latitude":"24.15850500","longitude":"89.44807180"},{"name":"Pirojpur District","isoCode":"50","countryCode":"BD","latitude":"22.57907440","longitude":"89.97592640"},{"name":"Patuakhali District","isoCode":"51","countryCode":"BD","latitude":"22.22486320","longitude":"90.45475030"},{"name":"Panchagarh District","isoCode":"52","countryCode":"BD","latitude":"26.27087050","longitude":"88.59517510"},{"name":"Rajbari District","isoCode":"53","countryCode":"BD","latitude":"23.71513400","longitude":"89.58748190"},{"name":"Rajshahi District","isoCode":"54","countryCode":"BD","latitude":"24.37330870","longitude":"88.60487160"},{"name":"Rangpur District","isoCode":"55","countryCode":"BD","latitude":"25.74679250","longitude":"89.25083350"},{"name":"Rangamati Hill District","isoCode":"56","countryCode":"BD","latitude":"22.73241730","longitude":"92.29851340"},{"name":"Sherpur District","isoCode":"57","countryCode":"BD","latitude":"25.07462350","longitude":"90.14949040"},{"name":"Satkhira District","isoCode":"58","countryCode":"BD","latitude":"22.31548120","longitude":"89.11145250"},{"name":"Sirajganj District","isoCode":"59","countryCode":"BD","latitude":"24.31411150","longitude":"89.56996150"},{"name":"Sylhet District","isoCode":"60","countryCode":"BD","latitude":"24.89933570","longitude":"91.87004730"},{"name":"Sunamganj District","isoCode":"61","countryCode":"BD","latitude":"25.07145350","longitude":"91.39916270"},{"name":"Shariatpur District","isoCode":"62","countryCode":"BD","latitude":"23.24232140","longitude":"90.43477110"},{"name":"Tangail District","isoCode":"63","countryCode":"BD","latitude":"24.39174270","longitude":"89.99482570"},{"name":"Thakurgaon District","isoCode":"64","countryCode":"BD","latitude":"26.04183920","longitude":"88.42826160"},{"name":"Barisal Division","isoCode":"A","countryCode":"BD","latitude":"22.38111310","longitude":"90.33718890"},{"name":"Chittagong Division","isoCode":"B","countryCode":"BD","latitude":"23.17931570","longitude":"91.98815270"},{"name":"Dhaka Division","isoCode":"C","countryCode":"BD","latitude":"23.95357420","longitude":"90.14949880"},{"name":"Khulna Division","isoCode":"D","countryCode":"BD","latitude":"22.80878160","longitude":"89.24671910"},{"name":"Rajshahi Division","isoCode":"E","countryCode":"BD","latitude":"24.71057760","longitude":"88.94138650"},{"name":"Rangpur Division","isoCode":"F","countryCode":"BD","latitude":"25.84833880","longitude":"88.94138650"},{"name":"Sylhet Division","isoCode":"G","countryCode":"BD","latitude":"24.70498110","longitude":"91.67606910"},{"name":"Mymensingh Division","isoCode":"H","countryCode":"BD","latitude":"24.71362000","longitude":"90.45023680"},{"name":"Brussels-Capital Region","isoCode":"BRU","countryCode":"BE","latitude":"50.85034630","longitude":"4.35172110"},{"name":"Antwerp","isoCode":"VAN","countryCode":"BE","latitude":"51.21944750","longitude":"4.40246430"},{"name":"Flemish Brabant","isoCode":"VBR","countryCode":"BE","latitude":"50.88154340","longitude":"4.56459700"},{"name":"Flanders","isoCode":"VLG","countryCode":"BE","latitude":"51.01087060","longitude":"3.72646130"},{"name":"Limburg","isoCode":"VLI","countryCode":"BE","latitude":null,"longitude":null},{"name":"East Flanders","isoCode":"VOV","countryCode":"BE","latitude":"51.03621010","longitude":"3.73731240"},{"name":"West Flanders","isoCode":"VWV","countryCode":"BE","latitude":"40.01793340","longitude":"-105.28067330"},{"name":"Wallonia","isoCode":"WAL","countryCode":"BE","latitude":"50.41756370","longitude":"4.45100660"},{"name":"Walloon Brabant","isoCode":"WBR","countryCode":"BE","latitude":"50.63324100","longitude":"4.52431500"},{"name":"Hainaut","isoCode":"WHT","countryCode":"BE","latitude":"50.52570760","longitude":"4.06210170"},{"name":"Liège","isoCode":"WLG","countryCode":"BE","latitude":"50.63255740","longitude":"5.57966620"},{"name":"Luxembourg","isoCode":"WLX","countryCode":"BE","latitude":"49.81527300","longitude":"6.12958300"},{"name":"Namur","isoCode":"WNA","countryCode":"BE","latitude":"50.46738830","longitude":"4.87198540"},{"name":"Boucle du Mouhoun Region","isoCode":"01","countryCode":"BF","latitude":"12.41660000","longitude":"-3.41955270"},{"name":"Cascades Region","isoCode":"02","countryCode":"BF","latitude":"10.40729920","longitude":"-4.56244260"},{"name":"Centre","isoCode":"03","countryCode":"BF","latitude":null,"longitude":null},{"name":"Centre-Est Region","isoCode":"04","countryCode":"BF","latitude":"11.52476740","longitude":"-0.14949880"},{"name":"Centre-Nord Region","isoCode":"05","countryCode":"BF","latitude":"13.17244640","longitude":"-0.90566230"},{"name":"Centre-Ouest Region","isoCode":"06","countryCode":"BF","latitude":"11.87984660","longitude":"-2.30244600"},{"name":"Centre-Sud Region","isoCode":"07","countryCode":"BF","latitude":"11.52289110","longitude":"-1.05861350"},{"name":"Est Region","isoCode":"08","countryCode":"BF","latitude":"12.43655260","longitude":"0.90566230"},{"name":"Hauts-Bassins Region","isoCode":"09","countryCode":"BF","latitude":"11.49420030","longitude":"-4.23333550"},{"name":"Nord Region, Burkina Faso","isoCode":"10","countryCode":"BF","latitude":"13.71825200","longitude":"-2.30244600"},{"name":"Plateau-Central Region","isoCode":"11","countryCode":"BF","latitude":"12.25376480","longitude":"-0.75328090"},{"name":"Sahel Region","isoCode":"12","countryCode":"BF","latitude":"14.10008650","longitude":"-0.14949880"},{"name":"Sud-Ouest Region","isoCode":"13","countryCode":"BF","latitude":"10.42314930","longitude":"-3.25836260"},{"name":"Balé Province","isoCode":"BAL","countryCode":"BF","latitude":"11.78206020","longitude":"-3.01757120"},{"name":"Bam Province","isoCode":"BAM","countryCode":"BF","latitude":"13.44613300","longitude":"-1.59839590"},{"name":"Banwa Province","isoCode":"BAN","countryCode":"BF","latitude":"12.13230530","longitude":"-4.15137640"},{"name":"Bazèga Province","isoCode":"BAZ","countryCode":"BF","latitude":"11.97676920","longitude":"-1.44346900"},{"name":"Bougouriba Province","isoCode":"BGR","countryCode":"BF","latitude":"10.87226460","longitude":"-3.33889170"},{"name":"Boulgou","isoCode":"BLG","countryCode":"BF","latitude":"11.43367660","longitude":"-0.37483540"},{"name":"Comoé Province","isoCode":"COM","countryCode":"BF","latitude":"10.40729920","longitude":"-4.56244260"},{"name":"Ganzourgou Province","isoCode":"GAN","countryCode":"BF","latitude":"12.25376480","longitude":"-0.75328090"},{"name":"Gnagna Province","isoCode":"GNA","countryCode":"BF","latitude":"12.89749920","longitude":"0.07467670"},{"name":"Gourma Province","isoCode":"GOU","countryCode":"BF","latitude":"12.16244730","longitude":"0.67730460"},{"name":"Houet Province","isoCode":"HOU","countryCode":"BF","latitude":"11.13204470","longitude":"-4.23333550"},{"name":"Ioba Province","isoCode":"IOB","countryCode":"BF","latitude":"11.05620340","longitude":"-3.01757120"},{"name":"Kadiogo Province","isoCode":"KAD","countryCode":"BF","latitude":"12.34258970","longitude":"-1.44346900"},{"name":"Kénédougou Province","isoCode":"KEN","countryCode":"BF","latitude":"11.39193950","longitude":"-4.97665400"},{"name":"Komondjari Province","isoCode":"KMD","countryCode":"BF","latitude":"12.71265270","longitude":"0.67730460"},{"name":"Kompienga Province","isoCode":"KMP","countryCode":"BF","latitude":"11.52383620","longitude":"0.75328090"},{"name":"Koulpélogo Province","isoCode":"KOP","countryCode":"BF","latitude":"11.52476740","longitude":"0.14949880"},{"name":"Kossi Province","isoCode":"KOS","countryCode":"BF","latitude":"12.96045800","longitude":"-3.90626880"},{"name":"Kouritenga Province","isoCode":"KOT","countryCode":"BF","latitude":"12.16318130","longitude":"-0.22446620"},{"name":"Kourwéogo Province","isoCode":"KOW","countryCode":"BF","latitude":"12.70774950","longitude":"-1.75388170"},{"name":"Léraba Province","isoCode":"LER","countryCode":"BF","latitude":"10.66487850","longitude":"-5.31025050"},{"name":"Loroum Province","isoCode":"LOR","countryCode":"BF","latitude":"13.81298140","longitude":"-2.06651970"},{"name":"Mouhoun","isoCode":"MOU","countryCode":"BF","latitude":"12.14323810","longitude":"-3.33889170"},{"name":"Namentenga Province","isoCode":"NAM","countryCode":"BF","latitude":"13.08125840","longitude":"-0.52578230"},{"name":"Nahouri Province","isoCode":"NAO","countryCode":"BF","latitude":"11.25022670","longitude":"-1.13530200"},{"name":"Nayala Province","isoCode":"NAY","countryCode":"BF","latitude":"12.69645580","longitude":"-3.01757120"},{"name":"Noumbiel Province","isoCode":"NOU","countryCode":"BF","latitude":"9.84409460","longitude":"-2.97755580"},{"name":"Oubritenga Province","isoCode":"OUB","countryCode":"BF","latitude":"12.70960870","longitude":"-1.44346900"},{"name":"Oudalan Province","isoCode":"OUD","countryCode":"BF","latitude":"14.47190200","longitude":"-0.45023680"},{"name":"Passoré Province","isoCode":"PAS","countryCode":"BF","latitude":"12.88812210","longitude":"-2.22366670"},{"name":"Poni Province","isoCode":"PON","countryCode":"BF","latitude":"10.33259960","longitude":"-3.33889170"},{"name":"Séno Province","isoCode":"SEN","countryCode":"BF","latitude":"14.00722340","longitude":"-0.07467670"},{"name":"Sissili Province","isoCode":"SIS","countryCode":"BF","latitude":"11.24412190","longitude":"-2.22366670"},{"name":"Sanmatenga Province","isoCode":"SMT","countryCode":"BF","latitude":"13.35653040","longitude":"-1.05861350"},{"name":"Sanguié Province","isoCode":"SNG","countryCode":"BF","latitude":"12.15018610","longitude":"-2.69838680"},{"name":"Soum Province","isoCode":"SOM","countryCode":"BF","latitude":"14.09628410","longitude":"-1.36621600"},{"name":"Sourou Province","isoCode":"SOR","countryCode":"BF","latitude":"13.34180300","longitude":"-2.93757390"},{"name":"Tapoa Province","isoCode":"TAP","countryCode":"BF","latitude":"12.24970720","longitude":"1.67606910"},{"name":"Tuy Province","isoCode":"TUI","countryCode":"BF","latitude":"38.88868400","longitude":"-77.00471900"},{"name":"Yagha Province","isoCode":"YAG","countryCode":"BF","latitude":"13.35761570","longitude":"0.75328090"},{"name":"Yatenga Province","isoCode":"YAT","countryCode":"BF","latitude":"13.62493440","longitude":"-2.38136210"},{"name":"Ziro Province","isoCode":"ZIR","countryCode":"BF","latitude":"11.60949950","longitude":"-1.90992380"},{"name":"Zondoma Province","isoCode":"ZON","countryCode":"BF","latitude":"13.11659260","longitude":"-2.42087130"},{"name":"Zoundwéogo Province","isoCode":"ZOU","countryCode":"BF","latitude":"11.61411740","longitude":"-0.98206680"},{"name":"Blagoevgrad Province","isoCode":"01","countryCode":"BG","latitude":"42.02086140","longitude":"23.09433560"},{"name":"Burgas Province","isoCode":"02","countryCode":"BG","latitude":"42.50480000","longitude":"27.46260790"},{"name":"Varna Province","isoCode":"03","countryCode":"BG","latitude":"43.20464770","longitude":"27.91054880"},{"name":"Veliko Tarnovo Province","isoCode":"04","countryCode":"BG","latitude":"43.07565390","longitude":"25.61715000"},{"name":"Vidin Province","isoCode":"05","countryCode":"BG","latitude":"43.99617390","longitude":"22.86795150"},{"name":"Vratsa Province","isoCode":"06","countryCode":"BG","latitude":"43.21018060","longitude":"23.55292100"},{"name":"Gabrovo Province","isoCode":"07","countryCode":"BG","latitude":"42.86847000","longitude":"25.31688900"},{"name":"Dobrich Province","isoCode":"08","countryCode":"BG","latitude":"43.57278600","longitude":"27.82728020"},{"name":"Kardzhali Province","isoCode":"09","countryCode":"BG","latitude":"41.63384160","longitude":"25.37766870"},{"name":"Kyustendil Province","isoCode":"10","countryCode":"BG","latitude":"42.28687990","longitude":"22.69396350"},{"name":"Lovech Province","isoCode":"11","countryCode":"BG","latitude":"43.13677980","longitude":"24.71393350"},{"name":"Montana Province","isoCode":"12","countryCode":"BG","latitude":"43.40851480","longitude":"23.22575890"},{"name":"Pazardzhik Province","isoCode":"13","countryCode":"BG","latitude":"42.19275670","longitude":"24.33362260"},{"name":"Pernik Province","isoCode":"14","countryCode":"BG","latitude":"42.60519900","longitude":"23.03779160"},{"name":"Pleven Province","isoCode":"15","countryCode":"BG","latitude":"43.41701690","longitude":"24.60667080"},{"name":"Plovdiv Province","isoCode":"16","countryCode":"BG","latitude":"42.13540790","longitude":"24.74529040"},{"name":"Razgrad Province","isoCode":"17","countryCode":"BG","latitude":"43.52717050","longitude":"26.52412280"},{"name":"Ruse Province","isoCode":"18","countryCode":"BG","latitude":"43.83559640","longitude":"25.96561440"},{"name":"Silistra Province","isoCode":"19","countryCode":"BG","latitude":"44.11471010","longitude":"27.26714540"},{"name":"Sliven Province","isoCode":"20","countryCode":"BG","latitude":"42.68167020","longitude":"26.32285690"},{"name":"Smolyan Province","isoCode":"21","countryCode":"BG","latitude":"41.57741480","longitude":"24.70108710"},{"name":"Sofia City Province","isoCode":"22","countryCode":"BG","latitude":"42.75701090","longitude":"23.45046830"},{"name":"Sofia Province","isoCode":"23","countryCode":"BG","latitude":"42.67344000","longitude":"23.83349370"},{"name":"Stara Zagora Province","isoCode":"24","countryCode":"BG","latitude":"42.42577090","longitude":"25.63448550"},{"name":"Targovishte Province","isoCode":"25","countryCode":"BG","latitude":"43.24623490","longitude":"26.56912510"},{"name":"Haskovo Province","isoCode":"26","countryCode":"BG","latitude":"41.93441780","longitude":"25.55546720"},{"name":"Shumen","isoCode":"27","countryCode":"BG","latitude":"43.27123980","longitude":"26.93612860"},{"name":"Yambol Province","isoCode":"28","countryCode":"BG","latitude":"42.48414940","longitude":"26.50352960"},{"name":"Capital Governorate","isoCode":"13","countryCode":"BH","latitude":null,"longitude":null},{"name":"Southern Governorate","isoCode":"14","countryCode":"BH","latitude":"25.93810180","longitude":"50.57568870"},{"name":"Muharraq Governorate","isoCode":"15","countryCode":"BH","latitude":"26.26856530","longitude":"50.64825170"},{"name":"Central Governorate","isoCode":"16","countryCode":"BH","latitude":"26.14260930","longitude":"50.56532940"},{"name":"Northern Governorate","isoCode":"17","countryCode":"BH","latitude":"26.15519140","longitude":"50.48251730"},{"name":"Bubanza Province","isoCode":"BB","countryCode":"BI","latitude":"-3.15724030","longitude":"29.37149090"},{"name":"Bujumbura Rural Province","isoCode":"BL","countryCode":"BI","latitude":"-3.50901440","longitude":"29.46435900"},{"name":"Bujumbura Mairie Province","isoCode":"BM","countryCode":"BI","latitude":"-3.38841410","longitude":"29.34826460"},{"name":"Bururi Province","isoCode":"BR","countryCode":"BI","latitude":"-3.90068510","longitude":"29.51077080"},{"name":"Cankuzo Province","isoCode":"CA","countryCode":"BI","latitude":"-3.15277880","longitude":"30.61998950"},{"name":"Cibitoke Province","isoCode":"CI","countryCode":"BI","latitude":"-2.81028970","longitude":"29.18557850"},{"name":"Gitega Province","isoCode":"GI","countryCode":"BI","latitude":"-3.49290510","longitude":"29.92779470"},{"name":"Kirundo Province","isoCode":"KI","countryCode":"BI","latitude":"-2.57628820","longitude":"30.11273500"},{"name":"Karuzi Province","isoCode":"KR","countryCode":"BI","latitude":"-3.13403470","longitude":"30.11273500"},{"name":"Kayanza Province","isoCode":"KY","countryCode":"BI","latitude":"-3.00779810","longitude":"29.64991620"},{"name":"Makamba Province","isoCode":"MA","countryCode":"BI","latitude":"-4.32570620","longitude":"29.69626770"},{"name":"Muramvya Province","isoCode":"MU","countryCode":"BI","latitude":"-3.28983980","longitude":"29.64991620"},{"name":"Mwaro Province","isoCode":"MW","countryCode":"BI","latitude":"-3.50259180","longitude":"29.64991620"},{"name":"Muyinga Province","isoCode":"MY","countryCode":"BI","latitude":"-2.77935110","longitude":"30.29741990"},{"name":"Ngozi Province","isoCode":"NG","countryCode":"BI","latitude":"-2.89582430","longitude":"29.88152030"},{"name":"Rumonge Province","isoCode":"RM","countryCode":"BI","latitude":"-3.97540490","longitude":"29.43880140"},{"name":"Rutana Province","isoCode":"RT","countryCode":"BI","latitude":"-3.87915230","longitude":"30.06652360"},{"name":"Ruyigi Province","isoCode":"RY","countryCode":"BI","latitude":"-3.44620700","longitude":"30.25127280"},{"name":"Atakora Department","isoCode":"AK","countryCode":"BJ","latitude":"10.79549310","longitude":"1.67606910"},{"name":"Alibori Department","isoCode":"AL","countryCode":"BJ","latitude":"10.96810930","longitude":"2.77798130"},{"name":"Atlantique Department","isoCode":"AQ","countryCode":"BJ","latitude":"6.65883910","longitude":"2.22366670"},{"name":"Borgou Department","isoCode":"BO","countryCode":"BJ","latitude":"9.53408640","longitude":"2.77798130"},{"name":"Collines Department","isoCode":"CO","countryCode":"BJ","latitude":"8.30222970","longitude":"2.30244600"},{"name":"Donga Department","isoCode":"DO","countryCode":"BJ","latitude":"9.71918670","longitude":"1.67606910"},{"name":"Kouffo Department","isoCode":"KO","countryCode":"BJ","latitude":"7.00358940","longitude":"1.75388170"},{"name":"Littoral Department","isoCode":"LI","countryCode":"BJ","latitude":"6.38069730","longitude":"2.44063870"},{"name":"Mono Department","isoCode":"MO","countryCode":"BJ","latitude":"37.92186080","longitude":"-118.95286450"},{"name":"Ouémé Department","isoCode":"OU","countryCode":"BJ","latitude":"6.61481520","longitude":"2.49999180"},{"name":"Plateau Department","isoCode":"PL","countryCode":"BJ","latitude":"7.34451410","longitude":"2.53960300"},{"name":"Zou Department","isoCode":"ZO","countryCode":"BJ","latitude":"7.34692680","longitude":"2.06651970"},{"name":"Devonshire Parish","isoCode":"DEV","countryCode":"BM","latitude":"32.30380620","longitude":"-64.76069540"},{"name":"Hamilton Parish","isoCode":"HA","countryCode":"BM","latitude":"32.34494320","longitude":"-64.72365000"},{"name":"Paget Parish","isoCode":"PAG","countryCode":"BM","latitude":"32.28107400","longitude":"-64.77847870"},{"name":"Pembroke Parish","isoCode":"PEM","countryCode":"BM","latitude":"32.30076720","longitude":"-64.79626300"},{"name":"Sandys Parish","isoCode":"SAN","countryCode":"BM","latitude":"32.29995280","longitude":"-64.86741030"},{"name":"Saint George\'s Parish","isoCode":"SGE","countryCode":"BM","latitude":"17.12577590","longitude":"-62.56198110"},{"name":"Smith\'s Parish,","isoCode":"SMI","countryCode":"BM","latitude":"32.31339660","longitude":"-64.73105880"},{"name":"Southampton Parish","isoCode":"SOU","countryCode":"BM","latitude":"32.25400950","longitude":"-64.82590580"},{"name":"Warwick Parish","isoCode":"WAR","countryCode":"BM","latitude":"32.26615340","longitude":"-64.80811980"},{"name":"Belait District","isoCode":"BE","countryCode":"BN","latitude":"4.37507490","longitude":"114.61928990"},{"name":"Brunei-Muara District","isoCode":"BM","countryCode":"BN","latitude":"4.93112060","longitude":"114.95168690"},{"name":"Temburong District","isoCode":"TE","countryCode":"BN","latitude":"4.62041280","longitude":"115.14148400"},{"name":"Tutong District","isoCode":"TU","countryCode":"BN","latitude":"4.71403730","longitude":"114.66679390"},{"name":"Beni Department","isoCode":"B","countryCode":"BO","latitude":"-14.37827470","longitude":"-65.09577920"},{"name":"Cochabamba Department","isoCode":"C","countryCode":"BO","latitude":"-17.56816750","longitude":"-65.47573600"},{"name":"Chuquisaca Department","isoCode":"H","countryCode":"BO","latitude":"-20.02491440","longitude":"-64.14782360"},{"name":"La Paz Department","isoCode":"L","countryCode":"BO","latitude":null,"longitude":null},{"name":"Pando Department","isoCode":"N","countryCode":"BO","latitude":"-10.79889010","longitude":"-66.99880110"},{"name":"Oruro Department","isoCode":"O","countryCode":"BO","latitude":"-18.57115790","longitude":"-67.76159830"},{"name":"Potosí Department","isoCode":"P","countryCode":"BO","latitude":"-20.62471300","longitude":"-66.99880110"},{"name":"Santa Cruz Department","isoCode":"S","countryCode":"BO","latitude":"-16.74760370","longitude":"-62.07509980"},{"name":"Tarija Department","isoCode":"T","countryCode":"BO","latitude":"-21.58315950","longitude":"-63.95861110"},{"name":"Acre","isoCode":"AC","countryCode":"BR","latitude":"-9.02379600","longitude":"-70.81199500"},{"name":"Alagoas","isoCode":"AL","countryCode":"BR","latitude":"-9.57130580","longitude":"-36.78195050"},{"name":"Amazonas","isoCode":"AM","countryCode":"BR","latitude":"-3.07000000","longitude":"-61.66000000"},{"name":"Amapá","isoCode":"AP","countryCode":"BR","latitude":"0.90199250","longitude":"-52.00295650"},{"name":"Bahia","isoCode":"BA","countryCode":"BR","latitude":"-11.40987400","longitude":"-41.28085700"},{"name":"Ceará","isoCode":"CE","countryCode":"BR","latitude":"-5.49839770","longitude":"-39.32062410"},{"name":"Distrito Federal","isoCode":"DF","countryCode":"BR","latitude":"-15.79976540","longitude":"-47.86447150"},{"name":"Espírito Santo","isoCode":"ES","countryCode":"BR","latitude":"-19.18342290","longitude":"-40.30886260"},{"name":"Goiás","isoCode":"GO","countryCode":"BR","latitude":"-15.82703690","longitude":"-49.83622370"},{"name":"Maranhão","isoCode":"MA","countryCode":"BR","latitude":"-4.96094980","longitude":"-45.27441590"},{"name":"Minas Gerais","isoCode":"MG","countryCode":"BR","latitude":"-18.51217800","longitude":"-44.55503080"},{"name":"Mato Grosso do Sul","isoCode":"MS","countryCode":"BR","latitude":"-20.77222950","longitude":"-54.78515310"},{"name":"Mato Grosso","isoCode":"MT","countryCode":"BR","latitude":"-12.68187120","longitude":"-56.92109900"},{"name":"Pará","isoCode":"PA","countryCode":"BR","latitude":"-1.99812710","longitude":"-54.93061520"},{"name":"Paraíba","isoCode":"PB","countryCode":"BR","latitude":"-7.23996090","longitude":"-36.78195050"},{"name":"Pernambuco","isoCode":"PE","countryCode":"BR","latitude":"-8.81371730","longitude":"-36.95410700"},{"name":"Piauí","isoCode":"PI","countryCode":"BR","latitude":"-7.71834010","longitude":"-42.72892360"},{"name":"Paraná","isoCode":"PR","countryCode":"BR","latitude":"-25.25208880","longitude":"-52.02154150"},{"name":"Rio de Janeiro","isoCode":"RJ","countryCode":"BR","latitude":"-22.90684670","longitude":"-43.17289650"},{"name":"Rio Grande do Norte","isoCode":"RN","countryCode":"BR","latitude":"-5.40258030","longitude":"-36.95410700"},{"name":"Rondônia","isoCode":"RO","countryCode":"BR","latitude":"-11.50573410","longitude":"-63.58061100"},{"name":"Roraima","isoCode":"RR","countryCode":"BR","latitude":"2.73759710","longitude":"-62.07509980"},{"name":"Rio Grande do Sul","isoCode":"RS","countryCode":"BR","latitude":"-30.03463160","longitude":"-51.21769860"},{"name":"Santa Catarina","isoCode":"SC","countryCode":"BR","latitude":"-27.33000000","longitude":"-49.44000000"},{"name":"Sergipe","isoCode":"SE","countryCode":"BR","latitude":"-10.57409340","longitude":"-37.38565810"},{"name":"São Paulo","isoCode":"SP","countryCode":"BR","latitude":"-23.55051990","longitude":"-46.63330940"},{"name":"Tocantins","isoCode":"TO","countryCode":"BR","latitude":"-10.17528000","longitude":"-48.29824740"},{"name":"Acklins and Crooked Islands","isoCode":"AC","countryCode":"BS","latitude":"22.36577080","longitude":"-74.05351260"},{"name":"Acklins","isoCode":"AK","countryCode":"BS","latitude":"22.36577080","longitude":"-74.05351260"},{"name":"Bimini","isoCode":"BI","countryCode":"BS","latitude":"24.64153250","longitude":"-79.85062260"},{"name":"Black Point","isoCode":"BP","countryCode":"BS","latitude":"41.39510240","longitude":"-71.46505560"},{"name":"Berry Islands","isoCode":"BY","countryCode":"BS","latitude":"25.62500420","longitude":"-77.82522030"},{"name":"Central Eleuthera","isoCode":"CE","countryCode":"BS","latitude":"25.13620370","longitude":"-76.14359150"},{"name":"Cat Island","isoCode":"CI","countryCode":"BS","latitude":"30.22801360","longitude":"-89.10149330"},{"name":"Crooked Island","isoCode":"CK","countryCode":"BS","latitude":"22.63909820","longitude":"-74.00650900"},{"name":"Central Abaco","isoCode":"CO","countryCode":"BS","latitude":"26.35550290","longitude":"-77.14851630"},{"name":"Central Andros","isoCode":"CS","countryCode":"BS","latitude":"24.46884820","longitude":"-77.97386500"},{"name":"East Grand Bahama","isoCode":"EG","countryCode":"BS","latitude":"26.65828230","longitude":"-78.22482910"},{"name":"Exuma","isoCode":"EX","countryCode":"BS","latitude":"23.61925980","longitude":"-75.96954650"},{"name":"Fresh Creek","isoCode":"FC","countryCode":"BS","latitude":"40.65437560","longitude":"-73.89479390"},{"name":"Freeport","isoCode":"FP","countryCode":"BS","latitude":"42.29668610","longitude":"-89.62122710"},{"name":"Grand Cay","isoCode":"GC","countryCode":"BS","latitude":"27.21626150","longitude":"-78.32305590"},{"name":"Governor\'s Harbour","isoCode":"GH","countryCode":"BS","latitude":"25.19480960","longitude":"-76.24396220"},{"name":"Green Turtle Cay","isoCode":"GT","countryCode":"BS","latitude":"26.77471070","longitude":"-77.32957080"},{"name":"Harbour Island","isoCode":"HI","countryCode":"BS","latitude":"25.50011000","longitude":"-76.63405110"},{"name":"High Rock","isoCode":"HR","countryCode":"BS","latitude":"46.68434150","longitude":"-121.90174610"},{"name":"Hope Town","isoCode":"HT","countryCode":"BS","latitude":"26.50095040","longitude":"-76.99598720"},{"name":"Inagua","isoCode":"IN","countryCode":"BS","latitude":"21.06560660","longitude":"-73.32370800"},{"name":"Kemps Bay","isoCode":"KB","countryCode":"BS","latitude":"24.02364000","longitude":"-77.54534900"},{"name":"Long Island","isoCode":"LI","countryCode":"BS","latitude":"40.78914200","longitude":"-73.13496100"},{"name":"Mangrove Cay","isoCode":"MC","countryCode":"BS","latitude":"24.14814250","longitude":"-77.76809520"},{"name":"Mayaguana District","isoCode":"MG","countryCode":"BS","latitude":"22.40177140","longitude":"-73.06413960"},{"name":"Marsh Harbour","isoCode":"MH","countryCode":"BS","latitude":"26.52416530","longitude":"-77.09098090"},{"name":"Nichollstown and Berry Islands","isoCode":"NB","countryCode":"BS","latitude":"25.72362340","longitude":"-77.83101040"},{"name":"North Eleuthera","isoCode":"NE","countryCode":"BS","latitude":"25.46475170","longitude":"-76.67592200"},{"name":"North Abaco","isoCode":"NO","countryCode":"BS","latitude":"26.78716970","longitude":"-77.43577390"},{"name":"New Providence","isoCode":"NP","countryCode":"BS","latitude":"40.69843480","longitude":"-74.40154050"},{"name":"North Andros","isoCode":"NS","countryCode":"BS","latitude":"24.70638050","longitude":"-78.01953870"},{"name":"Rum Cay District","isoCode":"RC","countryCode":"BS","latitude":"23.68546760","longitude":"-74.83901620"},{"name":"Ragged Island","isoCode":"RI","countryCode":"BS","latitude":"41.59743100","longitude":"-71.26020200"},{"name":"Rock Sound","isoCode":"RS","countryCode":"BS","latitude":"39.01424430","longitude":"-95.67089890"},{"name":"South Andros","isoCode":"SA","countryCode":"BS","latitude":"23.97135560","longitude":"-77.60778650"},{"name":"South Eleuthera","isoCode":"SE","countryCode":"BS","latitude":"24.77085620","longitude":"-76.21314740"},{"name":"South Abaco","isoCode":"SO","countryCode":"BS","latitude":"26.06405910","longitude":"-77.26350380"},{"name":"Sandy Point","isoCode":"SP","countryCode":"BS","latitude":"39.01454640","longitude":"-76.39989250"},{"name":"San Salvador and Rum Cay","isoCode":"SR","countryCode":"BS","latitude":"23.68546760","longitude":"-74.83901620"},{"name":"San Salvador Island","isoCode":"SS","countryCode":"BS","latitude":"24.07755460","longitude":"-74.47600880"},{"name":"Spanish Wells","isoCode":"SW","countryCode":"BS","latitude":"26.32505990","longitude":"-81.79803280"},{"name":"West Grand Bahama","isoCode":"WG","countryCode":"BS","latitude":"26.65944700","longitude":"-78.52065000"},{"name":"Paro District","isoCode":"11","countryCode":"BT","latitude":"27.42859490","longitude":"89.41665160"},{"name":"Chukha District","isoCode":"12","countryCode":"BT","latitude":"27.07843040","longitude":"89.47421770"},{"name":"Haa District","isoCode":"13","countryCode":"BT","latitude":"27.26516690","longitude":"89.17059980"},{"name":"Samtse District","isoCode":"14","countryCode":"BT","latitude":"27.02918320","longitude":"89.05615320"},{"name":"Thimphu District","isoCode":"15","countryCode":"BT","latitude":"27.47122160","longitude":"89.63390410"},{"name":"Tsirang District","isoCode":"21","countryCode":"BT","latitude":"27.03220700","longitude":"90.18696440"},{"name":"Dagana District","isoCode":"22","countryCode":"BT","latitude":"27.03228610","longitude":"89.88793040"},{"name":"Punakha District","isoCode":"23","countryCode":"BT","latitude":"27.69037160","longitude":"89.88793040"},{"name":"Wangdue Phodrang District","isoCode":"24","countryCode":"BT","latitude":"27.45260460","longitude":"90.06749280"},{"name":"Sarpang District","isoCode":"31","countryCode":"BT","latitude":"26.93730410","longitude":"90.48799160"},{"name":"Trongsa District","isoCode":"32","countryCode":"BT","latitude":"27.50022690","longitude":"90.50806340"},{"name":"Bumthang District","isoCode":"33","countryCode":"BT","latitude":"27.64183900","longitude":"90.67730460"},{"name":"Zhemgang District","isoCode":"34","countryCode":"BT","latitude":"27.07697500","longitude":"90.82940020"},{"name":"Trashigang District","isoCode":"41","countryCode":"BT","latitude":"27.25667950","longitude":"91.75388170"},{"name":"Mongar District","isoCode":"42","countryCode":"BT","latitude":"27.26170590","longitude":"91.28910360"},{"name":"Pemagatshel District","isoCode":"43","countryCode":"BT","latitude":"27.00238200","longitude":"91.34692470"},{"name":"Lhuntse District","isoCode":"44","countryCode":"BT","latitude":"27.82649890","longitude":"91.13530200"},{"name":"Samdrup Jongkhar District","isoCode":"45","countryCode":"BT","latitude":"26.80356820","longitude":"91.50392070"},{"name":"Gasa District","isoCode":"GA","countryCode":"BT","latitude":"28.01858860","longitude":"89.92532330"},{"name":"Central District","isoCode":"CE","countryCode":"BW","latitude":null,"longitude":null},{"name":"Ghanzi District","isoCode":"GH","countryCode":"BW","latitude":"-21.86523140","longitude":"21.85685860"},{"name":"Kgalagadi District","isoCode":"KG","countryCode":"BW","latitude":"-24.75502850","longitude":"21.85685860"},{"name":"Kgatleng District","isoCode":"KL","countryCode":"BW","latitude":"-24.19704450","longitude":"26.23046160"},{"name":"Kweneng District","isoCode":"KW","countryCode":"BW","latitude":"-23.83672490","longitude":"25.28375850"},{"name":"North-East District","isoCode":"NE","countryCode":"BW","latitude":"37.58844610","longitude":"-94.68637820"},{"name":"Ngamiland","isoCode":"NG","countryCode":"BW","latitude":"-19.19053210","longitude":"23.00119890"},{"name":"North-West District","isoCode":"NW","countryCode":"BW","latitude":"39.34463070","longitude":"-76.68542830"},{"name":"South-East District","isoCode":"SE","countryCode":"BW","latitude":"31.21637980","longitude":"-82.35270440"},{"name":"Southern District","isoCode":"SO","countryCode":"BW","latitude":null,"longitude":null},{"name":"Brest Region","isoCode":"BR","countryCode":"BY","latitude":"52.52966410","longitude":"25.46064800"},{"name":"Minsk","isoCode":"HM","countryCode":"BY","latitude":"53.90060110","longitude":"27.55897200"},{"name":"Gomel Region","isoCode":"HO","countryCode":"BY","latitude":"52.16487540","longitude":"29.13332510"},{"name":"Grodno Region","isoCode":"HR","countryCode":"BY","latitude":"53.65999450","longitude":"25.34485710"},{"name":"Mogilev Region","isoCode":"MA","countryCode":"BY","latitude":"53.51017910","longitude":"30.40064440"},{"name":"Minsk Region","isoCode":"MI","countryCode":"BY","latitude":"54.10678890","longitude":"27.41292450"},{"name":"Vitebsk Region","isoCode":"VI","countryCode":"BY","latitude":"55.29598330","longitude":"28.75836270"},{"name":"Belize District","isoCode":"BZ","countryCode":"BZ","latitude":"17.56776790","longitude":"-88.40160410"},{"name":"Cayo District","isoCode":"CY","countryCode":"BZ","latitude":"17.09844450","longitude":"-88.94138650"},{"name":"Corozal District","isoCode":"CZL","countryCode":"BZ","latitude":"18.13492380","longitude":"-88.24611830"},{"name":"Orange Walk District","isoCode":"OW","countryCode":"BZ","latitude":"17.76035300","longitude":"-88.86469800"},{"name":"Stann Creek District","isoCode":"SC","countryCode":"BZ","latitude":"16.81166310","longitude":"-88.40160410"},{"name":"Toledo District","isoCode":"TOL","countryCode":"BZ","latitude":"16.24919230","longitude":"-88.86469800"},{"name":"Alberta","isoCode":"AB","countryCode":"CA","latitude":"53.93327060","longitude":"-116.57650350"},{"name":"British Columbia","isoCode":"BC","countryCode":"CA","latitude":"53.72666830","longitude":"-127.64762050"},{"name":"Manitoba","isoCode":"MB","countryCode":"CA","latitude":"53.76086080","longitude":"-98.81387620"},{"name":"New Brunswick","isoCode":"NB","countryCode":"CA","latitude":"46.56531630","longitude":"-66.46191640"},{"name":"Newfoundland and Labrador","isoCode":"NL","countryCode":"CA","latitude":"53.13550910","longitude":"-57.66043640"},{"name":"Nova Scotia","isoCode":"NS","countryCode":"CA","latitude":"44.68198660","longitude":"-63.74431100"},{"name":"Northwest Territories","isoCode":"NT","countryCode":"CA","latitude":"64.82554410","longitude":"-124.84573340"},{"name":"Nunavut","isoCode":"NU","countryCode":"CA","latitude":"70.29977110","longitude":"-83.10757700"},{"name":"Ontario","isoCode":"ON","countryCode":"CA","latitude":"51.25377500","longitude":"-85.32321400"},{"name":"Prince Edward Island","isoCode":"PE","countryCode":"CA","latitude":"46.51071200","longitude":"-63.41681360"},{"name":"Quebec","isoCode":"QC","countryCode":"CA","latitude":"52.93991590","longitude":"-73.54913610"},{"name":"Saskatchewan","isoCode":"SK","countryCode":"CA","latitude":"52.93991590","longitude":"-106.45086390"},{"name":"Yukon","isoCode":"YT","countryCode":"CA","latitude":"35.50672150","longitude":"-97.76254410"},{"name":"Kongo Central","isoCode":"BC","countryCode":"CD","latitude":"-5.23656850","longitude":"13.91439900"},{"name":"Bas-Uélé","isoCode":"BU","countryCode":"CD","latitude":"3.99010090","longitude":"24.90422080"},{"name":"Équateur","isoCode":"EQ","countryCode":"CD","latitude":"-1.83123900","longitude":"-78.18340600"},{"name":"Haut-Katanga","isoCode":"HK","countryCode":"CD","latitude":"-10.41020750","longitude":"27.54958460"},{"name":"Haut-Lomami","isoCode":"HL","countryCode":"CD","latitude":"-7.70527520","longitude":"24.90422080"},{"name":"Haut-Uélé","isoCode":"HU","countryCode":"CD","latitude":"3.58451540","longitude":"28.29943500"},{"name":"Ituri","isoCode":"IT","countryCode":"CD","latitude":"1.59576820","longitude":"29.41793240"},{"name":"Kasaï Central","isoCode":"KC","countryCode":"CD","latitude":"-8.44045910","longitude":"20.41659340"},{"name":"Kasaï Oriental","isoCode":"KE","countryCode":"CD","latitude":"-6.03362300","longitude":"23.57285010"},{"name":"Kwango","isoCode":"KG","countryCode":"CD","latitude":"-6.43374090","longitude":"17.66888700"},{"name":"Kwilu","isoCode":"KL","countryCode":"CD","latitude":"-5.11888250","longitude":"18.42760470"},{"name":"Kinshasa","isoCode":"KN","countryCode":"CD","latitude":"-4.44193110","longitude":"15.26629310"},{"name":"Kasaï","isoCode":"KS","countryCode":"CD","latitude":"-5.04719790","longitude":"20.71224650"},{"name":"Lomami","isoCode":"LO","countryCode":"CD","latitude":"-6.14539310","longitude":"24.52426400"},{"name":"Lualaba","isoCode":"LU","countryCode":"CD","latitude":"-10.48086980","longitude":"25.62978160"},{"name":"Maniema","isoCode":"MA","countryCode":"CD","latitude":"-3.07309290","longitude":"26.04138890"},{"name":"Mai-Ndombe","isoCode":"MN","countryCode":"CD","latitude":"-2.63574340","longitude":"18.42760470"},{"name":"Mongala","isoCode":"MO","countryCode":"CD","latitude":"1.99623240","longitude":"21.47528510"},{"name":"Nord-Kivu","isoCode":"NK","countryCode":"CD","latitude":"-0.79177290","longitude":"29.04599270"},{"name":"Nord-Ubangi","isoCode":"NU","countryCode":"CD","latitude":"3.78787260","longitude":"21.47528510"},{"name":"Sankuru","isoCode":"SA","countryCode":"CD","latitude":"-2.84374530","longitude":"23.38235450"},{"name":"Sud-Kivu","isoCode":"SK","countryCode":"CD","latitude":"-3.01165800","longitude":"28.29943500"},{"name":"Sud-Ubangi","isoCode":"SU","countryCode":"CD","latitude":"3.22999420","longitude":"19.18800470"},{"name":"Tanganyika","isoCode":"TA","countryCode":"CD","latitude":"-6.27401180","longitude":"27.92490020"},{"name":"Tshopo","isoCode":"TO","countryCode":"CD","latitude":"0.54554620","longitude":"24.90422080"},{"name":"Tshuapa","isoCode":"TU","countryCode":"CD","latitude":"-0.99030230","longitude":"23.02888440"},{"name":"Ouham Prefecture","isoCode":"AC","countryCode":"CF","latitude":"7.09091100","longitude":"17.66888700"},{"name":"Bamingui-Bangoran Prefecture","isoCode":"BB","countryCode":"CF","latitude":"8.27334550","longitude":"20.71224650"},{"name":"Bangui","isoCode":"BGF","countryCode":"CF","latitude":"4.39467350","longitude":"18.55818990"},{"name":"Basse-Kotto Prefecture","isoCode":"BK","countryCode":"CF","latitude":"4.87193190","longitude":"21.28450250"},{"name":"Haute-Kotto Prefecture","isoCode":"HK","countryCode":"CF","latitude":"7.79643790","longitude":"23.38235450"},{"name":"Haut-Mbomou Prefecture","isoCode":"HM","countryCode":"CF","latitude":"6.25371340","longitude":"25.47335540"},{"name":"Mambéré-Kadéï","isoCode":"HS","countryCode":"CF","latitude":"4.70556530","longitude":"15.96998780"},{"name":"Nana-Grébizi Economic Prefecture","isoCode":"KB","countryCode":"CF","latitude":"7.18486070","longitude":"19.37832060"},{"name":"Kémo Prefecture","isoCode":"KG","countryCode":"CF","latitude":"5.88677940","longitude":"19.37832060"},{"name":"Lobaye Prefecture","isoCode":"LB","countryCode":"CF","latitude":"4.35259810","longitude":"17.47951730"},{"name":"Mbomou Prefecture","isoCode":"MB","countryCode":"CF","latitude":"5.55683700","longitude":"23.76328280"},{"name":"Ombella-M\'Poko Prefecture","isoCode":"MP","countryCode":"CF","latitude":"5.11888250","longitude":"18.42760470"},{"name":"Nana-Mambéré Prefecture","isoCode":"NM","countryCode":"CF","latitude":"5.69321350","longitude":"15.21948080"},{"name":"Ouham-Pendé Prefecture","isoCode":"OP","countryCode":"CF","latitude":"6.48509840","longitude":"16.15809370"},{"name":"Sangha-Mbaéré","isoCode":"SE","countryCode":"CF","latitude":"3.43686070","longitude":"16.34637910"},{"name":"Ouaka Prefecture","isoCode":"UK","countryCode":"CF","latitude":"6.31682160","longitude":"20.71224650"},{"name":"Vakaga Prefecture","isoCode":"VK","countryCode":"CF","latitude":"9.51132960","longitude":"22.23840170"},{"name":"Bouenza Department","isoCode":"11","countryCode":"CG","latitude":"-4.11280790","longitude":"13.72891670"},{"name":"Pool Department","isoCode":"12","countryCode":"CG","latitude":"-3.77626280","longitude":"14.84546190"},{"name":"Sangha Department","isoCode":"13","countryCode":"CG","latitude":"1.46623280","longitude":"15.40680790"},{"name":"Plateaux Department","isoCode":"14","countryCode":"CG","latitude":"-2.06800880","longitude":"15.40680790"},{"name":"Cuvette-Ouest Department","isoCode":"15","countryCode":"CG","latitude":"0.14475500","longitude":"14.47233010"},{"name":"Pointe-Noire","isoCode":"16","countryCode":"CG","latitude":"-4.76916230","longitude":"11.86636200"},{"name":"Lékoumou Department","isoCode":"2","countryCode":"CG","latitude":"-3.17038200","longitude":"13.35872880"},{"name":"Kouilou Department","isoCode":"5","countryCode":"CG","latitude":"-4.14284130","longitude":"11.88917210"},{"name":"Likouala Department","isoCode":"7","countryCode":"CG","latitude":"2.04392400","longitude":"17.66888700"},{"name":"Cuvette Department","isoCode":"8","countryCode":"CG","latitude":"-0.28774460","longitude":"16.15809370"},{"name":"Niari Department","isoCode":"9","countryCode":"CG","latitude":"-3.18427000","longitude":"12.25479190"},{"name":"Brazzaville","isoCode":"BZV","countryCode":"CG","latitude":"-4.26335970","longitude":"15.24288530"},{"name":"Aargau","isoCode":"AG","countryCode":"CH","latitude":"47.38766640","longitude":"8.25542950"},{"name":"Appenzell Innerrhoden","isoCode":"AI","countryCode":"CH","latitude":"47.31619250","longitude":"9.43165730"},{"name":"Appenzell Ausserrhoden","isoCode":"AR","countryCode":"CH","latitude":"47.36648100","longitude":"9.30009160"},{"name":"Bern","isoCode":"BE","countryCode":"CH","latitude":"46.79886210","longitude":"7.70807010"},{"name":"Basel-Land","isoCode":"BL","countryCode":"CH","latitude":"47.44181220","longitude":"7.76440020"},{"name":"Basel-Stadt","isoCode":"BS","countryCode":"CH","latitude":"47.56666700","longitude":"7.60000000"},{"name":"Fribourg","isoCode":"FR","countryCode":"CH","latitude":"46.68167480","longitude":"7.11726350"},{"name":"Geneva","isoCode":"GE","countryCode":"CH","latitude":"46.21800730","longitude":"6.12169250"},{"name":"Glarus","isoCode":"GL","countryCode":"CH","latitude":"47.04112320","longitude":"9.06790000"},{"name":"Graubünden","isoCode":"GR","countryCode":"CH","latitude":"46.65698710","longitude":"9.57802570"},{"name":"Jura","isoCode":"JU","countryCode":"CH","latitude":"47.34444740","longitude":"7.14306080"},{"name":"Lucerne","isoCode":"LU","countryCode":"CH","latitude":"47.07956710","longitude":"8.16624450"},{"name":"Neuchâtel","isoCode":"NE","countryCode":"CH","latitude":"46.98998740","longitude":"6.92927320"},{"name":"Nidwalden","isoCode":"NW","countryCode":"CH","latitude":"46.92670160","longitude":"8.38499820"},{"name":"Obwalden","isoCode":"OW","countryCode":"CH","latitude":"46.87785800","longitude":"8.25124900"},{"name":"St. Gallen","isoCode":"SG","countryCode":"CH","latitude":"47.14562540","longitude":"9.35043320"},{"name":"Schaffhausen","isoCode":"SH","countryCode":"CH","latitude":"47.70093640","longitude":"8.56800400"},{"name":"Solothurn","isoCode":"SO","countryCode":"CH","latitude":"47.33207170","longitude":"7.63883850"},{"name":"Schwyz","isoCode":"SZ","countryCode":"CH","latitude":"47.02071380","longitude":"8.65298840"},{"name":"Thurgau","isoCode":"TG","countryCode":"CH","latitude":"47.60378560","longitude":"9.05573710"},{"name":"Ticino","isoCode":"TI","countryCode":"CH","latitude":"46.33173400","longitude":"8.80045290"},{"name":"Uri","isoCode":"UR","countryCode":"CH","latitude":"41.48606470","longitude":"-71.53085370"},{"name":"Vaud","isoCode":"VD","countryCode":"CH","latitude":"46.56131350","longitude":"6.53676500"},{"name":"Valais","isoCode":"VS","countryCode":"CH","latitude":"46.19046140","longitude":"7.54492260"},{"name":"Zug","isoCode":"ZG","countryCode":"CH","latitude":"47.16615050","longitude":"8.51547490"},{"name":"Zürich","isoCode":"ZH","countryCode":"CH","latitude":"47.35953600","longitude":"8.63564520"},{"name":"Lagunes region","isoCode":"01","countryCode":"CI","latitude":"5.88273340","longitude":"-4.23333550"},{"name":"Haut-Sassandra","isoCode":"02","countryCode":"CI","latitude":"6.87578480","longitude":"-6.57833870"},{"name":"Savanes Region","isoCode":"03","countryCode":"CI","latitude":null,"longitude":null},{"name":"Vallée du Bandama Region","isoCode":"04","countryCode":"CI","latitude":"8.27897800","longitude":"-4.89356270"},{"name":"Moyen-Comoé","isoCode":"05","countryCode":"CI","latitude":"6.65149170","longitude":"-3.50034540"},{"name":"Dix-Huit Montagnes","isoCode":"06","countryCode":"CI","latitude":"7.37623730","longitude":"-7.43813550"},{"name":"Lacs Region","isoCode":"07","countryCode":"CI","latitude":"47.73958660","longitude":"-70.41866520"},{"name":"Bas-Sassandra Region","isoCode":"09","countryCode":"CI","latitude":"5.35679160","longitude":"-6.74939930"},{"name":"Denguélé Region","isoCode":"10","countryCode":"CI","latitude":"9.46623720","longitude":"-7.43813550"},{"name":"N\'zi-Comoé","isoCode":"11","countryCode":"CI","latitude":"7.24567490","longitude":"-4.23333550"},{"name":"Marahoué Region","isoCode":"12","countryCode":"CI","latitude":"6.88462070","longitude":"-5.89871390"},{"name":"Sud-Comoé","isoCode":"13","countryCode":"CI","latitude":"5.55279300","longitude":"-3.25836260"},{"name":"Worodougou","isoCode":"14","countryCode":"CI","latitude":"8.25489620","longitude":"-6.57833870"},{"name":"Sud-Bandama","isoCode":"15","countryCode":"CI","latitude":"5.53570830","longitude":"-5.56172790"},{"name":"Agnéby","isoCode":"16","countryCode":"CI","latitude":"5.32245030","longitude":"-4.34495290"},{"name":"Bafing Region","isoCode":"17","countryCode":"CI","latitude":"8.32520470","longitude":"-7.52472430"},{"name":"Fromager","isoCode":"18","countryCode":"CI","latitude":"45.54502130","longitude":"-73.60462230"},{"name":"Moyen-Cavally","isoCode":"19","countryCode":"CI","latitude":"6.52087930","longitude":"-7.61142170"},{"name":"Abidjan","isoCode":"AB","countryCode":"CI","latitude":"5.35995170","longitude":"-4.00825630"},{"name":"Bas-Sassandra District","isoCode":"BS","countryCode":"CI","latitude":"5.27983560","longitude":"-6.15269850"},{"name":"Comoé District","isoCode":"CM","countryCode":"CI","latitude":"5.55279300","longitude":"-3.25836260"},{"name":"Denguélé District","isoCode":"DN","countryCode":"CI","latitude":"48.07077630","longitude":"-68.56093410"},{"name":"Gôh-Djiboua District","isoCode":"GD","countryCode":"CI","latitude":"5.87113930","longitude":"-5.56172790"},{"name":"Lacs District","isoCode":"LC","countryCode":"CI","latitude":"48.19801690","longitude":"-80.45644120"},{"name":"Lagunes District","isoCode":"LG","countryCode":"CI","latitude":"5.88273340","longitude":"-4.23333550"},{"name":"Montagnes District","isoCode":"MG","countryCode":"CI","latitude":"7.37623730","longitude":"-7.43813550"},{"name":"Sassandra-Marahoué District","isoCode":"SM","countryCode":"CI","latitude":"6.88033480","longitude":"-6.23759470"},{"name":"Vallée du Bandama District","isoCode":"VB","countryCode":"CI","latitude":"8.27897800","longitude":"-4.89356270"},{"name":"Woroba District","isoCode":"WR","countryCode":"CI","latitude":"8.24913720","longitude":"-6.92091350"},{"name":"Yamoussoukro","isoCode":"YM","countryCode":"CI","latitude":"6.82762280","longitude":"-5.28934330"},{"name":"Zanzan Region","isoCode":"ZZ","countryCode":"CI","latitude":"8.82079040","longitude":"-3.41955270"},{"name":"Aisén del General Carlos Ibañez del Campo","isoCode":"AI","countryCode":"CL","latitude":"-46.37834500","longitude":"-72.30076230"},{"name":"Antofagasta","isoCode":"AN","countryCode":"CL","latitude":"-23.83691040","longitude":"-69.28775350"},{"name":"Arica y Parinacota","isoCode":"AP","countryCode":"CL","latitude":"-18.59404850","longitude":"-69.47845410"},{"name":"La Araucanía","isoCode":"AR","countryCode":"CL","latitude":"-38.94892100","longitude":"-72.33111300"},{"name":"Atacama","isoCode":"AT","countryCode":"CL","latitude":"-27.56605580","longitude":"-70.05031400"},{"name":"Biobío","isoCode":"BI","countryCode":"CL","latitude":"-37.44644280","longitude":"-72.14161320"},{"name":"Coquimbo","isoCode":"CO","countryCode":"CL","latitude":"-30.54018100","longitude":"-70.81199530"},{"name":"Libertador General Bernardo O\'Higgins","isoCode":"LI","countryCode":"CL","latitude":"-34.57553740","longitude":"-71.00223110"},{"name":"Los Lagos","isoCode":"LL","countryCode":"CL","latitude":"-41.91977790","longitude":"-72.14161320"},{"name":"Los Ríos","isoCode":"LR","countryCode":"CL","latitude":"-40.23102170","longitude":"-72.33111300"},{"name":"Magallanes y de la Antártica Chilena","isoCode":"MA","countryCode":"CL","latitude":"-52.20643160","longitude":"-72.16850010"},{"name":"Maule","isoCode":"ML","countryCode":"CL","latitude":"-35.51636030","longitude":"-71.57239530"},{"name":"Ñuble","isoCode":"NB","countryCode":"CL","latitude":"-36.72257430","longitude":"-71.76224810"},{"name":"Región Metropolitana de Santiago","isoCode":"RM","countryCode":"CL","latitude":"-33.43755450","longitude":"-70.65048960"},{"name":"Tarapacá","isoCode":"TA","countryCode":"CL","latitude":"-20.20287990","longitude":"-69.28775350"},{"name":"Valparaíso","isoCode":"VS","countryCode":"CL","latitude":"-33.04723800","longitude":"-71.61268850"},{"name":"Adamawa","isoCode":"AD","countryCode":"CM","latitude":"9.32647510","longitude":"12.39838530"},{"name":"Centre","isoCode":"CE","countryCode":"CM","latitude":null,"longitude":null},{"name":"Far North","isoCode":"EN","countryCode":"CM","latitude":"66.76134510","longitude":"124.12375300"},{"name":"East","isoCode":"ES","countryCode":"CM","latitude":"39.01853360","longitude":"-94.27924110"},{"name":"Littoral","isoCode":"LT","countryCode":"CM","latitude":"48.46227570","longitude":"-68.51780710"},{"name":"North","isoCode":"NO","countryCode":"CM","latitude":"37.09024000","longitude":"-95.71289100"},{"name":"Northwest","isoCode":"NW","countryCode":"CM","latitude":"36.37118570","longitude":"-94.19346060"},{"name":"West","isoCode":"OU","countryCode":"CM","latitude":"37.03649890","longitude":"-95.67059870"},{"name":"South","isoCode":"SU","countryCode":"CM","latitude":"37.63159500","longitude":"-97.34584090"},{"name":"Southwest","isoCode":"SW","countryCode":"CM","latitude":"36.19088130","longitude":"-95.88974480"},{"name":"Anhui","isoCode":"AH","countryCode":"CN","latitude":"30.60067730","longitude":"117.92490020"},{"name":"Beijing","isoCode":"BJ","countryCode":"CN","latitude":"39.90419990","longitude":"116.40739630"},{"name":"Chongqing","isoCode":"CQ","countryCode":"CN","latitude":"29.43158610","longitude":"106.91225100"},{"name":"Fujian","isoCode":"FJ","countryCode":"CN","latitude":"26.48368420","longitude":"117.92490020"},{"name":"Guangdong","isoCode":"GD","countryCode":"CN","latitude":"23.37903330","longitude":"113.76328280"},{"name":"Gansu","isoCode":"GS","countryCode":"CN","latitude":"35.75183260","longitude":"104.28611160"},{"name":"Guangxi Zhuang","isoCode":"GX","countryCode":"CN","latitude":"23.72475990","longitude":"108.80761950"},{"name":"Guizhou","isoCode":"GZ","countryCode":"CN","latitude":"26.84296450","longitude":"107.29028390"},{"name":"Henan","isoCode":"HA","countryCode":"CN","latitude":"34.29043020","longitude":"113.38235450"},{"name":"Hubei","isoCode":"HB","countryCode":"CN","latitude":"30.73781180","longitude":"112.23840170"},{"name":"Hebei","isoCode":"HE","countryCode":"CN","latitude":"37.89565940","longitude":"114.90422080"},{"name":"Hainan","isoCode":"HI","countryCode":"CN","latitude":"19.56639470","longitude":"109.94968600"},{"name":"Hong Kong SAR","isoCode":"HK","countryCode":"CN","latitude":"22.31930390","longitude":"114.16936110"},{"name":"Heilongjiang","isoCode":"HL","countryCode":"CN","latitude":"47.12164720","longitude":"128.73823100"},{"name":"Hunan","isoCode":"HN","countryCode":"CN","latitude":"36.73412940","longitude":"-95.93449020"},{"name":"Jilin","isoCode":"JL","countryCode":"CN","latitude":"43.83788300","longitude":"126.54957200"},{"name":"Jiangsu","isoCode":"JS","countryCode":"CN","latitude":"33.14017150","longitude":"119.78892480"},{"name":"Jiangxi","isoCode":"JX","countryCode":"CN","latitude":"27.08745640","longitude":"114.90422080"},{"name":"Liaoning","isoCode":"LN","countryCode":"CN","latitude":"41.94365430","longitude":"122.52903760"},{"name":"Macau SAR","isoCode":"MO","countryCode":"CN","latitude":"22.19874500","longitude":"113.54387300"},{"name":"Inner Mongolia","isoCode":"NM","countryCode":"CN","latitude":"43.37822000","longitude":"115.05948150"},{"name":"Ningxia Huizu","isoCode":"NX","countryCode":"CN","latitude":"37.19873100","longitude":"106.15809370"},{"name":"Qinghai","isoCode":"QH","countryCode":"CN","latitude":"35.74479800","longitude":"96.40773580"},{"name":"Sichuan","isoCode":"SC","countryCode":"CN","latitude":"30.26380320","longitude":"102.80547530"},{"name":"Shandong","isoCode":"SD","countryCode":"CN","latitude":"37.80060640","longitude":"-122.26999180"},{"name":"Shanghai","isoCode":"SH","countryCode":"CN","latitude":"31.23041600","longitude":"121.47370100"},{"name":"Shaanxi","isoCode":"SN","countryCode":"CN","latitude":"35.39399080","longitude":"109.18800470"},{"name":"Shanxi","isoCode":"SX","countryCode":"CN","latitude":"37.24256490","longitude":"111.85685860"},{"name":"Tianjin","isoCode":"TJ","countryCode":"CN","latitude":"39.12522910","longitude":"117.01534350"},{"name":"Taiwan","isoCode":"TW","countryCode":"CN","latitude":"23.69781000","longitude":"120.96051500"},{"name":"Xinjiang","isoCode":"XJ","countryCode":"CN","latitude":"42.52463570","longitude":"87.53958550"},{"name":"Xizang","isoCode":"XZ","countryCode":"CN","latitude":"30.15336050","longitude":"88.78786780"},{"name":"Yunnan","isoCode":"YN","countryCode":"CN","latitude":"24.47528470","longitude":"101.34310580"},{"name":"Zhejiang","isoCode":"ZJ","countryCode":"CN","latitude":"29.14164320","longitude":"119.78892480"},{"name":"Amazonas","isoCode":"AMA","countryCode":"CO","latitude":"-1.44291230","longitude":"-71.57239530"},{"name":"Antioquia","isoCode":"ANT","countryCode":"CO","latitude":"7.19860640","longitude":"-75.34121790"},{"name":"Arauca","isoCode":"ARA","countryCode":"CO","latitude":"6.54730600","longitude":"-71.00223110"},{"name":"Atlántico","isoCode":"ATL","countryCode":"CO","latitude":"10.69661590","longitude":"-74.87410450"},{"name":"Bolívar","isoCode":"BOL","countryCode":"CO","latitude":"8.67043820","longitude":"-74.03001220"},{"name":"Boyacá","isoCode":"BOY","countryCode":"CO","latitude":"5.45451100","longitude":"-73.36200300"},{"name":"Caldas","isoCode":"CAL","countryCode":"CO","latitude":"5.29826000","longitude":"-75.24790610"},{"name":"Caquetá","isoCode":"CAQ","countryCode":"CO","latitude":"0.86989200","longitude":"-73.84190630"},{"name":"Casanare","isoCode":"CAS","countryCode":"CO","latitude":"5.75892690","longitude":"-71.57239530"},{"name":"Cauca","isoCode":"CAU","countryCode":"CO","latitude":"2.70498130","longitude":"-76.82596520"},{"name":"Cesar","isoCode":"CES","countryCode":"CO","latitude":"9.33729480","longitude":"-73.65362090"},{"name":"Chocó","isoCode":"CHO","countryCode":"CO","latitude":"5.25280330","longitude":"-76.82596520"},{"name":"Córdoba","isoCode":"COR","countryCode":"CO","latitude":"8.04929300","longitude":"-75.57405000"},{"name":"Cundinamarca","isoCode":"CUN","countryCode":"CO","latitude":"5.02600300","longitude":"-74.03001220"},{"name":"Bogotá D.C.","isoCode":"DC","countryCode":"CO","latitude":"4.28204150","longitude":"-74.50270420"},{"name":"Guainía","isoCode":"GUA","countryCode":"CO","latitude":"2.58539300","longitude":"-68.52471490"},{"name":"Guaviare","isoCode":"GUV","countryCode":"CO","latitude":"2.04392400","longitude":"-72.33111300"},{"name":"Huila","isoCode":"HUI","countryCode":"CO","latitude":"2.53593490","longitude":"-75.52766990"},{"name":"La Guajira","isoCode":"LAG","countryCode":"CO","latitude":"11.35477430","longitude":"-72.52048270"},{"name":"Magdalena","isoCode":"MAG","countryCode":"CO","latitude":"10.41130140","longitude":"-74.40566120"},{"name":"Meta","isoCode":"MET","countryCode":"CO","latitude":"39.76732580","longitude":"-104.97535950"},{"name":"Nariño","isoCode":"NAR","countryCode":"CO","latitude":"1.28915100","longitude":"-77.35794000"},{"name":"Norte de Santander","isoCode":"NSA","countryCode":"CO","latitude":"7.94628310","longitude":"-72.89880690"},{"name":"Putumayo","isoCode":"PUT","countryCode":"CO","latitude":"0.43595060","longitude":"-75.52766990"},{"name":"Quindío","isoCode":"QUI","countryCode":"CO","latitude":"4.46101910","longitude":"-75.66735600"},{"name":"Risaralda","isoCode":"RIS","countryCode":"CO","latitude":"5.31584750","longitude":"-75.99276520"},{"name":"Santander","isoCode":"SAN","countryCode":"CO","latitude":"6.64370760","longitude":"-73.65362090"},{"name":"Archipiélago de San Andrés, Providencia y Santa Catalina","isoCode":"SAP","countryCode":"CO","latitude":"12.55673240","longitude":"-81.71852530"},{"name":"Sucre","isoCode":"SUC","countryCode":"CO","latitude":"8.81397700","longitude":"-74.72328300"},{"name":"Tolima","isoCode":"TOL","countryCode":"CO","latitude":"4.09251680","longitude":"-75.15453810"},{"name":"Valle del Cauca","isoCode":"VAC","countryCode":"CO","latitude":"3.80088930","longitude":"-76.64127120"},{"name":"Vaupés","isoCode":"VAU","countryCode":"CO","latitude":"0.85535610","longitude":"-70.81199530"},{"name":"Vichada","isoCode":"VID","countryCode":"CO","latitude":"4.42344520","longitude":"-69.28775350"},{"name":"Alajuela Province","isoCode":"A","countryCode":"CR","latitude":"10.39158300","longitude":"-84.43827210"},{"name":"Provincia de Cartago","isoCode":"C","countryCode":"CR","latitude":"9.86223110","longitude":"-83.92141870"},{"name":"Guanacaste Province","isoCode":"G","countryCode":"CR","latitude":"10.62673990","longitude":"-85.44367060"},{"name":"Heredia Province","isoCode":"H","countryCode":"CR","latitude":"10.47352300","longitude":"-84.01674230"},{"name":"Limón Province","isoCode":"L","countryCode":"CR","latitude":"9.98963980","longitude":"-83.03324170"},{"name":"Puntarenas Province","isoCode":"P","countryCode":"CR","latitude":"9.21695310","longitude":"-83.33618800"},{"name":"San José Province","isoCode":"SJ","countryCode":"CR","latitude":"9.91297270","longitude":"-84.07682940"},{"name":"Pinar del Río Province","isoCode":"01","countryCode":"CU","latitude":"22.40762560","longitude":"-83.84730150"},{"name":"Havana Province","isoCode":"03","countryCode":"CU","latitude":"23.05406980","longitude":"-82.34518900"},{"name":"Matanzas Province","isoCode":"04","countryCode":"CU","latitude":"22.57671230","longitude":"-81.33994140"},{"name":"Villa Clara Province","isoCode":"05","countryCode":"CU","latitude":"22.49372040","longitude":"-79.91927020"},{"name":"Cienfuegos Province","isoCode":"06","countryCode":"CU","latitude":"22.23797830","longitude":"-80.36586500"},{"name":"Sancti Spíritus Province","isoCode":"07","countryCode":"CU","latitude":"21.99382140","longitude":"-79.47038850"},{"name":"Ciego de Ávila Province","isoCode":"08","countryCode":"CU","latitude":"21.93295150","longitude":"-78.56608520"},{"name":"Camagüey Province","isoCode":"09","countryCode":"CU","latitude":"21.21672470","longitude":"-77.74520810"},{"name":"Las Tunas Province","isoCode":"10","countryCode":"CU","latitude":"21.06051620","longitude":"-76.91820970"},{"name":"Holguín Province","isoCode":"11","countryCode":"CU","latitude":"20.78378930","longitude":"-75.80690820"},{"name":"Granma Province","isoCode":"12","countryCode":"CU","latitude":"20.38449020","longitude":"-76.64127120"},{"name":"Santiago de Cuba Province","isoCode":"13","countryCode":"CU","latitude":"20.23976820","longitude":"-75.99276520"},{"name":"Guantánamo Province","isoCode":"14","countryCode":"CU","latitude":"20.14559170","longitude":"-74.87410450"},{"name":"Artemisa Province","isoCode":"15","countryCode":"CU","latitude":"22.75229030","longitude":"-82.99316070"},{"name":"Mayabeque Province","isoCode":"16","countryCode":"CU","latitude":"22.89265290","longitude":"-81.95348150"},{"name":"Isla de la Juventud","isoCode":"99","countryCode":"CU","latitude":"21.70847370","longitude":"-82.82202320"},{"name":"Barlavento Islands","isoCode":"B","countryCode":"CV","latitude":"16.82368450","longitude":"-23.99348810"},{"name":"Brava","isoCode":"BR","countryCode":"CV","latitude":"40.98977780","longitude":"-73.68357150"},{"name":"Boa Vista","isoCode":"BV","countryCode":"CV","latitude":"38.74346600","longitude":"-120.73042970"},{"name":"Santa Catarina","isoCode":"CA","countryCode":"CV","latitude":"-27.24233920","longitude":"-50.21885560"},{"name":"Santa Catarina do Fogo","isoCode":"CF","countryCode":"CV","latitude":"14.93091040","longitude":"-24.32225770"},{"name":"Santa Cruz","isoCode":"CR","countryCode":"CV","latitude":"36.97411710","longitude":"-122.03079630"},{"name":"Maio Municipality","isoCode":"MA","countryCode":"CV","latitude":"15.20030980","longitude":"-23.16797930"},{"name":"Mosteiros","isoCode":"MO","countryCode":"CV","latitude":"37.89043480","longitude":"-25.82075560"},{"name":"Paul","isoCode":"PA","countryCode":"CV","latitude":"37.06250000","longitude":"-95.67706800"},{"name":"Porto Novo","isoCode":"PN","countryCode":"CV","latitude":"6.49685740","longitude":"2.62885230"},{"name":"Praia","isoCode":"PR","countryCode":"CV","latitude":"14.93305000","longitude":"-23.51332670"},{"name":"Ribeira Brava Municipality","isoCode":"RB","countryCode":"CV","latitude":"16.60707390","longitude":"-24.20338430"},{"name":"Ribeira Grande","isoCode":"RG","countryCode":"CV","latitude":"37.82103690","longitude":"-25.51481370"},{"name":"Ribeira Grande de Santiago","isoCode":"RS","countryCode":"CV","latitude":"14.98302980","longitude":"-23.65617250"},{"name":"Sotavento Islands","isoCode":"S","countryCode":"CV","latitude":"15.00000000","longitude":"-24.00000000"},{"name":"São Domingos","isoCode":"SD","countryCode":"CV","latitude":"15.02861650","longitude":"-23.56392200"},{"name":"São Filipe","isoCode":"SF","countryCode":"CV","latitude":"14.89516790","longitude":"-24.49456360"},{"name":"Sal","isoCode":"SL","countryCode":"CV","latitude":"26.59581220","longitude":"-80.20450830"},{"name":"São Miguel","isoCode":"SM","countryCode":"CV","latitude":"37.78041100","longitude":"-25.49704660"},{"name":"São Lourenço dos Órgãos","isoCode":"SO","countryCode":"CV","latitude":"15.05378410","longitude":"-23.60856120"},{"name":"São Vicente","isoCode":"SV","countryCode":"CV","latitude":"-23.96071570","longitude":"-46.39620220"},{"name":"Tarrafal","isoCode":"TA","countryCode":"CV","latitude":"15.27605780","longitude":"-23.74840770"},{"name":"Tarrafal de São Nicolau","isoCode":"TS","countryCode":"CV","latitude":"16.56364980","longitude":"-24.35494200"},{"name":"Nicosia District (Lefkoşa)","isoCode":"01","countryCode":"CY","latitude":"35.18556590","longitude":"33.38227640"},{"name":"Limassol District (Leymasun)","isoCode":"02","countryCode":"CY","latitude":"34.70713010","longitude":"33.02261740"},{"name":"Larnaca District (Larnaka)","isoCode":"03","countryCode":"CY","latitude":"34.85072060","longitude":"33.48319060"},{"name":"Famagusta District (Mağusa)","isoCode":"04","countryCode":"CY","latitude":"35.28570230","longitude":"33.84112880"},{"name":"Paphos District (Pafos)","isoCode":"05","countryCode":"CY","latitude":"34.91645940","longitude":"32.49200880"},{"name":"Kyrenia District (Keryneia)","isoCode":"06","countryCode":"CY","latitude":"35.29919400","longitude":"33.23632460"},{"name":"Praha, Hlavní město","isoCode":"10","countryCode":"CZ","latitude":"50.07553810","longitude":"14.43780050"},{"name":"Středočeský kraj","isoCode":"20","countryCode":"CZ","latitude":"49.87822230","longitude":"14.93629550"},{"name":"Benešov","isoCode":"201","countryCode":"CZ","latitude":"49.69008280","longitude":"14.77643990"},{"name":"Beroun","isoCode":"202","countryCode":"CZ","latitude":"49.95734280","longitude":"13.98407150"},{"name":"Kladno","isoCode":"203","countryCode":"CZ","latitude":"50.19402580","longitude":"14.10436570"},{"name":"Kolín","isoCode":"204","countryCode":"CZ","latitude":"49.98832930","longitude":"15.05519770"},{"name":"Kutná Hora","isoCode":"205","countryCode":"CZ","latitude":"49.94920890","longitude":"15.24704400"},{"name":"Mělník","isoCode":"206","countryCode":"CZ","latitude":"50.31044150","longitude":"14.51792230"},{"name":"Mladá Boleslav","isoCode":"207","countryCode":"CZ","latitude":"50.42523170","longitude":"14.93624770"},{"name":"Nymburk","isoCode":"208","countryCode":"CZ","latitude":"50.18558160","longitude":"15.04366040"},{"name":"Praha-východ","isoCode":"209","countryCode":"CZ","latitude":"49.93893070","longitude":"14.79244720"},{"name":"Praha-západ","isoCode":"20A","countryCode":"CZ","latitude":"49.89352350","longitude":"14.32937790"},{"name":"Příbram","isoCode":"20B","countryCode":"CZ","latitude":"49.69479590","longitude":"14.08238100"},{"name":"Rakovník","isoCode":"20C","countryCode":"CZ","latitude":"50.10612300","longitude":"13.73966230"},{"name":"Jihočeský kraj","isoCode":"31","countryCode":"CZ","latitude":"48.94577890","longitude":"14.44160550"},{"name":"České Budějovice","isoCode":"311","countryCode":"CZ","latitude":"48.97755530","longitude":"14.51507470"},{"name":"Český Krumlov","isoCode":"312","countryCode":"CZ","latitude":"48.81273540","longitude":"14.31746570"},{"name":"Jindřichův Hradec","isoCode":"313","countryCode":"CZ","latitude":"49.14448230","longitude":"15.00613890"},{"name":"Písek","isoCode":"314","countryCode":"CZ","latitude":"49.34199380","longitude":"14.24697600"},{"name":"Prachatice","isoCode":"315","countryCode":"CZ","latitude":"49.01091000","longitude":"14.00000050"},{"name":"Strakonice","isoCode":"316","countryCode":"CZ","latitude":"49.26040430","longitude":"13.91030850"},{"name":"Tábor","isoCode":"317","countryCode":"CZ","latitude":"49.36462930","longitude":"14.71912930"},{"name":"Plzeňský kraj","isoCode":"32","countryCode":"CZ","latitude":"49.41348120","longitude":"13.31572460"},{"name":"Domažlice","isoCode":"321","countryCode":"CZ","latitude":"49.43970270","longitude":"12.93114350"},{"name":"Klatovy","isoCode":"322","countryCode":"CZ","latitude":"49.39555490","longitude":"13.29509370"},{"name":"Plzeň-město","isoCode":"323","countryCode":"CZ","latitude":"49.73843140","longitude":"13.37363710"},{"name":"Plzeň-jih","isoCode":"324","countryCode":"CZ","latitude":"49.59048850","longitude":"13.57158610"},{"name":"Plzeň-sever","isoCode":"325","countryCode":"CZ","latitude":"49.87748930","longitude":"13.25374280"},{"name":"Rokycany","isoCode":"326","countryCode":"CZ","latitude":"49.82628270","longitude":"13.68749430"},{"name":"Tachov","isoCode":"327","countryCode":"CZ","latitude":"49.79878030","longitude":"12.63619210"},{"name":"Karlovarský kraj","isoCode":"41","countryCode":"CZ","latitude":"50.14350000","longitude":"12.75018990"},{"name":"Cheb","isoCode":"411","countryCode":"CZ","latitude":"50.07953340","longitude":"12.36986360"},{"name":"Karlovy Vary","isoCode":"412","countryCode":"CZ","latitude":"50.14350000","longitude":"12.75018990"},{"name":"Sokolov","isoCode":"413","countryCode":"CZ","latitude":"50.20134340","longitude":"12.60546360"},{"name":"Ústecký kraj","isoCode":"42","countryCode":"CZ","latitude":"50.61190370","longitude":"13.78700860"},{"name":"Děčín","isoCode":"421","countryCode":"CZ","latitude":"50.77255630","longitude":"14.21276120"},{"name":"Chomutov","isoCode":"422","countryCode":"CZ","latitude":"50.45838720","longitude":"13.30179100"},{"name":"Litoměřice","isoCode":"423","countryCode":"CZ","latitude":"50.53841970","longitude":"14.13054580"},{"name":"Louny","isoCode":"424","countryCode":"CZ","latitude":"50.35398120","longitude":"13.80335510"},{"name":"Most","isoCode":"425","countryCode":"CZ","latitude":"37.15540830","longitude":"-94.29488840"},{"name":"Teplice","isoCode":"426","countryCode":"CZ","latitude":"50.65846050","longitude":"13.75132270"},{"name":"Ústí nad Labem","isoCode":"427","countryCode":"CZ","latitude":"50.61190370","longitude":"13.78700860"},{"name":"Liberecký kraj","isoCode":"51","countryCode":"CZ","latitude":"50.65942400","longitude":"14.76324240"},{"name":"Česká Lípa","isoCode":"511","countryCode":"CZ","latitude":"50.67852010","longitude":"14.53969910"},{"name":"Jablonec nad Nisou","isoCode":"512","countryCode":"CZ","latitude":"50.72205280","longitude":"15.17031350"},{"name":"Liberec","isoCode":"513","countryCode":"CZ","latitude":"50.75641010","longitude":"14.99650410"},{"name":"Semily","isoCode":"514","countryCode":"CZ","latitude":"50.60515760","longitude":"15.32814090"},{"name":"Královéhradecký kraj","isoCode":"52","countryCode":"CZ","latitude":"50.35124840","longitude":"15.79764590"},{"name":"Hradec Králové","isoCode":"521","countryCode":"CZ","latitude":"50.24148050","longitude":"15.67430000"},{"name":"Jičín","isoCode":"522","countryCode":"CZ","latitude":"50.43533250","longitude":"15.36104400"},{"name":"Náchod","isoCode":"523","countryCode":"CZ","latitude":"50.41457220","longitude":"16.16563470"},{"name":"Rychnov nad Kněžnou","isoCode":"524","countryCode":"CZ","latitude":"50.16596510","longitude":"16.27768420"},{"name":"Trutnov","isoCode":"525","countryCode":"CZ","latitude":"50.56538380","longitude":"15.90909230"},{"name":"Pardubický kraj","isoCode":"53","countryCode":"CZ","latitude":"49.94444790","longitude":"16.28569160"},{"name":"Chrudim","isoCode":"531","countryCode":"CZ","latitude":"49.88302160","longitude":"15.82908660"},{"name":"Pardubice","isoCode":"532","countryCode":"CZ","latitude":"49.94444790","longitude":"16.28569160"},{"name":"Svitavy","isoCode":"533","countryCode":"CZ","latitude":"49.75516290","longitude":"16.46918610"},{"name":"Ústí nad Orlicí","isoCode":"534","countryCode":"CZ","latitude":"49.97218010","longitude":"16.39966170"},{"name":"Kraj Vysočina","isoCode":"63","countryCode":"CZ","latitude":"49.44900520","longitude":"15.64059340"},{"name":"Havlíčkův Brod","isoCode":"631","countryCode":"CZ","latitude":"49.60433640","longitude":"15.57965520"},{"name":"Jihlava","isoCode":"632","countryCode":"CZ","latitude":"49.39837820","longitude":"15.58704150"},{"name":"Pelhřimov","isoCode":"633","countryCode":"CZ","latitude":"49.43062070","longitude":"15.22298300"},{"name":"Třebíč","isoCode":"634","countryCode":"CZ","latitude":"49.21478690","longitude":"15.87955160"},{"name":"Žďár nad Sázavou","isoCode":"635","countryCode":"CZ","latitude":"49.56430120","longitude":"15.93910300"},{"name":"Jihomoravský kraj","isoCode":"64","countryCode":"CZ","latitude":"48.95445280","longitude":"16.76768990"},{"name":"Blansko","isoCode":"641","countryCode":"CZ","latitude":"49.36485020","longitude":"16.64775520"},{"name":"Brno-město","isoCode":"642","countryCode":"CZ","latitude":"49.19506020","longitude":"16.60683710"},{"name":"Brno-venkov","isoCode":"643","countryCode":"CZ","latitude":"49.12501380","longitude":"16.45588240"},{"name":"Břeclav","isoCode":"644","countryCode":"CZ","latitude":"48.75314000","longitude":"16.88251690"},{"name":"Hodonín","isoCode":"645","countryCode":"CZ","latitude":"48.85293910","longitude":"17.12600250"},{"name":"Vyškov","isoCode":"646","countryCode":"CZ","latitude":"49.21274450","longitude":"16.98559270"},{"name":"Znojmo","isoCode":"647","countryCode":"CZ","latitude":"48.92723270","longitude":"16.10378080"},{"name":"Olomoucký kraj","isoCode":"71","countryCode":"CZ","latitude":"49.65865490","longitude":"17.08114060"},{"name":"Jeseník","isoCode":"711","countryCode":"CZ","latitude":"50.22462490","longitude":"17.19804710"},{"name":"Olomouc","isoCode":"712","countryCode":"CZ","latitude":"49.59377800","longitude":"17.25087870"},{"name":"Prostějov","isoCode":"713","countryCode":"CZ","latitude":"49.44184010","longitude":"17.12779040"},{"name":"Přerov","isoCode":"714","countryCode":"CZ","latitude":"49.46713560","longitude":"17.50773320"},{"name":"Šumperk","isoCode":"715","countryCode":"CZ","latitude":"49.97784070","longitude":"16.97177540"},{"name":"Zlínský kraj","isoCode":"72","countryCode":"CZ","latitude":"49.21622960","longitude":"17.77203530"},{"name":"Kroměříž","isoCode":"721","countryCode":"CZ","latitude":"49.29165820","longitude":"17.39938000"},{"name":"Uherské Hradiště","isoCode":"722","countryCode":"CZ","latitude":"49.05979690","longitude":"17.49585010"},{"name":"Vsetín","isoCode":"723","countryCode":"CZ","latitude":"49.37932500","longitude":"18.06181620"},{"name":"Zlín","isoCode":"724","countryCode":"CZ","latitude":"49.16960520","longitude":"17.80252200"},{"name":"Moravskoslezský kraj","isoCode":"80","countryCode":"CZ","latitude":"49.73053270","longitude":"18.23326370"},{"name":"Bruntál","isoCode":"801","countryCode":"CZ","latitude":"49.98817670","longitude":"17.46369410"},{"name":"Frýdek-Místek","isoCode":"802","countryCode":"CZ","latitude":"49.68193050","longitude":"18.36732160"},{"name":"Karviná","isoCode":"803","countryCode":"CZ","latitude":"49.85665240","longitude":"18.54321860"},{"name":"Nový Jičín","isoCode":"804","countryCode":"CZ","latitude":"49.59432510","longitude":"18.01353560"},{"name":"Opava","isoCode":"805","countryCode":"CZ","latitude":"49.90837570","longitude":"17.91633800"},{"name":"Ostrava-město","isoCode":"806","countryCode":"CZ","latitude":"49.82092260","longitude":"18.26252430"},{"name":"Brandenburg","isoCode":"BB","countryCode":"DE","latitude":"52.41252870","longitude":"12.53164440"},{"name":"Berlin","isoCode":"BE","countryCode":"DE","latitude":"52.52000660","longitude":"13.40495400"},{"name":"Baden-Württemberg","isoCode":"BW","countryCode":"DE","latitude":"48.66160370","longitude":"9.35013360"},{"name":"Bavaria","isoCode":"BY","countryCode":"DE","latitude":"48.79044720","longitude":"11.49788950"},{"name":"Bremen","isoCode":"HB","countryCode":"DE","latitude":"53.07929620","longitude":"8.80169360"},{"name":"Hesse","isoCode":"HE","countryCode":"DE","latitude":"50.65205150","longitude":"9.16243760"},{"name":"Hamburg","isoCode":"HH","countryCode":"DE","latitude":"53.55108460","longitude":"9.99368190"},{"name":"Mecklenburg-Vorpommern","isoCode":"MV","countryCode":"DE","latitude":"53.61265050","longitude":"12.42959530"},{"name":"Lower Saxony","isoCode":"NI","countryCode":"DE","latitude":"52.63670360","longitude":"9.84507660"},{"name":"North Rhine-Westphalia","isoCode":"NW","countryCode":"DE","latitude":"51.43323670","longitude":"7.66159380"},{"name":"Rhineland-Palatinate","isoCode":"RP","countryCode":"DE","latitude":"50.11834600","longitude":"7.30895270"},{"name":"Schleswig-Holstein","isoCode":"SH","countryCode":"DE","latitude":"54.21936720","longitude":"9.69611670"},{"name":"Saarland","isoCode":"SL","countryCode":"DE","latitude":"49.39642340","longitude":"7.02296070"},{"name":"Saxony","isoCode":"SN","countryCode":"DE","latitude":"51.10454070","longitude":"13.20173840"},{"name":"Saxony-Anhalt","isoCode":"ST","countryCode":"DE","latitude":"51.95026490","longitude":"11.69227340"},{"name":"Thuringia","isoCode":"TH","countryCode":"DE","latitude":"51.01098920","longitude":"10.84534600"},{"name":"Arta Region","isoCode":"AR","countryCode":"DJ","latitude":"11.52555280","longitude":"42.84794740"},{"name":"Ali Sabieh Region","isoCode":"AS","countryCode":"DJ","latitude":"11.19289730","longitude":"42.94169800"},{"name":"Dikhil Region","isoCode":"DI","countryCode":"DJ","latitude":"11.10543360","longitude":"42.37047440"},{"name":"Djibouti","isoCode":"DJ","countryCode":"DJ","latitude":"11.82513800","longitude":"42.59027500"},{"name":"Obock Region","isoCode":"OB","countryCode":"DJ","latitude":"12.38956910","longitude":"43.01948970"},{"name":"Tadjourah Region","isoCode":"TA","countryCode":"DJ","latitude":"11.93388850","longitude":"42.39383750"},{"name":"North Denmark Region","isoCode":"81","countryCode":"DK","latitude":"56.83074160","longitude":"9.49305270"},{"name":"Central Denmark Region","isoCode":"82","countryCode":"DK","latitude":"56.30213900","longitude":"9.30277700"},{"name":"Region of Southern Denmark","isoCode":"83","countryCode":"DK","latitude":"55.33077140","longitude":"9.09249030"},{"name":"Capital Region of Denmark","isoCode":"84","countryCode":"DK","latitude":"55.67518120","longitude":"12.54932610"},{"name":"Region Zealand","isoCode":"85","countryCode":"DK","latitude":"55.46325180","longitude":"11.72149790"},{"name":"Saint Andrew Parish","isoCode":"02","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint David Parish","isoCode":"03","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint George Parish","isoCode":"04","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint John Parish","isoCode":"05","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint Joseph Parish","isoCode":"06","countryCode":"DM","latitude":"39.02227120","longitude":"-94.71765040"},{"name":"Saint Luke Parish","isoCode":"07","countryCode":"DM","latitude":"42.10513630","longitude":"-80.05707220"},{"name":"Saint Mark Parish","isoCode":"08","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint Patrick Parish","isoCode":"09","countryCode":"DM","latitude":null,"longitude":null},{"name":"Saint Paul Parish","isoCode":"10","countryCode":"DM","latitude":"38.86146000","longitude":"-90.74356190"},{"name":"Saint Peter Parish","isoCode":"11","countryCode":"DM","latitude":"40.45241940","longitude":"-80.00850560"},{"name":"Distrito Nacional","isoCode":"01","countryCode":"DO","latitude":"18.48605750","longitude":"-69.93121170"},{"name":"Azua Province","isoCode":"02","countryCode":"DO","latitude":"18.45527090","longitude":"-70.73809280"},{"name":"Baoruco Province","isoCode":"03","countryCode":"DO","latitude":"18.48798980","longitude":"-71.41822490"},{"name":"Barahona Province","isoCode":"04","countryCode":"DO","latitude":"18.21390660","longitude":"-71.10437590"},{"name":"Dajabón Province","isoCode":"05","countryCode":"DO","latitude":"19.54992410","longitude":"-71.70865140"},{"name":"Duarte Province","isoCode":"06","countryCode":"DO","latitude":"19.20908230","longitude":"-70.02700040"},{"name":"El Seibo Province","isoCode":"08","countryCode":"DO","latitude":"18.76584960","longitude":"-69.04066800"},{"name":"Espaillat Province","isoCode":"09","countryCode":"DO","latitude":"19.62776580","longitude":"-70.27867750"},{"name":"Independencia","isoCode":"10","countryCode":"DO","latitude":"32.63357480","longitude":"-115.42892940"},{"name":"La Altagracia Province","isoCode":"11","countryCode":"DO","latitude":"18.58502360","longitude":"-68.62010720"},{"name":"La Romana Province","isoCode":"12","countryCode":"DO","latitude":"18.43102710","longitude":"-68.98373730"},{"name":"La Vega Province","isoCode":"13","countryCode":"DO","latitude":"19.22115540","longitude":"-70.52887530"},{"name":"María Trinidad Sánchez Province","isoCode":"14","countryCode":"DO","latitude":"19.37345970","longitude":"-69.85144390"},{"name":"Monte Cristi Province","isoCode":"15","countryCode":"DO","latitude":"19.73968990","longitude":"-71.44339840"},{"name":"Pedernales Province","isoCode":"16","countryCode":"DO","latitude":"17.85376260","longitude":"-71.33032090"},{"name":"Peravia Province","isoCode":"17","countryCode":"DO","latitude":"18.27865940","longitude":"-70.33358870"},{"name":"Puerto Plata Province","isoCode":"18","countryCode":"DO","latitude":"19.75432250","longitude":"-70.83328470"},{"name":"Hermanas Mirabal Province","isoCode":"19","countryCode":"DO","latitude":"19.37475590","longitude":"-70.35132350"},{"name":"Samaná Province","isoCode":"20","countryCode":"DO","latitude":"19.20583710","longitude":"-69.33629490"},{"name":"San Cristóbal Province","isoCode":"21","countryCode":"DO","latitude":"18.41804140","longitude":"-70.10658490"},{"name":"San Juan Province","isoCode":"22","countryCode":"DO","latitude":"-31.52871270","longitude":"-68.53604030"},{"name":"San Pedro de Macorís","isoCode":"23","countryCode":"DO","latitude":"18.46266000","longitude":"-69.30512340"},{"name":"Sánchez Ramírez Province","isoCode":"24","countryCode":"DO","latitude":"19.05270600","longitude":"-70.14922640"},{"name":"Santiago Province","isoCode":"25","countryCode":"DO","latitude":"-33.45000000","longitude":"-70.66670000"},{"name":"Santiago Rodríguez Province","isoCode":"26","countryCode":"DO","latitude":"19.47131810","longitude":"-71.33958010"},{"name":"Valverde Province","isoCode":"27","countryCode":"DO","latitude":"19.58812210","longitude":"-70.98033100"},{"name":"Monseñor Nouel Province","isoCode":"28","countryCode":"DO","latitude":"18.92152340","longitude":"-70.38368150"},{"name":"Monte Plata Province","isoCode":"29","countryCode":"DO","latitude":"18.80808780","longitude":"-69.78691460"},{"name":"Hato Mayor Province","isoCode":"30","countryCode":"DO","latitude":"18.76357990","longitude":"-69.25576370"},{"name":"San José de Ocoa Province","isoCode":"31","countryCode":"DO","latitude":"18.54385800","longitude":"-70.50418160"},{"name":"Santo Domingo Province","isoCode":"32","countryCode":"DO","latitude":"18.51042530","longitude":"-69.84040540"},{"name":"Adrar","isoCode":"01","countryCode":"DZ","latitude":"26.41813100","longitude":"-0.60147170"},{"name":"Chlef","isoCode":"02","countryCode":"DZ","latitude":"36.16935150","longitude":"1.28910360"},{"name":"Laghouat","isoCode":"03","countryCode":"DZ","latitude":"33.80783410","longitude":"2.86282940"},{"name":"Oum El Bouaghi","isoCode":"04","countryCode":"DZ","latitude":"35.86887890","longitude":"7.11082660"},{"name":"Batna","isoCode":"05","countryCode":"DZ","latitude":"35.59659540","longitude":"5.89871390"},{"name":"Béjaïa","isoCode":"06","countryCode":"DZ","latitude":"36.75152580","longitude":"5.05568370"},{"name":"Biskra","isoCode":"07","countryCode":"DZ","latitude":"34.84494370","longitude":"5.72485670"},{"name":"Béchar","isoCode":"08","countryCode":"DZ","latitude":"31.62380980","longitude":"-2.21624430"},{"name":"Blida","isoCode":"09","countryCode":"DZ","latitude":"36.53112300","longitude":"2.89762540"},{"name":"Bouïra","isoCode":"10","countryCode":"DZ","latitude":"36.36918460","longitude":"3.90061940"},{"name":"Tamanghasset","isoCode":"11","countryCode":"DZ","latitude":"22.79029720","longitude":"5.51932680"},{"name":"Tébessa","isoCode":"12","countryCode":"DZ","latitude":"35.12906910","longitude":"7.95928630"},{"name":"Tlemcen","isoCode":"13","countryCode":"DZ","latitude":"34.67802840","longitude":"-1.36621600"},{"name":"Tiaret","isoCode":"14","countryCode":"DZ","latitude":"35.37086890","longitude":"1.32178520"},{"name":"Tizi Ouzou","isoCode":"15","countryCode":"DZ","latitude":"36.70691100","longitude":"4.23333550"},{"name":"Algiers","isoCode":"16","countryCode":"DZ","latitude":"36.69972940","longitude":"3.05761990"},{"name":"Djelfa","isoCode":"17","countryCode":"DZ","latitude":"34.67039560","longitude":"3.25037610"},{"name":"Jijel","isoCode":"18","countryCode":"DZ","latitude":"36.71796810","longitude":"5.98325770"},{"name":"Sétif","isoCode":"19","countryCode":"DZ","latitude":"36.30733890","longitude":"5.56172790"},{"name":"Saïda","isoCode":"20","countryCode":"DZ","latitude":"34.84152070","longitude":"0.14560550"},{"name":"Skikda","isoCode":"21","countryCode":"DZ","latitude":"36.67211980","longitude":"6.83509990"},{"name":"Sidi Bel Abbès","isoCode":"22","countryCode":"DZ","latitude":"34.68060240","longitude":"-1.09994950"},{"name":"Annaba","isoCode":"23","countryCode":"DZ","latitude":"36.80205080","longitude":"7.52472430"},{"name":"Guelma","isoCode":"24","countryCode":"DZ","latitude":"36.46274440","longitude":"7.43308330"},{"name":"Constantine","isoCode":"25","countryCode":"DZ","latitude":"36.33739110","longitude":"6.66381200"},{"name":"Médéa","isoCode":"26","countryCode":"DZ","latitude":"36.26370780","longitude":"2.75878570"},{"name":"Mostaganem","isoCode":"27","countryCode":"DZ","latitude":"35.95830540","longitude":"0.33718890"},{"name":"M\'Sila","isoCode":"28","countryCode":"DZ","latitude":"35.71866460","longitude":"4.52334230"},{"name":"Mascara","isoCode":"29","countryCode":"DZ","latitude":"35.39041250","longitude":"0.14949880"},{"name":"Ouargla","isoCode":"30","countryCode":"DZ","latitude":"32.22648630","longitude":"5.72998210"},{"name":"Oran","isoCode":"31","countryCode":"DZ","latitude":"35.60823510","longitude":"-0.56360900"},{"name":"El Bayadh","isoCode":"32","countryCode":"DZ","latitude":"32.71488240","longitude":"0.90566230"},{"name":"Illizi","isoCode":"33","countryCode":"DZ","latitude":"26.16900050","longitude":"8.48424650"},{"name":"Bordj Bou Arréridj","isoCode":"34","countryCode":"DZ","latitude":"36.07399250","longitude":"4.76302710"},{"name":"Boumerdès","isoCode":"35","countryCode":"DZ","latitude":"36.68395590","longitude":"3.62178020"},{"name":"El Tarf","isoCode":"36","countryCode":"DZ","latitude":"36.75766780","longitude":"8.30763430"},{"name":"Tindouf","isoCode":"37","countryCode":"DZ","latitude":"27.80631190","longitude":"-5.72998210"},{"name":"Tissemsilt","isoCode":"38","countryCode":"DZ","latitude":"35.60537810","longitude":"1.81309800"},{"name":"El Oued","isoCode":"39","countryCode":"DZ","latitude":"33.36781100","longitude":"6.85165110"},{"name":"Khenchela","isoCode":"40","countryCode":"DZ","latitude":"35.42694040","longitude":"7.14601550"},{"name":"Souk Ahras","isoCode":"41","countryCode":"DZ","latitude":"36.28010620","longitude":"7.93840330"},{"name":"Tipasa","isoCode":"42","countryCode":"DZ","latitude":"36.54626500","longitude":"2.18432850"},{"name":"Mila","isoCode":"43","countryCode":"DZ","latitude":"36.36479570","longitude":"6.15269850"},{"name":"Aïn Defla","isoCode":"44","countryCode":"DZ","latitude":"36.25094290","longitude":"1.93938150"},{"name":"Naama","isoCode":"45","countryCode":"DZ","latitude":"33.26673170","longitude":"-0.31286590"},{"name":"Aïn Témouchent","isoCode":"46","countryCode":"DZ","latitude":"35.29926980","longitude":"-1.13927920"},{"name":"Ghardaïa","isoCode":"47","countryCode":"DZ","latitude":"32.49437410","longitude":"3.64446000"},{"name":"Relizane","isoCode":"48","countryCode":"DZ","latitude":"35.73834050","longitude":"0.75328090"},{"name":"El M\'ghair","isoCode":"49","countryCode":"DZ","latitude":"33.95405610","longitude":"5.13464180"},{"name":"El Menia","isoCode":"50","countryCode":"DZ","latitude":"31.36422500","longitude":"2.57844950"},{"name":"Ouled Djellal","isoCode":"51","countryCode":"DZ","latitude":"34.41782210","longitude":"4.96858430"},{"name":"Bordj Baji Mokhtar","isoCode":"52","countryCode":"DZ","latitude":"22.96633500","longitude":"-3.94727320"},{"name":"Béni Abbès","isoCode":"53","countryCode":"DZ","latitude":"30.08310420","longitude":"-2.83450520"},{"name":"Timimoun","isoCode":"54","countryCode":"DZ","latitude":"29.67890600","longitude":"0.50046080"},{"name":"Touggourt","isoCode":"55","countryCode":"DZ","latitude":"33.12484760","longitude":"5.78327150"},{"name":"Djanet","isoCode":"56","countryCode":"DZ","latitude":"23.83108720","longitude":"8.70046720"},{"name":"In Salah","isoCode":"57","countryCode":"DZ","latitude":"27.21492290","longitude":"1.84843960"},{"name":"In Guezzam","isoCode":"58","countryCode":"DZ","latitude":"20.38643230","longitude":"4.77893940"},{"name":"Azuay","isoCode":"A","countryCode":"EC","latitude":"-2.89430680","longitude":"-78.99683440"},{"name":"Bolívar","isoCode":"B","countryCode":"EC","latitude":"-1.70958280","longitude":"-79.04504290"},{"name":"Carchi","isoCode":"C","countryCode":"EC","latitude":"0.50269120","longitude":"-77.90425210"},{"name":"Orellana","isoCode":"D","countryCode":"EC","latitude":"-0.45451630","longitude":"-76.99502860"},{"name":"Esmeraldas","isoCode":"E","countryCode":"EC","latitude":"0.96817890","longitude":"-79.65172020"},{"name":"Cañar","isoCode":"F","countryCode":"EC","latitude":"-2.55893150","longitude":"-78.93881910"},{"name":"Guayas","isoCode":"G","countryCode":"EC","latitude":"-1.95748390","longitude":"-79.91927020"},{"name":"Chimborazo","isoCode":"H","countryCode":"EC","latitude":"-1.66479950","longitude":"-78.65432550"},{"name":"Imbabura","isoCode":"I","countryCode":"EC","latitude":"0.34997680","longitude":"-78.12601290"},{"name":"Loja","isoCode":"L","countryCode":"EC","latitude":"-3.99313000","longitude":"-79.20422000"},{"name":"Manabí","isoCode":"M","countryCode":"EC","latitude":"-1.05434340","longitude":"-80.45264400"},{"name":"Napo","isoCode":"N","countryCode":"EC","latitude":"-0.99559640","longitude":"-77.81296840"},{"name":"El Oro","isoCode":"O","countryCode":"EC","latitude":"-3.25924130","longitude":"-79.95835410"},{"name":"Pichincha","isoCode":"P","countryCode":"EC","latitude":"-0.14648470","longitude":"-78.47519450"},{"name":"Los Ríos","isoCode":"R","countryCode":"EC","latitude":"-1.02306070","longitude":"-79.46088970"},{"name":"Morona-Santiago","isoCode":"S","countryCode":"EC","latitude":"-2.30510620","longitude":"-78.11468660"},{"name":"Santo Domingo de los Tsáchilas","isoCode":"SD","countryCode":"EC","latitude":"-0.25218820","longitude":"-79.18793830"},{"name":"Santa Elena","isoCode":"SE","countryCode":"EC","latitude":"-2.22671050","longitude":"-80.85949900"},{"name":"Tungurahua","isoCode":"T","countryCode":"EC","latitude":"-1.26352840","longitude":"-78.56608520"},{"name":"Sucumbíos","isoCode":"U","countryCode":"EC","latitude":"0.08892310","longitude":"-76.88975570"},{"name":"Galápagos","isoCode":"W","countryCode":"EC","latitude":"-0.95376910","longitude":"-90.96560190"},{"name":"Cotopaxi","isoCode":"X","countryCode":"EC","latitude":"-0.83842060","longitude":"-78.66626780"},{"name":"Pastaza","isoCode":"Y","countryCode":"EC","latitude":"-1.48822650","longitude":"-78.00310570"},{"name":"Zamora Chinchipe","isoCode":"Z","countryCode":"EC","latitude":"-4.06558920","longitude":"-78.95035250"},{"name":"Harju County","isoCode":"37","countryCode":"EE","latitude":"59.33342390","longitude":"25.24669740"},{"name":"Hiiu County","isoCode":"39","countryCode":"EE","latitude":"58.92395530","longitude":"22.59194680"},{"name":"Ida-Viru County","isoCode":"44","countryCode":"EE","latitude":"59.25926630","longitude":"27.41365350"},{"name":"Jõgeva County","isoCode":"49","countryCode":"EE","latitude":"58.75061430","longitude":"26.36048780"},{"name":"Järva County","isoCode":"51","countryCode":"EE","latitude":"58.88667130","longitude":"25.50006240"},{"name":"Lääne County","isoCode":"57","countryCode":"EE","latitude":"58.97227420","longitude":"23.87408340"},{"name":"Lääne-Viru County","isoCode":"59","countryCode":"EE","latitude":"59.30188160","longitude":"26.32803120"},{"name":"Põlva County","isoCode":"65","countryCode":"EE","latitude":"58.11606220","longitude":"27.20663940"},{"name":"Pärnu County","isoCode":"67","countryCode":"EE","latitude":"58.52619520","longitude":"24.40201590"},{"name":"Rapla County","isoCode":"70","countryCode":"EE","latitude":"58.84926250","longitude":"24.73465690"},{"name":"Saare County","isoCode":"74","countryCode":"EE","latitude":"58.48497210","longitude":"22.61364080"},{"name":"Tartu County","isoCode":"78","countryCode":"EE","latitude":"58.40571280","longitude":"26.80157600"},{"name":"Valga County","isoCode":"82","countryCode":"EE","latitude":"57.91034410","longitude":"26.16018190"},{"name":"Viljandi County","isoCode":"84","countryCode":"EE","latitude":"58.28217460","longitude":"25.57522330"},{"name":"Võru County","isoCode":"86","countryCode":"EE","latitude":"57.73773720","longitude":"27.13989380"},{"name":"Alexandria","isoCode":"ALX","countryCode":"EG","latitude":"30.87605680","longitude":"29.74260400"},{"name":"Aswan","isoCode":"ASN","countryCode":"EG","latitude":"23.69664980","longitude":"32.71813750"},{"name":"Asyut","isoCode":"AST","countryCode":"EG","latitude":"27.21338310","longitude":"31.44561790"},{"name":"Red Sea","isoCode":"BA","countryCode":"EG","latitude":"24.68263160","longitude":"34.15319470"},{"name":"Beheira","isoCode":"BH","countryCode":"EG","latitude":"30.84809860","longitude":"30.34355060"},{"name":"Beni Suef","isoCode":"BNS","countryCode":"EG","latitude":"28.89388370","longitude":"31.44561790"},{"name":"Cairo","isoCode":"C","countryCode":"EG","latitude":"29.95375640","longitude":"31.53700030"},{"name":"Dakahlia","isoCode":"DK","countryCode":"EG","latitude":"31.16560440","longitude":"31.49131820"},{"name":"Damietta","isoCode":"DT","countryCode":"EG","latitude":"31.36257990","longitude":"31.67393710"},{"name":"Faiyum","isoCode":"FYM","countryCode":"EG","latitude":"29.30840210","longitude":"30.84284970"},{"name":"Gharbia","isoCode":"GH","countryCode":"EG","latitude":"30.87535560","longitude":"31.03351000"},{"name":"Giza","isoCode":"GZ","countryCode":"EG","latitude":"28.76662160","longitude":"29.23207840"},{"name":"Ismailia","isoCode":"IS","countryCode":"EG","latitude":"30.58309340","longitude":"32.26538870"},{"name":"South Sinai","isoCode":"JS","countryCode":"EG","latitude":"29.31018280","longitude":"34.15319470"},{"name":"Qalyubia","isoCode":"KB","countryCode":"EG","latitude":"30.32923680","longitude":"31.21684660"},{"name":"Kafr el-Sheikh","isoCode":"KFS","countryCode":"EG","latitude":"31.30854440","longitude":"30.80394740"},{"name":"Qena","isoCode":"KN","countryCode":"EG","latitude":"26.23460330","longitude":"32.98883190"},{"name":"Luxor","isoCode":"LX","countryCode":"EG","latitude":"25.39444440","longitude":"32.49200880"},{"name":"Minya","isoCode":"MN","countryCode":"EG","latitude":"28.28472900","longitude":"30.52790960"},{"name":"Monufia","isoCode":"MNF","countryCode":"EG","latitude":"30.59724550","longitude":"30.98763210"},{"name":"Matrouh","isoCode":"MT","countryCode":"EG","latitude":"29.56963500","longitude":"26.41938900"},{"name":"Port Said","isoCode":"PTS","countryCode":"EG","latitude":"31.07586060","longitude":"32.26538870"},{"name":"Sohag","isoCode":"SHG","countryCode":"EG","latitude":"26.69383400","longitude":"32.17460500"},{"name":"Sharqia","isoCode":"SHR","countryCode":"EG","latitude":"30.67305450","longitude":"31.15932470"},{"name":"North Sinai","isoCode":"SIN","countryCode":"EG","latitude":"30.28236500","longitude":"33.61757700"},{"name":"Suez","isoCode":"SUZ","countryCode":"EG","latitude":"29.36822550","longitude":"32.17460500"},{"name":"New Valley","isoCode":"WAD","countryCode":"EG","latitude":"24.54556380","longitude":"27.17353160"},{"name":"Anseba Region","isoCode":"AN","countryCode":"ER","latitude":"16.47455310","longitude":"37.80876930"},{"name":"Southern Red Sea Region","isoCode":"DK","countryCode":"ER","latitude":"13.51371030","longitude":"41.76064720"},{"name":"Debub Region","isoCode":"DU","countryCode":"ER","latitude":"14.94786920","longitude":"39.15436770"},{"name":"Gash-Barka Region","isoCode":"GB","countryCode":"ER","latitude":"15.40688250","longitude":"37.63866220"},{"name":"Maekel Region","isoCode":"MA","countryCode":"ER","latitude":"15.35514090","longitude":"38.86236830"},{"name":"Northern Red Sea Region","isoCode":"SK","countryCode":"ER","latitude":"16.25839970","longitude":"38.82054540"},{"name":"Andalusia","isoCode":"AN","countryCode":"ES","latitude":"37.54427060","longitude":"-4.72775280"},{"name":"Aragon","isoCode":"AR","countryCode":"ES","latitude":"41.59762750","longitude":"-0.90566230"},{"name":"Asturias","isoCode":"AS","countryCode":"ES","latitude":"43.36139530","longitude":"-5.85932670"},{"name":"Ávila","isoCode":"AV","countryCode":"ES","latitude":"40.69345110","longitude":"-4.89356270"},{"name":"Burgos Province","isoCode":"BU","countryCode":"ES","latitude":"42.33807580","longitude":"-3.58126920"},{"name":"Cantabria","isoCode":"CB","countryCode":"ES","latitude":"43.18283960","longitude":"-3.98784270"},{"name":"Ceuta","isoCode":"CE","countryCode":"ES","latitude":"35.88938740","longitude":"-5.32134550"},{"name":"Castile and León","isoCode":"CL","countryCode":"ES","latitude":"41.83568210","longitude":"-4.39763570"},{"name":"Castilla La Mancha","isoCode":"CM","countryCode":"ES","latitude":"39.27956070","longitude":"-3.09770200"},{"name":"Canary Islands","isoCode":"CN","countryCode":"ES","latitude":"28.29156370","longitude":"-16.62913040"},{"name":"Catalonia","isoCode":"CT","countryCode":"ES","latitude":"41.59115890","longitude":"1.52086240"},{"name":"Extremadura","isoCode":"EX","countryCode":"ES","latitude":"39.49373920","longitude":"-6.06791940"},{"name":"Galicia","isoCode":"GA","countryCode":"ES","latitude":"42.57505540","longitude":"-8.13385580"},{"name":"Léon","isoCode":"LE","countryCode":"ES","latitude":"42.59870410","longitude":"-5.56708390"},{"name":"Murcia","isoCode":"MC","countryCode":"ES","latitude":"38.13981410","longitude":"-1.36621600"},{"name":"Madrid","isoCode":"MD","countryCode":"ES","latitude":"40.41675150","longitude":"-3.70383220"},{"name":"Melilla","isoCode":"ML","countryCode":"ES","latitude":"35.29227750","longitude":"-2.93809730"},{"name":"Navarra","isoCode":"NC","countryCode":"ES","latitude":"42.69539090","longitude":"-1.67606910"},{"name":"Palencia Province","isoCode":"P","countryCode":"ES","latitude":"42.00968320","longitude":"-4.52879490"},{"name":"Balearic Islands","isoCode":"PM","countryCode":"ES","latitude":"39.35877590","longitude":"2.73563280"},{"name":"Basque Country","isoCode":"PV","countryCode":"ES","latitude":"42.98962480","longitude":"-2.61892730"},{"name":"La Rioja","isoCode":"RI","countryCode":"ES","latitude":"42.28707330","longitude":"-2.53960300"},{"name":"Salamanca Province","isoCode":"SA","countryCode":"ES","latitude":"40.95152630","longitude":"-6.23759470"},{"name":"Segovia Province","isoCode":"SG","countryCode":"ES","latitude":"40.94292960","longitude":"-4.10889420"},{"name":"Soria Province","isoCode":"SO","countryCode":"ES","latitude":"41.76654640","longitude":"-2.47903060"},{"name":"Valladolid Province","isoCode":"VA","countryCode":"ES","latitude":"41.65173750","longitude":"-4.72449500"},{"name":"Valencia","isoCode":"VC","countryCode":"ES","latitude":"39.48401080","longitude":"-0.75328090"},{"name":"Zamora Province","isoCode":"ZA","countryCode":"ES","latitude":"41.60957440","longitude":"-5.89871390"},{"name":"Addis Ababa","isoCode":"AA","countryCode":"ET","latitude":"8.98060340","longitude":"38.75776050"},{"name":"Afar Region","isoCode":"AF","countryCode":"ET","latitude":"11.75593880","longitude":"40.95868800"},{"name":"Amhara Region","isoCode":"AM","countryCode":"ET","latitude":"11.34942470","longitude":"37.97845850"},{"name":"Benishangul-Gumuz Region","isoCode":"BE","countryCode":"ET","latitude":"10.78028890","longitude":"35.56578620"},{"name":"Dire Dawa","isoCode":"DD","countryCode":"ET","latitude":"9.60087470","longitude":"41.85014200"},{"name":"Gambela Region","isoCode":"GA","countryCode":"ET","latitude":"7.92196870","longitude":"34.15319470"},{"name":"Harari Region","isoCode":"HA","countryCode":"ET","latitude":"9.31486600","longitude":"42.19677160"},{"name":"Oromia Region","isoCode":"OR","countryCode":"ET","latitude":"7.54603770","longitude":"40.63468510"},{"name":"Southern Nations, Nationalities, and Peoples\' Region","isoCode":"SN","countryCode":"ET","latitude":"6.51569110","longitude":"36.95410700"},{"name":"Somali Region","isoCode":"SO","countryCode":"ET","latitude":"6.66122930","longitude":"43.79084530"},{"name":"Tigray Region","isoCode":"TI","countryCode":"ET","latitude":"14.03233360","longitude":"38.31657250"},{"name":"Åland Islands","isoCode":"01","countryCode":"FI","latitude":"60.17852470","longitude":"19.91561050"},{"name":"South Karelia","isoCode":"02","countryCode":"FI","latitude":"61.11819490","longitude":"28.10243720"},{"name":"Southern Ostrobothnia","isoCode":"03","countryCode":"FI","latitude":"62.94330990","longitude":"23.52852670"},{"name":"Southern Savonia","isoCode":"04","countryCode":"FI","latitude":"61.69451480","longitude":"27.80050150"},{"name":"Kainuu","isoCode":"05","countryCode":"FI","latitude":"64.37365640","longitude":"28.74374750"},{"name":"Tavastia Proper","isoCode":"06","countryCode":"FI","latitude":"60.90701500","longitude":"24.30054980"},{"name":"Central Ostrobothnia","isoCode":"07","countryCode":"FI","latitude":"63.56217350","longitude":"24.00136310"},{"name":"Central Finland","isoCode":"08","countryCode":"FI","latitude":"62.56667430","longitude":"25.55494450"},{"name":"Kymenlaakso","isoCode":"09","countryCode":"FI","latitude":"60.78051200","longitude":"26.88293360"},{"name":"Pirkanmaa","isoCode":"11","countryCode":"FI","latitude":"61.69869180","longitude":"23.78955980"},{"name":"Ostrobothnia","isoCode":"12","countryCode":"FI","latitude":"63.11817570","longitude":"21.90610620"},{"name":"North Karelia","isoCode":"13","countryCode":"FI","latitude":"62.80620780","longitude":"30.15538870"},{"name":"Northern Ostrobothnia","isoCode":"14","countryCode":"FI","latitude":"65.27949300","longitude":"26.28904170"},{"name":"Northern Savonia","isoCode":"15","countryCode":"FI","latitude":"63.08448000","longitude":"27.02535040"},{"name":"Päijänne Tavastia","isoCode":"16","countryCode":"FI","latitude":"61.32300410","longitude":"25.73224960"},{"name":"Satakunta","isoCode":"17","countryCode":"FI","latitude":"61.59327580","longitude":"22.14830810"},{"name":"Uusimaa","isoCode":"18","countryCode":"FI","latitude":"60.21872000","longitude":"25.27162100"},{"name":"Finland Proper","isoCode":"19","countryCode":"FI","latitude":"60.36279140","longitude":"22.44393690"},{"name":"Eastern Finland Province","isoCode":"IS","countryCode":"FI","latitude":"62.56338910","longitude":"28.50240420"},{"name":"Lapland","isoCode":"LL","countryCode":"FI","latitude":"67.92223040","longitude":"26.50464380"},{"name":"Oulu Province","isoCode":"OL","countryCode":"FI","latitude":"65.01207480","longitude":"25.46504960"},{"name":"Ba","isoCode":"01","countryCode":"FJ","latitude":"36.06138930","longitude":"-95.80058720"},{"name":"Bua","isoCode":"02","countryCode":"FJ","latitude":"43.09645840","longitude":"-89.50088000"},{"name":"Cakaudrove","isoCode":"03","countryCode":"FJ","latitude":"-16.58141050","longitude":"179.51200840"},{"name":"Kadavu","isoCode":"04","countryCode":"FJ","latitude":"-19.01271220","longitude":"178.18766760"},{"name":"Lau","isoCode":"05","countryCode":"FJ","latitude":"31.66870150","longitude":"-106.39557630"},{"name":"Lomaiviti","isoCode":"06","countryCode":"FJ","latitude":"-17.70900000","longitude":"179.09100000"},{"name":"Macuata","isoCode":"07","countryCode":"FJ","latitude":"-16.48649220","longitude":"179.28472510"},{"name":"Nadroga-Navosa","isoCode":"08","countryCode":"FJ","latitude":"-17.98652780","longitude":"177.65811300"},{"name":"Naitasiri","isoCode":"09","countryCode":"FJ","latitude":"-17.89757540","longitude":"178.20715980"},{"name":"Namosi","isoCode":"10","countryCode":"FJ","latitude":"-18.08641760","longitude":"178.12913870"},{"name":"Ra","isoCode":"11","countryCode":"FJ","latitude":"37.10031530","longitude":"-95.67442460"},{"name":"Rewa","isoCode":"12","countryCode":"FJ","latitude":"34.79235170","longitude":"-82.36092640"},{"name":"Serua","isoCode":"13","countryCode":"FJ","latitude":"-18.18047490","longitude":"178.05097900"},{"name":"Tailevu","isoCode":"14","countryCode":"FJ","latitude":"-17.82691110","longitude":"178.29324800"},{"name":"Central Division","isoCode":"C","countryCode":"FJ","latitude":"34.04400660","longitude":"-118.24727380"},{"name":"Eastern Division","isoCode":"E","countryCode":"FJ","latitude":"32.80943050","longitude":"-117.12899370"},{"name":"Northern Division","isoCode":"N","countryCode":"FJ","latitude":"32.87687660","longitude":"-117.21563450"},{"name":"Rotuma","isoCode":"R","countryCode":"FJ","latitude":"-12.50250690","longitude":"177.07241640"},{"name":"Western Division","isoCode":"W","countryCode":"FJ","latitude":"42.96621980","longitude":"-78.70211340"},{"name":"Kosrae State","isoCode":"KSA","countryCode":"FM","latitude":"5.30956180","longitude":"162.98148770"},{"name":"Pohnpei State","isoCode":"PNI","countryCode":"FM","latitude":"6.85412540","longitude":"158.26238220"},{"name":"Chuuk State","isoCode":"TRK","countryCode":"FM","latitude":"7.13867590","longitude":"151.55930650"},{"name":"Yap State","isoCode":"YAP","countryCode":"FM","latitude":"8.67164900","longitude":"142.84393350"},{"name":"Ain","isoCode":"01","countryCode":"FR","latitude":"46.06508600","longitude":"4.88861500"},{"name":"Aisne","isoCode":"02","countryCode":"FR","latitude":"49.45289210","longitude":"3.04651110"},{"name":"Allier","isoCode":"03","countryCode":"FR","latitude":"46.36708630","longitude":"2.58082770"},{"name":"Alpes-de-Haute-Provence","isoCode":"04","countryCode":"FR","latitude":"44.16377520","longitude":"5.67247800"},{"name":"Hautes-Alpes","isoCode":"05","countryCode":"FR","latitude":"44.65626820","longitude":"5.68732110"},{"name":"Alpes-Maritimes","isoCode":"06","countryCode":"FR","latitude":"43.92041700","longitude":"6.61678220"},{"name":"Ardèche","isoCode":"07","countryCode":"FR","latitude":"44.81486950","longitude":"3.81334830"},{"name":"Ardennes","isoCode":"08","countryCode":"FR","latitude":"49.69759510","longitude":"4.14895760"},{"name":"Ariège","isoCode":"09","countryCode":"FR","latitude":"42.94347830","longitude":"0.94048640"},{"name":"Aube","isoCode":"10","countryCode":"FR","latitude":"48.31975470","longitude":"3.56371040"},{"name":"Aude","isoCode":"11","countryCode":"FR","latitude":"43.05411400","longitude":"1.90384760"},{"name":"Aveyron","isoCode":"12","countryCode":"FR","latitude":"44.31563620","longitude":"2.08523790"},{"name":"Bouches-du-Rhône","isoCode":"13","countryCode":"FR","latitude":"43.54038650","longitude":"4.46138290"},{"name":"Calvados","isoCode":"14","countryCode":"FR","latitude":"49.09035140","longitude":"-0.91706480"},{"name":"Cantal","isoCode":"15","countryCode":"FR","latitude":"45.04921770","longitude":"2.15672720"},{"name":"Charente","isoCode":"16","countryCode":"FR","latitude":"45.66584790","longitude":"-0.31845770"},{"name":"Charente-Maritime","isoCode":"17","countryCode":"FR","latitude":"45.72968280","longitude":"-1.33881160"},{"name":"Cher","isoCode":"18","countryCode":"FR","latitude":"47.02436280","longitude":"1.86627320"},{"name":"Corrèze","isoCode":"19","countryCode":"FR","latitude":"45.34237070","longitude":"1.31717330"},{"name":"Corse","isoCode":"20R","countryCode":"FR","latitude":"42.03960420","longitude":"9.01289260"},{"name":"Côte-d\'Or","isoCode":"21","countryCode":"FR","latitude":"47.46513020","longitude":"4.23154950"},{"name":"Côtes-d\'Armor","isoCode":"22","countryCode":"FR","latitude":"48.46633360","longitude":"-3.34789610"},{"name":"Creuse","isoCode":"23","countryCode":"FR","latitude":"46.05903940","longitude":"1.43150500"},{"name":"Dordogne","isoCode":"24","countryCode":"FR","latitude":"45.14234160","longitude":"0.14274080"},{"name":"Doubs","isoCode":"25","countryCode":"FR","latitude":"46.93217740","longitude":"6.34762140"},{"name":"Drôme","isoCode":"26","countryCode":"FR","latitude":"44.72933570","longitude":"4.67821580"},{"name":"Eure","isoCode":"27","countryCode":"FR","latitude":"49.07540350","longitude":"0.48937320"},{"name":"Eure-et-Loir","isoCode":"28","countryCode":"FR","latitude":"48.44697840","longitude":"0.81470250"},{"name":"Finistère","isoCode":"29","countryCode":"FR","latitude":"48.22696100","longitude":"-4.82437330"},{"name":"Corse-du-Sud","isoCode":"2A","countryCode":"FR","latitude":"41.85720550","longitude":"8.41091830"},{"name":"Haute-Corse","isoCode":"2B","countryCode":"FR","latitude":"42.42958660","longitude":"8.50625610"},{"name":"Gard","isoCode":"30","countryCode":"FR","latitude":"43.95952760","longitude":"3.49356810"},{"name":"Haute-Garonne","isoCode":"31","countryCode":"FR","latitude":"43.30505550","longitude":"0.68455150"},{"name":"Gers","isoCode":"32","countryCode":"FR","latitude":"43.69505340","longitude":"-0.09997280"},{"name":"Gironde","isoCode":"33","countryCode":"FR","latitude":"44.89584690","longitude":"-1.59405320"},{"name":"Hérault","isoCode":"34","countryCode":"FR","latitude":"43.59111200","longitude":"2.80661080"},{"name":"Ille-et-Vilaine","isoCode":"35","countryCode":"FR","latitude":"48.17624840","longitude":"-2.21304010"},{"name":"Indre","isoCode":"36","countryCode":"FR","latitude":"46.81175500","longitude":"0.97555230"},{"name":"Indre-et-Loire","isoCode":"37","countryCode":"FR","latitude":"47.22285820","longitude":"0.14896190"},{"name":"Isère","isoCode":"38","countryCode":"FR","latitude":"45.28922710","longitude":"4.99023550"},{"name":"Jura","isoCode":"39","countryCode":"FR","latitude":"46.78287410","longitude":"5.16918440"},{"name":"Landes","isoCode":"40","countryCode":"FR","latitude":"44.00950800","longitude":"-1.25385790"},{"name":"Loir-et-Cher","isoCode":"41","countryCode":"FR","latitude":"47.65937600","longitude":"0.85376310"},{"name":"Loire","isoCode":"42","countryCode":"FR","latitude":"46.35228120","longitude":"-1.17563390"},{"name":"Haute-Loire","isoCode":"43","countryCode":"FR","latitude":"45.08538060","longitude":"3.22607070"},{"name":"Loire-Atlantique","isoCode":"44","countryCode":"FR","latitude":"47.34757210","longitude":"-2.34663120"},{"name":"Loiret","isoCode":"45","countryCode":"FR","latitude":"47.91354310","longitude":"1.76009900"},{"name":"Lot","isoCode":"46","countryCode":"FR","latitude":"44.62460700","longitude":"1.03576310"},{"name":"Lot-et-Garonne","isoCode":"47","countryCode":"FR","latitude":"44.36873140","longitude":"-0.09161690"},{"name":"Lozère","isoCode":"48","countryCode":"FR","latitude":"44.54227790","longitude":"2.92934590"},{"name":"Maine-et-Loire","isoCode":"49","countryCode":"FR","latitude":"47.38900340","longitude":"-1.12025270"},{"name":"Manche","isoCode":"50","countryCode":"FR","latitude":"49.08817340","longitude":"-2.46272090"},{"name":"Marne","isoCode":"51","countryCode":"FR","latitude":"48.96107450","longitude":"3.65737670"},{"name":"Haute-Marne","isoCode":"52","countryCode":"FR","latitude":"48.13248210","longitude":"4.69834990"},{"name":"Mayenne","isoCode":"53","countryCode":"FR","latitude":"48.30668420","longitude":"-0.64901820"},{"name":"Meurthe-et-Moselle","isoCode":"54","countryCode":"FR","latitude":"48.95566150","longitude":"5.71423500"},{"name":"Meuse","isoCode":"55","countryCode":"FR","latitude":"49.01246200","longitude":"4.81087340"},{"name":"Morbihan","isoCode":"56","countryCode":"FR","latitude":"47.74395180","longitude":"-3.44555240"},{"name":"Moselle","isoCode":"57","countryCode":"FR","latitude":"49.02045660","longitude":"6.20553220"},{"name":"Nièvre","isoCode":"58","countryCode":"FR","latitude":"47.11921640","longitude":"2.97797130"},{"name":"Nord","isoCode":"59","countryCode":"FR","latitude":"50.52854770","longitude":"2.60007760"},{"name":"Oise","isoCode":"60","countryCode":"FR","latitude":"49.41173350","longitude":"1.86688250"},{"name":"Orne","isoCode":"61","countryCode":"FR","latitude":"48.57576440","longitude":"-0.50242950"},{"name":"Pas-de-Calais","isoCode":"62","countryCode":"FR","latitude":"50.51446990","longitude":"1.81149800"},{"name":"Puy-de-Dôme","isoCode":"63","countryCode":"FR","latitude":"45.77141850","longitude":"2.62626760"},{"name":"Pyrénées-Atlantiques","isoCode":"64","countryCode":"FR","latitude":"43.18681700","longitude":"-1.44170710"},{"name":"Hautes-Pyrénées","isoCode":"65","countryCode":"FR","latitude":"43.14294620","longitude":"-0.40097360"},{"name":"Pyrénées-Orientales","isoCode":"66","countryCode":"FR","latitude":"42.62541790","longitude":"1.88929580"},{"name":"Bas-Rhin","isoCode":"67","countryCode":"FR","latitude":"48.59864440","longitude":"7.02666760"},{"name":"Haut-Rhin","isoCode":"68","countryCode":"FR","latitude":"47.86537740","longitude":"6.67113810"},{"name":"Rhône","isoCode":"69","countryCode":"FR","latitude":"44.93433000","longitude":"4.24093290"},{"name":"Métropole de Lyon","isoCode":"69M","countryCode":"FR","latitude":"45.74826290","longitude":"4.59584040"},{"name":"Alsace","isoCode":"6AE","countryCode":"FR","latitude":"48.31817950","longitude":"7.44162410"},{"name":"Haute-Saône","isoCode":"70","countryCode":"FR","latitude":"47.63789960","longitude":"5.53550550"},{"name":"Saône-et-Loire","isoCode":"71","countryCode":"FR","latitude":"46.65548830","longitude":"3.98350500"},{"name":"Sarthe","isoCode":"72","countryCode":"FR","latitude":"48.02627330","longitude":"-0.32613170"},{"name":"Savoie","isoCode":"73","countryCode":"FR","latitude":"45.49469900","longitude":"5.84329840"},{"name":"Haute-Savoie","isoCode":"74","countryCode":"FR","latitude":"46.04452770","longitude":"5.86413800"},{"name":"Paris","isoCode":"75C","countryCode":"FR","latitude":"48.85661400","longitude":"2.35222190"},{"name":"Seine-Maritime","isoCode":"76","countryCode":"FR","latitude":"49.66096810","longitude":"0.36775610"},{"name":"Seine-et-Marne","isoCode":"77","countryCode":"FR","latitude":"48.61853940","longitude":"2.41525610"},{"name":"Yvelines","isoCode":"78","countryCode":"FR","latitude":"48.76153010","longitude":"1.27729490"},{"name":"Deux-Sèvres","isoCode":"79","countryCode":"FR","latitude":"46.53868170","longitude":"-0.90199480"},{"name":"Somme","isoCode":"80","countryCode":"FR","latitude":"49.96859220","longitude":"1.73106960"},{"name":"Tarn","isoCode":"81","countryCode":"FR","latitude":"43.79149770","longitude":"1.67588930"},{"name":"Tarn-et-Garonne","isoCode":"82","countryCode":"FR","latitude":"44.08089500","longitude":"1.08916570"},{"name":"Var","isoCode":"83","countryCode":"FR","latitude":"43.39507300","longitude":"5.73424170"},{"name":"Vaucluse","isoCode":"84","countryCode":"FR","latitude":"44.04475000","longitude":"4.64277180"},{"name":"Vendée","isoCode":"85","countryCode":"FR","latitude":"46.67541030","longitude":"-2.02983920"},{"name":"Vienne","isoCode":"86","countryCode":"FR","latitude":"45.52213140","longitude":"4.84531360"},{"name":"Haute-Vienne","isoCode":"87","countryCode":"FR","latitude":"45.91868780","longitude":"0.70972060"},{"name":"Vosges","isoCode":"88","countryCode":"FR","latitude":"48.16301730","longitude":"5.73556000"},{"name":"Yonne","isoCode":"89","countryCode":"FR","latitude":"47.85476140","longitude":"3.03394040"},{"name":"Territoire de Belfort","isoCode":"90","countryCode":"FR","latitude":"47.62930720","longitude":"6.66962000"},{"name":"Essonne","isoCode":"91","countryCode":"FR","latitude":"48.53046150","longitude":"1.96990560"},{"name":"Hauts-de-Seine","isoCode":"92","countryCode":"FR","latitude":"48.84030080","longitude":"2.10125590"},{"name":"Seine-Saint-Denis","isoCode":"93","countryCode":"FR","latitude":"48.90993180","longitude":"2.30573790"},{"name":"Val-de-Marne","isoCode":"94","countryCode":"FR","latitude":"48.77470040","longitude":"2.32210390"},{"name":"Val-d\'Oise","isoCode":"95","countryCode":"FR","latitude":"49.07518180","longitude":"1.82169140"},{"name":"Guadeloupe","isoCode":"971","countryCode":"FR","latitude":"16.26500000","longitude":"-61.55100000"},{"name":"Martinique","isoCode":"972","countryCode":"FR","latitude":"14.64152800","longitude":"-61.02417400"},{"name":"French Guiana","isoCode":"973","countryCode":"FR","latitude":"3.93388900","longitude":"-53.12578200"},{"name":"La Réunion","isoCode":"974","countryCode":"FR","latitude":"-21.11514100","longitude":"55.53638400"},{"name":"Mayotte","isoCode":"976","countryCode":"FR","latitude":"-12.82750000","longitude":"45.16624400"},{"name":"Auvergne-Rhône-Alpes","isoCode":"ARA","countryCode":"FR","latitude":"45.44714310","longitude":"4.38525070"},{"name":"Bourgogne-Franche-Comté","isoCode":"BFC","countryCode":"FR","latitude":"47.28051270","longitude":"4.99943720"},{"name":"Saint-Barthélemy","isoCode":"BL","countryCode":"FR","latitude":"17.90051340","longitude":"-62.82058710"},{"name":"Bretagne","isoCode":"BRE","countryCode":"FR","latitude":"48.20204710","longitude":"-2.93264350"},{"name":"Clipperton","isoCode":"CP","countryCode":"FR","latitude":"10.28335410","longitude":"-109.22542150"},{"name":"Centre-Val de Loire","isoCode":"CVL","countryCode":"FR","latitude":"47.75156860","longitude":"1.67506310"},{"name":"Grand-Est","isoCode":"GES","countryCode":"FR","latitude":"48.69980300","longitude":"6.18780740"},{"name":"Hauts-de-France","isoCode":"HDF","countryCode":"FR","latitude":"50.48011530","longitude":"2.79372650"},{"name":"Île-de-France","isoCode":"IDF","countryCode":"FR","latitude":"48.84991980","longitude":"2.63704110"},{"name":"Saint-Martin","isoCode":"MF","countryCode":"FR","latitude":"18.07082980","longitude":"-63.05008090"},{"name":"Nouvelle-Aquitaine","isoCode":"NAQ","countryCode":"FR","latitude":"45.70871820","longitude":"0.62689100"},{"name":"Normandie","isoCode":"NOR","countryCode":"FR","latitude":"48.87987040","longitude":"0.17125290"},{"name":"Occitanie","isoCode":"OCC","countryCode":"FR","latitude":"43.89272320","longitude":"3.28276250"},{"name":"Provence-Alpes-Côte-d’Azur","isoCode":"PAC","countryCode":"FR","latitude":"43.93516910","longitude":"6.06791940"},{"name":"Pays-de-la-Loire","isoCode":"PDL","countryCode":"FR","latitude":"47.76328360","longitude":"-0.32996870"},{"name":"French Polynesia","isoCode":"PF","countryCode":"FR","latitude":"-17.67974200","longitude":"-149.40684300"},{"name":"Saint Pierre and Miquelon","isoCode":"PM","countryCode":"FR","latitude":"46.88520000","longitude":"-56.31590000"},{"name":"French Southern and Antarctic Lands","isoCode":"TF","countryCode":"FR","latitude":"-47.54466040","longitude":"51.28375420"},{"name":"Wallis and Futuna","isoCode":"WF","countryCode":"FR","latitude":"-14.29380000","longitude":"-178.11650000"},{"name":"Estuaire Province","isoCode":"1","countryCode":"GA","latitude":"0.44328640","longitude":"10.08072980"},{"name":"Haut-Ogooué Province","isoCode":"2","countryCode":"GA","latitude":"-1.47625440","longitude":"13.91439900"},{"name":"Moyen-Ogooué Province","isoCode":"3","countryCode":"GA","latitude":"-0.44278400","longitude":"10.43965600"},{"name":"Ngounié Province","isoCode":"4","countryCode":"GA","latitude":"-1.49303030","longitude":"10.98070030"},{"name":"Nyanga Province","isoCode":"5","countryCode":"GA","latitude":"-2.88210330","longitude":"11.16173560"},{"name":"Ogooué-Ivindo Province","isoCode":"6","countryCode":"GA","latitude":"0.88183110","longitude":"13.17403480"},{"name":"Ogooué-Lolo Province","isoCode":"7","countryCode":"GA","latitude":"-0.88440930","longitude":"12.43805810"},{"name":"Ogooué-Maritime Province","isoCode":"8","countryCode":"GA","latitude":"-1.34659750","longitude":"9.72326730"},{"name":"Woleu-Ntem Province","isoCode":"9","countryCode":"GA","latitude":"2.29898270","longitude":"11.44669140"},{"name":"Armagh, Banbridge and Craigavon","isoCode":"ABC","countryCode":"GB","latitude":"54.39325920","longitude":"-6.45634010"},{"name":"Aberdeenshire","isoCode":"ABD","countryCode":"GB","latitude":"57.28687230","longitude":"-2.38156840"},{"name":"Aberdeen","isoCode":"ABE","countryCode":"GB","latitude":"57.14971700","longitude":"-2.09427800"},{"name":"Argyll and Bute","isoCode":"AGB","countryCode":"GB","latitude":"56.40062140","longitude":"-5.48074800"},{"name":"Ards and North Down","isoCode":"AND","countryCode":"GB","latitude":"54.58996450","longitude":"-5.59849720"},{"name":"Antrim and Newtownabbey","isoCode":"ANN","countryCode":"GB","latitude":"54.69568870","longitude":"-5.94810690"},{"name":"Angus","isoCode":"ANS","countryCode":"GB","latitude":"37.27578860","longitude":"-95.65010330"},{"name":"Antrim","isoCode":"ANT","countryCode":"GB","latitude":"54.71953380","longitude":"-6.20724980"},{"name":"Ards","isoCode":"ARD","countryCode":"GB","latitude":"42.13918510","longitude":"-87.86149720"},{"name":"Armagh City and District Council","isoCode":"ARM","countryCode":"GB","latitude":"54.39325920","longitude":"-6.45634010"},{"name":"Bath and North East Somerset","isoCode":"BAS","countryCode":"GB","latitude":"51.32501020","longitude":"-2.47662410"},{"name":"Blackburn with Darwen","isoCode":"BBD","countryCode":"GB","latitude":"53.69575220","longitude":"-2.46829850"},{"name":"Bedford","isoCode":"BDF","countryCode":"GB","latitude":"32.84401700","longitude":"-97.14306710"},{"name":"London Borough of Barking and Dagenham","isoCode":"BDG","countryCode":"GB","latitude":"51.55406660","longitude":"0.13401700"},{"name":"London Borough of Brent","isoCode":"BEN","countryCode":"GB","latitude":"51.56728080","longitude":"-0.27105680"},{"name":"London Borough of Bexley","isoCode":"BEX","countryCode":"GB","latitude":"51.45190210","longitude":"0.11717860"},{"name":"Belfast district","isoCode":"BFS","countryCode":"GB","latitude":"54.61703660","longitude":"-5.95318610"},{"name":"Bridgend County Borough","isoCode":"BGE","countryCode":"GB","latitude":"51.50831990","longitude":"-3.58120750"},{"name":"Blaenau Gwent County Borough","isoCode":"BGW","countryCode":"GB","latitude":"51.78757790","longitude":"-3.20439310"},{"name":"Birmingham","isoCode":"BIR","countryCode":"GB","latitude":"33.51858920","longitude":"-86.81035670"},{"name":"Buckinghamshire","isoCode":"BKM","countryCode":"GB","latitude":"51.80722040","longitude":"-0.81276640"},{"name":"Ballymena Borough","isoCode":"BLA","countryCode":"GB","latitude":"54.86426000","longitude":"-6.27910740"},{"name":"Ballymoney","isoCode":"BLY","countryCode":"GB","latitude":"55.07048880","longitude":"-6.51737080"},{"name":"Bournemouth","isoCode":"BMH","countryCode":"GB","latitude":"50.71916400","longitude":"-1.88076900"},{"name":"Banbridge","isoCode":"BNB","countryCode":"GB","latitude":"54.34872900","longitude":"-6.27048030"},{"name":"London Borough of Barnet","isoCode":"BNE","countryCode":"GB","latitude":"51.60496730","longitude":"-0.20762950"},{"name":"Brighton and Hove","isoCode":"BNH","countryCode":"GB","latitude":"50.82262880","longitude":"-0.13704700"},{"name":"Barnsley","isoCode":"BNS","countryCode":"GB","latitude":"34.29949560","longitude":"-84.98458090"},{"name":"Bolton","isoCode":"BOL","countryCode":"GB","latitude":"44.37264760","longitude":"-72.87876250"},{"name":"Blackpool","isoCode":"BPL","countryCode":"GB","latitude":"53.81750530","longitude":"-3.03567480"},{"name":"Bracknell Forest","isoCode":"BRC","countryCode":"GB","latitude":"51.41538280","longitude":"-0.75364950"},{"name":"Bradford","isoCode":"BRD","countryCode":"GB","latitude":"53.79598400","longitude":"-1.75939800"},{"name":"London Borough of Bromley","isoCode":"BRY","countryCode":"GB","latitude":"51.36797050","longitude":"0.07006200"},{"name":"City of Bristol","isoCode":"BST","countryCode":"GB","latitude":"41.67352200","longitude":"-72.94653750"},{"name":"Bury","isoCode":"BUR","countryCode":"GB","latitude":"53.59334980","longitude":"-2.29660540"},{"name":"Cambridgeshire","isoCode":"CAM","countryCode":"GB","latitude":"52.20529730","longitude":"0.12181950"},{"name":"Caerphilly County Borough","isoCode":"CAY","countryCode":"GB","latitude":"51.66044650","longitude":"-3.21787240"},{"name":"Central Bedfordshire","isoCode":"CBF","countryCode":"GB","latitude":"52.00297440","longitude":"-0.46513890"},{"name":"Causeway Coast and Glens","isoCode":"CCG","countryCode":"GB","latitude":"55.04318300","longitude":"-6.67412880"},{"name":"Ceredigion","isoCode":"CGN","countryCode":"GB","latitude":"52.21914290","longitude":"-3.93212560"},{"name":"Craigavon Borough Council","isoCode":"CGV","countryCode":"GB","latitude":"54.39325920","longitude":"-6.45634010"},{"name":"Cheshire East","isoCode":"CHE","countryCode":"GB","latitude":"53.16104460","longitude":"-2.21859320"},{"name":"Cheshire West and Chester","isoCode":"CHW","countryCode":"GB","latitude":"53.23029740","longitude":"-2.71511170"},{"name":"Carrickfergus Borough Council","isoCode":"CKF","countryCode":"GB","latitude":"54.72568430","longitude":"-5.80937190"},{"name":"Cookstown District Council","isoCode":"CKT","countryCode":"GB","latitude":"54.64181580","longitude":"-6.74438950"},{"name":"Calderdale","isoCode":"CLD","countryCode":"GB","latitude":"53.72478450","longitude":"-1.86583570"},{"name":"Clackmannanshire","isoCode":"CLK","countryCode":"GB","latitude":"56.10753510","longitude":"-3.75294090"},{"name":"Coleraine Borough Council","isoCode":"CLR","countryCode":"GB","latitude":"55.14515700","longitude":"-6.67598140"},{"name":"Cumbria","isoCode":"CMA","countryCode":"GB","latitude":"54.57723230","longitude":"-2.79748350"},{"name":"London Borough of Camden","isoCode":"CMD","countryCode":"GB","latitude":"51.54547360","longitude":"-0.16279020"},{"name":"Carmarthenshire","isoCode":"CMN","countryCode":"GB","latitude":"51.85723090","longitude":"-4.31159590"},{"name":"Cornwall","isoCode":"CON","countryCode":"GB","latitude":"50.26604710","longitude":"-5.05271250"},{"name":"Coventry","isoCode":"COV","countryCode":"GB","latitude":"52.40682200","longitude":"-1.51969300"},{"name":"City and County of Cardiff","isoCode":"CRF","countryCode":"GB","latitude":"51.48158100","longitude":"-3.17909000"},{"name":"London Borough of Croydon","isoCode":"CRY","countryCode":"GB","latitude":"51.38274460","longitude":"-0.09851630"},{"name":"Castlereagh","isoCode":"CSR","countryCode":"GB","latitude":"54.57567900","longitude":"-5.88840280"},{"name":"Conwy County Borough","isoCode":"CWY","countryCode":"GB","latitude":"53.29350130","longitude":"-3.72651610"},{"name":"Darlington","isoCode":"DAL","countryCode":"GB","latitude":"34.29987620","longitude":"-79.87617410"},{"name":"Derbyshire","isoCode":"DBY","countryCode":"GB","latitude":"53.10467820","longitude":"-1.56238850"},{"name":"Denbighshire","isoCode":"DEN","countryCode":"GB","latitude":"53.18422880","longitude":"-3.42249850"},{"name":"City of Derby","isoCode":"DER","countryCode":"GB","latitude":"37.54837550","longitude":"-97.24851910"},{"name":"Devon","isoCode":"DEV","countryCode":"GB","latitude":"50.71555910","longitude":"-3.53087500"},{"name":"Dungannon and South Tyrone Borough Council","isoCode":"DGN","countryCode":"GB","latitude":"54.50826840","longitude":"-6.76658910"},{"name":"Dumfries and Galloway","isoCode":"DGY","countryCode":"GB","latitude":"55.07010730","longitude":"-3.60525810"},{"name":"Doncaster","isoCode":"DNC","countryCode":"GB","latitude":"53.52282000","longitude":"-1.12846200"},{"name":"Dundee","isoCode":"DND","countryCode":"GB","latitude":"56.46201800","longitude":"-2.97072100"},{"name":"Dorset","isoCode":"DOR","countryCode":"GB","latitude":"50.74876350","longitude":"-2.34447860"},{"name":"Down District Council","isoCode":"DOW","countryCode":"GB","latitude":"54.24342870","longitude":"-5.95779590"},{"name":"Derry City and Strabane","isoCode":"DRS","countryCode":"GB","latitude":"55.00474430","longitude":"-7.32092220"},{"name":"Derry City Council","isoCode":"DRY","countryCode":"GB","latitude":"54.96907780","longitude":"-7.19583510"},{"name":"Dudley","isoCode":"DUD","countryCode":"GB","latitude":"42.04336610","longitude":"-71.92760330"},{"name":"County Durham","isoCode":"DUR","countryCode":"GB","latitude":"54.72940990","longitude":"-1.88115980"},{"name":"London Borough of Ealing","isoCode":"EAL","countryCode":"GB","latitude":"51.52503660","longitude":"-0.34139650"},{"name":"East Ayrshire","isoCode":"EAY","countryCode":"GB","latitude":"55.45184960","longitude":"-4.26444780"},{"name":"Edinburgh","isoCode":"EDH","countryCode":"GB","latitude":"55.95325200","longitude":"-3.18826700"},{"name":"East Dunbartonshire","isoCode":"EDU","countryCode":"GB","latitude":"55.97431620","longitude":"-4.20229800"},{"name":"East Lothian","isoCode":"ELN","countryCode":"GB","latitude":"55.94933830","longitude":"-2.77044640"},{"name":"Outer Hebrides","isoCode":"ELS","countryCode":"GB","latitude":"57.75989180","longitude":"-7.01940340"},{"name":"London Borough of Enfield","isoCode":"ENF","countryCode":"GB","latitude":"51.66229090","longitude":"-0.11806510"},{"name":"England","isoCode":"ENG","countryCode":"GB","latitude":"52.35551770","longitude":"-1.17431970"},{"name":"East Renfrewshire","isoCode":"ERW","countryCode":"GB","latitude":"55.77047350","longitude":"-4.33598210"},{"name":"East Riding of Yorkshire","isoCode":"ERY","countryCode":"GB","latitude":"53.84161680","longitude":"-0.43441060"},{"name":"Essex","isoCode":"ESS","countryCode":"GB","latitude":"51.57424470","longitude":"0.48567810"},{"name":"East Sussex","isoCode":"ESX","countryCode":"GB","latitude":"50.90859550","longitude":"0.24941660"},{"name":"Falkirk","isoCode":"FAL","countryCode":"GB","latitude":"56.00187750","longitude":"-3.78391310"},{"name":"Fermanagh District Council","isoCode":"FER","countryCode":"GB","latitude":"54.34479780","longitude":"-7.63842180"},{"name":"Fife","isoCode":"FIF","countryCode":"GB","latitude":"56.20820780","longitude":"-3.14951750"},{"name":"Flintshire","isoCode":"FLN","countryCode":"GB","latitude":"53.16686580","longitude":"-3.14189080"},{"name":"Fermanagh and Omagh","isoCode":"FMO","countryCode":"GB","latitude":"54.45135240","longitude":"-7.71250180"},{"name":"Gateshead","isoCode":"GAT","countryCode":"GB","latitude":"54.95268000","longitude":"-1.60341100"},{"name":"Glasgow","isoCode":"GLG","countryCode":"GB","latitude":"55.86423700","longitude":"-4.25180600"},{"name":"Gloucestershire","isoCode":"GLS","countryCode":"GB","latitude":"51.86421120","longitude":"-2.23803350"},{"name":"Royal Borough of Greenwich","isoCode":"GRE","countryCode":"GB","latitude":"51.48346270","longitude":"0.05862020"},{"name":"Gwynedd","isoCode":"GWN","countryCode":"GB","latitude":"52.92772660","longitude":"-4.13348360"},{"name":"Halton","isoCode":"HAL","countryCode":"GB","latitude":"43.53253720","longitude":"-79.87448360"},{"name":"Hampshire","isoCode":"HAM","countryCode":"GB","latitude":"51.05769480","longitude":"-1.30806290"},{"name":"London Borough of Havering","isoCode":"HAV","countryCode":"GB","latitude":"51.57792400","longitude":"0.21208290"},{"name":"London Borough of Hackney","isoCode":"HCK","countryCode":"GB","latitude":"51.57344500","longitude":"-0.07243760"},{"name":"Herefordshire","isoCode":"HEF","countryCode":"GB","latitude":"52.07651640","longitude":"-2.65441820"},{"name":"London Borough of Hillingdon","isoCode":"HIL","countryCode":"GB","latitude":"51.53518320","longitude":"-0.44813780"},{"name":"Highland","isoCode":"HLD","countryCode":"GB","latitude":"36.29675080","longitude":"-95.83803660"},{"name":"London Borough of Hammersmith and Fulham","isoCode":"HMF","countryCode":"GB","latitude":"51.49901560","longitude":"-0.22915000"},{"name":"London Borough of Hounslow","isoCode":"HNS","countryCode":"GB","latitude":"51.48283580","longitude":"-0.38820620"},{"name":"Hartlepool","isoCode":"HPL","countryCode":"GB","latitude":"54.69174500","longitude":"-1.21292600"},{"name":"Hertfordshire","isoCode":"HRT","countryCode":"GB","latitude":"51.80978230","longitude":"-0.23767440"},{"name":"London Borough of Harrow","isoCode":"HRW","countryCode":"GB","latitude":"51.58816270","longitude":"-0.34228510"},{"name":"London Borough of Haringey","isoCode":"HRY","countryCode":"GB","latitude":"51.59061130","longitude":"-0.11097090"},{"name":"Isles of Scilly","isoCode":"IOS","countryCode":"GB","latitude":"49.92772610","longitude":"-6.32749660"},{"name":"Isle of Wight","isoCode":"IOW","countryCode":"GB","latitude":"50.69384790","longitude":"-1.30473400"},{"name":"London Borough of Islington","isoCode":"ISL","countryCode":"GB","latitude":"51.54650630","longitude":"-0.10580580"},{"name":"Inverclyde","isoCode":"IVC","countryCode":"GB","latitude":"55.93165690","longitude":"-4.68001580"},{"name":"Royal Borough of Kensington and Chelsea","isoCode":"KEC","countryCode":"GB","latitude":"51.49908050","longitude":"-0.19382530"},{"name":"Kent","isoCode":"KEN","countryCode":"GB","latitude":"41.15366740","longitude":"-81.35788590"},{"name":"City of Kingston upon Hull","isoCode":"KHL","countryCode":"GB","latitude":"53.76762360","longitude":"-0.32741980"},{"name":"Kirklees","isoCode":"KIR","countryCode":"GB","latitude":"53.59334320","longitude":"-1.80095090"},{"name":"Royal Borough of Kingston upon Thames","isoCode":"KTT","countryCode":"GB","latitude":"51.37811700","longitude":"-0.29270900"},{"name":"Knowsley","isoCode":"KWL","countryCode":"GB","latitude":"53.45459400","longitude":"-2.85290700"},{"name":"Lancashire","isoCode":"LAN","countryCode":"GB","latitude":"53.76322540","longitude":"-2.70440520"},{"name":"Lisburn and Castlereagh","isoCode":"LBC","countryCode":"GB","latitude":"54.49815840","longitude":"-6.13067910"},{"name":"London Borough of Lambeth","isoCode":"LBH","countryCode":"GB","latitude":"51.45714770","longitude":"-0.12306810"},{"name":"City of Leicester","isoCode":"LCE","countryCode":"GB","latitude":"52.63687780","longitude":"-1.13975920"},{"name":"Leeds","isoCode":"LDS","countryCode":"GB","latitude":"53.80075540","longitude":"-1.54907740"},{"name":"Leicestershire","isoCode":"LEC","countryCode":"GB","latitude":"52.77257100","longitude":"-1.20521260"},{"name":"London Borough of Lewisham","isoCode":"LEW","countryCode":"GB","latitude":"51.44145790","longitude":"-0.01170060"},{"name":"Lincolnshire","isoCode":"LIN","countryCode":"GB","latitude":"52.94518890","longitude":"-0.16012460"},{"name":"Liverpool","isoCode":"LIV","countryCode":"GB","latitude":"32.65649810","longitude":"-115.47632410"},{"name":"Limavady Borough Council","isoCode":"LMV","countryCode":"GB","latitude":"55.05168200","longitude":"-6.94919440"},{"name":"City of London","isoCode":"LND","countryCode":"GB","latitude":"51.51234430","longitude":"-0.09098520"},{"name":"Larne Borough Council","isoCode":"LRN","countryCode":"GB","latitude":"54.85780030","longitude":"-5.82362240"},{"name":"Lisburn City Council","isoCode":"LSB","countryCode":"GB","latitude":"54.49815840","longitude":"-6.13067910"},{"name":"Manchester","isoCode":"MAN","countryCode":"GB","latitude":"53.48075930","longitude":"-2.24263050"},{"name":"Middlesbrough","isoCode":"MDB","countryCode":"GB","latitude":"54.57422700","longitude":"-1.23495600"},{"name":"Medway","isoCode":"MDW","countryCode":"GB","latitude":"42.14176410","longitude":"-71.39672560"},{"name":"Mid and East Antrim","isoCode":"MEA","countryCode":"GB","latitude":"54.93993410","longitude":"-6.11374230"},{"name":"Magherafelt District Council","isoCode":"MFT","countryCode":"GB","latitude":"54.75532790","longitude":"-6.60774870"},{"name":"Milton Keynes","isoCode":"MIK","countryCode":"GB","latitude":"52.08520380","longitude":"-0.73331330"},{"name":"Midlothian","isoCode":"MLN","countryCode":"GB","latitude":"32.47533500","longitude":"-97.01031810"},{"name":"Monmouthshire","isoCode":"MON","countryCode":"GB","latitude":"51.81161000","longitude":"-2.71634170"},{"name":"London Borough of Merton","isoCode":"MRT","countryCode":"GB","latitude":"51.40977420","longitude":"-0.21080840"},{"name":"Moray","isoCode":"MRY","countryCode":"GB","latitude":"57.64984760","longitude":"-3.31680390"},{"name":"Merthyr Tydfil County Borough","isoCode":"MTY","countryCode":"GB","latitude":"51.74674740","longitude":"-3.38132750"},{"name":"Mid Ulster","isoCode":"MUL","countryCode":"GB","latitude":"54.64113010","longitude":"-6.75225490"},{"name":"Moyle District Council","isoCode":"MYL","countryCode":"GB","latitude":"55.20473270","longitude":"-6.25317400"},{"name":"North Ayrshire","isoCode":"NAY","countryCode":"GB","latitude":"55.64167310","longitude":"-4.75946000"},{"name":"Northumberland","isoCode":"NBL","countryCode":"GB","latitude":"55.20825420","longitude":"-2.07841380"},{"name":"North Down Borough Council","isoCode":"NDN","countryCode":"GB","latitude":"54.65362970","longitude":"-5.67249250"},{"name":"North East Lincolnshire","isoCode":"NEL","countryCode":"GB","latitude":"53.56682010","longitude":"-0.08150660"},{"name":"Newcastle upon Tyne","isoCode":"NET","countryCode":"GB","latitude":"54.97825200","longitude":"-1.61778000"},{"name":"Norfolk","isoCode":"NFK","countryCode":"GB","latitude":"36.85076890","longitude":"-76.28587260"},{"name":"City of Nottingham","isoCode":"NGM","countryCode":"GB","latitude":"52.95478320","longitude":"-1.15810860"},{"name":"Northern Ireland","isoCode":"NIR","countryCode":"GB","latitude":"54.78771490","longitude":"-6.49231450"},{"name":"North Lanarkshire","isoCode":"NLK","countryCode":"GB","latitude":"55.86624320","longitude":"-3.96131440"},{"name":"North Lincolnshire","isoCode":"NLN","countryCode":"GB","latitude":"53.60555920","longitude":"-0.55965820"},{"name":"Newry, Mourne and Down","isoCode":"NMD","countryCode":"GB","latitude":"54.24342870","longitude":"-5.95779590"},{"name":"North Somerset","isoCode":"NSM","countryCode":"GB","latitude":"51.38790280","longitude":"-2.77810910"},{"name":"Newtownabbey Borough Council","isoCode":"NTA","countryCode":"GB","latitude":"54.67924220","longitude":"-5.95911020"},{"name":"Northamptonshire","isoCode":"NTH","countryCode":"GB","latitude":"52.27299440","longitude":"-0.87555150"},{"name":"Neath Port Talbot County Borough","isoCode":"NTL","countryCode":"GB","latitude":"51.59785190","longitude":"-3.78396680"},{"name":"Nottinghamshire","isoCode":"NTT","countryCode":"GB","latitude":"53.10031900","longitude":"-0.99363060"},{"name":"North Tyneside","isoCode":"NTY","countryCode":"GB","latitude":"55.01823990","longitude":"-1.48584360"},{"name":"London Borough of Newham","isoCode":"NWM","countryCode":"GB","latitude":"51.52551620","longitude":"0.03521630"},{"name":"Newport","isoCode":"NWP","countryCode":"GB","latitude":"37.52782340","longitude":"-94.10438760"},{"name":"North Yorkshire","isoCode":"NYK","countryCode":"GB","latitude":"53.99150280","longitude":"-1.54120150"},{"name":"Newry and Mourne District Council","isoCode":"NYM","countryCode":"GB","latitude":"54.17425050","longitude":"-6.33919920"},{"name":"Oldham","isoCode":"OLD","countryCode":"GB","latitude":"42.20405980","longitude":"-71.20481190"},{"name":"Omagh District Council","isoCode":"OMH","countryCode":"GB","latitude":"54.45135240","longitude":"-7.71250180"},{"name":"Orkney Islands","isoCode":"ORK","countryCode":"GB","latitude":"58.98094010","longitude":"-2.96052060"},{"name":"Oxfordshire","isoCode":"OXF","countryCode":"GB","latitude":"51.76120560","longitude":"-1.24646740"},{"name":"Pembrokeshire","isoCode":"PEM","countryCode":"GB","latitude":"51.67407800","longitude":"-4.90887850"},{"name":"Perth and Kinross","isoCode":"PKN","countryCode":"GB","latitude":"56.39538170","longitude":"-3.42835470"},{"name":"City of Plymouth","isoCode":"PLY","countryCode":"GB","latitude":"42.37089410","longitude":"-83.46971410"},{"name":"Poole","isoCode":"POL","countryCode":"GB","latitude":"50.71505000","longitude":"-1.98724800"},{"name":"City of Portsmouth","isoCode":"POR","countryCode":"GB","latitude":"36.83291500","longitude":"-76.29755490"},{"name":"Powys","isoCode":"POW","countryCode":"GB","latitude":"52.64642490","longitude":"-3.32609040"},{"name":"City of Peterborough","isoCode":"PTE","countryCode":"GB","latitude":"44.30936360","longitude":"-78.32015300"},{"name":"Redcar and Cleveland","isoCode":"RCC","countryCode":"GB","latitude":"54.59713440","longitude":"-1.07759970"},{"name":"Rochdale","isoCode":"RCH","countryCode":"GB","latitude":"53.60971360","longitude":"-2.15610000"},{"name":"Rhondda Cynon Taf","isoCode":"RCT","countryCode":"GB","latitude":"51.64902070","longitude":"-3.42886920"},{"name":"London Borough of Redbridge","isoCode":"RDB","countryCode":"GB","latitude":"51.58861210","longitude":"0.08239820"},{"name":"Reading","isoCode":"RDG","countryCode":"GB","latitude":"36.14866590","longitude":"-95.98400120"},{"name":"Renfrewshire","isoCode":"RFW","countryCode":"GB","latitude":"55.84665400","longitude":"-4.53312590"},{"name":"London Borough of Richmond upon Thames","isoCode":"RIC","countryCode":"GB","latitude":"51.46130540","longitude":"-0.30377090"},{"name":"Rotherham","isoCode":"ROT","countryCode":"GB","latitude":"53.43260350","longitude":"-1.36350090"},{"name":"Rutland","isoCode":"RUT","countryCode":"GB","latitude":"43.61062370","longitude":"-72.97260650"},{"name":"Sandwell","isoCode":"SAW","countryCode":"GB","latitude":"52.53616740","longitude":"-2.01079300"},{"name":"South Ayrshire","isoCode":"SAY","countryCode":"GB","latitude":"55.45889880","longitude":"-4.62919940"},{"name":"Scottish Borders","isoCode":"SCB","countryCode":"GB","latitude":"55.54856970","longitude":"-2.78613880"},{"name":"Scotland","isoCode":"SCT","countryCode":"GB","latitude":"56.49067120","longitude":"-4.20264580"},{"name":"Suffolk","isoCode":"SFK","countryCode":"GB","latitude":"52.18724720","longitude":"0.97078010"},{"name":"Sefton","isoCode":"SFT","countryCode":"GB","latitude":"53.50344490","longitude":"-2.97035900"},{"name":"South Gloucestershire","isoCode":"SGC","countryCode":"GB","latitude":"51.52643610","longitude":"-2.47284870"},{"name":"Ascension Island","isoCode":"SH-AC","countryCode":"GB","latitude":"-7.94671660","longitude":"-14.35591580"},{"name":"Saint Helena","isoCode":"SH-HL","countryCode":"GB","latitude":"-15.96501040","longitude":"-5.70892410"},{"name":"Sheffield","isoCode":"SHF","countryCode":"GB","latitude":"36.09507430","longitude":"-80.27884660"},{"name":"St Helens","isoCode":"SHN","countryCode":"GB","latitude":"45.85896100","longitude":"-122.82123560"},{"name":"Shropshire","isoCode":"SHR","countryCode":"GB","latitude":"52.70636570","longitude":"-2.74178490"},{"name":"Stockport","isoCode":"SKP","countryCode":"GB","latitude":"53.41063160","longitude":"-2.15753320"},{"name":"Salford","isoCode":"SLF","countryCode":"GB","latitude":"53.48752350","longitude":"-2.29012640"},{"name":"Slough","isoCode":"SLG","countryCode":"GB","latitude":"51.51053840","longitude":"-0.59504060"},{"name":"South Lanarkshire","isoCode":"SLK","countryCode":"GB","latitude":"55.67359090","longitude":"-3.78196610"},{"name":"City of Sunderland","isoCode":"SND","countryCode":"GB","latitude":"54.88614890","longitude":"-1.47857970"},{"name":"Solihull","isoCode":"SOL","countryCode":"GB","latitude":"52.41181100","longitude":"-1.77761000"},{"name":"Somerset","isoCode":"SOM","countryCode":"GB","latitude":"51.10509700","longitude":"-2.92623070"},{"name":"Southend-on-Sea","isoCode":"SOS","countryCode":"GB","latitude":"51.54592690","longitude":"0.70771230"},{"name":"Surrey","isoCode":"SRY","countryCode":"GB","latitude":"51.31475930","longitude":"-0.55995010"},{"name":"Strabane District Council","isoCode":"STB","countryCode":"GB","latitude":"54.82738650","longitude":"-7.46331030"},{"name":"City of Stoke-on-Trent","isoCode":"STE","countryCode":"GB","latitude":"53.00266800","longitude":"-2.17940400"},{"name":"Stirling","isoCode":"STG","countryCode":"GB","latitude":"56.11652270","longitude":"-3.93690290"},{"name":"City of Southampton","isoCode":"STH","countryCode":"GB","latitude":"50.90970040","longitude":"-1.40435090"},{"name":"London Borough of Sutton","isoCode":"STN","countryCode":"GB","latitude":"51.35737620","longitude":"-0.17527960"},{"name":"Staffordshire","isoCode":"STS","countryCode":"GB","latitude":"52.87927450","longitude":"-2.05718680"},{"name":"Stockton-on-Tees","isoCode":"STT","countryCode":"GB","latitude":"54.57045510","longitude":"-1.32898210"},{"name":"South Tyneside","isoCode":"STY","countryCode":"GB","latitude":"54.96366930","longitude":"-1.44186340"},{"name":"City and County of Swansea","isoCode":"SWA","countryCode":"GB","latitude":"51.62144000","longitude":"-3.94364600"},{"name":"Swindon","isoCode":"SWD","countryCode":"GB","latitude":"51.55577390","longitude":"-1.77971760"},{"name":"London Borough of Southwark","isoCode":"SWK","countryCode":"GB","latitude":"51.48805720","longitude":"-0.07628380"},{"name":"Tameside","isoCode":"TAM","countryCode":"GB","latitude":"53.48058280","longitude":"-2.08098910"},{"name":"Telford and Wrekin","isoCode":"TFW","countryCode":"GB","latitude":"52.74099160","longitude":"-2.48685860"},{"name":"Thurrock","isoCode":"THR","countryCode":"GB","latitude":"51.49345570","longitude":"0.35291970"},{"name":"Torbay","isoCode":"TOB","countryCode":"GB","latitude":"50.43923290","longitude":"-3.53698990"},{"name":"Torfaen","isoCode":"TOF","countryCode":"GB","latitude":"51.70022530","longitude":"-3.04460150"},{"name":"Trafford","isoCode":"TRF","countryCode":"GB","latitude":"40.38562460","longitude":"-79.75893470"},{"name":"London Borough of Tower Hamlets","isoCode":"TWH","countryCode":"GB","latitude":"51.52026070","longitude":"-0.02933960"},{"name":"United Kingdom","isoCode":"UKM","countryCode":"GB","latitude":"55.37805100","longitude":"-3.43597300"},{"name":"Vale of Glamorgan","isoCode":"VGL","countryCode":"GB","latitude":"51.40959580","longitude":"-3.48481670"},{"name":"Warwickshire","isoCode":"WAR","countryCode":"GB","latitude":"52.26713530","longitude":"-1.46752160"},{"name":"West Berkshire","isoCode":"WBK","countryCode":"GB","latitude":"51.43082550","longitude":"-1.14449270"},{"name":"West Dunbartonshire","isoCode":"WDU","countryCode":"GB","latitude":"55.94509250","longitude":"-4.56462590"},{"name":"London Borough of Waltham Forest","isoCode":"WFT","countryCode":"GB","latitude":"51.58863830","longitude":"-0.01176250"},{"name":"Metropolitan Borough of Wigan","isoCode":"WGN","countryCode":"GB","latitude":"53.51348120","longitude":"-2.61069990"},{"name":"Wiltshire","isoCode":"WIL","countryCode":"GB","latitude":"51.34919960","longitude":"-1.99271050"},{"name":"Wakefield","isoCode":"WKF","countryCode":"GB","latitude":"42.50393950","longitude":"-71.07233910"},{"name":"Walsall","isoCode":"WLL","countryCode":"GB","latitude":"52.58621400","longitude":"-1.98291900"},{"name":"West Lothian","isoCode":"WLN","countryCode":"GB","latitude":"55.90701980","longitude":"-3.55171670"},{"name":"Wales","isoCode":"WLS","countryCode":"GB","latitude":"52.13066070","longitude":"-3.78371170"},{"name":"City of Wolverhampton","isoCode":"WLV","countryCode":"GB","latitude":"52.58891200","longitude":"-2.15646300"},{"name":"London Borough of Wandsworth","isoCode":"WND","countryCode":"GB","latitude":"51.45682740","longitude":"-0.18966380"},{"name":"Windsor and Maidenhead","isoCode":"WNM","countryCode":"GB","latitude":"51.47997120","longitude":"-0.62425650"},{"name":"Wokingham","isoCode":"WOK","countryCode":"GB","latitude":"51.41045700","longitude":"-0.83386100"},{"name":"Worcestershire","isoCode":"WOR","countryCode":"GB","latitude":"52.25452250","longitude":"-2.26683820"},{"name":"Wirral","isoCode":"WRL","countryCode":"GB","latitude":"53.37271810","longitude":"-3.07375400"},{"name":"Warrington","isoCode":"WRT","countryCode":"GB","latitude":"40.24927410","longitude":"-75.13406040"},{"name":"Wrexham County Borough","isoCode":"WRX","countryCode":"GB","latitude":"53.03013780","longitude":"-3.02614870"},{"name":"City of Westminster","isoCode":"WSM","countryCode":"GB","latitude":"39.57659770","longitude":"-76.99721260"},{"name":"West Sussex","isoCode":"WSX","countryCode":"GB","latitude":"50.92801430","longitude":"-0.46170750"},{"name":"City of York","isoCode":"YOR","countryCode":"GB","latitude":"53.95996510","longitude":"-1.08729790"},{"name":"Shetland Islands","isoCode":"ZET","countryCode":"GB","latitude":"60.52965070","longitude":"-1.26594090"},{"name":"Saint Andrew Parish","isoCode":"01","countryCode":"GD","latitude":null,"longitude":null},{"name":"Saint David Parish","isoCode":"02","countryCode":"GD","latitude":null,"longitude":null},{"name":"Saint George Parish","isoCode":"03","countryCode":"GD","latitude":null,"longitude":null},{"name":"Saint John Parish","isoCode":"04","countryCode":"GD","latitude":"30.11183310","longitude":"-90.48799160"},{"name":"Saint Mark Parish","isoCode":"05","countryCode":"GD","latitude":"40.58818630","longitude":"-73.94957010"},{"name":"Saint Patrick Parish","isoCode":"06","countryCode":"GD","latitude":null,"longitude":null},{"name":"Carriacou and Petite Martinique","isoCode":"10","countryCode":"GD","latitude":"12.47858880","longitude":"-61.44938420"},{"name":"Khelvachauri Municipality","isoCode":"29","countryCode":"GE","latitude":"41.58019260","longitude":"41.66107420"},{"name":"Senaki Municipality","isoCode":"50","countryCode":"GE","latitude":"42.26963600","longitude":"42.06568960"},{"name":"Autonomous Republic of Abkhazia","isoCode":"AB","countryCode":"GE","latitude":"43.00155440","longitude":"41.02340700"},{"name":"Adjara","isoCode":"AJ","countryCode":"GE","latitude":"41.60056260","longitude":"42.06883830"},{"name":"Guria","isoCode":"GU","countryCode":"GE","latitude":"41.94427360","longitude":"42.04580910"},{"name":"Imereti","isoCode":"IM","countryCode":"GE","latitude":"42.23010800","longitude":"42.90086640"},{"name":"Kakheti","isoCode":"KA","countryCode":"GE","latitude":"41.64816020","longitude":"45.69055540"},{"name":"Kvemo Kartli","isoCode":"KK","countryCode":"GE","latitude":"41.47918330","longitude":"44.65604510"},{"name":"Mtskheta-Mtianeti","isoCode":"MM","countryCode":"GE","latitude":"42.16821850","longitude":"44.65060580"},{"name":"Racha-Lechkhumi and Kvemo Svaneti","isoCode":"RL","countryCode":"GE","latitude":"42.67188730","longitude":"43.05628360"},{"name":"Samtskhe-Javakheti","isoCode":"SJ","countryCode":"GE","latitude":"41.54792960","longitude":"43.27764000"},{"name":"Shida Kartli","isoCode":"SK","countryCode":"GE","latitude":"42.07569440","longitude":"43.95404620"},{"name":"Samegrelo-Zemo Svaneti","isoCode":"SZ","countryCode":"GE","latitude":"42.73522470","longitude":"42.16893620"},{"name":"Tbilisi","isoCode":"TB","countryCode":"GE","latitude":"41.71513770","longitude":"44.82709600"},{"name":"Greater Accra","isoCode":"AA","countryCode":"GH","latitude":"5.81428360","longitude":"0.07467670"},{"name":"Ahafo","isoCode":"AF","countryCode":"GH","latitude":"7.58213720","longitude":"-2.54974630"},{"name":"Ashanti","isoCode":"AH","countryCode":"GH","latitude":"6.74704360","longitude":"-1.52086240"},{"name":"Bono East","isoCode":"BE","countryCode":"GH","latitude":"7.75000000","longitude":"-1.05000000"},{"name":"Bono","isoCode":"BO","countryCode":"GH","latitude":"7.65000000","longitude":"-2.50000000"},{"name":"Central","isoCode":"CP","countryCode":"GH","latitude":"5.50000000","longitude":"-1.00000000"},{"name":"Eastern","isoCode":"EP","countryCode":"GH","latitude":"6.50000000","longitude":"-0.50000000"},{"name":"North East","isoCode":"NE","countryCode":"GH","latitude":"10.51666700","longitude":"-0.36666700"},{"name":"Northern","isoCode":"NP","countryCode":"GH","latitude":"9.50000000","longitude":"-1.00000000"},{"name":"Oti","isoCode":"OT","countryCode":"GH","latitude":"7.90000000","longitude":"0.30000000"},{"name":"Savannah","isoCode":"SV","countryCode":"GH","latitude":"9.08333300","longitude":"-1.81666700"},{"name":"Volta","isoCode":"TV","countryCode":"GH","latitude":"6.57813730","longitude":"0.45023680"},{"name":"Upper East","isoCode":"UE","countryCode":"GH","latitude":"10.70824990","longitude":"-0.98206680"},{"name":"Upper West","isoCode":"UW","countryCode":"GH","latitude":"10.25297570","longitude":"-2.14502450"},{"name":"Western North","isoCode":"WN","countryCode":"GH","latitude":"6.30000000","longitude":"-2.80000000"},{"name":"Western","isoCode":"WP","countryCode":"GH","latitude":"5.50000000","longitude":"-2.50000000"},{"name":"Banjul","isoCode":"B","countryCode":"GM","latitude":"13.45487610","longitude":"-16.57903230"},{"name":"Lower River Division","isoCode":"L","countryCode":"GM","latitude":"13.35533060","longitude":"-15.92299000"},{"name":"Central River Division","isoCode":"M","countryCode":"GM","latitude":"13.59944690","longitude":"-14.89216680"},{"name":"North Bank Division","isoCode":"N","countryCode":"GM","latitude":"13.52854360","longitude":"-16.01699710"},{"name":"Upper River Division","isoCode":"U","countryCode":"GM","latitude":"13.42573660","longitude":"-14.00723480"},{"name":"West Coast Division","isoCode":"W","countryCode":"GM","latitude":"5.97727980","longitude":"116.07542880"},{"name":"Boké Region","isoCode":"B","countryCode":"GN","latitude":"11.18646720","longitude":"-14.10013260"},{"name":"Beyla Prefecture","isoCode":"BE","countryCode":"GN","latitude":"8.91981780","longitude":"-8.30884410"},{"name":"Boffa Prefecture","isoCode":"BF","countryCode":"GN","latitude":"10.18082540","longitude":"-14.03916150"},{"name":"Boké Prefecture","isoCode":"BK","countryCode":"GN","latitude":"11.08473790","longitude":"-14.37919120"},{"name":"Conakry","isoCode":"C","countryCode":"GN","latitude":"9.64118550","longitude":"-13.57840120"},{"name":"Coyah Prefecture","isoCode":"CO","countryCode":"GN","latitude":"9.77155350","longitude":"-13.31252990"},{"name":"Kindia Region","isoCode":"D","countryCode":"GN","latitude":"10.17816940","longitude":"-12.98961500"},{"name":"Dabola Prefecture","isoCode":"DB","countryCode":"GN","latitude":"10.72978060","longitude":"-11.11078540"},{"name":"Dinguiraye Prefecture","isoCode":"DI","countryCode":"GN","latitude":"11.68442220","longitude":"-10.80000510"},{"name":"Dalaba Prefecture","isoCode":"DL","countryCode":"GN","latitude":"10.68681760","longitude":"-12.24906970"},{"name":"Dubréka Prefecture","isoCode":"DU","countryCode":"GN","latitude":"9.79073480","longitude":"-13.51477350"},{"name":"Faranah Prefecture","isoCode":"FA","countryCode":"GN","latitude":"9.90573990","longitude":"-10.80000510"},{"name":"Forécariah Prefecture","isoCode":"FO","countryCode":"GN","latitude":"9.38861870","longitude":"-13.08179030"},{"name":"Fria Prefecture","isoCode":"FR","countryCode":"GN","latitude":"10.36745430","longitude":"-13.58418710"},{"name":"Gaoual Prefecture","isoCode":"GA","countryCode":"GN","latitude":"11.57628040","longitude":"-13.35872880"},{"name":"Guéckédou Prefecture","isoCode":"GU","countryCode":"GN","latitude":"8.56496880","longitude":"-10.13111630"},{"name":"Kankan Region","isoCode":"K","countryCode":"GN","latitude":"10.12092300","longitude":"-9.54509740"},{"name":"Kankan Prefecture","isoCode":"KA","countryCode":"GN","latitude":"10.30344650","longitude":"-9.36730840"},{"name":"Koubia Prefecture","isoCode":"KB","countryCode":"GN","latitude":"11.58235400","longitude":"-11.89202370"},{"name":"Kindia Prefecture","isoCode":"KD","countryCode":"GN","latitude":"10.10132920","longitude":"-12.71351210"},{"name":"Kérouané Prefecture","isoCode":"KE","countryCode":"GN","latitude":"9.25366430","longitude":"-9.01289260"},{"name":"Koundara Prefecture","isoCode":"KN","countryCode":"GN","latitude":"12.48940210","longitude":"-13.30675620"},{"name":"Kouroussa Prefecture","isoCode":"KO","countryCode":"GN","latitude":"10.64892290","longitude":"-9.88505860"},{"name":"Kissidougou Prefecture","isoCode":"KS","countryCode":"GN","latitude":"9.22520220","longitude":"-10.08072980"},{"name":"Labé Region","isoCode":"L","countryCode":"GN","latitude":"11.32320420","longitude":"-12.28913140"},{"name":"Labé Prefecture","isoCode":"LA","countryCode":"GN","latitude":"11.35419390","longitude":"-12.34638750"},{"name":"Lélouma Prefecture","isoCode":"LE","countryCode":"GN","latitude":"11.18333300","longitude":"-12.93333300"},{"name":"Lola Prefecture","isoCode":"LO","countryCode":"GN","latitude":"7.96138180","longitude":"-8.39649380"},{"name":"Mamou Region","isoCode":"M","countryCode":"GN","latitude":"10.57360240","longitude":"-11.88917210"},{"name":"Macenta Prefecture","isoCode":"MC","countryCode":"GN","latitude":"8.46157950","longitude":"-9.27855830"},{"name":"Mandiana Prefecture","isoCode":"MD","countryCode":"GN","latitude":"10.61728270","longitude":"-8.69857160"},{"name":"Mali Prefecture","isoCode":"ML","countryCode":"GN","latitude":"11.98370900","longitude":"-12.25479190"},{"name":"Mamou Prefecture","isoCode":"MM","countryCode":"GN","latitude":"10.57360240","longitude":"-11.88917210"},{"name":"Nzérékoré Region","isoCode":"N","countryCode":"GN","latitude":"8.03858700","longitude":"-8.83627550"},{"name":"Nzérékoré Prefecture","isoCode":"NZ","countryCode":"GN","latitude":"7.74783590","longitude":"-8.82525020"},{"name":"Pita Prefecture","isoCode":"PI","countryCode":"GN","latitude":"10.80620860","longitude":"-12.71351210"},{"name":"Siguiri Prefecture","isoCode":"SI","countryCode":"GN","latitude":"11.41481130","longitude":"-9.17883040"},{"name":"Télimélé Prefecture","isoCode":"TE","countryCode":"GN","latitude":"10.90893640","longitude":"-13.02993310"},{"name":"Tougué Prefecture","isoCode":"TO","countryCode":"GN","latitude":"11.38415830","longitude":"-11.61577730"},{"name":"Yomou Prefecture","isoCode":"YO","countryCode":"GN","latitude":"7.56962790","longitude":"-9.25915710"},{"name":"Annobón Province","isoCode":"AN","countryCode":"GQ","latitude":"-1.42687820","longitude":"5.63528010"},{"name":"Bioko Norte Province","isoCode":"BN","countryCode":"GQ","latitude":"3.65950720","longitude":"8.79218360"},{"name":"Bioko Sur Province","isoCode":"BS","countryCode":"GQ","latitude":"3.42097850","longitude":"8.61606740"},{"name":"Río Muni","isoCode":"C","countryCode":"GQ","latitude":"1.46106060","longitude":"9.67868940"},{"name":"Centro Sur Province","isoCode":"CS","countryCode":"GQ","latitude":"1.34360840","longitude":"10.43965600"},{"name":"Insular Region","isoCode":"I","countryCode":"GQ","latitude":"37.09024000","longitude":"-95.71289100"},{"name":"Kié-Ntem Province","isoCode":"KN","countryCode":"GQ","latitude":"2.02809300","longitude":"11.07117580"},{"name":"Litoral Province","isoCode":"LI","countryCode":"GQ","latitude":"1.57502440","longitude":"9.81249350"},{"name":"Wele-Nzas Province","isoCode":"WN","countryCode":"GQ","latitude":"1.41661620","longitude":"11.07117580"},{"name":"Aetolia-Acarnania Regional Unit","isoCode":"01","countryCode":"GR","latitude":"38.70843860","longitude":"21.37989280"},{"name":"Boeotia Regional Unit","isoCode":"03","countryCode":"GR","latitude":"38.36636640","longitude":"23.09650640"},{"name":"Euboea","isoCode":"04","countryCode":"GR","latitude":"38.52360360","longitude":"23.85847370"},{"name":"Phthiotis Prefecture","isoCode":"06","countryCode":"GR","latitude":"38.99978500","longitude":"22.33377690"},{"name":"Argolis Regional Unit","isoCode":"11","countryCode":"GR","latitude":null,"longitude":null},{"name":"Arcadia Prefecture","isoCode":"12","countryCode":"GR","latitude":"37.55578250","longitude":"22.33377690"},{"name":"Achaea Regional Unit","isoCode":"13","countryCode":"GR","latitude":"38.11587290","longitude":"21.95224910"},{"name":"Corinthia Regional Unit","isoCode":"15","countryCode":"GR","latitude":null,"longitude":null},{"name":"Laconia","isoCode":"16","countryCode":"GR","latitude":"43.52785460","longitude":"-71.47035090"},{"name":"Corfu Prefecture","isoCode":"22","countryCode":"GR","latitude":"39.62498380","longitude":"19.92234610"},{"name":"Kefalonia Prefecture","isoCode":"23","countryCode":"GR","latitude":"38.17536750","longitude":"20.56921790"},{"name":"Lefkada Regional Unit","isoCode":"24","countryCode":"GR","latitude":"38.83336630","longitude":"20.70691080"},{"name":"Ioannina Regional Unit","isoCode":"33","countryCode":"GR","latitude":"39.66502880","longitude":"20.85374660"},{"name":"Preveza Prefecture","isoCode":"34","countryCode":"GR","latitude":"38.95926490","longitude":"20.75171550"},{"name":"Karditsa Regional Unit","isoCode":"41","countryCode":"GR","latitude":"39.36402580","longitude":"21.92140490"},{"name":"Larissa Prefecture","isoCode":"42","countryCode":"GR","latitude":"39.63902240","longitude":"22.41912540"},{"name":"Grevena Prefecture","isoCode":"51","countryCode":"GR","latitude":"40.08376260","longitude":"21.42732990"},{"name":"Drama Regional Unit","isoCode":"52","countryCode":"GR","latitude":"41.23400230","longitude":"24.23904980"},{"name":"Imathia Regional Unit","isoCode":"53","countryCode":"GR","latitude":"40.60600670","longitude":"22.14302150"},{"name":"Thessaloniki Regional Unit","isoCode":"54","countryCode":"GR","latitude":"40.64006290","longitude":"22.94441910"},{"name":"Kastoria Regional Unit","isoCode":"56","countryCode":"GR","latitude":"40.51926910","longitude":"21.26871710"},{"name":"Kilkis Regional Unit","isoCode":"57","countryCode":"GR","latitude":"40.99370710","longitude":"22.87536740"},{"name":"Kozani Prefecture","isoCode":"58","countryCode":"GR","latitude":"40.30055860","longitude":"21.78877370"},{"name":"Pella Regional Unit","isoCode":"59","countryCode":"GR","latitude":"40.91480390","longitude":"22.14302150"},{"name":"Serres Prefecture","isoCode":"62","countryCode":"GR","latitude":"41.08638540","longitude":"23.54838190"},{"name":"Chania Regional Unit","isoCode":"94","countryCode":"GR","latitude":"35.51382980","longitude":"24.01803670"},{"name":"East Macedonia and Thrace","isoCode":"A","countryCode":"GR","latitude":"41.12951260","longitude":"24.88771910"},{"name":"East Attica Regional Unit","isoCode":"A2","countryCode":"GR","latitude":"38.20540930","longitude":"23.85847370"},{"name":"Central Macedonia","isoCode":"B","countryCode":"GR","latitude":"40.62117300","longitude":"23.19180210"},{"name":"West Macedonia Region","isoCode":"C","countryCode":"GR","latitude":"40.30040580","longitude":"21.79035590"},{"name":"Epirus Region","isoCode":"D","countryCode":"GR","latitude":"39.57064130","longitude":"20.76428430"},{"name":"Ionian Islands Region","isoCode":"F","countryCode":"GR","latitude":"37.96948980","longitude":"21.38023720"},{"name":"West Greece Region","isoCode":"G","countryCode":"GR","latitude":"38.51154960","longitude":"21.57067860"},{"name":"Central Greece Region","isoCode":"H","countryCode":"GR","latitude":"38.60439840","longitude":"22.71521310"},{"name":"Attica Region","isoCode":"I","countryCode":"GR","latitude":"38.04575680","longitude":"23.85847370"},{"name":"Peloponnese Region","isoCode":"J","countryCode":"GR","latitude":"37.50794720","longitude":"22.37349000"},{"name":"South Aegean","isoCode":"L","countryCode":"GR","latitude":"37.08553020","longitude":"25.14892150"},{"name":"Crete Region","isoCode":"M","countryCode":"GR","latitude":"35.24011700","longitude":"24.80926910"},{"name":"Alta Verapaz Department","isoCode":"AV","countryCode":"GT","latitude":"15.59428830","longitude":"-90.14949880"},{"name":"Baja Verapaz Department","isoCode":"BV","countryCode":"GT","latitude":"15.12558670","longitude":"-90.37483540"},{"name":"Chimaltenango Department","isoCode":"CM","countryCode":"GT","latitude":"14.56347870","longitude":"-90.98206680"},{"name":"Chiquimula Department","isoCode":"CQ","countryCode":"GT","latitude":"14.75149990","longitude":"-89.47421770"},{"name":"Escuintla Department","isoCode":"ES","countryCode":"GT","latitude":"14.19109120","longitude":"-90.98206680"},{"name":"Guatemala Department","isoCode":"GU","countryCode":"GT","latitude":"14.56494010","longitude":"-90.52578230"},{"name":"Huehuetenango Department","isoCode":"HU","countryCode":"GT","latitude":"15.58799140","longitude":"-91.67606910"},{"name":"Izabal Department","isoCode":"IZ","countryCode":"GT","latitude":"15.49765170","longitude":"-88.86469800"},{"name":"Jalapa Department","isoCode":"JA","countryCode":"GT","latitude":"14.61214460","longitude":"-89.96267990"},{"name":"Jutiapa Department","isoCode":"JU","countryCode":"GT","latitude":"14.19308020","longitude":"-89.92532330"},{"name":"Petén Department","isoCode":"PE","countryCode":"GT","latitude":"16.91203300","longitude":"-90.29957850"},{"name":"El Progreso Department","isoCode":"PR","countryCode":"GT","latitude":"14.93887320","longitude":"-90.07467670"},{"name":"Quiché Department","isoCode":"QC","countryCode":"GT","latitude":"15.49838080","longitude":"-90.98206680"},{"name":"Quetzaltenango Department","isoCode":"QZ","countryCode":"GT","latitude":"14.79243300","longitude":"-91.71495800"},{"name":"Retalhuleu Department","isoCode":"RE","countryCode":"GT","latitude":"14.52454850","longitude":"-91.68578800"},{"name":"Sacatepéquez Department","isoCode":"SA","countryCode":"GT","latitude":"14.51783790","longitude":"-90.71527490"},{"name":"San Marcos Department","isoCode":"SM","countryCode":"GT","latitude":"14.93095690","longitude":"-91.90992380"},{"name":"Sololá Department","isoCode":"SO","countryCode":"GT","latitude":"14.74852300","longitude":"-91.28910360"},{"name":"Santa Rosa Department","isoCode":"SR","countryCode":"GT","latitude":"38.44057590","longitude":"-122.70375430"},{"name":"Suchitepéquez Department","isoCode":"SU","countryCode":"GT","latitude":"14.42159820","longitude":"-91.40482490"},{"name":"Totonicapán Department","isoCode":"TO","countryCode":"GT","latitude":"14.91734020","longitude":"-91.36139230"},{"name":"Bafatá","isoCode":"BA","countryCode":"GW","latitude":"12.17352430","longitude":"-14.65295200"},{"name":"Bolama Region","isoCode":"BL","countryCode":"GW","latitude":"11.14805910","longitude":"-16.13457050"},{"name":"Biombo Region","isoCode":"BM","countryCode":"GW","latitude":"11.85290610","longitude":"-15.73511710"},{"name":"Cacheu Region","isoCode":"CA","countryCode":"GW","latitude":"12.05514160","longitude":"-16.06401790"},{"name":"Gabú Region","isoCode":"GA","countryCode":"GW","latitude":"11.89624880","longitude":"-14.10013260"},{"name":"Leste Province","isoCode":"L","countryCode":"GW","latitude":null,"longitude":null},{"name":"Norte Province","isoCode":"N","countryCode":"GW","latitude":"7.87218110","longitude":"123.88577470"},{"name":"Oio Region","isoCode":"OI","countryCode":"GW","latitude":"12.27607090","longitude":"-15.31311850"},{"name":"Quinara Region","isoCode":"QU","countryCode":"GW","latitude":"11.79556200","longitude":"-15.17268160"},{"name":"Sul Province","isoCode":"S","countryCode":"GW","latitude":"-10.28665780","longitude":"20.71224650"},{"name":"Tombali Region","isoCode":"TO","countryCode":"GW","latitude":"11.36326960","longitude":"-14.98561760"},{"name":"Barima-Waini","isoCode":"BA","countryCode":"GY","latitude":"7.48824190","longitude":"-59.65644940"},{"name":"Cuyuni-Mazaruni","isoCode":"CU","countryCode":"GY","latitude":"6.46421410","longitude":"-60.21107520"},{"name":"Demerara-Mahaica","isoCode":"DE","countryCode":"GY","latitude":"6.54642600","longitude":"-58.09820460"},{"name":"East Berbice-Corentyne","isoCode":"EB","countryCode":"GY","latitude":"2.74779220","longitude":"-57.46272590"},{"name":"Essequibo Islands-West Demerara","isoCode":"ES","countryCode":"GY","latitude":"6.57201320","longitude":"-58.46299970"},{"name":"Mahaica-Berbice","isoCode":"MA","countryCode":"GY","latitude":"6.23849600","longitude":"-57.91625550"},{"name":"Pomeroon-Supenaam","isoCode":"PM","countryCode":"GY","latitude":"7.12941660","longitude":"-58.92062950"},{"name":"Potaro-Siparuni","isoCode":"PT","countryCode":"GY","latitude":"4.78558530","longitude":"-59.28799770"},{"name":"Upper Demerara-Berbice","isoCode":"UD","countryCode":"GY","latitude":"5.30648790","longitude":"-58.18929210"},{"name":"Upper Takutu-Upper Essequibo","isoCode":"UT","countryCode":"GY","latitude":"2.92395950","longitude":"-58.73736340"},{"name":"Central and Western District","isoCode":"HCW","countryCode":"HK","latitude":"22.28666000","longitude":"114.15497000"},{"name":"Eastern","isoCode":"HEA","countryCode":"HK","latitude":"22.28411000","longitude":"114.22414000"},{"name":"Southern","isoCode":"HSO","countryCode":"HK","latitude":"22.24725000","longitude":"114.15884000"},{"name":"Wan Chai","isoCode":"HWC","countryCode":"HK","latitude":"22.27968000","longitude":"114.17168000"},{"name":"Kowloon City","isoCode":"KKC","countryCode":"HK","latitude":"22.32820000","longitude":"114.19155000"},{"name":"Kwun Tong","isoCode":"KKT","countryCode":"HK","latitude":"22.31326000","longitude":"114.22581000"},{"name":"Sham Shui Po","isoCode":"KSS","countryCode":"HK","latitude":"22.33074000","longitude":"114.16220000"},{"name":"Wong Tai Sin","isoCode":"KWT","countryCode":"HK","latitude":"22.33353000","longitude":"114.19686000"},{"name":"Yau Tsim Mong","isoCode":"KYT","countryCode":"HK","latitude":"22.32138000","longitude":"114.17260000"},{"name":"Islands District","isoCode":"NIS","countryCode":"HK","latitude":"22.26114000","longitude":"113.94608000"},{"name":"Kwai Tsing","isoCode":"NKT","countryCode":"HK","latitude":"22.35488000","longitude":"114.08401000"},{"name":"North","isoCode":"NNO","countryCode":"HK","latitude":"22.49471000","longitude":"114.13812000"},{"name":"Sai Kung District","isoCode":"NSK","countryCode":"HK","latitude":"22.38143000","longitude":"114.27052000"},{"name":"Sha Tin","isoCode":"NST","countryCode":"HK","latitude":"22.38715000","longitude":"114.19534000"},{"name":"Tuen Mun","isoCode":"NTM","countryCode":"HK","latitude":"22.39163000","longitude":"113.97708850"},{"name":"Tsuen Wan District","isoCode":"NTW","countryCode":"HK","latitude":"22.36281000","longitude":"114.12907000"},{"name":"Yuen Long District","isoCode":"NYL","countryCode":"HK","latitude":"22.44559000","longitude":"114.02218000"},{"name":"Atlántida Department","isoCode":"AT","countryCode":"HN","latitude":"15.66962830","longitude":"-87.14228950"},{"name":"Choluteca Department","isoCode":"CH","countryCode":"HN","latitude":"13.25043250","longitude":"-87.14228950"},{"name":"Colón Department","isoCode":"CL","countryCode":"HN","latitude":"15.64259650","longitude":"-85.52002400"},{"name":"Comayagua Department","isoCode":"CM","countryCode":"HN","latitude":"14.55348280","longitude":"-87.61863790"},{"name":"Copán Department","isoCode":"CP","countryCode":"HN","latitude":"14.93608380","longitude":"-88.86469800"},{"name":"Cortés Department","isoCode":"CR","countryCode":"HN","latitude":"15.49235080","longitude":"-88.09007620"},{"name":"El Paraíso Department","isoCode":"EP","countryCode":"HN","latitude":"13.98212940","longitude":"-86.49965460"},{"name":"Francisco Morazán Department","isoCode":"FM","countryCode":"HN","latitude":"14.45411000","longitude":"-87.06242610"},{"name":"Gracias a Dios Department","isoCode":"GD","countryCode":"HN","latitude":"15.34180600","longitude":"-84.60604490"},{"name":"Bay Islands Department","isoCode":"IB","countryCode":"HN","latitude":"16.48266140","longitude":"-85.87932520"},{"name":"Intibucá Department","isoCode":"IN","countryCode":"HN","latitude":"14.37273400","longitude":"-88.24611830"},{"name":"Lempira Department","isoCode":"LE","countryCode":"HN","latitude":"14.18876980","longitude":"-88.55653100"},{"name":"La Paz Department","isoCode":"LP","countryCode":"HN","latitude":"-15.08924160","longitude":"-68.52471490"},{"name":"Ocotepeque Department","isoCode":"OC","countryCode":"HN","latitude":"14.51703470","longitude":"-89.05615320"},{"name":"Olancho Department","isoCode":"OL","countryCode":"HN","latitude":"14.80674060","longitude":"-85.76666450"},{"name":"Santa Bárbara Department","isoCode":"SB","countryCode":"HN","latitude":"15.12027950","longitude":"-88.40160410"},{"name":"Valle Department","isoCode":"VA","countryCode":"HN","latitude":"13.57829360","longitude":"-87.57912870"},{"name":"Yoro Department","isoCode":"YO","countryCode":"HN","latitude":"15.29496790","longitude":"-87.14228950"},{"name":"Zagreb County","isoCode":"01","countryCode":"HR","latitude":"45.87066120","longitude":"16.39549100"},{"name":"Krapina-Zagorje County","isoCode":"02","countryCode":"HR","latitude":"46.10133930","longitude":"15.88096930"},{"name":"Sisak-Moslavina County","isoCode":"03","countryCode":"HR","latitude":"45.38379260","longitude":"16.53809940"},{"name":"Karlovac County","isoCode":"05","countryCode":"HR","latitude":"45.26133520","longitude":"15.52542016"},{"name":"Koprivnica-Križevci County","isoCode":"06","countryCode":"HR","latitude":"46.15689190","longitude":"16.83908260"},{"name":"Bjelovar-Bilogora County","isoCode":"07","countryCode":"HR","latitude":"45.89879720","longitude":"16.84230930"},{"name":"Primorje-Gorski Kotar County","isoCode":"08","countryCode":"HR","latitude":"45.31739960","longitude":"14.81674660"},{"name":"Lika-Senj County","isoCode":"09","countryCode":"HR","latitude":"44.61922180","longitude":"15.47016080"},{"name":"Virovitica-Podravina County","isoCode":"10","countryCode":"HR","latitude":"45.65579850","longitude":"17.79324720"},{"name":"Požega-Slavonia County","isoCode":"11","countryCode":"HR","latitude":"45.34178680","longitude":"17.81143590"},{"name":"Brod-Posavina County","isoCode":"12","countryCode":"HR","latitude":"45.26379510","longitude":"17.32645620"},{"name":"Zadar County","isoCode":"13","countryCode":"HR","latitude":"44.14693900","longitude":"15.61649430"},{"name":"Osijek-Baranja County","isoCode":"14","countryCode":"HR","latitude":"45.55764280","longitude":"18.39421410"},{"name":"Šibenik-Knin County","isoCode":"15","countryCode":"HR","latitude":"43.92814850","longitude":"16.10376940"},{"name":"Vukovar-Syrmia County","isoCode":"16","countryCode":"HR","latitude":"45.17735520","longitude":"18.80535270"},{"name":"Split-Dalmatia County","isoCode":"17","countryCode":"HR","latitude":"43.52403280","longitude":"16.81783770"},{"name":"Istria County","isoCode":"18","countryCode":"HR","latitude":"45.12864550","longitude":"13.90154200"},{"name":"Dubrovnik-Neretva County","isoCode":"19","countryCode":"HR","latitude":"43.07665880","longitude":"17.52684710"},{"name":"Međimurje County","isoCode":"20","countryCode":"HR","latitude":"46.37666440","longitude":"16.42132980"},{"name":"Zagreb","isoCode":"21","countryCode":"HR","latitude":"45.81501080","longitude":"15.98191890"},{"name":"Artibonite","isoCode":"AR","countryCode":"HT","latitude":"19.36290200","longitude":"-72.42581450"},{"name":"Centre","isoCode":"CE","countryCode":"HT","latitude":"32.83702510","longitude":"-96.77738820"},{"name":"Grand\'Anse","isoCode":"GA","countryCode":"HT","latitude":"12.01666670","longitude":"-61.76666670"},{"name":"Nord","isoCode":"ND","countryCode":"HT","latitude":"43.19052600","longitude":"-89.43792100"},{"name":"Nord-Est","isoCode":"NE","countryCode":"HT","latitude":"19.48897230","longitude":"-71.85713310"},{"name":"Nippes","isoCode":"NI","countryCode":"HT","latitude":"18.39907350","longitude":"-73.41802110"},{"name":"Nord-Ouest","isoCode":"NO","countryCode":"HT","latitude":"19.83740090","longitude":"-73.04052770"},{"name":"Ouest","isoCode":"OU","countryCode":"HT","latitude":"45.45472490","longitude":"-73.65023650"},{"name":"Sud","isoCode":"SD","countryCode":"HT","latitude":"29.92132480","longitude":"-90.09737720"},{"name":"Sud-Est","isoCode":"SE","countryCode":"HT","latitude":"18.27835980","longitude":"-72.35479150"},{"name":"Baranya County","isoCode":"BA","countryCode":"HU","latitude":"46.04845850","longitude":"18.27191730"},{"name":"Békéscsaba","isoCode":"BC","countryCode":"HU","latitude":"46.67359390","longitude":"21.08773090"},{"name":"Békés County","isoCode":"BE","countryCode":"HU","latitude":"46.67048990","longitude":"21.04349960"},{"name":"Bács-Kiskun County","isoCode":"BK","countryCode":"HU","latitude":"46.56614370","longitude":"19.42724640"},{"name":"Budapest","isoCode":"BU","countryCode":"HU","latitude":"47.49791200","longitude":"19.04023500"},{"name":"Borsod-Abaúj-Zemplén County","isoCode":"BZ","countryCode":"HU","latitude":"48.29394010","longitude":"20.69341120"},{"name":"Csongrád County","isoCode":"CS","countryCode":"HU","latitude":"46.41670500","longitude":"20.25661610"},{"name":"Debrecen","isoCode":"DE","countryCode":"HU","latitude":"47.53160490","longitude":"21.62731240"},{"name":"Dunaújváros","isoCode":"DU","countryCode":"HU","latitude":"46.96190590","longitude":"18.93552270"},{"name":"Eger","isoCode":"EG","countryCode":"HU","latitude":"47.90253480","longitude":"20.37722840"},{"name":"Érd","isoCode":"ER","countryCode":"HU","latitude":"47.39197180","longitude":"18.90454400"},{"name":"Fejér County","isoCode":"FE","countryCode":"HU","latitude":"47.12179320","longitude":"18.52948150"},{"name":"Győr-Moson-Sopron County","isoCode":"GS","countryCode":"HU","latitude":"47.65092850","longitude":"17.25058830"},{"name":"Győr","isoCode":"GY","countryCode":"HU","latitude":"47.68745690","longitude":"17.65039740"},{"name":"Hajdú-Bihar County","isoCode":"HB","countryCode":"HU","latitude":"47.46883550","longitude":"21.54532270"},{"name":"Heves County","isoCode":"HE","countryCode":"HU","latitude":"47.80576170","longitude":"20.20385590"},{"name":"Hódmezővásárhely","isoCode":"HV","countryCode":"HU","latitude":"46.41812620","longitude":"20.33003150"},{"name":"Jász-Nagykun-Szolnok County","isoCode":"JN","countryCode":"HU","latitude":"47.25555790","longitude":"20.52324560"},{"name":"Kecskemét","isoCode":"KM","countryCode":"HU","latitude":"46.89637110","longitude":"19.68968610"},{"name":"Kaposvár","isoCode":"KV","countryCode":"HU","latitude":"46.35936060","longitude":"17.79676390"},{"name":"Miskolc","isoCode":"MI","countryCode":"HU","latitude":"48.10347750","longitude":"20.77843840"},{"name":"Nagykanizsa","isoCode":"NK","countryCode":"HU","latitude":"46.45902180","longitude":"16.98967960"},{"name":"Nógrád County","isoCode":"NO","countryCode":"HU","latitude":"47.90410310","longitude":"19.04985040"},{"name":"Nyíregyháza","isoCode":"NY","countryCode":"HU","latitude":"47.94953240","longitude":"21.72440530"},{"name":"Pest County","isoCode":"PE","countryCode":"HU","latitude":"47.44800010","longitude":"19.46181280"},{"name":"Pécs","isoCode":"PS","countryCode":"HU","latitude":"46.07273450","longitude":"18.23226600"},{"name":"Szeged","isoCode":"SD","countryCode":"HU","latitude":"46.25301020","longitude":"20.14142530"},{"name":"Székesfehérvár","isoCode":"SF","countryCode":"HU","latitude":"47.18602620","longitude":"18.42213580"},{"name":"Szombathely","isoCode":"SH","countryCode":"HU","latitude":"47.23068510","longitude":"16.62184410"},{"name":"Szolnok","isoCode":"SK","countryCode":"HU","latitude":"47.16213550","longitude":"20.18247120"},{"name":"Sopron","isoCode":"SN","countryCode":"HU","latitude":"47.68166190","longitude":"16.58447950"},{"name":"Somogy County","isoCode":"SO","countryCode":"HU","latitude":"46.55485900","longitude":"17.58667320"},{"name":"Szekszárd","isoCode":"SS","countryCode":"HU","latitude":"46.34743260","longitude":"18.70622930"},{"name":"Salgótarján","isoCode":"ST","countryCode":"HU","latitude":"48.09352370","longitude":"19.79998130"},{"name":"Szabolcs-Szatmár-Bereg County","isoCode":"SZ","countryCode":"HU","latitude":"48.03949540","longitude":"22.00333000"},{"name":"Tatabánya","isoCode":"TB","countryCode":"HU","latitude":"47.56924600","longitude":"18.40481800"},{"name":"Tolna County","isoCode":"TO","countryCode":"HU","latitude":"46.47627540","longitude":"18.55706270"},{"name":"Vas County","isoCode":"VA","countryCode":"HU","latitude":"47.09291110","longitude":"16.68121830"},{"name":"Veszprém County","isoCode":"VE","countryCode":"HU","latitude":"47.09309740","longitude":"17.91007630"},{"name":"Veszprém","isoCode":"VM","countryCode":"HU","latitude":"47.10280870","longitude":"17.90930190"},{"name":"Zala County","isoCode":"ZA","countryCode":"HU","latitude":"46.73844040","longitude":"16.91522520"},{"name":"Zalaegerszeg","isoCode":"ZE","countryCode":"HU","latitude":"46.84169360","longitude":"16.84163220"},{"name":"Aceh","isoCode":"AC","countryCode":"ID","latitude":"4.69513500","longitude":"96.74939930"},{"name":"Bali","isoCode":"BA","countryCode":"ID","latitude":"-8.34053890","longitude":"115.09195090"},{"name":"Kepulauan Bangka Belitung","isoCode":"BB","countryCode":"ID","latitude":"-2.74105130","longitude":"106.44058720"},{"name":"Bengkulu","isoCode":"BE","countryCode":"ID","latitude":"-3.79284510","longitude":"102.26076410"},{"name":"Banten","isoCode":"BT","countryCode":"ID","latitude":"-6.40581720","longitude":"106.06401790"},{"name":"Gorontalo","isoCode":"GO","countryCode":"ID","latitude":"0.54354420","longitude":"123.05676930"},{"name":"Jambi","isoCode":"JA","countryCode":"ID","latitude":"-1.61012290","longitude":"103.61312030"},{"name":"Jawa Barat","isoCode":"JB","countryCode":"ID","latitude":"-7.09091100","longitude":"107.66888700"},{"name":"Jawa Timur","isoCode":"JI","countryCode":"ID","latitude":"-7.53606390","longitude":"112.23840170"},{"name":"DKI Jakarta","isoCode":"JK","countryCode":"ID","latitude":"-6.20876340","longitude":"106.84559900"},{"name":"Jawa Tengah","isoCode":"JT","countryCode":"ID","latitude":"-7.15097500","longitude":"110.14025940"},{"name":"Kalimantan Barat","isoCode":"KA","countryCode":"ID","latitude":"0.96188340","longitude":"114.55484950"},{"name":"Kalimantan Timur","isoCode":"KI","countryCode":"ID","latitude":"0.53865860","longitude":"116.41938900"},{"name":"Kepulauan Riau","isoCode":"KR","countryCode":"ID","latitude":"3.94565140","longitude":"108.14286690"},{"name":"Kalimantan Selatan","isoCode":"KS","countryCode":"ID","latitude":"-3.09264150","longitude":"115.28375850"},{"name":"Kalimantan Tengah","isoCode":"KT","countryCode":"ID","latitude":"-1.68148780","longitude":"113.38235450"},{"name":"Kalimantan Utara","isoCode":"KU","countryCode":"ID","latitude":"3.07309290","longitude":"116.04138890"},{"name":"Lampung","isoCode":"LA","countryCode":"ID","latitude":"-4.55858490","longitude":"105.40680790"},{"name":"Maluku","isoCode":"MA","countryCode":"ID","latitude":"-3.23846160","longitude":"130.14527340"},{"name":"Maluku Utara","isoCode":"MU","countryCode":"ID","latitude":"1.57099930","longitude":"127.80876930"},{"name":"Nusa Tenggara Barat","isoCode":"NB","countryCode":"ID","latitude":"-8.65293340","longitude":"117.36164760"},{"name":"Nusa Tenggara Timur","isoCode":"NT","countryCode":"ID","latitude":"-8.65738190","longitude":"121.07937050"},{"name":"Papua","isoCode":"PA","countryCode":"ID","latitude":"-5.01222020","longitude":"141.34701590"},{"name":"Papua Barat","isoCode":"PB","countryCode":"ID","latitude":"-1.33611540","longitude":"133.17471620"},{"name":"Riau","isoCode":"RI","countryCode":"ID","latitude":"0.29334690","longitude":"101.70682940"},{"name":"Sulawesi Utara","isoCode":"SA","countryCode":"ID","latitude":"0.62469320","longitude":"123.97500180"},{"name":"Sumatera Barat","isoCode":"SB","countryCode":"ID","latitude":"-0.73993970","longitude":"100.80000510"},{"name":"Sulawesi Tenggara","isoCode":"SG","countryCode":"ID","latitude":"-4.14491000","longitude":"122.17460500"},{"name":"Sulawesi Selatan","isoCode":"SN","countryCode":"ID","latitude":"-3.66879940","longitude":"119.97405340"},{"name":"Sulawesi Barat","isoCode":"SR","countryCode":"ID","latitude":"-2.84413710","longitude":"119.23207840"},{"name":"Sumatera Selatan","isoCode":"SS","countryCode":"ID","latitude":"-3.31943740","longitude":"103.91439900"},{"name":"Sulawesi Tengah","isoCode":"ST","countryCode":"ID","latitude":"-1.43002540","longitude":"121.44561790"},{"name":"Sumatera Utara","isoCode":"SU","countryCode":"ID","latitude":"2.11535470","longitude":"99.54509740"},{"name":"DI Yogyakarta","isoCode":"YO","countryCode":"ID","latitude":"-7.87538490","longitude":"110.42620880"},{"name":"Connacht","isoCode":"C","countryCode":"IE","latitude":"53.83762430","longitude":"-8.95844810"},{"name":"Clare","isoCode":"CE","countryCode":"IE","latitude":"43.04664000","longitude":"-87.89958100"},{"name":"Cavan","isoCode":"CN","countryCode":"IE","latitude":"53.97654240","longitude":"-7.29966230"},{"name":"Cork","isoCode":"CO","countryCode":"IE","latitude":"51.89851430","longitude":"-8.47560350"},{"name":"Carlow","isoCode":"CW","countryCode":"IE","latitude":"52.72322170","longitude":"-6.81082950"},{"name":"Dublin","isoCode":"D","countryCode":"IE","latitude":"53.34980530","longitude":"-6.26030970"},{"name":"Donegal","isoCode":"DL","countryCode":"IE","latitude":"54.65489930","longitude":"-8.10409670"},{"name":"Galway","isoCode":"G","countryCode":"IE","latitude":"53.35645090","longitude":"-8.85341130"},{"name":"Kildare","isoCode":"KE","countryCode":"IE","latitude":"53.21204340","longitude":"-6.81947080"},{"name":"Kilkenny","isoCode":"KK","countryCode":"IE","latitude":"52.57769570","longitude":"-7.21800200"},{"name":"Kerry","isoCode":"KY","countryCode":"IE","latitude":"52.15446070","longitude":"-9.56686330"},{"name":"Leinster","isoCode":"L","countryCode":"IE","latitude":"53.32715380","longitude":"-7.51408410"},{"name":"Longford","isoCode":"LD","countryCode":"IE","latitude":"53.72749820","longitude":"-7.79315270"},{"name":"Louth","isoCode":"LH","countryCode":"IE","latitude":"53.92523240","longitude":"-6.48894230"},{"name":"Limerick","isoCode":"LK","countryCode":"IE","latitude":"52.50905170","longitude":"-8.74749550"},{"name":"Laois","isoCode":"LS","countryCode":"IE","latitude":"52.99429500","longitude":"-7.33230070"},{"name":"Munster","isoCode":"M","countryCode":"IE","latitude":"51.94711970","longitude":"7.58453200"},{"name":"Meath","isoCode":"MH","countryCode":"IE","latitude":"53.60554800","longitude":"-6.65641690"},{"name":"Monaghan","isoCode":"MN","countryCode":"IE","latitude":"54.24920460","longitude":"-6.96831320"},{"name":"Mayo","isoCode":"MO","countryCode":"IE","latitude":"54.01526040","longitude":"-9.42893690"},{"name":"Offaly","isoCode":"OY","countryCode":"IE","latitude":"53.23568710","longitude":"-7.71222290"},{"name":"Roscommon","isoCode":"RN","countryCode":"IE","latitude":"53.75926040","longitude":"-8.26816210"},{"name":"Sligo","isoCode":"SO","countryCode":"IE","latitude":"54.15532770","longitude":"-8.60645320"},{"name":"Tipperary","isoCode":"TA","countryCode":"IE","latitude":"52.47378940","longitude":"-8.16185140"},{"name":"Ulster","isoCode":"U","countryCode":"IE","latitude":"54.76165550","longitude":"-6.96122730"},{"name":"Waterford","isoCode":"WD","countryCode":"IE","latitude":"52.19435490","longitude":"-7.62275120"},{"name":"Westmeath","isoCode":"WH","countryCode":"IE","latitude":"53.53453080","longitude":"-7.46532170"},{"name":"Wicklow","isoCode":"WW","countryCode":"IE","latitude":"52.98623130","longitude":"-6.36725430"},{"name":"Wexford","isoCode":"WX","countryCode":"IE","latitude":"52.47936030","longitude":"-6.58399130"},{"name":"Southern District","isoCode":"D","countryCode":"IL","latitude":"40.71375860","longitude":"-74.00090590"},{"name":"Haifa District","isoCode":"HA","countryCode":"IL","latitude":"32.48141110","longitude":"34.99475100"},{"name":"Jerusalem District","isoCode":"JM","countryCode":"IL","latitude":"31.76482430","longitude":"34.99475100"},{"name":"Central District","isoCode":"M","countryCode":"IL","latitude":"47.60875830","longitude":"-122.29642350"},{"name":"Tel Aviv District","isoCode":"TA","countryCode":"IL","latitude":"32.09290750","longitude":"34.80721650"},{"name":"Northern District","isoCode":"Z","countryCode":"IL","latitude":"36.15118640","longitude":"-95.99517630"},{"name":"Andaman and Nicobar Islands","isoCode":"AN","countryCode":"IN","latitude":"11.74008670","longitude":"92.65864010"},{"name":"Andhra Pradesh","isoCode":"AP","countryCode":"IN","latitude":"15.91289980","longitude":"79.73998750"},{"name":"Arunachal Pradesh","isoCode":"AR","countryCode":"IN","latitude":"28.21799940","longitude":"94.72775280"},{"name":"Assam","isoCode":"AS","countryCode":"IN","latitude":"26.20060430","longitude":"92.93757390"},{"name":"Bihar","isoCode":"BR","countryCode":"IN","latitude":"25.09607420","longitude":"85.31311940"},{"name":"Chandigarh","isoCode":"CH","countryCode":"IN","latitude":"30.73331480","longitude":"76.77941790"},{"name":"Chhattisgarh","isoCode":"CT","countryCode":"IN","latitude":"21.27865670","longitude":"81.86614420"},{"name":"Dadra and Nagar Haveli and Daman and Diu","isoCode":"DH","countryCode":"IN","latitude":"20.39737360","longitude":"72.83279910"},{"name":"Delhi","isoCode":"DL","countryCode":"IN","latitude":"28.70405920","longitude":"77.10249020"},{"name":"Goa","isoCode":"GA","countryCode":"IN","latitude":"15.29932650","longitude":"74.12399600"},{"name":"Gujarat","isoCode":"GJ","countryCode":"IN","latitude":"22.25865200","longitude":"71.19238050"},{"name":"Himachal Pradesh","isoCode":"HP","countryCode":"IN","latitude":"31.10482940","longitude":"77.17339010"},{"name":"Haryana","isoCode":"HR","countryCode":"IN","latitude":"29.05877570","longitude":"76.08560100"},{"name":"Jharkhand","isoCode":"JH","countryCode":"IN","latitude":"23.61018080","longitude":"85.27993540"},{"name":"Jammu and Kashmir","isoCode":"JK","countryCode":"IN","latitude":"33.27783900","longitude":"75.34121790"},{"name":"Karnataka","isoCode":"KA","countryCode":"IN","latitude":"15.31727750","longitude":"75.71388840"},{"name":"Kerala","isoCode":"KL","countryCode":"IN","latitude":"10.85051590","longitude":"76.27108330"},{"name":"Ladakh","isoCode":"LA","countryCode":"IN","latitude":"34.22684750","longitude":"77.56194190"},{"name":"Lakshadweep","isoCode":"LD","countryCode":"IN","latitude":"10.32802650","longitude":"72.78463360"},{"name":"Maharashtra","isoCode":"MH","countryCode":"IN","latitude":"19.75147980","longitude":"75.71388840"},{"name":"Meghalaya","isoCode":"ML","countryCode":"IN","latitude":"25.46703080","longitude":"91.36621600"},{"name":"Manipur","isoCode":"MN","countryCode":"IN","latitude":"24.66371730","longitude":"93.90626880"},{"name":"Madhya Pradesh","isoCode":"MP","countryCode":"IN","latitude":"22.97342290","longitude":"78.65689420"},{"name":"Mizoram","isoCode":"MZ","countryCode":"IN","latitude":"23.16454300","longitude":"92.93757390"},{"name":"Nagaland","isoCode":"NL","countryCode":"IN","latitude":"26.15843540","longitude":"94.56244260"},{"name":"Odisha","isoCode":"OR","countryCode":"IN","latitude":"20.95166580","longitude":"85.09852360"},{"name":"Punjab","isoCode":"PB","countryCode":"IN","latitude":"31.14713050","longitude":"75.34121790"},{"name":"Puducherry","isoCode":"PY","countryCode":"IN","latitude":"11.94159150","longitude":"79.80831330"},{"name":"Rajasthan","isoCode":"RJ","countryCode":"IN","latitude":"27.02380360","longitude":"74.21793260"},{"name":"Sikkim","isoCode":"SK","countryCode":"IN","latitude":"27.53297180","longitude":"88.51221780"},{"name":"Telangana","isoCode":"TG","countryCode":"IN","latitude":"18.11243720","longitude":"79.01929970"},{"name":"Tamil Nadu","isoCode":"TN","countryCode":"IN","latitude":"11.12712250","longitude":"78.65689420"},{"name":"Tripura","isoCode":"TR","countryCode":"IN","latitude":"23.94084820","longitude":"91.98815270"},{"name":"Uttar Pradesh","isoCode":"UP","countryCode":"IN","latitude":"26.84670880","longitude":"80.94615920"},{"name":"Uttarakhand","isoCode":"UT","countryCode":"IN","latitude":"30.06675300","longitude":"79.01929970"},{"name":"West Bengal","isoCode":"WB","countryCode":"IN","latitude":"22.98675690","longitude":"87.85497550"},{"name":"Al Anbar Governorate","isoCode":"AN","countryCode":"IQ","latitude":"32.55976140","longitude":"41.91964710"},{"name":"Erbil Governorate","isoCode":"AR","countryCode":"IQ","latitude":"36.55706280","longitude":"44.38512630"},{"name":"Basra Governorate","isoCode":"BA","countryCode":"IQ","latitude":"30.51142520","longitude":"47.82962530"},{"name":"Babylon Governorate","isoCode":"BB","countryCode":"IQ","latitude":"32.46819100","longitude":"44.55019350"},{"name":"Baghdad Governorate","isoCode":"BG","countryCode":"IQ","latitude":"33.31526180","longitude":"44.36606530"},{"name":"Dohuk Governorate","isoCode":"DA","countryCode":"IQ","latitude":"36.90772520","longitude":"43.06316890"},{"name":"Diyala Governorate","isoCode":"DI","countryCode":"IQ","latitude":"33.77334870","longitude":"45.14945050"},{"name":"Dhi Qar Governorate","isoCode":"DQ","countryCode":"IQ","latitude":"31.10422920","longitude":"46.36246860"},{"name":"Karbala Governorate","isoCode":"KA","countryCode":"IQ","latitude":"32.40454930","longitude":"43.86732220"},{"name":"Kirkuk Governorate","isoCode":"KI","countryCode":"IQ","latitude":"35.32920140","longitude":"43.94367880"},{"name":"Maysan Governorate","isoCode":"MA","countryCode":"IQ","latitude":"31.87340020","longitude":"47.13621250"},{"name":"Al Muthanna Governorate","isoCode":"MU","countryCode":"IQ","latitude":"29.91331710","longitude":"45.29938620"},{"name":"Najaf Governorate","isoCode":"NA","countryCode":"IQ","latitude":"31.35174860","longitude":"44.09603110"},{"name":"Nineveh Governorate","isoCode":"NI","countryCode":"IQ","latitude":"36.22957400","longitude":"42.23624350"},{"name":"Al-Qādisiyyah Governorate","isoCode":"QA","countryCode":"IQ","latitude":"32.04369100","longitude":"45.14945050"},{"name":"Saladin Governorate","isoCode":"SD","countryCode":"IQ","latitude":"34.53375270","longitude":"43.48373800"},{"name":"Sulaymaniyah Governorate","isoCode":"SU","countryCode":"IQ","latitude":"35.54663480","longitude":"45.30036830"},{"name":"Wasit Governorate","isoCode":"WA","countryCode":"IQ","latitude":"32.60240940","longitude":"45.75209850"},{"name":"Markazi","isoCode":"00","countryCode":"IR","latitude":"34.61230500","longitude":"49.85472660"},{"name":"Gilan","isoCode":"01","countryCode":"IR","latitude":"37.28094550","longitude":"49.59241340"},{"name":"Mazandaran","isoCode":"02","countryCode":"IR","latitude":"36.22623930","longitude":"52.53186040"},{"name":"East Azerbaijan","isoCode":"03","countryCode":"IR","latitude":"37.90357330","longitude":"46.26821090"},{"name":"West Azarbaijan","isoCode":"04","countryCode":"IR","latitude":"37.45500620","longitude":"45.00000000"},{"name":"Kermanshah","isoCode":"05","countryCode":"IR","latitude":"34.45762330","longitude":"46.67053400"},{"name":"Khuzestan","isoCode":"06","countryCode":"IR","latitude":"31.43601490","longitude":"49.04131200"},{"name":"Fars","isoCode":"07","countryCode":"IR","latitude":"29.10438130","longitude":"53.04589300"},{"name":"Kerman","isoCode":"08","countryCode":"IR","latitude":"29.48500890","longitude":"57.64390480"},{"name":"Razavi Khorasan","isoCode":"09","countryCode":"IR","latitude":"35.10202530","longitude":"59.10417580"},{"name":"Isfahan","isoCode":"10","countryCode":"IR","latitude":"33.27710730","longitude":"52.36133780"},{"name":"Sistan and Baluchestan","isoCode":"11","countryCode":"IR","latitude":"27.52999060","longitude":"60.58206760"},{"name":"Kurdistan","isoCode":"12","countryCode":"IR","latitude":"35.95535790","longitude":"47.13621250"},{"name":"Hamadan","isoCode":"13","countryCode":"IR","latitude":"34.91936070","longitude":"47.48329250"},{"name":"Chaharmahal and Bakhtiari","isoCode":"14","countryCode":"IR","latitude":"31.99704190","longitude":"50.66138490"},{"name":"Lorestan","isoCode":"15","countryCode":"IR","latitude":"33.58183940","longitude":"48.39881860"},{"name":"Ilam","isoCode":"16","countryCode":"IR","latitude":"33.29576180","longitude":"46.67053400"},{"name":"Kohgiluyeh and Boyer-Ahmad","isoCode":"17","countryCode":"IR","latitude":"30.72458600","longitude":"50.84563230"},{"name":"Bushehr","isoCode":"18","countryCode":"IR","latitude":"28.76207390","longitude":"51.51500770"},{"name":"Zanjan","isoCode":"19","countryCode":"IR","latitude":"36.50181850","longitude":"48.39881860"},{"name":"Semnan","isoCode":"20","countryCode":"IR","latitude":"35.22555850","longitude":"54.43421380"},{"name":"Yazd","isoCode":"21","countryCode":"IR","latitude":"32.10063870","longitude":"54.43421380"},{"name":"Hormozgan","isoCode":"22","countryCode":"IR","latitude":"27.13872300","longitude":"55.13758340"},{"name":"Tehran","isoCode":"23","countryCode":"IR","latitude":"35.72484160","longitude":"51.38165300"},{"name":"Ardabil","isoCode":"24","countryCode":"IR","latitude":"38.48532760","longitude":"47.89112090"},{"name":"Qom","isoCode":"25","countryCode":"IR","latitude":"34.64157640","longitude":"50.87460350"},{"name":"Qazvin","isoCode":"26","countryCode":"IR","latitude":"36.08813170","longitude":"49.85472660"},{"name":"Golestan","isoCode":"27","countryCode":"IR","latitude":"37.28981230","longitude":"55.13758340"},{"name":"North Khorasan","isoCode":"28","countryCode":"IR","latitude":"37.47103530","longitude":"57.10131880"},{"name":"South Khorasan","isoCode":"29","countryCode":"IR","latitude":"32.51756430","longitude":"59.10417580"},{"name":"Alborz","isoCode":"30","countryCode":"IR","latitude":"35.99604670","longitude":"50.92892460"},{"name":"Capital Region","isoCode":"1","countryCode":"IS","latitude":"38.56569570","longitude":"-92.18169490"},{"name":"Southern Peninsula Region","isoCode":"2","countryCode":"IS","latitude":"63.91548030","longitude":"-22.36496670"},{"name":"Western Region","isoCode":"3","countryCode":"IS","latitude":null,"longitude":null},{"name":"Westfjords","isoCode":"4","countryCode":"IS","latitude":"65.91961500","longitude":"-21.88117640"},{"name":"Northwestern Region","isoCode":"5","countryCode":"IS","latitude":"41.91339320","longitude":"-73.04716880"},{"name":"Northeastern Region","isoCode":"6","countryCode":"IS","latitude":"43.29942850","longitude":"-74.21793260"},{"name":"Eastern Region","isoCode":"7","countryCode":"IS","latitude":null,"longitude":null},{"name":"Southern Region","isoCode":"8","countryCode":"IS","latitude":null,"longitude":null},{"name":"Piedmont","isoCode":"21","countryCode":"IT","latitude":"45.05223660","longitude":"7.51538850"},{"name":"Aosta Valley","isoCode":"23","countryCode":"IT","latitude":"45.73888780","longitude":"7.42618660"},{"name":"Lombardy","isoCode":"25","countryCode":"IT","latitude":"45.47906710","longitude":"9.84524330"},{"name":"Trentino-South Tyrol","isoCode":"32","countryCode":"IT","latitude":"46.43366620","longitude":"11.16932960"},{"name":"Veneto","isoCode":"34","countryCode":"IT","latitude":"45.44146620","longitude":"12.31525950"},{"name":"Friuli–Venezia Giulia","isoCode":"36","countryCode":"IT","latitude":"46.22591770","longitude":"13.10336460"},{"name":"Liguria","isoCode":"42","countryCode":"IT","latitude":"44.31679170","longitude":"8.39649380"},{"name":"Emilia-Romagna","isoCode":"45","countryCode":"IT","latitude":"44.59676070","longitude":"11.21863960"},{"name":"Tuscany","isoCode":"52","countryCode":"IT","latitude":"43.77105130","longitude":"11.24862080"},{"name":"Umbria","isoCode":"55","countryCode":"IT","latitude":"42.93800400","longitude":"12.62162110"},{"name":"Marche","isoCode":"57","countryCode":"IT","latitude":"30.55670700","longitude":"-81.44930300"},{"name":"Lazio","isoCode":"62","countryCode":"IT","latitude":"45.69916670","longitude":"-73.65583330"},{"name":"Abruzzo","isoCode":"65","countryCode":"IT","latitude":"42.19201190","longitude":"13.72891670"},{"name":"Molise","isoCode":"67","countryCode":"IT","latitude":"41.67388650","longitude":"14.75209390"},{"name":"Campania","isoCode":"72","countryCode":"IT","latitude":"40.66708870","longitude":"15.10681130"},{"name":"Apulia","isoCode":"75","countryCode":"IT","latitude":"40.79283930","longitude":"17.10119310"},{"name":"Basilicata","isoCode":"77","countryCode":"IT","latitude":"40.64307660","longitude":"15.96998780"},{"name":"Calabria","isoCode":"78","countryCode":"IT","latitude":"39.30877140","longitude":"16.34637910"},{"name":"Sicily","isoCode":"82","countryCode":"IT","latitude":"37.59999380","longitude":"14.01535570"},{"name":"Sardinia","isoCode":"88","countryCode":"IT","latitude":"40.12087520","longitude":"9.01289260"},{"name":"Libero consorzio comunale di Agrigento","isoCode":"AG","countryCode":"IT","latitude":"37.31052020","longitude":"13.58579780"},{"name":"Province of Alessandria","isoCode":"AL","countryCode":"IT","latitude":"44.81755870","longitude":"8.70466270"},{"name":"Province of Ancona","isoCode":"AN","countryCode":"IT","latitude":"43.54932450","longitude":"13.26634790"},{"name":"Province of Ascoli Piceno","isoCode":"AP","countryCode":"IT","latitude":"42.86389330","longitude":"13.58997330"},{"name":"Province of L\'Aquila","isoCode":"AQ","countryCode":"IT","latitude":"42.12563170","longitude":"13.63627150"},{"name":"Province of Asti","isoCode":"AT","countryCode":"IT","latitude":"44.90076520","longitude":"8.20643150"},{"name":"Province of Avellino","isoCode":"AV","countryCode":"IT","latitude":"40.99645100","longitude":"15.12589550"},{"name":"Metropolitan City of Bari","isoCode":"BA","countryCode":"IT","latitude":"41.11714320","longitude":"16.87187150"},{"name":"Province of Bergamo","isoCode":"BG","countryCode":"IT","latitude":"45.69826420","longitude":"9.67726980"},{"name":"Province of Biella","isoCode":"BI","countryCode":"IT","latitude":"45.56281760","longitude":"8.05827170"},{"name":"Province of Belluno","isoCode":"BL","countryCode":"IT","latitude":"46.24976590","longitude":"12.19695650"},{"name":"Benevento Province","isoCode":"BN","countryCode":"IT","latitude":"41.20350930","longitude":"14.75209390"},{"name":"Metropolitan City of Bologna","isoCode":"BO","countryCode":"IT","latitude":"44.49488700","longitude":"11.34261620"},{"name":"Province of Brindisi","isoCode":"BR","countryCode":"IT","latitude":"40.61126630","longitude":"17.76362100"},{"name":"Province of Brescia","isoCode":"BS","countryCode":"IT","latitude":"45.54155260","longitude":"10.21180190"},{"name":"Province of Barletta-Andria-Trani","isoCode":"BT","countryCode":"IT","latitude":"41.20045430","longitude":"16.20514840"},{"name":"South Tyrol","isoCode":"BZ","countryCode":"IT","latitude":"46.49494500","longitude":"11.34026570"},{"name":"Metropolitan City of Cagliari","isoCode":"CA","countryCode":"IT","latitude":"39.22384110","longitude":"9.12166130"},{"name":"Province of Campobasso","isoCode":"CB","countryCode":"IT","latitude":"41.67388650","longitude":"14.75209390"},{"name":"Province of Caserta","isoCode":"CE","countryCode":"IT","latitude":"41.20783540","longitude":"14.10013260"},{"name":"Province of Chieti","isoCode":"CH","countryCode":"IT","latitude":"42.03344280","longitude":"14.37919120"},{"name":"Province of Carbonia-Iglesias","isoCode":"CI","countryCode":"IT","latitude":"39.25346590","longitude":"8.57210160"},{"name":"Libero consorzio comunale di Caltanissetta","isoCode":"CL","countryCode":"IT","latitude":"37.48601300","longitude":"14.06149820"},{"name":"Province of Cuneo","isoCode":"CN","countryCode":"IT","latitude":"44.59703140","longitude":"7.61142170"},{"name":"Province of Como","isoCode":"CO","countryCode":"IT","latitude":"45.80804160","longitude":"9.08517930"},{"name":"Province of Cremona","isoCode":"CR","countryCode":"IT","latitude":"45.20143750","longitude":"9.98365820"},{"name":"Province of Cosenza","isoCode":"CS","countryCode":"IT","latitude":"39.56441050","longitude":"16.25221430"},{"name":"Metropolitan City of Catania","isoCode":"CT","countryCode":"IT","latitude":"37.45154380","longitude":"15.05574150"},{"name":"Province of Catanzaro","isoCode":"CZ","countryCode":"IT","latitude":"38.88963480","longitude":"16.44058720"},{"name":"Libero consorzio comunale di Enna","isoCode":"EN","countryCode":"IT","latitude":"37.56762160","longitude":"14.27953490"},{"name":"Province of Forlì-Cesena","isoCode":"FC","countryCode":"IT","latitude":"43.99476810","longitude":"11.98046130"},{"name":"Province of Ferrara","isoCode":"FE","countryCode":"IT","latitude":"44.76636800","longitude":"11.76440680"},{"name":"Province of Foggia","isoCode":"FG","countryCode":"IT","latitude":"41.63844800","longitude":"15.59433880"},{"name":"Metropolitan City of Florence","isoCode":"FI","countryCode":"IT","latitude":"43.76791780","longitude":"11.25237920"},{"name":"Province of Fermo","isoCode":"FM","countryCode":"IT","latitude":"43.09313670","longitude":"13.58997330"},{"name":"Province of Frosinone","isoCode":"FR","countryCode":"IT","latitude":"41.65765280","longitude":"13.63627150"},{"name":"Metropolitan City of Genoa","isoCode":"GE","countryCode":"IT","latitude":"44.40564930","longitude":"8.94625640"},{"name":"Province of Gorizia","isoCode":"GO","countryCode":"IT","latitude":"45.90538990","longitude":"13.51637250"},{"name":"Province of Grosseto","isoCode":"GR","countryCode":"IT","latitude":"42.85180070","longitude":"11.25237920"},{"name":"Province of Imperia","isoCode":"IM","countryCode":"IT","latitude":"43.94186600","longitude":"7.82863680"},{"name":"Province of Isernia","isoCode":"IS","countryCode":"IT","latitude":"41.58915550","longitude":"14.19309180"},{"name":"Province of Crotone","isoCode":"KR","countryCode":"IT","latitude":"39.13098560","longitude":"17.00670310"},{"name":"Province of Lecco","isoCode":"LC","countryCode":"IT","latitude":"45.93829410","longitude":"9.38572900"},{"name":"Province of Lecce","isoCode":"LE","countryCode":"IT","latitude":"40.23473930","longitude":"18.14286690"},{"name":"Province of Livorno","isoCode":"LI","countryCode":"IT","latitude":"43.02398480","longitude":"10.66471010"},{"name":"Province of Lodi","isoCode":"LO","countryCode":"IT","latitude":"45.24050360","longitude":"9.52925120"},{"name":"Province of Latina","isoCode":"LT","countryCode":"IT","latitude":"41.40874760","longitude":"13.08179030"},{"name":"Province of Lucca","isoCode":"LU","countryCode":"IT","latitude":"43.83767360","longitude":"10.49505300"},{"name":"Province of Monza and Brianza","isoCode":"MB","countryCode":"IT","latitude":"45.62359900","longitude":"9.25880150"},{"name":"Province of Macerata","isoCode":"MC","countryCode":"IT","latitude":"43.24593220","longitude":"13.26634790"},{"name":"Metropolitan City of Messina","isoCode":"ME","countryCode":"IT","latitude":"38.19373350","longitude":"15.55420570"},{"name":"Metropolitan City of Milan","isoCode":"MI","countryCode":"IT","latitude":"45.45862600","longitude":"9.18187300"},{"name":"Province of Mantua","isoCode":"MN","countryCode":"IT","latitude":"45.16677280","longitude":"10.77536130"},{"name":"Province of Modena","isoCode":"MO","countryCode":"IT","latitude":"44.55137990","longitude":"10.91804800"},{"name":"Province of Massa and Carrara","isoCode":"MS","countryCode":"IT","latitude":"44.22139980","longitude":"10.03596610"},{"name":"Province of Matera","isoCode":"MT","countryCode":"IT","latitude":"40.66634960","longitude":"16.60436360"},{"name":"Metropolitan City of Naples","isoCode":"NA","countryCode":"IT","latitude":"40.90197500","longitude":"14.33264400"},{"name":"Province of Novara","isoCode":"NO","countryCode":"IT","latitude":"45.54851330","longitude":"8.51507930"},{"name":"Province of Nuoro","isoCode":"NU","countryCode":"IT","latitude":"40.32869040","longitude":"9.45615500"},{"name":"Province of Ogliastra","isoCode":"OG","countryCode":"IT","latitude":"39.84105360","longitude":"9.45615500"},{"name":"Province of Oristano","isoCode":"OR","countryCode":"IT","latitude":"40.05990680","longitude":"8.74811670"},{"name":"Province of Olbia-Tempio","isoCode":"OT","countryCode":"IT","latitude":"40.82683830","longitude":"9.27855830"},{"name":"Metropolitan City of Palermo","isoCode":"PA","countryCode":"IT","latitude":"38.11569000","longitude":"13.36148680"},{"name":"Province of Piacenza","isoCode":"PC","countryCode":"IT","latitude":"44.82631120","longitude":"9.52914470"},{"name":"Province of Padua","isoCode":"PD","countryCode":"IT","latitude":"45.36618640","longitude":"11.82091390"},{"name":"Province of Pescara","isoCode":"PE","countryCode":"IT","latitude":"42.35706550","longitude":"13.96080910"},{"name":"Province of Perugia","isoCode":"PG","countryCode":"IT","latitude":"42.93800400","longitude":"12.62162110"},{"name":"Province of Pisa","isoCode":"PI","countryCode":"IT","latitude":"43.72283150","longitude":"10.40171940"},{"name":"Province of Pordenone","isoCode":"PN","countryCode":"IT","latitude":"46.03788620","longitude":"12.71083500"},{"name":"Province of Prato","isoCode":"PO","countryCode":"IT","latitude":"44.04539000","longitude":"11.11644520"},{"name":"Province of Parma","isoCode":"PR","countryCode":"IT","latitude":"44.80153220","longitude":"10.32793540"},{"name":"Province of Pistoia","isoCode":"PT","countryCode":"IT","latitude":"43.95437330","longitude":"10.89030990"},{"name":"Pesaro and Urbino Province","isoCode":"PU","countryCode":"IT","latitude":"43.61301180","longitude":"12.71351210"},{"name":"Province of Pavia","isoCode":"PV","countryCode":"IT","latitude":"45.32181660","longitude":"8.84662360"},{"name":"Province of Potenza","isoCode":"PZ","countryCode":"IT","latitude":"40.41821940","longitude":"15.87600400"},{"name":"Province of Ravenna","isoCode":"RA","countryCode":"IT","latitude":"44.41844430","longitude":"12.20359980"},{"name":"Metropolitan City of Reggio Calabria","isoCode":"RC","countryCode":"IT","latitude":"38.10843960","longitude":"15.64370480"},{"name":"Province of Reggio Emilia","isoCode":"RE","countryCode":"IT","latitude":"44.58565800","longitude":"10.55647360"},{"name":"Libero consorzio comunale di Ragusa","isoCode":"RG","countryCode":"IT","latitude":"36.92692730","longitude":"14.72551290"},{"name":"Province of Rieti","isoCode":"RI","countryCode":"IT","latitude":"42.36744050","longitude":"12.89750980"},{"name":"Metropolitan City of Rome","isoCode":"RM","countryCode":"IT","latitude":"41.90270080","longitude":"12.49623520"},{"name":"Province of Rimini","isoCode":"RN","countryCode":"IT","latitude":"44.06782880","longitude":"12.56951580"},{"name":"Province of Rovigo","isoCode":"RO","countryCode":"IT","latitude":"45.02418180","longitude":"11.82381620"},{"name":"Province of Salerno","isoCode":"SA","countryCode":"IT","latitude":"40.42878320","longitude":"15.21948080"},{"name":"Province of Siena","isoCode":"SI","countryCode":"IT","latitude":"43.29377320","longitude":"11.43391480"},{"name":"Province of Sondrio","isoCode":"SO","countryCode":"IT","latitude":"46.17276360","longitude":"9.79949170"},{"name":"Province of La Spezia","isoCode":"SP","countryCode":"IT","latitude":"44.24479130","longitude":"9.76786870"},{"name":"Libero consorzio comunale di Siracusa","isoCode":"SR","countryCode":"IT","latitude":"37.06569240","longitude":"15.28571090"},{"name":"Province of Sassari","isoCode":"SS","countryCode":"IT","latitude":"40.79679070","longitude":"8.57504070"},{"name":"Province of Savona","isoCode":"SV","countryCode":"IT","latitude":"44.28879950","longitude":"8.26505800"},{"name":"Province of Taranto","isoCode":"TA","countryCode":"IT","latitude":"40.57409010","longitude":"17.24299760"},{"name":"Province of Teramo","isoCode":"TE","countryCode":"IT","latitude":"42.58956080","longitude":"13.63627150"},{"name":"Trentino","isoCode":"TN","countryCode":"IT","latitude":"46.05120040","longitude":"11.11753920"},{"name":"Metropolitan City of Turin","isoCode":"TO","countryCode":"IT","latitude":"45.06329900","longitude":"7.66928900"},{"name":"Libero consorzio comunale di Trapani","isoCode":"TP","countryCode":"IT","latitude":"38.01831160","longitude":"12.51482650"},{"name":"Province of Terni","isoCode":"TR","countryCode":"IT","latitude":"42.56345340","longitude":"12.52980280"},{"name":"Province of Trieste","isoCode":"TS","countryCode":"IT","latitude":"45.68948230","longitude":"13.78330720"},{"name":"Province of Treviso","isoCode":"TV","countryCode":"IT","latitude":"45.66685170","longitude":"12.24306170"},{"name":"Province of Udine","isoCode":"UD","countryCode":"IT","latitude":"46.14079720","longitude":"13.16628960"},{"name":"Province of Varese","isoCode":"VA","countryCode":"IT","latitude":"45.79902600","longitude":"8.73009450"},{"name":"Province of Verbano-Cusio-Ossola","isoCode":"VB","countryCode":"IT","latitude":"46.13996880","longitude":"8.27246490"},{"name":"Province of Vercelli","isoCode":"VC","countryCode":"IT","latitude":"45.32022040","longitude":"8.41850800"},{"name":"Metropolitan City of Venice","isoCode":"VE","countryCode":"IT","latitude":"45.44146850","longitude":"12.31526720"},{"name":"Province of Vicenza","isoCode":"VI","countryCode":"IT","latitude":"45.69839950","longitude":"11.56614650"},{"name":"Province of Verona","isoCode":"VR","countryCode":"IT","latitude":"45.44184980","longitude":"11.07353160"},{"name":"Province of Medio Campidano","isoCode":"VS","countryCode":"IT","latitude":"39.53173890","longitude":"8.70407500"},{"name":"Province of Viterbo","isoCode":"VT","countryCode":"IT","latitude":"42.40024200","longitude":"11.88917210"},{"name":"Province of Vibo Valentia","isoCode":"VV","countryCode":"IT","latitude":"38.63785650","longitude":"16.20514840"},{"name":"Kingston Parish","isoCode":"01","countryCode":"JM","latitude":"17.96832710","longitude":"-76.78270200"},{"name":"Saint Andrew","isoCode":"02","countryCode":"JM","latitude":"37.22451030","longitude":"-95.70211890"},{"name":"Saint Thomas Parish","isoCode":"03","countryCode":"JM","latitude":"41.44253890","longitude":"-81.74022180"},{"name":"Portland Parish","isoCode":"04","countryCode":"JM","latitude":"18.08442740","longitude":"-76.41002670"},{"name":"Saint Mary Parish","isoCode":"05","countryCode":"JM","latitude":"36.09252200","longitude":"-95.97384400"},{"name":"Saint Ann Parish","isoCode":"06","countryCode":"JM","latitude":"37.28714520","longitude":"-77.41035330"},{"name":"Trelawny Parish","isoCode":"07","countryCode":"JM","latitude":"18.35261430","longitude":"-77.60778650"},{"name":"Saint James Parish","isoCode":"08","countryCode":"JM","latitude":"30.01792920","longitude":"-90.79132270"},{"name":"Hanover Parish","isoCode":"09","countryCode":"JM","latitude":"18.40977070","longitude":"-78.13363800"},{"name":"Westmoreland Parish","isoCode":"10","countryCode":"JM","latitude":"18.29443780","longitude":"-78.15644320"},{"name":"Saint Elizabeth Parish","isoCode":"11","countryCode":"JM","latitude":"38.99253080","longitude":"-94.58992000"},{"name":"Manchester Parish","isoCode":"12","countryCode":"JM","latitude":"18.06696540","longitude":"-77.51607880"},{"name":"Clarendon Parish","isoCode":"13","countryCode":"JM","latitude":"17.95571830","longitude":"-77.24051530"},{"name":"Saint Catherine Parish","isoCode":"14","countryCode":"JM","latitude":"18.03641340","longitude":"-77.05644640"},{"name":"Ajloun Governorate","isoCode":"AJ","countryCode":"JO","latitude":"32.33255840","longitude":"35.75168440"},{"name":"Amman Governorate","isoCode":"AM","countryCode":"JO","latitude":"31.94536330","longitude":"35.92838950"},{"name":"Aqaba Governorate","isoCode":"AQ","countryCode":"JO","latitude":"29.53208600","longitude":"35.00628210"},{"name":"Tafilah Governorate","isoCode":"AT","countryCode":"JO","latitude":"30.83380630","longitude":"35.61605130"},{"name":"Zarqa Governorate","isoCode":"AZ","countryCode":"JO","latitude":"32.06085050","longitude":"36.09421210"},{"name":"Balqa Governorate","isoCode":"BA","countryCode":"JO","latitude":"32.03668060","longitude":"35.72884800"},{"name":"Irbid Governorate","isoCode":"IR","countryCode":"JO","latitude":"32.55696360","longitude":"35.84789650"},{"name":"Jerash Governorate","isoCode":"JA","countryCode":"JO","latitude":"32.27472370","longitude":"35.89609540"},{"name":"Karak Governorate","isoCode":"KA","countryCode":"JO","latitude":"31.18535270","longitude":"35.70476820"},{"name":"Mafraq Governorate","isoCode":"MA","countryCode":"JO","latitude":"32.34169230","longitude":"36.20201750"},{"name":"Madaba Governorate","isoCode":"MD","countryCode":"JO","latitude":"31.71960970","longitude":"35.79327540"},{"name":"Ma\'an Governorate","isoCode":"MN","countryCode":"JO","latitude":"30.19267890","longitude":"35.72493190"},{"name":"Hokkaidō Prefecture","isoCode":"01","countryCode":"JP","latitude":"43.22032660","longitude":"142.86347370"},{"name":"Aomori Prefecture","isoCode":"02","countryCode":"JP","latitude":"40.76570770","longitude":"140.91758790"},{"name":"Iwate Prefecture","isoCode":"03","countryCode":"JP","latitude":"39.58329890","longitude":"141.25345740"},{"name":"Miyagi Prefecture","isoCode":"04","countryCode":"JP","latitude":"38.63061200","longitude":"141.11930480"},{"name":"Akita Prefecture","isoCode":"05","countryCode":"JP","latitude":"40.13762930","longitude":"140.33434100"},{"name":"Yamagata Prefecture","isoCode":"06","countryCode":"JP","latitude":"38.53705640","longitude":"140.14351980"},{"name":"Fukushima Prefecture","isoCode":"07","countryCode":"JP","latitude":"37.38343730","longitude":"140.18325160"},{"name":"Ibaraki Prefecture","isoCode":"08","countryCode":"JP","latitude":"36.21935710","longitude":"140.18325160"},{"name":"Tochigi Prefecture","isoCode":"09","countryCode":"JP","latitude":"36.67147390","longitude":"139.85472660"},{"name":"Gunma Prefecture","isoCode":"10","countryCode":"JP","latitude":"36.56053880","longitude":"138.87999720"},{"name":"Saitama Prefecture","isoCode":"11","countryCode":"JP","latitude":"35.99625130","longitude":"139.44660050"},{"name":"Chiba Prefecture","isoCode":"12","countryCode":"JP","latitude":"35.33541550","longitude":"140.18325160"},{"name":"Tokyo","isoCode":"13","countryCode":"JP","latitude":"35.67619190","longitude":"139.65031060"},{"name":"Kanagawa Prefecture","isoCode":"14","countryCode":"JP","latitude":"35.49135350","longitude":"139.28414300"},{"name":"Niigata Prefecture","isoCode":"15","countryCode":"JP","latitude":"37.51783860","longitude":"138.92697940"},{"name":"Toyama Prefecture","isoCode":"16","countryCode":"JP","latitude":"36.69582660","longitude":"137.21370710"},{"name":"Ishikawa Prefecture","isoCode":"17","countryCode":"JP","latitude":"36.32603170","longitude":"136.52896530"},{"name":"Fukui Prefecture","isoCode":"18","countryCode":"JP","latitude":"35.89622700","longitude":"136.21115790"},{"name":"Yamanashi Prefecture","isoCode":"19","countryCode":"JP","latitude":"35.66351130","longitude":"138.63888790"},{"name":"Nagano Prefecture","isoCode":"20","countryCode":"JP","latitude":"36.15439410","longitude":"137.92182040"},{"name":"Gifu Prefecture","isoCode":"21","countryCode":"JP","latitude":"35.74374910","longitude":"136.98051030"},{"name":"Shizuoka Prefecture","isoCode":"22","countryCode":"JP","latitude":"35.09293970","longitude":"138.31902760"},{"name":"Aichi Prefecture","isoCode":"23","countryCode":"JP","latitude":"35.01825050","longitude":"137.29238930"},{"name":"Mie Prefecture","isoCode":"24","countryCode":"JP","latitude":"33.81439010","longitude":"136.04870470"},{"name":"Shiga Prefecture","isoCode":"25","countryCode":"JP","latitude":"35.32920140","longitude":"136.05632120"},{"name":"Kyōto Prefecture","isoCode":"26","countryCode":"JP","latitude":"35.15666090","longitude":"135.52519820"},{"name":"Ōsaka Prefecture","isoCode":"27","countryCode":"JP","latitude":"34.64133150","longitude":"135.56293940"},{"name":"Hyōgo Prefecture","isoCode":"28","countryCode":"JP","latitude":"34.85795180","longitude":"134.54537870"},{"name":"Nara Prefecture","isoCode":"29","countryCode":"JP","latitude":"34.29755280","longitude":"135.82797340"},{"name":"Wakayama Prefecture","isoCode":"30","countryCode":"JP","latitude":"33.94809140","longitude":"135.37453580"},{"name":"Tottori Prefecture","isoCode":"31","countryCode":"JP","latitude":"35.35731610","longitude":"133.40666180"},{"name":"Shimane Prefecture","isoCode":"32","countryCode":"JP","latitude":"35.12440940","longitude":"132.62934460"},{"name":"Okayama Prefecture","isoCode":"33","countryCode":"JP","latitude":"34.89634070","longitude":"133.63753140"},{"name":"Hiroshima Prefecture","isoCode":"34","countryCode":"JP","latitude":"34.88234080","longitude":"133.01948970"},{"name":"Yamaguchi Prefecture","isoCode":"35","countryCode":"JP","latitude":"34.27967690","longitude":"131.52127420"},{"name":"Tokushima Prefecture","isoCode":"36","countryCode":"JP","latitude":"33.94196550","longitude":"134.32365570"},{"name":"Kagawa Prefecture","isoCode":"37","countryCode":"JP","latitude":"34.22259150","longitude":"134.01991520"},{"name":"Ehime Prefecture","isoCode":"38","countryCode":"JP","latitude":"33.60253060","longitude":"132.78575830"},{"name":"Kōchi Prefecture","isoCode":"39","countryCode":"JP","latitude":"33.28791610","longitude":"132.27592620"},{"name":"Fukuoka Prefecture","isoCode":"40","countryCode":"JP","latitude":"33.56625590","longitude":"130.71585700"},{"name":"Saga Prefecture","isoCode":"41","countryCode":"JP","latitude":"33.30783710","longitude":"130.22712430"},{"name":"Nagasaki Prefecture","isoCode":"42","countryCode":"JP","latitude":"33.24885250","longitude":"129.69309120"},{"name":"Kumamoto Prefecture","isoCode":"43","countryCode":"JP","latitude":"32.85944270","longitude":"130.79691490"},{"name":"Ōita Prefecture","isoCode":"44","countryCode":"JP","latitude":"33.15892990","longitude":"131.36111210"},{"name":"Miyazaki Prefecture","isoCode":"45","countryCode":"JP","latitude":"32.60360220","longitude":"131.44125100"},{"name":"Kagoshima Prefecture","isoCode":"46","countryCode":"JP","latitude":"31.39119580","longitude":"130.87785860"},{"name":"Okinawa Prefecture","isoCode":"47","countryCode":"JP","latitude":"26.12019110","longitude":"127.70250120"},{"name":"Baringo","isoCode":"01","countryCode":"KE","latitude":"0.85549880","longitude":"36.08934060"},{"name":"Bomet","isoCode":"02","countryCode":"KE","latitude":"-0.80150090","longitude":"35.30272260"},{"name":"Bungoma","isoCode":"03","countryCode":"KE","latitude":"0.56952520","longitude":"34.55837660"},{"name":"Busia","isoCode":"04","countryCode":"KE","latitude":"0.43465060","longitude":"34.24215970"},{"name":"Elgeyo-Marakwet","isoCode":"05","countryCode":"KE","latitude":"1.04982370","longitude":"35.47819260"},{"name":"Embu","isoCode":"06","countryCode":"KE","latitude":"-0.65604770","longitude":"37.72376780"},{"name":"Garissa","isoCode":"07","countryCode":"KE","latitude":"-0.45322930","longitude":"39.64609880"},{"name":"Homa Bay","isoCode":"08","countryCode":"KE","latitude":"-0.62206550","longitude":"34.33103640"},{"name":"Isiolo","isoCode":"09","countryCode":"KE","latitude":"0.35243520","longitude":"38.48499230"},{"name":"Kajiado","isoCode":"10","countryCode":"KE","latitude":"-2.09807510","longitude":"36.78195050"},{"name":"Kakamega","isoCode":"11","countryCode":"KE","latitude":"0.30789400","longitude":"34.77407930"},{"name":"Kericho","isoCode":"12","countryCode":"KE","latitude":"-0.18279130","longitude":"35.47819260"},{"name":"Kiambu","isoCode":"13","countryCode":"KE","latitude":"-1.03137010","longitude":"36.86807910"},{"name":"Kilifi","isoCode":"14","countryCode":"KE","latitude":"-3.51065080","longitude":"39.90932690"},{"name":"Kirinyaga","isoCode":"15","countryCode":"KE","latitude":"-0.65905650","longitude":"37.38272340"},{"name":"Kisii","isoCode":"16","countryCode":"KE","latitude":"-0.67733400","longitude":"34.77960300"},{"name":"Kisumu","isoCode":"17","countryCode":"KE","latitude":"-0.09170160","longitude":"34.76795680"},{"name":"Kitui","isoCode":"18","countryCode":"KE","latitude":"-1.68328220","longitude":"38.31657250"},{"name":"Kwale","isoCode":"19","countryCode":"KE","latitude":"-4.18161150","longitude":"39.46056120"},{"name":"Laikipia","isoCode":"20","countryCode":"KE","latitude":"0.36060630","longitude":"36.78195050"},{"name":"Lamu","isoCode":"21","countryCode":"KE","latitude":"-2.23550580","longitude":"40.47200040"},{"name":"Machakos","isoCode":"22","countryCode":"KE","latitude":"-1.51768370","longitude":"37.26341460"},{"name":"Makueni","isoCode":"23","countryCode":"KE","latitude":"-2.25587340","longitude":"37.89366630"},{"name":"Mandera","isoCode":"24","countryCode":"KE","latitude":"3.57379910","longitude":"40.95868800"},{"name":"Marsabit","isoCode":"25","countryCode":"KE","latitude":"2.44264030","longitude":"37.97845850"},{"name":"Meru","isoCode":"26","countryCode":"KE","latitude":"0.35571740","longitude":"37.80876930"},{"name":"Migori","isoCode":"27","countryCode":"KE","latitude":"-0.93657020","longitude":"34.41982430"},{"name":"Mombasa","isoCode":"28","countryCode":"KE","latitude":"-3.97682910","longitude":"39.71371810"},{"name":"Murang\'a","isoCode":"29","countryCode":"KE","latitude":"-0.78392810","longitude":"37.04003390"},{"name":"Nairobi City","isoCode":"30","countryCode":"KE","latitude":"-1.29206590","longitude":"36.82194620"},{"name":"Nakuru","isoCode":"31","countryCode":"KE","latitude":"-0.30309880","longitude":"36.08002600"},{"name":"Nandi","isoCode":"32","countryCode":"KE","latitude":"0.18358670","longitude":"35.12687810"},{"name":"Narok","isoCode":"33","countryCode":"KE","latitude":"-1.10411100","longitude":"36.08934060"},{"name":"Nyamira","isoCode":"34","countryCode":"KE","latitude":"-0.56694050","longitude":"34.93412340"},{"name":"Nyandarua","isoCode":"35","countryCode":"KE","latitude":"-0.18038550","longitude":"36.52296410"},{"name":"Nyeri","isoCode":"36","countryCode":"KE","latitude":"-0.41969150","longitude":"37.04003390"},{"name":"Samburu","isoCode":"37","countryCode":"KE","latitude":"1.21545060","longitude":"36.95410700"},{"name":"Siaya","isoCode":"38","countryCode":"KE","latitude":"-0.06173280","longitude":"34.24215970"},{"name":"Taita–Taveta","isoCode":"39","countryCode":"KE","latitude":"-3.31606870","longitude":"38.48499230"},{"name":"Tana River","isoCode":"40","countryCode":"KE","latitude":"-1.65184680","longitude":"39.65181650"},{"name":"Tharaka-Nithi","isoCode":"41","countryCode":"KE","latitude":"-0.29648510","longitude":"37.72376780"},{"name":"Trans Nzoia","isoCode":"42","countryCode":"KE","latitude":"1.05666670","longitude":"34.95066250"},{"name":"Turkana","isoCode":"43","countryCode":"KE","latitude":"3.31224770","longitude":"35.56578620"},{"name":"Uasin Gishu","isoCode":"44","countryCode":"KE","latitude":"0.55276380","longitude":"35.30272260"},{"name":"Vihiga","isoCode":"45","countryCode":"KE","latitude":"0.07675530","longitude":"34.70776650"},{"name":"Wajir","isoCode":"46","countryCode":"KE","latitude":"1.63604750","longitude":"40.30886260"},{"name":"West Pokot","isoCode":"47","countryCode":"KE","latitude":"1.62100760","longitude":"35.39050460"},{"name":"Batken Region","isoCode":"B","countryCode":"KG","latitude":"39.97214250","longitude":"69.85974060"},{"name":"Chuy Region","isoCode":"C","countryCode":"KG","latitude":"42.56550000","longitude":"74.40566120"},{"name":"Bishkek","isoCode":"GB","countryCode":"KG","latitude":"42.87462120","longitude":"74.56976170"},{"name":"Osh","isoCode":"GO","countryCode":"KG","latitude":"36.06313990","longitude":"-95.91828950"},{"name":"Jalal-Abad Region","isoCode":"J","countryCode":"KG","latitude":"41.10680800","longitude":"72.89880690"},{"name":"Naryn Region","isoCode":"N","countryCode":"KG","latitude":"41.29432270","longitude":"75.34121790"},{"name":"Osh Region","isoCode":"O","countryCode":"KG","latitude":"39.84073660","longitude":"72.89880690"},{"name":"Talas Region","isoCode":"T","countryCode":"KG","latitude":"42.28673390","longitude":"72.52048270"},{"name":"Issyk-Kul Region","isoCode":"Y","countryCode":"KG","latitude":"42.18594280","longitude":"77.56194190"},{"name":"Banteay Meanchey","isoCode":"1","countryCode":"KH","latitude":"13.75319140","longitude":"102.98961500"},{"name":"Kratie","isoCode":"10","countryCode":"KH","latitude":"12.50436080","longitude":"105.96998780"},{"name":"Mondulkiri","isoCode":"11","countryCode":"KH","latitude":"12.78794270","longitude":"107.10119310"},{"name":"Phnom Penh","isoCode":"12","countryCode":"KH","latitude":"11.55637380","longitude":"104.92820990"},{"name":"Preah Vihear","isoCode":"13","countryCode":"KH","latitude":"14.00857970","longitude":"104.84546190"},{"name":"Prey Veng","isoCode":"14","countryCode":"KH","latitude":"11.38024420","longitude":"105.50054830"},{"name":"Pursat","isoCode":"15","countryCode":"KH","latitude":"12.27209560","longitude":"103.72891670"},{"name":"Ratanakiri","isoCode":"16","countryCode":"KH","latitude":"13.85766070","longitude":"107.10119310"},{"name":"Siem Reap","isoCode":"17","countryCode":"KH","latitude":"13.33026600","longitude":"104.10013260"},{"name":"Sihanoukville","isoCode":"18","countryCode":"KH","latitude":"10.75818990","longitude":"103.82162610"},{"name":"Stung Treng","isoCode":"19","countryCode":"KH","latitude":"13.57647300","longitude":"105.96998780"},{"name":"Battambang","isoCode":"2","countryCode":"KH","latitude":"13.02869710","longitude":"102.98961500"},{"name":"Svay Rieng","isoCode":"20","countryCode":"KH","latitude":"11.14272200","longitude":"105.82902980"},{"name":"Takeo","isoCode":"21","countryCode":"KH","latitude":"10.93215190","longitude":"104.79877100"},{"name":"Oddar Meanchey","isoCode":"22","countryCode":"KH","latitude":"14.16097380","longitude":"103.82162610"},{"name":"Kep","isoCode":"23","countryCode":"KH","latitude":"10.53608900","longitude":"104.35591580"},{"name":"Pailin","isoCode":"24","countryCode":"KH","latitude":"12.90929620","longitude":"102.66755750"},{"name":"Kampong Cham","isoCode":"3","countryCode":"KH","latitude":"12.09829180","longitude":"105.31311850"},{"name":"Kampong Chhnang","isoCode":"4","countryCode":"KH","latitude":"12.13923520","longitude":"104.56552730"},{"name":"Kampong Speu","isoCode":"5","countryCode":"KH","latitude":"11.61551090","longitude":"104.37919120"},{"name":"Kampong Thom","isoCode":"6","countryCode":"KH","latitude":"12.81674850","longitude":"103.84131040"},{"name":"Kampot","isoCode":"7","countryCode":"KH","latitude":"10.73253510","longitude":"104.37919120"},{"name":"Kandal","isoCode":"8","countryCode":"KH","latitude":"11.22373830","longitude":"105.12589550"},{"name":"Koh Kong","isoCode":"9","countryCode":"KH","latitude":"11.57628040","longitude":"103.35872880"},{"name":"Tai Po District","isoCode":"NTP","countryCode":"KH","latitude":"22.45085000","longitude":"114.16422000"},{"name":"Gilbert Islands","isoCode":"G","countryCode":"KI","latitude":"0.35242620","longitude":"174.75526340"},{"name":"Line Islands","isoCode":"L","countryCode":"KI","latitude":"1.74294390","longitude":"-157.21328260"},{"name":"Phoenix Islands","isoCode":"P","countryCode":"KI","latitude":"33.32843690","longitude":"-111.98247740"},{"name":"Anjouan","isoCode":"A","countryCode":"KM","latitude":"-12.21381450","longitude":"44.43706060"},{"name":"Grande Comore","isoCode":"G","countryCode":"KM","latitude":"-11.71673380","longitude":"43.36807880"},{"name":"Mohéli","isoCode":"M","countryCode":"KM","latitude":"-12.33773760","longitude":"43.73340890"},{"name":"Christ Church Nichola Town Parish","isoCode":"01","countryCode":"KN","latitude":"17.36048120","longitude":"-62.76178370"},{"name":"Saint Anne Sandy Point Parish","isoCode":"02","countryCode":"KN","latitude":"17.37253330","longitude":"-62.84411330"},{"name":"Saint George Gingerland Parish","isoCode":"04","countryCode":"KN","latitude":"17.12577590","longitude":"-62.56198110"},{"name":"Saint James Windward Parish","isoCode":"05","countryCode":"KN","latitude":"17.17696330","longitude":"-62.57960260"},{"name":"Saint John Capisterre Parish","isoCode":"06","countryCode":"KN","latitude":"17.38103410","longitude":"-62.79118330"},{"name":"Saint John Figtree Parish","isoCode":"07","countryCode":"KN","latitude":"17.11557480","longitude":"-62.60310040"},{"name":"Saint Mary Cayon Parish","isoCode":"08","countryCode":"KN","latitude":"17.34620710","longitude":"-62.73826710"},{"name":"Saint Paul Capisterre Parish","isoCode":"09","countryCode":"KN","latitude":"17.40166830","longitude":"-62.82573320"},{"name":"Saint Paul Charlestown Parish","isoCode":"10","countryCode":"KN","latitude":"17.13462970","longitude":"-62.61338160"},{"name":"Saint Peter Basseterre Parish","isoCode":"11","countryCode":"KN","latitude":"17.31029110","longitude":"-62.71475330"},{"name":"Saint Thomas Lowland Parish","isoCode":"12","countryCode":"KN","latitude":"17.16505130","longitude":"-62.60897530"},{"name":"Saint Thomas Middle Island Parish","isoCode":"13","countryCode":"KN","latitude":"17.33488130","longitude":"-62.80882510"},{"name":"Trinity Palmetto Point Parish","isoCode":"15","countryCode":"KN","latitude":"17.30635190","longitude":"-62.76178370"},{"name":"Saint Kitts","isoCode":"K","countryCode":"KN","latitude":"17.34337960","longitude":"-62.75590430"},{"name":"Nevis","isoCode":"N","countryCode":"KN","latitude":"17.15535580","longitude":"-62.57960260"},{"name":"Pyongyang","isoCode":"01","countryCode":"KP","latitude":"39.03921930","longitude":"125.76252410"},{"name":"South Pyongan Province","isoCode":"02","countryCode":"KP","latitude":"39.35391780","longitude":"126.16827100"},{"name":"North Pyongan Province","isoCode":"03","countryCode":"KP","latitude":"39.92556180","longitude":"125.39280250"},{"name":"Chagang Province","isoCode":"04","countryCode":"KP","latitude":"40.72028090","longitude":"126.56211370"},{"name":"South Hwanghae Province","isoCode":"05","countryCode":"KP","latitude":"38.20072150","longitude":"125.47819260"},{"name":"North Hwanghae Province","isoCode":"06","countryCode":"KP","latitude":"38.37860850","longitude":"126.43643630"},{"name":"Kangwon Province","isoCode":"07","countryCode":"KP","latitude":"38.84323930","longitude":"127.55970670"},{"name":"South Hamgyong Province","isoCode":"08","countryCode":"KP","latitude":"40.37253390","longitude":"128.29888400"},{"name":"North Hamgyong Province","isoCode":"09","countryCode":"KP","latitude":"41.81487580","longitude":"129.45819550"},{"name":"Ryanggang Province","isoCode":"10","countryCode":"KP","latitude":"41.23189210","longitude":"128.50763590"},{"name":"Rason","isoCode":"13","countryCode":"KP","latitude":"42.25690630","longitude":"130.29771860"},{"name":"Seoul","isoCode":"11","countryCode":"KR","latitude":"37.56653500","longitude":"126.97796920"},{"name":"Busan","isoCode":"26","countryCode":"KR","latitude":"35.17955430","longitude":"129.07564160"},{"name":"Daegu","isoCode":"27","countryCode":"KR","latitude":"35.87143540","longitude":"128.60144500"},{"name":"Incheon","isoCode":"28","countryCode":"KR","latitude":"37.45625570","longitude":"126.70520620"},{"name":"Gwangju","isoCode":"29","countryCode":"KR","latitude":"35.15954540","longitude":"126.85260120"},{"name":"Daejeon","isoCode":"30","countryCode":"KR","latitude":"36.35041190","longitude":"127.38454750"},{"name":"Ulsan","isoCode":"31","countryCode":"KR","latitude":"35.53837730","longitude":"129.31135960"},{"name":"Gyeonggi Province","isoCode":"41","countryCode":"KR","latitude":"37.41380000","longitude":"127.51830000"},{"name":"Gangwon Province","isoCode":"42","countryCode":"KR","latitude":"37.82280000","longitude":"128.15550000"},{"name":"North Chungcheong Province","isoCode":"43","countryCode":"KR","latitude":"36.80000000","longitude":"127.70000000"},{"name":"South Chungcheong Province","isoCode":"44","countryCode":"KR","latitude":"36.51840000","longitude":"126.80000000"},{"name":"North Jeolla Province","isoCode":"45","countryCode":"KR","latitude":"35.71750000","longitude":"127.15300000"},{"name":"South Jeolla Province","isoCode":"46","countryCode":"KR","latitude":"34.86790000","longitude":"126.99100000"},{"name":"North Gyeongsang Province","isoCode":"47","countryCode":"KR","latitude":"36.49190000","longitude":"128.88890000"},{"name":"South Gyeongsang Province","isoCode":"48","countryCode":"KR","latitude":"35.46060000","longitude":"128.21320000"},{"name":"Jeju","isoCode":"49","countryCode":"KR","latitude":"33.95682780","longitude":"-84.13135000"},{"name":"Sejong City","isoCode":"50","countryCode":"KR","latitude":"34.05233230","longitude":"-118.30848970"},{"name":"Al Ahmadi Governorate","isoCode":"AH","countryCode":"KW","latitude":"28.57451250","longitude":"48.10247430"},{"name":"Al Farwaniyah Governorate","isoCode":"FA","countryCode":"KW","latitude":"29.27335700","longitude":"47.94001540"},{"name":"Hawalli Governorate","isoCode":"HA","countryCode":"KW","latitude":"29.30567160","longitude":"48.03076130"},{"name":"Al Jahra Governorate","isoCode":"JA","countryCode":"KW","latitude":"29.99318310","longitude":"47.76347310"},{"name":"Capital Governorate","isoCode":"KU","countryCode":"KW","latitude":"26.22851610","longitude":"50.58604970"},{"name":"Mubarak Al-Kabeer Governorate","isoCode":"MU","countryCode":"KW","latitude":"29.21224000","longitude":"48.06051080"},{"name":"Akmola Region","isoCode":"AKM","countryCode":"KZ","latitude":"51.91653200","longitude":"69.41104940"},{"name":"Aktobe Region","isoCode":"AKT","countryCode":"KZ","latitude":"48.77970780","longitude":"57.99743780"},{"name":"Almaty","isoCode":"ALA","countryCode":"KZ","latitude":"43.22201460","longitude":"76.85124850"},{"name":"Almaty Region","isoCode":"ALM","countryCode":"KZ","latitude":"45.01192270","longitude":"78.42293920"},{"name":"Nur-Sultan","isoCode":"AST","countryCode":"KZ","latitude":"51.16052270","longitude":"71.47035580"},{"name":"Atyrau Region","isoCode":"ATY","countryCode":"KZ","latitude":"47.10761880","longitude":"51.91413300"},{"name":"Baikonur","isoCode":"BAY","countryCode":"KZ","latitude":"45.96458510","longitude":"63.30524280"},{"name":"Karaganda Region","isoCode":"KAR","countryCode":"KZ","latitude":"47.90221820","longitude":"71.77068070"},{"name":"Kostanay Region","isoCode":"KUS","countryCode":"KZ","latitude":"51.50770960","longitude":"64.04790730"},{"name":"Kyzylorda Region","isoCode":"KZY","countryCode":"KZ","latitude":"44.69226130","longitude":"62.65718850"},{"name":"Mangystau Region","isoCode":"MAN","countryCode":"KZ","latitude":"44.59080200","longitude":"53.84995080"},{"name":"Pavlodar Region","isoCode":"PAV","countryCode":"KZ","latitude":"52.28784440","longitude":"76.97334530"},{"name":"North Kazakhstan Region","isoCode":"SEV","countryCode":"KZ","latitude":"54.16220660","longitude":"69.93870710"},{"name":"East Kazakhstan Region","isoCode":"VOS","countryCode":"KZ","latitude":"48.70626870","longitude":"80.79225340"},{"name":"Turkestan Region","isoCode":"YUZ","countryCode":"KZ","latitude":"43.36669580","longitude":"68.40944050"},{"name":"West Kazakhstan Province","isoCode":"ZAP","countryCode":"KZ","latitude":"49.56797270","longitude":"50.80666160"},{"name":"Jambyl Region","isoCode":"ZHA","countryCode":"KZ","latitude":"44.22203080","longitude":"72.36579670"},{"name":"Attapeu Province","isoCode":"AT","countryCode":"LA","latitude":"14.93634000","longitude":"107.10119310"},{"name":"Bokeo Province","isoCode":"BK","countryCode":"LA","latitude":"20.28726620","longitude":"100.70978670"},{"name":"Bolikhamsai Province","isoCode":"BL","countryCode":"LA","latitude":"18.43629240","longitude":"104.47233010"},{"name":"Champasak Province","isoCode":"CH","countryCode":"LA","latitude":"14.65786640","longitude":"105.96998780"},{"name":"Houaphanh Province","isoCode":"HO","countryCode":"LA","latitude":"20.32541750","longitude":"104.10013260"},{"name":"Khammouane Province","isoCode":"KH","countryCode":"LA","latitude":"17.63840660","longitude":"105.21948080"},{"name":"Luang Namtha Province","isoCode":"LM","countryCode":"LA","latitude":"20.91701870","longitude":"101.16173560"},{"name":"Luang Prabang Province","isoCode":"LP","countryCode":"LA","latitude":"20.06562290","longitude":"102.62162110"},{"name":"Oudomxay Province","isoCode":"OU","countryCode":"LA","latitude":"20.49219290","longitude":"101.88917210"},{"name":"Phongsaly Province","isoCode":"PH","countryCode":"LA","latitude":"21.59193770","longitude":"102.25479190"},{"name":"Salavan Province","isoCode":"SL","countryCode":"LA","latitude":"15.81710730","longitude":"106.25221430"},{"name":"Savannakhet Province","isoCode":"SV","countryCode":"LA","latitude":"16.50653810","longitude":"105.59433880"},{"name":"Vientiane Province","isoCode":"VI","countryCode":"LA","latitude":"18.57050630","longitude":"102.62162110"},{"name":"Vientiane Prefecture","isoCode":"VT","countryCode":"LA","latitude":"18.11054100","longitude":"102.52980280"},{"name":"Sainyabuli Province","isoCode":"XA","countryCode":"LA","latitude":"19.39078860","longitude":"101.52480550"},{"name":"Sekong Province","isoCode":"XE","countryCode":"LA","latitude":"15.57674460","longitude":"107.00670310"},{"name":"Xiangkhouang Province","isoCode":"XI","countryCode":"LA","latitude":"19.60930030","longitude":"103.72891670"},{"name":"Xaisomboun","isoCode":"XN","countryCode":"LA","latitude":null,"longitude":null},{"name":"Xaisomboun Province","isoCode":"XS","countryCode":"LA","latitude":"18.43629240","longitude":"104.47233010"},{"name":"Akkar Governorate","isoCode":"AK","countryCode":"LB","latitude":"34.53287630","longitude":"36.13281320"},{"name":"North Governorate","isoCode":"AS","countryCode":"LB","latitude":"34.43806250","longitude":"35.83082330"},{"name":"Beirut Governorate","isoCode":"BA","countryCode":"LB","latitude":"33.88861060","longitude":"35.49547720"},{"name":"Baalbek-Hermel Governorate","isoCode":"BH","countryCode":"LB","latitude":"34.26585560","longitude":"36.34980970"},{"name":"Beqaa Governorate","isoCode":"BI","countryCode":"LB","latitude":"33.84626620","longitude":"35.90194890"},{"name":"South Governorate","isoCode":"JA","countryCode":"LB","latitude":"33.27214790","longitude":"35.20327780"},{"name":"Mount Lebanon Governorate","isoCode":"JL","countryCode":"LB","latitude":"33.81008580","longitude":"35.59731390"},{"name":"Nabatieh Governorate","isoCode":"NA","countryCode":"LB","latitude":"33.37716930","longitude":"35.48382930"},{"name":"Anse la Raye Quarter","isoCode":"01","countryCode":"LC","latitude":"13.94594240","longitude":"-61.03694680"},{"name":"Castries Quarter","isoCode":"02","countryCode":"LC","latitude":"14.01010940","longitude":"-60.98746870"},{"name":"Choiseul Quarter","isoCode":"03","countryCode":"LC","latitude":"13.77501540","longitude":"-61.04859100"},{"name":"Dauphin Quarter","isoCode":"04","countryCode":"LC","latitude":"14.01033960","longitude":"-60.91909880"},{"name":"Dennery Quarter","isoCode":"05","countryCode":"LC","latitude":"13.92673930","longitude":"-60.91909880"},{"name":"Gros Islet Quarter","isoCode":"06","countryCode":"LC","latitude":"14.08435780","longitude":"-60.94527940"},{"name":"Laborie Quarter","isoCode":"07","countryCode":"LC","latitude":"13.75227830","longitude":"-60.99328890"},{"name":"Micoud Quarter","isoCode":"08","countryCode":"LC","latitude":"13.82118710","longitude":"-60.90019340"},{"name":"Praslin Quarter","isoCode":"09","countryCode":"LC","latitude":"13.87523920","longitude":"-60.89946630"},{"name":"Soufrière Quarter","isoCode":"10","countryCode":"LC","latitude":"13.85709860","longitude":"-61.05732480"},{"name":"Vieux Fort Quarter","isoCode":"11","countryCode":"LC","latitude":"13.72060800","longitude":"-60.94964330"},{"name":"Canaries","isoCode":"12","countryCode":"LC","latitude":"28.29156370","longitude":"-16.62913040"},{"name":"Balzers","isoCode":"01","countryCode":"LI","latitude":"42.05283570","longitude":"-88.03668480"},{"name":"Eschen","isoCode":"02","countryCode":"LI","latitude":"40.76695740","longitude":"-73.95228210"},{"name":"Gamprin","isoCode":"03","countryCode":"LI","latitude":"47.21324900","longitude":"9.50251950"},{"name":"Mauren","isoCode":"04","countryCode":"LI","latitude":"47.21892850","longitude":"9.54173500"},{"name":"Planken","isoCode":"05","countryCode":"LI","latitude":"40.66505760","longitude":"-73.50479800"},{"name":"Ruggell","isoCode":"06","countryCode":"LI","latitude":"47.25292220","longitude":"9.54021270"},{"name":"Schaan","isoCode":"07","countryCode":"LI","latitude":"47.12043400","longitude":"9.59416020"},{"name":"Schellenberg","isoCode":"08","countryCode":"LI","latitude":"47.23096600","longitude":"9.54678430"},{"name":"Triesen","isoCode":"09","countryCode":"LI","latitude":"47.10979880","longitude":"9.52482960"},{"name":"Triesenberg","isoCode":"10","countryCode":"LI","latitude":"47.12245110","longitude":"9.57019850"},{"name":"Vaduz","isoCode":"11","countryCode":"LI","latitude":"47.14103030","longitude":"9.52092770"},{"name":"Western Province","isoCode":"1","countryCode":"LK","latitude":null,"longitude":null},{"name":"Colombo District","isoCode":"11","countryCode":"LK","latitude":"6.92695570","longitude":"79.86173060"},{"name":"Gampaha District","isoCode":"12","countryCode":"LK","latitude":"7.07126190","longitude":"80.00877460"},{"name":"Kalutara District","isoCode":"13","countryCode":"LK","latitude":"6.60846860","longitude":"80.14285840"},{"name":"Central Province","isoCode":"2","countryCode":"LK","latitude":null,"longitude":null},{"name":"Kandy District","isoCode":"21","countryCode":"LK","latitude":"7.29315880","longitude":"80.63501070"},{"name":"Matale District","isoCode":"22","countryCode":"LK","latitude":"7.46596460","longitude":"80.62342590"},{"name":"Nuwara Eliya District","isoCode":"23","countryCode":"LK","latitude":"6.96065320","longitude":"80.76927580"},{"name":"Southern Province","isoCode":"3","countryCode":"LK","latitude":null,"longitude":null},{"name":"Galle District","isoCode":"31","countryCode":"LK","latitude":"6.05774900","longitude":"80.21755720"},{"name":"Matara District","isoCode":"32","countryCode":"LK","latitude":"5.94493480","longitude":"80.54879970"},{"name":"Hambantota District","isoCode":"33","countryCode":"LK","latitude":"6.15358160","longitude":"81.12714900"},{"name":"Northern Province","isoCode":"4","countryCode":"LK","latitude":null,"longitude":null},{"name":"Jaffna District","isoCode":"41","countryCode":"LK","latitude":"9.69304680","longitude":"80.16518540"},{"name":"Kilinochchi District","isoCode":"42","countryCode":"LK","latitude":"9.36779710","longitude":"80.32131060"},{"name":"Mannar District","isoCode":"43","countryCode":"LK","latitude":"8.98095310","longitude":"79.90439750"},{"name":"Vavuniya District","isoCode":"44","countryCode":"LK","latitude":"8.75947390","longitude":"80.50003340"},{"name":"Mullaitivu District","isoCode":"45","countryCode":"LK","latitude":"9.26753880","longitude":"80.81282540"},{"name":"Eastern Province","isoCode":"5","countryCode":"LK","latitude":null,"longitude":null},{"name":"Batticaloa District","isoCode":"51","countryCode":"LK","latitude":"7.82927810","longitude":"81.47183870"},{"name":"Ampara District","isoCode":"52","countryCode":"LK","latitude":"7.29116850","longitude":"81.67237610"},{"name":"Trincomalee District","isoCode":"53","countryCode":"LK","latitude":"8.60130690","longitude":"81.11960750"},{"name":"North Western Province","isoCode":"6","countryCode":"LK","latitude":"7.75840910","longitude":"80.18750650"},{"name":"Puttalam District","isoCode":"62","countryCode":"LK","latitude":"8.02599150","longitude":"79.84712720"},{"name":"North Central Province","isoCode":"7","countryCode":"LK","latitude":"8.19956380","longitude":"80.63269160"},{"name":"Anuradhapura District","isoCode":"71","countryCode":"LK","latitude":"8.33183050","longitude":"80.40290170"},{"name":"Polonnaruwa District","isoCode":"72","countryCode":"LK","latitude":"7.93955670","longitude":"81.00034030"},{"name":"Uva Province","isoCode":"8","countryCode":"LK","latitude":"6.84276120","longitude":"81.33994140"},{"name":"Badulla District","isoCode":"81","countryCode":"LK","latitude":"6.99340090","longitude":"81.05498150"},{"name":"Monaragala District","isoCode":"82","countryCode":"LK","latitude":"6.87277810","longitude":"81.35068320"},{"name":"Sabaragamuwa Province","isoCode":"9","countryCode":"LK","latitude":"6.73959410","longitude":"80.36586500"},{"name":"Ratnapura district","isoCode":"91","countryCode":"LK","latitude":"6.70551680","longitude":"80.38483890"},{"name":"Kegalle District","isoCode":"92","countryCode":"LK","latitude":"7.12040530","longitude":"80.32131060"},{"name":"Bong County","isoCode":"BG","countryCode":"LR","latitude":"6.82950190","longitude":"-9.36730840"},{"name":"Bomi County","isoCode":"BM","countryCode":"LR","latitude":"6.75629260","longitude":"-10.84514670"},{"name":"Grand Cape Mount County","isoCode":"CM","countryCode":"LR","latitude":"7.04677580","longitude":"-11.07117580"},{"name":"Grand Bassa County","isoCode":"GB","countryCode":"LR","latitude":"6.23084520","longitude":"-9.81249350"},{"name":"Grand Gedeh County","isoCode":"GG","countryCode":"LR","latitude":"5.92220780","longitude":"-8.22129790"},{"name":"Grand Kru County","isoCode":"GK","countryCode":"LR","latitude":"4.76138620","longitude":"-8.22129790"},{"name":"Gbarpolu County","isoCode":"GP","countryCode":"LR","latitude":"7.49526370","longitude":"-10.08072980"},{"name":"Lofa County","isoCode":"LO","countryCode":"LR","latitude":"8.19111840","longitude":"-9.72326730"},{"name":"Margibi County","isoCode":"MG","countryCode":"LR","latitude":"6.51518750","longitude":"-10.30488970"},{"name":"Montserrado County","isoCode":"MO","countryCode":"LR","latitude":"6.55258150","longitude":"-10.52961150"},{"name":"Maryland County","isoCode":"MY","countryCode":"LR","latitude":"39.04575490","longitude":"-76.64127120"},{"name":"Nimba","isoCode":"NI","countryCode":"LR","latitude":"7.61666670","longitude":"-8.41666670"},{"name":"River Gee County","isoCode":"RG","countryCode":"LR","latitude":"5.26048940","longitude":"-7.87216000"},{"name":"River Cess County","isoCode":"RI","countryCode":"LR","latitude":"5.90253280","longitude":"-9.45615500"},{"name":"Sinoe County","isoCode":"SI","countryCode":"LR","latitude":"5.49871000","longitude":"-8.66005860"},{"name":"Maseru District","isoCode":"A","countryCode":"LS","latitude":"-29.51656500","longitude":"27.83114280"},{"name":"Butha-Buthe District","isoCode":"B","countryCode":"LS","latitude":"-28.76537540","longitude":"28.24681480"},{"name":"Leribe District","isoCode":"C","countryCode":"LS","latitude":"-28.86380650","longitude":"28.04788260"},{"name":"Berea District","isoCode":"D","countryCode":"LS","latitude":"41.36616140","longitude":"-81.85430260"},{"name":"Mafeteng District","isoCode":"E","countryCode":"LS","latitude":"-29.80410080","longitude":"27.50261740"},{"name":"Mohale\'s Hoek District","isoCode":"F","countryCode":"LS","latitude":"-30.14259170","longitude":"27.46738450"},{"name":"Quthing District","isoCode":"G","countryCode":"LS","latitude":"-30.40156870","longitude":"27.70801330"},{"name":"Qacha\'s Nek District","isoCode":"H","countryCode":"LS","latitude":"-30.11145650","longitude":"28.67897900"},{"name":"Mokhotlong District","isoCode":"J","countryCode":"LS","latitude":"-29.25731930","longitude":"28.95286450"},{"name":"Thaba-Tseka District","isoCode":"K","countryCode":"LS","latitude":"-29.52389750","longitude":"28.60897520"},{"name":"Akmenė District Municipality","isoCode":"01","countryCode":"LT","latitude":"56.24550290","longitude":"22.74711690"},{"name":"Alytus City Municipality","isoCode":"02","countryCode":"LT","latitude":"54.39629380","longitude":"24.04587610"},{"name":"Alytus District Municipality","isoCode":"03","countryCode":"LT","latitude":"54.32974960","longitude":"24.19609310"},{"name":"Birštonas Municipality","isoCode":"05","countryCode":"LT","latitude":"54.56696640","longitude":"24.00930980"},{"name":"Biržai District Municipality","isoCode":"06","countryCode":"LT","latitude":"56.20177190","longitude":"24.75601180"},{"name":"Druskininkai municipality","isoCode":"07","countryCode":"LT","latitude":"53.99336850","longitude":"24.03424380"},{"name":"Elektrėnai municipality","isoCode":"08","countryCode":"LT","latitude":"54.76539340","longitude":"24.77405830"},{"name":"Ignalina District Municipality","isoCode":"09","countryCode":"LT","latitude":"55.40903420","longitude":"26.32848930"},{"name":"Jonava District Municipality","isoCode":"10","countryCode":"LT","latitude":"55.07272420","longitude":"24.27933370"},{"name":"Joniškis District Municipality","isoCode":"11","countryCode":"LT","latitude":"56.23607300","longitude":"23.61365790"},{"name":"Jurbarkas District Municipality","isoCode":"12","countryCode":"LT","latitude":"55.07740700","longitude":"22.74195690"},{"name":"Kaišiadorys District Municipality","isoCode":"13","countryCode":"LT","latitude":"54.85886690","longitude":"24.42779290"},{"name":"Kalvarija municipality","isoCode":"14","countryCode":"LT","latitude":"54.37616740","longitude":"23.19203210"},{"name":"Kaunas City Municipality","isoCode":"15","countryCode":"LT","latitude":"54.91453260","longitude":"23.90535180"},{"name":"Kaunas District Municipality","isoCode":"16","countryCode":"LT","latitude":"54.99362360","longitude":"23.63249410"},{"name":"Kazlų Rūda municipality","isoCode":"17","countryCode":"LT","latitude":"54.78075260","longitude":"23.48402430"},{"name":"Kėdainiai District Municipality","isoCode":"18","countryCode":"LT","latitude":"55.35609470","longitude":"23.98326830"},{"name":"Kelmė District Municipality","isoCode":"19","countryCode":"LT","latitude":"55.62663520","longitude":"22.87817200"},{"name":"Klaipeda City Municipality","isoCode":"20","countryCode":"LT","latitude":"55.70329480","longitude":"21.14427950"},{"name":"Klaipėda District Municipality","isoCode":"21","countryCode":"LT","latitude":"55.68416150","longitude":"21.44164640"},{"name":"Kretinga District Municipality","isoCode":"22","countryCode":"LT","latitude":"55.88384200","longitude":"21.23509190"},{"name":"Kupiškis District Municipality","isoCode":"23","countryCode":"LT","latitude":"55.84287410","longitude":"25.02958160"},{"name":"Lazdijai District Municipality","isoCode":"24","countryCode":"LT","latitude":"54.23432670","longitude":"23.51565050"},{"name":"Marijampolė Municipality","isoCode":"25","countryCode":"LT","latitude":"54.57110940","longitude":"23.48593710"},{"name":"Mažeikiai District Municipality","isoCode":"26","countryCode":"LT","latitude":"56.30924390","longitude":"22.34146800"},{"name":"Molėtai District Municipality","isoCode":"27","countryCode":"LT","latitude":"55.22653090","longitude":"25.41800110"},{"name":"Neringa Municipality","isoCode":"28","countryCode":"LT","latitude":"55.45724030","longitude":"21.08390050"},{"name":"Pagėgiai municipality","isoCode":"29","countryCode":"LT","latitude":"55.17213200","longitude":"21.96836140"},{"name":"Pakruojis District Municipality","isoCode":"30","countryCode":"LT","latitude":"56.07326050","longitude":"23.93899060"},{"name":"Palanga City Municipality","isoCode":"31","countryCode":"LT","latitude":"55.92019800","longitude":"21.06776140"},{"name":"Panevėžys City Municipality","isoCode":"32","countryCode":"LT","latitude":"55.73479150","longitude":"24.35747740"},{"name":"Panevėžys District Municipality","isoCode":"33","countryCode":"LT","latitude":"55.61667280","longitude":"24.31422830"},{"name":"Pasvalys District Municipality","isoCode":"34","countryCode":"LT","latitude":"56.06046190","longitude":"24.39629100"},{"name":"Plungė District Municipality","isoCode":"35","countryCode":"LT","latitude":"55.91078400","longitude":"21.84540690"},{"name":"Prienai District Municipality","isoCode":"36","countryCode":"LT","latitude":"54.63835800","longitude":"23.94680090"},{"name":"Radviliškis District Municipality","isoCode":"37","countryCode":"LT","latitude":"55.81083990","longitude":"23.54648700"},{"name":"Raseiniai District Municipality","isoCode":"38","countryCode":"LT","latitude":"55.38194990","longitude":"23.11561290"},{"name":"Rietavas municipality","isoCode":"39","countryCode":"LT","latitude":"55.70217190","longitude":"21.99865640"},{"name":"Rokiškis District Municipality","isoCode":"40","countryCode":"LT","latitude":"55.95550390","longitude":"25.58592490"},{"name":"Šakiai District Municipality","isoCode":"41","countryCode":"LT","latitude":"54.95267100","longitude":"23.04801990"},{"name":"Šalčininkai District Municipality","isoCode":"42","countryCode":"LT","latitude":"54.30976700","longitude":"25.38756400"},{"name":"Šiauliai City Municipality","isoCode":"43","countryCode":"LT","latitude":"55.93490850","longitude":"23.31368230"},{"name":"Šiauliai District Municipality","isoCode":"44","countryCode":"LT","latitude":"55.97214560","longitude":"23.03323710"},{"name":"Šilalė District Municipality","isoCode":"45","countryCode":"LT","latitude":"55.49268000","longitude":"22.18455590"},{"name":"Šilutė District Municipality","isoCode":"46","countryCode":"LT","latitude":"55.35041400","longitude":"21.46598590"},{"name":"Širvintos District Municipality","isoCode":"47","countryCode":"LT","latitude":"55.04310200","longitude":"24.95698100"},{"name":"Skuodas District Municipality","isoCode":"48","countryCode":"LT","latitude":"56.27021690","longitude":"21.52143310"},{"name":"Švenčionys District Municipality","isoCode":"49","countryCode":"LT","latitude":"55.10280980","longitude":"26.00718550"},{"name":"Tauragė District Municipality","isoCode":"50","countryCode":"LT","latitude":"55.25036600","longitude":"22.29095000"},{"name":"Telšiai District Municipality","isoCode":"51","countryCode":"LT","latitude":"55.91752150","longitude":"22.34518400"},{"name":"Trakai District Municipality","isoCode":"52","countryCode":"LT","latitude":"54.63791130","longitude":"24.93468940"},{"name":"Ukmergė District Municipality","isoCode":"53","countryCode":"LT","latitude":"55.24526500","longitude":"24.77607490"},{"name":"Utena District Municipality","isoCode":"54","countryCode":"LT","latitude":"55.50846140","longitude":"25.68326420"},{"name":"Varėna District Municipality","isoCode":"55","countryCode":"LT","latitude":"54.22033300","longitude":"24.57899700"},{"name":"Vilkaviškis District Municipality","isoCode":"56","countryCode":"LT","latitude":"54.65194500","longitude":"23.03515500"},{"name":"Vilnius City Municipality","isoCode":"57","countryCode":"LT","latitude":"54.67107610","longitude":"25.28787210"},{"name":"Vilnius District Municipality","isoCode":"58","countryCode":"LT","latitude":"54.77325780","longitude":"25.58671130"},{"name":"Visaginas Municipality","isoCode":"59","countryCode":"LT","latitude":"55.59411800","longitude":"26.43079540"},{"name":"Zarasai District Municipality","isoCode":"60","countryCode":"LT","latitude":"55.73096090","longitude":"26.24529500"},{"name":"Alytus County","isoCode":"AL","countryCode":"LT","latitude":"54.20002140","longitude":"24.15126340"},{"name":"Klaipėda County","isoCode":"KL","countryCode":"LT","latitude":"55.65197440","longitude":"21.37439560"},{"name":"Kaunas County","isoCode":"KU","countryCode":"LT","latitude":"54.98728630","longitude":"23.95257360"},{"name":"Marijampolė County","isoCode":"MR","countryCode":"LT","latitude":"54.78199710","longitude":"23.13413650"},{"name":"Panevėžys County","isoCode":"PN","countryCode":"LT","latitude":"55.97480490","longitude":"25.07947670"},{"name":"Šiauliai County","isoCode":"SA","countryCode":"LT","latitude":"55.99857510","longitude":"23.13800510"},{"name":"Tauragė County","isoCode":"TA","countryCode":"LT","latitude":"55.30725860","longitude":"22.35729390"},{"name":"Telšiai County","isoCode":"TE","countryCode":"LT","latitude":"56.10266160","longitude":"22.11139150"},{"name":"Utena County","isoCode":"UT","countryCode":"LT","latitude":"55.53189690","longitude":"25.79046990"},{"name":"Vilnius County","isoCode":"VL","countryCode":"LT","latitude":"54.80865020","longitude":"25.21821390"},{"name":"Canton of Capellen","isoCode":"CA","countryCode":"LU","latitude":"49.64039310","longitude":"5.95538460"},{"name":"Canton of Clervaux","isoCode":"CL","countryCode":"LU","latitude":"50.05463130","longitude":"6.02858750"},{"name":"Diekirch District","isoCode":"D","countryCode":"LU","latitude":"49.86717200","longitude":"6.15963620"},{"name":"Canton of Diekirch","isoCode":"DI","countryCode":"LU","latitude":"49.86717840","longitude":"6.15956330"},{"name":"Canton of Echternach","isoCode":"EC","countryCode":"LU","latitude":"49.81141330","longitude":"6.41756350"},{"name":"Canton of Esch-sur-Alzette","isoCode":"ES","countryCode":"LU","latitude":"49.50088050","longitude":"5.98609250"},{"name":"Grevenmacher District","isoCode":"G","countryCode":"LU","latitude":"49.68085100","longitude":"6.44075240"},{"name":"Canton of Grevenmacher","isoCode":"GR","countryCode":"LU","latitude":"49.68084100","longitude":"6.44075930"},{"name":"Luxembourg District","isoCode":"L","countryCode":"LU","latitude":"49.59537060","longitude":"6.13331780"},{"name":"Canton of Luxembourg","isoCode":"LU","countryCode":"LU","latitude":"49.63010250","longitude":"6.15201850"},{"name":"Canton of Mersch","isoCode":"ME","countryCode":"LU","latitude":"49.75429060","longitude":"6.12921850"},{"name":"Canton of Redange","isoCode":"RD","countryCode":"LU","latitude":"49.76455000","longitude":"5.88948000"},{"name":"Canton of Remich","isoCode":"RM","countryCode":"LU","latitude":"49.54501700","longitude":"6.36742220"},{"name":"Canton of Vianden","isoCode":"VD","countryCode":"LU","latitude":"49.93419240","longitude":"6.20199170"},{"name":"Canton of Wiltz","isoCode":"WI","countryCode":"LU","latitude":"49.96622000","longitude":"5.93243060"},{"name":"Aglona Municipality","isoCode":"001","countryCode":"LV","latitude":"56.10890060","longitude":"27.12862270"},{"name":"Aizkraukle Municipality","isoCode":"002","countryCode":"LV","latitude":"56.64610800","longitude":"25.23708540"},{"name":"Aizpute Municipality","isoCode":"003","countryCode":"LV","latitude":"56.71825960","longitude":"21.60727590"},{"name":"Aknīste Municipality","isoCode":"004","countryCode":"LV","latitude":"56.16130370","longitude":"25.74848270"},{"name":"Aloja Municipality","isoCode":"005","countryCode":"LV","latitude":"57.76713600","longitude":"24.87708390"},{"name":"Alsunga Municipality","isoCode":"006","countryCode":"LV","latitude":"56.98285310","longitude":"21.55559190"},{"name":"Alūksne Municipality","isoCode":"007","countryCode":"LV","latitude":"57.42544850","longitude":"27.04249680"},{"name":"Amata Municipality","isoCode":"008","countryCode":"LV","latitude":"56.99387260","longitude":"25.26276750"},{"name":"Ape Municipality","isoCode":"009","countryCode":"LV","latitude":"57.53926970","longitude":"26.69416490"},{"name":"Auce Municipality","isoCode":"010","countryCode":"LV","latitude":"56.46016800","longitude":"22.90547810"},{"name":"Babīte Municipality","isoCode":"012","countryCode":"LV","latitude":"56.95415500","longitude":"23.94539900"},{"name":"Baldone Municipality","isoCode":"013","countryCode":"LV","latitude":"56.74246000","longitude":"24.39115440"},{"name":"Baltinava Municipality","isoCode":"014","countryCode":"LV","latitude":"56.94584680","longitude":"27.64410660"},{"name":"Balvi Municipality","isoCode":"015","countryCode":"LV","latitude":"57.13262400","longitude":"27.26466850"},{"name":"Bauska Municipality","isoCode":"016","countryCode":"LV","latitude":"56.41018680","longitude":"24.20006890"},{"name":"Beverīna Municipality","isoCode":"017","countryCode":"LV","latitude":"57.51971090","longitude":"25.60736540"},{"name":"Brocēni Municipality","isoCode":"018","countryCode":"LV","latitude":"56.73475410","longitude":"22.63573710"},{"name":"Burtnieki Municipality","isoCode":"019","countryCode":"LV","latitude":"57.69490040","longitude":"25.27647770"},{"name":"Carnikava Municipality","isoCode":"020","countryCode":"LV","latitude":"57.10241210","longitude":"24.21086620"},{"name":"Cesvaine Municipality","isoCode":"021","countryCode":"LV","latitude":"56.96792640","longitude":"26.30831720"},{"name":"Cēsis Municipality","isoCode":"022","countryCode":"LV","latitude":"57.31028970","longitude":"25.26761250"},{"name":"Cibla Municipality","isoCode":"023","countryCode":"LV","latitude":"56.61023440","longitude":"27.86965980"},{"name":"Dagda Municipality","isoCode":"024","countryCode":"LV","latitude":"56.09560890","longitude":"27.53245900"},{"name":"Daugavpils Municipality","isoCode":"025","countryCode":"LV","latitude":"55.89917830","longitude":"26.61020120"},{"name":"Dobele Municipality","isoCode":"026","countryCode":"LV","latitude":"56.62630500","longitude":"23.28090660"},{"name":"Dundaga Municipality","isoCode":"027","countryCode":"LV","latitude":"57.50491670","longitude":"22.35051140"},{"name":"Durbe Municipality","isoCode":"028","countryCode":"LV","latitude":"56.62798570","longitude":"21.49162450"},{"name":"Engure Municipality","isoCode":"029","countryCode":"LV","latitude":"57.16235000","longitude":"23.21966340"},{"name":"Ērgļi Municipality","isoCode":"030","countryCode":"LV","latitude":"56.92370650","longitude":"25.67538520"},{"name":"Garkalne Municipality","isoCode":"031","countryCode":"LV","latitude":"57.01903870","longitude":"24.38261810"},{"name":"Grobiņa Municipality","isoCode":"032","countryCode":"LV","latitude":"56.53963200","longitude":"21.16689200"},{"name":"Gulbene Municipality","isoCode":"033","countryCode":"LV","latitude":"57.21556450","longitude":"26.64529550"},{"name":"Iecava Municipality","isoCode":"034","countryCode":"LV","latitude":"56.59867930","longitude":"24.19962720"},{"name":"Ikšķile Municipality","isoCode":"035","countryCode":"LV","latitude":"56.83736670","longitude":"24.49747450"},{"name":"Ilūkste Municipality","isoCode":"036","countryCode":"LV","latitude":"55.97825470","longitude":"26.29650880"},{"name":"Inčukalns Municipality","isoCode":"037","countryCode":"LV","latitude":"57.09943420","longitude":"24.68555700"},{"name":"Jaunjelgava Municipality","isoCode":"038","countryCode":"LV","latitude":"56.52836590","longitude":"25.39214430"},{"name":"Jaunpiebalga Municipality","isoCode":"039","countryCode":"LV","latitude":"57.14334710","longitude":"25.99518880"},{"name":"Jaunpils Municipality","isoCode":"040","countryCode":"LV","latitude":"56.73141940","longitude":"23.01256160"},{"name":"Jelgava Municipality","isoCode":"041","countryCode":"LV","latitude":"56.58956890","longitude":"23.66104810"},{"name":"Jēkabpils Municipality","isoCode":"042","countryCode":"LV","latitude":"56.29193200","longitude":"25.98120170"},{"name":"Kandava Municipality","isoCode":"043","countryCode":"LV","latitude":"57.03406730","longitude":"22.78018130"},{"name":"Kārsava Municipality","isoCode":"044","countryCode":"LV","latitude":"56.76458420","longitude":"27.73582950"},{"name":"Kocēni Municipality","isoCode":"045","countryCode":"LV","latitude":"57.52262920","longitude":"25.33495070"},{"name":"Koknese Municipality","isoCode":"046","countryCode":"LV","latitude":"56.72055600","longitude":"25.48939090"},{"name":"Krāslava Municipality","isoCode":"047","countryCode":"LV","latitude":"55.89514640","longitude":"27.18145770"},{"name":"Krimulda Municipality","isoCode":"048","countryCode":"LV","latitude":"57.17912730","longitude":"24.71401270"},{"name":"Krustpils Municipality","isoCode":"049","countryCode":"LV","latitude":"56.54155780","longitude":"26.24463970"},{"name":"Kuldīga Municipality","isoCode":"050","countryCode":"LV","latitude":"56.96872570","longitude":"21.96137390"},{"name":"Ķegums Municipality","isoCode":"051","countryCode":"LV","latitude":"56.74753570","longitude":"24.71736450"},{"name":"Ķekava Municipality","isoCode":"052","countryCode":"LV","latitude":"56.80643510","longitude":"24.19394930"},{"name":"Lielvārde Municipality","isoCode":"053","countryCode":"LV","latitude":"56.73929760","longitude":"24.97116180"},{"name":"Limbaži Municipality","isoCode":"054","countryCode":"LV","latitude":"57.54032270","longitude":"24.71344510"},{"name":"Līgatne Municipality","isoCode":"055","countryCode":"LV","latitude":"57.19442040","longitude":"25.09406810"},{"name":"Līvāni Municipality","isoCode":"056","countryCode":"LV","latitude":"56.35509420","longitude":"26.17251900"},{"name":"Lubāna Municipality","isoCode":"057","countryCode":"LV","latitude":"56.89992690","longitude":"26.71987890"},{"name":"Ludza Municipality","isoCode":"058","countryCode":"LV","latitude":"56.54595900","longitude":"27.71431990"},{"name":"Madona Municipality","isoCode":"059","countryCode":"LV","latitude":"56.85989230","longitude":"26.22762010"},{"name":"Mazsalaca Municipality","isoCode":"060","countryCode":"LV","latitude":"57.92677490","longitude":"25.06698950"},{"name":"Mālpils Municipality","isoCode":"061","countryCode":"LV","latitude":"57.00841190","longitude":"24.95742780"},{"name":"Mārupe Municipality","isoCode":"062","countryCode":"LV","latitude":"56.89657170","longitude":"24.04600490"},{"name":"Mērsrags Municipality","isoCode":"063","countryCode":"LV","latitude":"57.33068810","longitude":"23.10237070"},{"name":"Naukšēni Municipality","isoCode":"064","countryCode":"LV","latitude":"57.92953610","longitude":"25.51192660"},{"name":"Nereta Municipality","isoCode":"065","countryCode":"LV","latitude":"56.19866550","longitude":"25.32529690"},{"name":"Nīca Municipality","isoCode":"066","countryCode":"LV","latitude":"56.34649830","longitude":"21.06549300"},{"name":"Ogre Municipality","isoCode":"067","countryCode":"LV","latitude":"56.81473550","longitude":"24.60445550"},{"name":"Olaine Municipality","isoCode":"068","countryCode":"LV","latitude":"56.79523530","longitude":"24.01535890"},{"name":"Ozolnieki Municipality","isoCode":"069","countryCode":"LV","latitude":"56.67563050","longitude":"23.89948160"},{"name":"Pārgauja Municipality","isoCode":"070","countryCode":"LV","latitude":"57.36481220","longitude":"24.98220450"},{"name":"Pāvilosta Municipality","isoCode":"071","countryCode":"LV","latitude":"56.88654240","longitude":"21.19468490"},{"name":"Pļaviņas Municipality","isoCode":"072","countryCode":"LV","latitude":"56.61773130","longitude":"25.71940430"},{"name":"Preiļi Municipality","isoCode":"073","countryCode":"LV","latitude":"56.15111570","longitude":"26.74397670"},{"name":"Priekule Municipality","isoCode":"074","countryCode":"LV","latitude":"56.41794130","longitude":"21.55033360"},{"name":"Priekuļi Municipality","isoCode":"075","countryCode":"LV","latitude":"57.36171380","longitude":"25.44104230"},{"name":"Rauna Municipality","isoCode":"076","countryCode":"LV","latitude":"57.33169300","longitude":"25.61003390"},{"name":"Rēzekne Municipality","isoCode":"077","countryCode":"LV","latitude":"56.32736380","longitude":"27.32843310"},{"name":"Riebiņi Municipality","isoCode":"078","countryCode":"LV","latitude":"56.34361900","longitude":"26.80181380"},{"name":"Roja Municipality","isoCode":"079","countryCode":"LV","latitude":"57.50467130","longitude":"22.80121640"},{"name":"Ropaži Municipality","isoCode":"080","countryCode":"LV","latitude":"56.96157860","longitude":"24.60104760"},{"name":"Rucava Municipality","isoCode":"081","countryCode":"LV","latitude":"56.15931240","longitude":"21.16181210"},{"name":"Rugāji Municipality","isoCode":"082","countryCode":"LV","latitude":"57.00560230","longitude":"27.13172030"},{"name":"Rundāle Municipality","isoCode":"083","countryCode":"LV","latitude":"56.40972100","longitude":"24.01241390"},{"name":"Rūjiena Municipality","isoCode":"084","countryCode":"LV","latitude":"57.89372910","longitude":"25.33910080"},{"name":"Sala Municipality","isoCode":"085","countryCode":"LV","latitude":"59.96796130","longitude":"16.49782170"},{"name":"Salacgrīva Municipality","isoCode":"086","countryCode":"LV","latitude":"57.75808830","longitude":"24.35431810"},{"name":"Salaspils Municipality","isoCode":"087","countryCode":"LV","latitude":"56.86081520","longitude":"24.34978810"},{"name":"Saldus Municipality","isoCode":"088","countryCode":"LV","latitude":"56.66650880","longitude":"22.49354930"},{"name":"Saulkrasti Municipality","isoCode":"089","countryCode":"LV","latitude":"57.25794180","longitude":"24.41831460"},{"name":"Sēja Municipality","isoCode":"090","countryCode":"LV","latitude":"57.20069950","longitude":"24.59228210"},{"name":"Sigulda Municipality","isoCode":"091","countryCode":"LV","latitude":"57.10550920","longitude":"24.83142590"},{"name":"Skrīveri Municipality","isoCode":"092","countryCode":"LV","latitude":"56.67613910","longitude":"25.09788490"},{"name":"Skrunda Municipality","isoCode":"093","countryCode":"LV","latitude":"56.66434580","longitude":"22.00457290"},{"name":"Smiltene Municipality","isoCode":"094","countryCode":"LV","latitude":"57.42303320","longitude":"25.90027800"},{"name":"Stopiņi Municipality","isoCode":"095","countryCode":"LV","latitude":"56.93644900","longitude":"24.28729490"},{"name":"Strenči Municipality","isoCode":"096","countryCode":"LV","latitude":"57.62254710","longitude":"25.80480860"},{"name":"Talsi Municipality","isoCode":"097","countryCode":"LV","latitude":"57.34152080","longitude":"22.57131250"},{"name":"Tērvete Municipality","isoCode":"098","countryCode":"LV","latitude":"56.41192010","longitude":"23.31883320"},{"name":"Tukums Municipality","isoCode":"099","countryCode":"LV","latitude":"56.96728680","longitude":"23.15243790"},{"name":"Vaiņode Municipality","isoCode":"100","countryCode":"LV","latitude":"56.41542710","longitude":"21.85139840"},{"name":"Valka Municipality","isoCode":"101","countryCode":"LV","latitude":"57.77439000","longitude":"26.01700500"},{"name":"Varakļāni Municipality","isoCode":"102","countryCode":"LV","latitude":"56.66880060","longitude":"26.56364140"},{"name":"Vārkava Municipality","isoCode":"103","countryCode":"LV","latitude":"56.24657440","longitude":"26.56643710"},{"name":"Vecpiebalga Municipality","isoCode":"104","countryCode":"LV","latitude":"57.06033560","longitude":"25.81615920"},{"name":"Vecumnieki Municipality","isoCode":"105","countryCode":"LV","latitude":"56.60623370","longitude":"24.52218910"},{"name":"Ventspils Municipality","isoCode":"106","countryCode":"LV","latitude":"57.28336820","longitude":"21.85875580"},{"name":"Viesīte Municipality","isoCode":"107","countryCode":"LV","latitude":"56.31130850","longitude":"25.50704640"},{"name":"Viļaka Municipality","isoCode":"108","countryCode":"LV","latitude":"57.17222630","longitude":"27.66731880"},{"name":"Viļāni Municipality","isoCode":"109","countryCode":"LV","latitude":"56.54561710","longitude":"26.91679270"},{"name":"Zilupe Municipality","isoCode":"110","countryCode":"LV","latitude":"56.30189850","longitude":"28.13395900"},{"name":"Daugavpils","isoCode":"DGV","countryCode":"LV","latitude":"55.87473600","longitude":"26.53617900"},{"name":"Jelgava","isoCode":"JEL","countryCode":"LV","latitude":"56.65110910","longitude":"23.72135410"},{"name":"Jēkabpils","isoCode":"JKB","countryCode":"LV","latitude":"56.50145500","longitude":"25.87829900"},{"name":"Jūrmala","isoCode":"JUR","countryCode":"LV","latitude":"56.94707900","longitude":"23.61684850"},{"name":"Liepāja","isoCode":"LPX","countryCode":"LV","latitude":"56.50466780","longitude":"21.01080600"},{"name":"Rēzekne","isoCode":"REZ","countryCode":"LV","latitude":"56.50992230","longitude":"27.33313570"},{"name":"Riga","isoCode":"RIX","countryCode":"LV","latitude":"56.94964870","longitude":"24.10518650"},{"name":"Ventspils","isoCode":"VEN","countryCode":"LV","latitude":"57.39372160","longitude":"21.56470660"},{"name":"Valmiera","isoCode":"VMR","countryCode":"LV","latitude":"57.53846590","longitude":"25.42636180"},{"name":"Benghazi","isoCode":"BA","countryCode":"LY","latitude":"32.11942420","longitude":"20.08679090"},{"name":"Derna District","isoCode":"DR","countryCode":"LY","latitude":"32.75561300","longitude":"22.63774320"},{"name":"Ghat District","isoCode":"GT","countryCode":"LY","latitude":"24.96403710","longitude":"10.17592850"},{"name":"Jabal al Akhdar","isoCode":"JA","countryCode":"LY","latitude":"23.18560810","longitude":"57.37138790"},{"name":"Jabal al Gharbi District","isoCode":"JG","countryCode":"LY","latitude":"30.26380320","longitude":"12.80547530"},{"name":"Jafara","isoCode":"JI","countryCode":"LY","latitude":"32.45259040","longitude":"12.94355360"},{"name":"Jufra","isoCode":"JU","countryCode":"LY","latitude":"27.98351350","longitude":"16.91225100"},{"name":"Kufra District","isoCode":"KF","countryCode":"LY","latitude":"23.31123890","longitude":"21.85685860"},{"name":"Murqub","isoCode":"MB","countryCode":"LY","latitude":"32.45996770","longitude":"14.10013260"},{"name":"Misrata District","isoCode":"MI","countryCode":"LY","latitude":"32.32558840","longitude":"15.09925560"},{"name":"Marj District","isoCode":"MJ","countryCode":"LY","latitude":"32.05503630","longitude":"21.18911510"},{"name":"Murzuq District","isoCode":"MQ","countryCode":"LY","latitude":"25.91822620","longitude":"13.92600010"},{"name":"Nalut District","isoCode":"NL","countryCode":"LY","latitude":"31.87423480","longitude":"10.97504840"},{"name":"Nuqat al Khams","isoCode":"NQ","countryCode":"LY","latitude":"32.69149090","longitude":"11.88917210"},{"name":"Sabha District","isoCode":"SB","countryCode":"LY","latitude":"27.03654060","longitude":"14.42902360"},{"name":"Sirte District","isoCode":"SR","countryCode":"LY","latitude":"31.18968900","longitude":"16.57019270"},{"name":"Tripoli District","isoCode":"TB","countryCode":"LY","latitude":"32.64080210","longitude":"13.26634790"},{"name":"Al Wahat District","isoCode":"WA","countryCode":"LY","latitude":"29.04668080","longitude":"21.85685860"},{"name":"Wadi al Hayaa District","isoCode":"WD","countryCode":"LY","latitude":"26.42259260","longitude":"12.62162110"},{"name":"Wadi al Shatii District","isoCode":"WS","countryCode":"LY","latitude":"27.73514680","longitude":"12.43805810"},{"name":"Zawiya District","isoCode":"ZA","countryCode":"LY","latitude":"32.76302820","longitude":"12.73649620"},{"name":"Tanger-Tétouan-Al Hoceïma","isoCode":"01","countryCode":"MA","latitude":"35.26295580","longitude":"-5.56172790"},{"name":"L\'Oriental","isoCode":"02","countryCode":"MA","latitude":"37.06968300","longitude":"-94.51227700"},{"name":"Fès-Meknès","isoCode":"03","countryCode":"MA","latitude":"34.06252900","longitude":"-4.72775280"},{"name":"Rabat-Salé-Kénitra","isoCode":"04","countryCode":"MA","latitude":"34.07686400","longitude":"-7.34544760"},{"name":"Béni Mellal-Khénifra","isoCode":"05","countryCode":"MA","latitude":"32.57191840","longitude":"-6.06791940"},{"name":"Casablanca-Settat","isoCode":"06","countryCode":"MA","latitude":"33.21608720","longitude":"-7.43813550"},{"name":"Marrakesh-Safi","isoCode":"07","countryCode":"MA","latitude":"31.73308330","longitude":"-8.13385580"},{"name":"Drâa-Tafilalet","isoCode":"08","countryCode":"MA","latitude":"31.14995380","longitude":"-5.39395510"},{"name":"Souss-Massa","isoCode":"09","countryCode":"MA","latitude":"30.27506110","longitude":"-8.13385580"},{"name":"Guelmim-Oued Noun (EH-partial)","isoCode":"10","countryCode":"MA","latitude":"28.48442810","longitude":"-10.08072980"},{"name":"Laâyoune-Sakia El Hamra (EH-partial)","isoCode":"11","countryCode":"MA","latitude":"27.86831940","longitude":"-11.98046130"},{"name":"Dakhla-Oued Ed-Dahab (EH)","isoCode":"12","countryCode":"MA","latitude":"22.73378920","longitude":"-14.28611160"},{"name":"Agadir-Ida-Ou-Tanane","isoCode":"AGD","countryCode":"MA","latitude":"30.64620910","longitude":"-9.83390610"},{"name":"Aousserd (EH)","isoCode":"AOU","countryCode":"MA","latitude":"22.55215380","longitude":"-14.32973530"},{"name":"Assa-Zag (EH-partial)","isoCode":"ASZ","countryCode":"MA","latitude":"28.14023950","longitude":"-9.72326730"},{"name":"Azilal","isoCode":"AZI","countryCode":"MA","latitude":"32.00426200","longitude":"-6.57833870"},{"name":"Béni Mellal","isoCode":"BEM","countryCode":"MA","latitude":"32.34244300","longitude":"-6.37579900"},{"name":"Berkane","isoCode":"BER","countryCode":"MA","latitude":"34.88408760","longitude":"-2.34188700"},{"name":"Benslimane","isoCode":"BES","countryCode":"MA","latitude":"33.61896980","longitude":"-7.13055360"},{"name":"Boujdour (EH)","isoCode":"BOD","countryCode":"MA","latitude":"26.12524930","longitude":"-14.48473470"},{"name":"Boulemane","isoCode":"BOM","countryCode":"MA","latitude":"33.36251590","longitude":"-4.73033970"},{"name":"Berrechid","isoCode":"BRR","countryCode":"MA","latitude":"33.26025230","longitude":"-7.59848370"},{"name":"Casablanca","isoCode":"CAS","countryCode":"MA","latitude":"33.57226780","longitude":"-7.65703260"},{"name":"Chefchaouen","isoCode":"CHE","countryCode":"MA","latitude":"35.01817200","longitude":"-5.14320680"},{"name":"Chichaoua","isoCode":"CHI","countryCode":"MA","latitude":"31.53835810","longitude":"-8.76463880"},{"name":"Chtouka-Ait Baha","isoCode":"CHT","countryCode":"MA","latitude":"30.10724220","longitude":"-9.27855830"},{"name":"Driouch","isoCode":"DRI","countryCode":"MA","latitude":"34.97603200","longitude":"-3.39644930"},{"name":"Errachidia","isoCode":"ERR","countryCode":"MA","latitude":"31.90512750","longitude":"-4.72775280"},{"name":"Essaouira","isoCode":"ESI","countryCode":"MA","latitude":"31.50849260","longitude":"-9.75950410"},{"name":"Es-Semara (EH-partial)","isoCode":"ESM","countryCode":"MA","latitude":"26.74185600","longitude":"-11.67836710"},{"name":"Fahs-Anjra","isoCode":"FAH","countryCode":"MA","latitude":"35.76019920","longitude":"-5.66683060"},{"name":"Fès","isoCode":"FES","countryCode":"MA","latitude":"34.02395790","longitude":"-5.03675990"},{"name":"Figuig","isoCode":"FIG","countryCode":"MA","latitude":"32.10926130","longitude":"-1.22980600"},{"name":"Fquih Ben Salah","isoCode":"FQH","countryCode":"MA","latitude":"32.50016800","longitude":"-6.71007170"},{"name":"Guelmim","isoCode":"GUE","countryCode":"MA","latitude":"28.98836590","longitude":"-10.05274980"},{"name":"Guercif","isoCode":"GUF","countryCode":"MA","latitude":"34.23450360","longitude":"-3.38130050"},{"name":"El Hajeb","isoCode":"HAJ","countryCode":"MA","latitude":"33.68573500","longitude":"-5.36778440"},{"name":"Al Haouz","isoCode":"HAO","countryCode":"MA","latitude":"31.29567290","longitude":"-7.87216000"},{"name":"Al Hoceïma","isoCode":"HOC","countryCode":"MA","latitude":"35.24455890","longitude":"-3.93174680"},{"name":"Ifrane","isoCode":"IFR","countryCode":"MA","latitude":"33.52280620","longitude":"-5.11095520"},{"name":"Inezgane-Ait Melloul","isoCode":"INE","countryCode":"MA","latitude":"30.35090980","longitude":"-9.38951100"},{"name":"El Jadida","isoCode":"JDI","countryCode":"MA","latitude":"33.23163260","longitude":"-8.50071160"},{"name":"Jerada","isoCode":"JRA","countryCode":"MA","latitude":"34.30617910","longitude":"-2.17941360"},{"name":"Kénitra","isoCode":"KEN","countryCode":"MA","latitude":"34.25405030","longitude":"-6.58901660"},{"name":"El Kelâa des Sraghna","isoCode":"KES","countryCode":"MA","latitude":"32.05227670","longitude":"-7.35165580"},{"name":"Khémisset","isoCode":"KHE","countryCode":"MA","latitude":"33.81537040","longitude":"-6.05733020"},{"name":"Khénifra","isoCode":"KHN","countryCode":"MA","latitude":"32.93404710","longitude":"-5.66157100"},{"name":"Khouribga","isoCode":"KHO","countryCode":"MA","latitude":"32.88602300","longitude":"-6.92086550"},{"name":"Laâyoune (EH)","isoCode":"LAA","countryCode":"MA","latitude":"27.15003840","longitude":"-13.19907580"},{"name":"Larache","isoCode":"LAR","countryCode":"MA","latitude":"35.17442710","longitude":"-6.14739640"},{"name":"Marrakech","isoCode":"MAR","countryCode":"MA","latitude":"31.63460230","longitude":"-8.07789320"},{"name":"M’diq-Fnideq","isoCode":"MDF","countryCode":"MA","latitude":"35.77330190","longitude":"-5.51433000"},{"name":"Médiouna","isoCode":"MED","countryCode":"MA","latitude":"33.45409390","longitude":"-7.51660200"},{"name":"Meknès","isoCode":"MEK","countryCode":"MA","latitude":"33.88100000","longitude":"-5.57303970"},{"name":"Midelt","isoCode":"MID","countryCode":"MA","latitude":"32.68550790","longitude":"-4.75017090"},{"name":"Mohammadia","isoCode":"MOH","countryCode":"MA","latitude":"33.68737490","longitude":"-7.42391420"},{"name":"Moulay Yacoub","isoCode":"MOU","countryCode":"MA","latitude":"34.08744790","longitude":"-5.17840190"},{"name":"Nador","isoCode":"NAD","countryCode":"MA","latitude":"34.91719260","longitude":"-2.85771050"},{"name":"Nouaceur","isoCode":"NOU","countryCode":"MA","latitude":"33.36703930","longitude":"-7.57325370"},{"name":"Ouarzazate","isoCode":"OUA","countryCode":"MA","latitude":"30.93354360","longitude":"-6.93701600"},{"name":"Oued Ed-Dahab (EH)","isoCode":"OUD","countryCode":"MA","latitude":"22.73378920","longitude":"-14.28611160"},{"name":"Oujda-Angad","isoCode":"OUJ","countryCode":"MA","latitude":"34.68375040","longitude":"-2.29932390"},{"name":"Ouezzane","isoCode":"OUZ","countryCode":"MA","latitude":"34.80634500","longitude":"-5.59145050"},{"name":"Rabat","isoCode":"RAB","countryCode":"MA","latitude":"33.96919900","longitude":"-6.92730290"},{"name":"Rehamna","isoCode":"REH","countryCode":"MA","latitude":"32.20329050","longitude":"-8.56896710"},{"name":"Safi","isoCode":"SAF","countryCode":"MA","latitude":"32.29898720","longitude":"-9.10134980"},{"name":"Salé","isoCode":"SAL","countryCode":"MA","latitude":"34.03775700","longitude":"-6.84270730"},{"name":"Sefrou","isoCode":"SEF","countryCode":"MA","latitude":"33.83052440","longitude":"-4.83531540"},{"name":"Settat","isoCode":"SET","countryCode":"MA","latitude":"32.99242420","longitude":"-7.62226650"},{"name":"Sidi Bennour","isoCode":"SIB","countryCode":"MA","latitude":"32.64926020","longitude":"-8.44714530"},{"name":"Sidi Ifni","isoCode":"SIF","countryCode":"MA","latitude":"29.36657970","longitude":"-10.21084850"},{"name":"Sidi Kacem","isoCode":"SIK","countryCode":"MA","latitude":"34.22601720","longitude":"-5.71291640"},{"name":"Sidi Slimane","isoCode":"SIL","countryCode":"MA","latitude":"34.27378280","longitude":"-5.98059720"},{"name":"Skhirate-Témara","isoCode":"SKH","countryCode":"MA","latitude":"33.76224250","longitude":"-7.04190520"},{"name":"Tarfaya (EH-partial)","isoCode":"TAF","countryCode":"MA","latitude":"27.93777010","longitude":"-12.92940630"},{"name":"Taourirt","isoCode":"TAI","countryCode":"MA","latitude":"34.21259800","longitude":"-2.69838680"},{"name":"Taounate","isoCode":"TAO","countryCode":"MA","latitude":"34.53691700","longitude":"-4.63986930"},{"name":"Taroudannt","isoCode":"TAR","countryCode":"MA","latitude":"30.47271260","longitude":"-8.87487650"},{"name":"Tata","isoCode":"TAT","countryCode":"MA","latitude":"29.75087700","longitude":"-7.97563430"},{"name":"Taza","isoCode":"TAZ","countryCode":"MA","latitude":"34.27889530","longitude":"-3.58126920"},{"name":"Tétouan","isoCode":"TET","countryCode":"MA","latitude":"35.58889950","longitude":"-5.36255160"},{"name":"Tinghir","isoCode":"TIN","countryCode":"MA","latitude":"31.48507940","longitude":"-6.20192980"},{"name":"Tiznit","isoCode":"TIZ","countryCode":"MA","latitude":"29.69339200","longitude":"-9.73215700"},{"name":"Tanger-Assilah","isoCode":"TNG","countryCode":"MA","latitude":"35.76325390","longitude":"-5.90450980"},{"name":"Tan-Tan (EH-partial)","isoCode":"TNT","countryCode":"MA","latitude":"28.03012000","longitude":"-11.16173560"},{"name":"Youssoufia","isoCode":"YUS","countryCode":"MA","latitude":"32.02006790","longitude":"-8.86926480"},{"name":"Zagora","isoCode":"ZAG","countryCode":"MA","latitude":"30.57860930","longitude":"-5.89871390"},{"name":"La Colle","isoCode":"CL","countryCode":"MC","latitude":"43.73274650","longitude":"7.41372760"},{"name":"La Condamine","isoCode":"CO","countryCode":"MC","latitude":"43.73506650","longitude":"7.41990600"},{"name":"Moneghetti","isoCode":"MG","countryCode":"MC","latitude":"43.73649270","longitude":"7.41533830"},{"name":"Anenii Noi District","isoCode":"AN","countryCode":"MD","latitude":"46.87956630","longitude":"29.23121750"},{"name":"Bălți Municipality","isoCode":"BA","countryCode":"MD","latitude":"47.75399470","longitude":"27.91841480"},{"name":"Bender Municipality","isoCode":"BD","countryCode":"MD","latitude":"46.82275510","longitude":"29.46201010"},{"name":"Briceni District","isoCode":"BR","countryCode":"MD","latitude":"48.36320220","longitude":"27.07503980"},{"name":"Basarabeasca District","isoCode":"BS","countryCode":"MD","latitude":"46.42370600","longitude":"28.89354920"},{"name":"Cahul District","isoCode":"CA","countryCode":"MD","latitude":"45.89394040","longitude":"28.18902750"},{"name":"Călărași District","isoCode":"CL","countryCode":"MD","latitude":"47.28694600","longitude":"28.27453100"},{"name":"Cimișlia District","isoCode":"CM","countryCode":"MD","latitude":"46.52508510","longitude":"28.77218350"},{"name":"Criuleni District","isoCode":"CR","countryCode":"MD","latitude":"47.21361140","longitude":"29.15575190"},{"name":"Căușeni District","isoCode":"CS","countryCode":"MD","latitude":"46.65547150","longitude":"29.40912220"},{"name":"Cantemir District","isoCode":"CT","countryCode":"MD","latitude":"46.27717420","longitude":"28.20096530"},{"name":"Chișinău Municipality","isoCode":"CU","countryCode":"MD","latitude":"47.01045290","longitude":"28.86381020"},{"name":"Dondușeni District","isoCode":"DO","countryCode":"MD","latitude":"48.23383050","longitude":"27.59980870"},{"name":"Drochia District","isoCode":"DR","countryCode":"MD","latitude":"48.07977880","longitude":"27.86041140"},{"name":"Dubăsari District","isoCode":"DU","countryCode":"MD","latitude":"47.26439420","longitude":"29.15503480"},{"name":"Edineț District","isoCode":"ED","countryCode":"MD","latitude":"48.16789910","longitude":"27.29361430"},{"name":"Fălești District","isoCode":"FA","countryCode":"MD","latitude":"47.56477250","longitude":"27.72655930"},{"name":"Florești District","isoCode":"FL","countryCode":"MD","latitude":"47.86678490","longitude":"28.33918640"},{"name":"Gagauzia","isoCode":"GA","countryCode":"MD","latitude":"46.09794350","longitude":"28.63846450"},{"name":"Glodeni District","isoCode":"GL","countryCode":"MD","latitude":"47.77901560","longitude":"27.51680100"},{"name":"Hîncești District","isoCode":"HI","countryCode":"MD","latitude":"46.82811470","longitude":"28.58508890"},{"name":"Ialoveni District","isoCode":"IA","countryCode":"MD","latitude":"46.86308600","longitude":"28.82342180"},{"name":"Nisporeni District","isoCode":"NI","countryCode":"MD","latitude":"47.07513490","longitude":"28.17681550"},{"name":"Ocnița District","isoCode":"OC","countryCode":"MD","latitude":"48.41104350","longitude":"27.47680920"},{"name":"Orhei District","isoCode":"OR","countryCode":"MD","latitude":"47.38604000","longitude":"28.83030820"},{"name":"Rezina District","isoCode":"RE","countryCode":"MD","latitude":"47.71804470","longitude":"28.88710240"},{"name":"Rîșcani District","isoCode":"RI","countryCode":"MD","latitude":"47.90701530","longitude":"27.53749960"},{"name":"Șoldănești District","isoCode":"SD","countryCode":"MD","latitude":"47.81473890","longitude":"28.78895860"},{"name":"Sîngerei District","isoCode":"SI","countryCode":"MD","latitude":"47.63891340","longitude":"28.13718160"},{"name":"Transnistria autonomous territorial unit","isoCode":"SN","countryCode":"MD","latitude":"47.21529720","longitude":"29.46380540"},{"name":"Soroca District","isoCode":"SO","countryCode":"MD","latitude":"48.15497430","longitude":"28.28707830"},{"name":"Strășeni District","isoCode":"ST","countryCode":"MD","latitude":"47.14502670","longitude":"28.61367360"},{"name":"Ștefan Vodă District","isoCode":"SV","countryCode":"MD","latitude":"46.55404880","longitude":"29.70224200"},{"name":"Taraclia District","isoCode":"TA","countryCode":"MD","latitude":"45.89865100","longitude":"28.66716440"},{"name":"Telenești District","isoCode":"TE","countryCode":"MD","latitude":"47.49839620","longitude":"28.36760190"},{"name":"Ungheni District","isoCode":"UN","countryCode":"MD","latitude":"47.23057670","longitude":"27.78926610"},{"name":"Andrijevica Municipality","isoCode":"01","countryCode":"ME","latitude":"42.73624770","longitude":"19.78595560"},{"name":"Bar Municipality","isoCode":"02","countryCode":"ME","latitude":"42.12781190","longitude":"19.14043800"},{"name":"Berane Municipality","isoCode":"03","countryCode":"ME","latitude":"42.82572890","longitude":"19.90205090"},{"name":"Bijelo Polje Municipality","isoCode":"04","countryCode":"ME","latitude":"43.08465260","longitude":"19.71154720"},{"name":"Budva Municipality","isoCode":"05","countryCode":"ME","latitude":"42.31407200","longitude":"18.83138320"},{"name":"Old Royal Capital Cetinje","isoCode":"06","countryCode":"ME","latitude":"42.39309590","longitude":"18.91159640"},{"name":"Danilovgrad Municipality","isoCode":"07","countryCode":"ME","latitude":"42.58357000","longitude":"19.14043800"},{"name":"Kolašin Municipality","isoCode":"09","countryCode":"ME","latitude":"42.76019160","longitude":"19.42591140"},{"name":"Kotor Municipality","isoCode":"10","countryCode":"ME","latitude":"42.57402610","longitude":"18.64131450"},{"name":"Mojkovac Municipality","isoCode":"11","countryCode":"ME","latitude":"42.96880180","longitude":"19.52110630"},{"name":"Nikšić Municipality","isoCode":"12","countryCode":"ME","latitude":"42.79971840","longitude":"18.76009630"},{"name":"Plav Municipality","isoCode":"13","countryCode":"ME","latitude":"42.60013370","longitude":"19.94075410"},{"name":"Pljevlja Municipality","isoCode":"14","countryCode":"ME","latitude":"43.27233830","longitude":"19.28315310"},{"name":"Plužine Municipality","isoCode":"15","countryCode":"ME","latitude":"43.15933840","longitude":"18.85514840"},{"name":"Podgorica Municipality","isoCode":"16","countryCode":"ME","latitude":"42.36938340","longitude":"19.28315310"},{"name":"Rožaje Municipality","isoCode":"17","countryCode":"ME","latitude":"42.84083890","longitude":"20.16706280"},{"name":"Šavnik Municipality","isoCode":"18","countryCode":"ME","latitude":"42.96037560","longitude":"19.14043800"},{"name":"Tivat Municipality","isoCode":"19","countryCode":"ME","latitude":"42.42348000","longitude":"18.71851840"},{"name":"Ulcinj Municipality","isoCode":"20","countryCode":"ME","latitude":"41.96527950","longitude":"19.30694320"},{"name":"Žabljak Municipality","isoCode":"21","countryCode":"ME","latitude":"43.15551520","longitude":"19.12260180"},{"name":"Gusinje Municipality","isoCode":"22","countryCode":"ME","latitude":"42.55634550","longitude":"19.83060510"},{"name":"Petnjica Municipality","isoCode":"23","countryCode":"ME","latitude":"42.93534800","longitude":"20.02114490"},{"name":"Toamasina Province","isoCode":"A","countryCode":"MG","latitude":"-18.14428110","longitude":"49.39578360"},{"name":"Antsiranana Province","isoCode":"D","countryCode":"MG","latitude":"-13.77153900","longitude":"49.52799960"},{"name":"Fianarantsoa Province","isoCode":"F","countryCode":"MG","latitude":"-22.35362400","longitude":"46.82528380"},{"name":"Mahajanga Province","isoCode":"M","countryCode":"MG","latitude":"-16.52388300","longitude":"46.51626200"},{"name":"Antananarivo Province","isoCode":"T","countryCode":"MG","latitude":"-18.70514740","longitude":"46.82528380"},{"name":"Toliara Province","isoCode":"U","countryCode":"MG","latitude":"-23.35161910","longitude":"43.68549360"},{"name":"Ralik Chain","isoCode":"L","countryCode":"MH","latitude":"8.13614600","longitude":"164.88679560"},{"name":"Ratak Chain","isoCode":"T","countryCode":"MH","latitude":"10.27632760","longitude":"170.55009370"},{"name":"Aerodrom Municipality","isoCode":"01","countryCode":"MK","latitude":"41.94643630","longitude":"21.49317130"},{"name":"Aračinovo Municipality","isoCode":"02","countryCode":"MK","latitude":"42.02473810","longitude":"21.57664070"},{"name":"Berovo Municipality","isoCode":"03","countryCode":"MK","latitude":"41.66619290","longitude":"22.76288300"},{"name":"Bitola Municipality","isoCode":"04","countryCode":"MK","latitude":"41.03633020","longitude":"21.33219740"},{"name":"Bogdanci Municipality","isoCode":"05","countryCode":"MK","latitude":"41.18696160","longitude":"22.59602680"},{"name":"Bogovinje Municipality","isoCode":"06","countryCode":"MK","latitude":"41.92363710","longitude":"20.91638870"},{"name":"Bosilovo Municipality","isoCode":"07","countryCode":"MK","latitude":"41.49048640","longitude":"22.78671740"},{"name":"Brvenica Municipality","isoCode":"08","countryCode":"MK","latitude":"41.96814820","longitude":"20.98195860"},{"name":"Butel Municipality","isoCode":"09","countryCode":"MK","latitude":"42.08950680","longitude":"21.46336100"},{"name":"Valandovo Municipality","isoCode":"10","countryCode":"MK","latitude":"41.32119090","longitude":"22.50066930"},{"name":"Vasilevo Municipality","isoCode":"11","countryCode":"MK","latitude":"41.47416990","longitude":"22.64221280"},{"name":"Vevčani Municipality","isoCode":"12","countryCode":"MK","latitude":"41.24075430","longitude":"20.59156490"},{"name":"Veles Municipality","isoCode":"13","countryCode":"MK","latitude":"41.72744260","longitude":"21.71376940"},{"name":"Vinica Municipality","isoCode":"14","countryCode":"MK","latitude":"41.85710200","longitude":"22.57218810"},{"name":"Vraneštica Municipality","isoCode":"15","countryCode":"MK","latitude":"41.48290870","longitude":"21.05796320"},{"name":"Vrapčište Municipality","isoCode":"16","countryCode":"MK","latitude":"41.87911600","longitude":"20.83145000"},{"name":"Gazi Baba Municipality","isoCode":"17","countryCode":"MK","latitude":"42.01629610","longitude":"21.49913340"},{"name":"Gevgelija Municipality","isoCode":"18","countryCode":"MK","latitude":"41.21186060","longitude":"22.38146240"},{"name":"Gostivar Municipality","isoCode":"19","countryCode":"MK","latitude":"41.80255410","longitude":"20.90893780"},{"name":"Gradsko Municipality","isoCode":"20","countryCode":"MK","latitude":"41.59916080","longitude":"21.88070640"},{"name":"Debarca Municipality","isoCode":"22","countryCode":"MK","latitude":"41.35840770","longitude":"20.85529190"},{"name":"Delčevo Municipality","isoCode":"23","countryCode":"MK","latitude":"41.96843870","longitude":"22.76288300"},{"name":"Demir Kapija Municipality","isoCode":"24","countryCode":"MK","latitude":"41.37955380","longitude":"22.21455710"},{"name":"Demir Hisar Municipality","isoCode":"25","countryCode":"MK","latitude":"41.22708300","longitude":"21.14142260"},{"name":"Dojran Municipality","isoCode":"26","countryCode":"MK","latitude":"41.24366720","longitude":"22.69137640"},{"name":"Dolneni Municipality","isoCode":"27","countryCode":"MK","latitude":"41.46409350","longitude":"21.40374070"},{"name":"Drugovo Municipality","isoCode":"28","countryCode":"MK","latitude":"41.44081530","longitude":"20.92682010"},{"name":"Gjorče Petrov Municipality","isoCode":"29","countryCode":"MK","latitude":"42.06063740","longitude":"21.32027360"},{"name":"Želino Municipality","isoCode":"30","countryCode":"MK","latitude":"41.90065310","longitude":"21.11757670"},{"name":"Zajas Municipality","isoCode":"31","countryCode":"MK","latitude":"41.60303280","longitude":"20.87913430"},{"name":"Zelenikovo Municipality","isoCode":"32","countryCode":"MK","latitude":"41.87338120","longitude":"21.60272500"},{"name":"Zrnovci Municipality","isoCode":"33","countryCode":"MK","latitude":"41.82282210","longitude":"22.41722560"},{"name":"Ilinden Municipality","isoCode":"34","countryCode":"MK","latitude":"41.99574430","longitude":"21.56769750"},{"name":"Jegunovce Municipality","isoCode":"35","countryCode":"MK","latitude":"42.07407200","longitude":"21.12204780"},{"name":"Kavadarci Municipality","isoCode":"36","countryCode":"MK","latitude":"41.28900680","longitude":"21.99994350"},{"name":"Karbinci","isoCode":"37","countryCode":"MK","latitude":"41.81801590","longitude":"22.23247580"},{"name":"Karpoš Municipality","isoCode":"38","countryCode":"MK","latitude":"41.97096610","longitude":"21.39181680"},{"name":"Kisela Voda Municipality","isoCode":"39","countryCode":"MK","latitude":"41.92748000","longitude":"21.49317130"},{"name":"Kičevo Municipality","isoCode":"40","countryCode":"MK","latitude":"41.51291120","longitude":"20.95250650"},{"name":"Konče Municipality","isoCode":"41","countryCode":"MK","latitude":"41.51710110","longitude":"22.38146240"},{"name":"Kočani Municipality","isoCode":"42","countryCode":"MK","latitude":"41.98583740","longitude":"22.40530460"},{"name":"Kratovo Municipality","isoCode":"43","countryCode":"MK","latitude":"42.05371410","longitude":"22.07148350"},{"name":"Kriva Palanka Municipality","isoCode":"44","countryCode":"MK","latitude":"42.20584540","longitude":"22.33079650"},{"name":"Krivogaštani Municipality","isoCode":"45","countryCode":"MK","latitude":"41.30823060","longitude":"21.36796890"},{"name":"Kruševo Municipality","isoCode":"46","countryCode":"MK","latitude":"41.37693310","longitude":"21.26065540"},{"name":"Kumanovo Municipality","isoCode":"47","countryCode":"MK","latitude":"42.07326130","longitude":"21.78531430"},{"name":"Lipkovo Municipality","isoCode":"48","countryCode":"MK","latitude":"42.20066260","longitude":"21.61837550"},{"name":"Lozovo Municipality","isoCode":"49","countryCode":"MK","latitude":"41.78181390","longitude":"21.90008270"},{"name":"Mavrovo and Rostuša Municipality","isoCode":"50","countryCode":"MK","latitude":"41.60924270","longitude":"20.60124880"},{"name":"Makedonska Kamenica Municipality","isoCode":"51","countryCode":"MK","latitude":"42.06946040","longitude":"22.54834900"},{"name":"Makedonski Brod Municipality","isoCode":"52","countryCode":"MK","latitude":"41.51330880","longitude":"21.21743290"},{"name":"Mogila Municipality","isoCode":"53","countryCode":"MK","latitude":"41.14796450","longitude":"21.45143690"},{"name":"Negotino Municipality","isoCode":"54","countryCode":"MK","latitude":"41.49899850","longitude":"22.09532970"},{"name":"Novaci Municipality","isoCode":"55","countryCode":"MK","latitude":"41.04426610","longitude":"21.45888940"},{"name":"Novo Selo Municipality","isoCode":"56","countryCode":"MK","latitude":"41.43255800","longitude":"22.88204890"},{"name":"Oslomej Municipality","isoCode":"57","countryCode":"MK","latitude":"41.57583910","longitude":"21.02219600"},{"name":"Ohrid Municipality","isoCode":"58","countryCode":"MK","latitude":"41.06820880","longitude":"20.75992660"},{"name":"Petrovec Municipality","isoCode":"59","countryCode":"MK","latitude":"41.90298970","longitude":"21.68992100"},{"name":"Pehčevo Municipality","isoCode":"60","countryCode":"MK","latitude":"41.77371320","longitude":"22.88204890"},{"name":"Plasnica Municipality","isoCode":"61","countryCode":"MK","latitude":"41.45463490","longitude":"21.10565390"},{"name":"Prilep Municipality","isoCode":"62","countryCode":"MK","latitude":"41.26931420","longitude":"21.71376940"},{"name":"Probištip Municipality","isoCode":"63","countryCode":"MK","latitude":"41.95891460","longitude":"22.16686700"},{"name":"Radoviš Municipality","isoCode":"64","countryCode":"MK","latitude":"41.64955310","longitude":"22.47682870"},{"name":"Rankovce Municipality","isoCode":"65","countryCode":"MK","latitude":"42.18081410","longitude":"22.09532970"},{"name":"Resen Municipality","isoCode":"66","countryCode":"MK","latitude":"40.93680930","longitude":"21.04604070"},{"name":"Rosoman Municipality","isoCode":"67","countryCode":"MK","latitude":"41.48480060","longitude":"21.88070640"},{"name":"Saraj Municipality","isoCode":"68","countryCode":"MK","latitude":"41.98694960","longitude":"21.26065540"},{"name":"Sveti Nikole Municipality","isoCode":"69","countryCode":"MK","latitude":"41.89803120","longitude":"21.99994350"},{"name":"Sopište Municipality","isoCode":"70","countryCode":"MK","latitude":"41.86384920","longitude":"21.30834990"},{"name":"Staro Nagoričane Municipality","isoCode":"71","countryCode":"MK","latitude":"42.21916920","longitude":"21.90455410"},{"name":"Struga Municipality","isoCode":"72","countryCode":"MK","latitude":"41.31737440","longitude":"20.66456830"},{"name":"Strumica Municipality","isoCode":"73","countryCode":"MK","latitude":"41.43780040","longitude":"22.64274280"},{"name":"Studeničani Municipality","isoCode":"74","countryCode":"MK","latitude":"41.92256390","longitude":"21.53639650"},{"name":"Tearce Municipality","isoCode":"75","countryCode":"MK","latitude":"42.07775110","longitude":"21.05349230"},{"name":"Tetovo Municipality","isoCode":"76","countryCode":"MK","latitude":"42.02748600","longitude":"20.95066360"},{"name":"Centar Municipality","isoCode":"77","countryCode":"MK","latitude":"41.96989340","longitude":"21.42162670"},{"name":"Centar Župa Municipality","isoCode":"78","countryCode":"MK","latitude":"41.46522590","longitude":"20.59305480"},{"name":"Čair Municipality","isoCode":"79","countryCode":"MK","latitude":"41.99303550","longitude":"21.43653180"},{"name":"Čaška Municipality","isoCode":"80","countryCode":"MK","latitude":"41.64743800","longitude":"21.69141150"},{"name":"Češinovo-Obleševo Municipality","isoCode":"81","countryCode":"MK","latitude":"41.86393160","longitude":"22.26224600"},{"name":"Čučer-Sandevo Municipality","isoCode":"82","countryCode":"MK","latitude":"42.14839460","longitude":"21.40374070"},{"name":"Štip Municipality","isoCode":"83","countryCode":"MK","latitude":"41.70792970","longitude":"22.19071220"},{"name":"Šuto Orizari Municipality","isoCode":"84","countryCode":"MK","latitude":"42.02904160","longitude":"21.40970270"},{"name":"Greater Skopje","isoCode":"85","countryCode":"MK","latitude":"41.99812940","longitude":"21.42543550"},{"name":"Kayes Region","isoCode":"1","countryCode":"ML","latitude":"14.08183080","longitude":"-9.90181310"},{"name":"Taoudénit Region","isoCode":"10","countryCode":"ML","latitude":"22.67641320","longitude":"-3.97891430"},{"name":"Koulikoro Region","isoCode":"2","countryCode":"ML","latitude":"13.80180740","longitude":"-7.43813550"},{"name":"Sikasso Region","isoCode":"3","countryCode":"ML","latitude":"10.89051860","longitude":"-7.43813550"},{"name":"Ségou Region","isoCode":"4","countryCode":"ML","latitude":"13.83944560","longitude":"-6.06791940"},{"name":"Mopti Region","isoCode":"5","countryCode":"ML","latitude":"14.63380390","longitude":"-3.41955270"},{"name":"Tombouctou Region","isoCode":"6","countryCode":"ML","latitude":"21.05267060","longitude":"-3.74350900"},{"name":"Gao Region","isoCode":"7","countryCode":"ML","latitude":"16.90663320","longitude":"1.52086240"},{"name":"Kidal Region","isoCode":"8","countryCode":"ML","latitude":"18.79868320","longitude":"1.83183340"},{"name":"Ménaka Region","isoCode":"9","countryCode":"ML","latitude":"15.91564210","longitude":"2.39617400"},{"name":"Bamako","isoCode":"BKO","countryCode":"ML","latitude":"12.63923160","longitude":"-8.00288920"},{"name":"Sagaing Region","isoCode":"01","countryCode":"MM","latitude":"24.42838100","longitude":"95.39395510"},{"name":"Bago","isoCode":"02","countryCode":"MM","latitude":"17.32207110","longitude":"96.46632860"},{"name":"Magway Region","isoCode":"03","countryCode":"MM","latitude":"19.88713860","longitude":"94.72775280"},{"name":"Mandalay Region","isoCode":"04","countryCode":"MM","latitude":"21.56190580","longitude":"95.89871390"},{"name":"Tanintharyi Region","isoCode":"05","countryCode":"MM","latitude":"12.47068760","longitude":"99.01289260"},{"name":"Yangon Region","isoCode":"06","countryCode":"MM","latitude":"16.91434880","longitude":"96.15269850"},{"name":"Ayeyarwady Region","isoCode":"07","countryCode":"MM","latitude":"17.03421250","longitude":"95.22666750"},{"name":"Kachin State","isoCode":"11","countryCode":"MM","latitude":"25.85090400","longitude":"97.43813550"},{"name":"Kayah State","isoCode":"12","countryCode":"MM","latitude":"19.23420610","longitude":"97.26528580"},{"name":"Kayin State","isoCode":"13","countryCode":"MM","latitude":"16.94593460","longitude":"97.95928630"},{"name":"Chin State","isoCode":"14","countryCode":"MM","latitude":"22.00869780","longitude":"93.58126920"},{"name":"Mon State","isoCode":"15","countryCode":"MM","latitude":"16.30031330","longitude":"97.69822720"},{"name":"Rakhine State","isoCode":"16","countryCode":"MM","latitude":"20.10408180","longitude":"93.58126920"},{"name":"Shan State","isoCode":"17","countryCode":"MM","latitude":"22.03619850","longitude":"98.13385580"},{"name":"Naypyidaw Union Territory","isoCode":"18","countryCode":"MM","latitude":"19.93862450","longitude":"96.15269850"},{"name":"Orkhon Province","isoCode":"035","countryCode":"MN","latitude":"49.00470500","longitude":"104.30165270"},{"name":"Darkhan-Uul Province","isoCode":"037","countryCode":"MN","latitude":"49.46484340","longitude":"105.97459190"},{"name":"Khentii Province","isoCode":"039","countryCode":"MN","latitude":"47.60812090","longitude":"109.93728560"},{"name":"Khövsgöl Province","isoCode":"041","countryCode":"MN","latitude":"50.22044840","longitude":"100.32137680"},{"name":"Khovd Province","isoCode":"043","countryCode":"MN","latitude":"47.11296540","longitude":"92.31107520"},{"name":"Uvs Province","isoCode":"046","countryCode":"MN","latitude":"49.64497070","longitude":"93.27365760"},{"name":"Töv Province","isoCode":"047","countryCode":"MN","latitude":"47.21240560","longitude":"106.41541000"},{"name":"Selenge Province","isoCode":"049","countryCode":"MN","latitude":"50.00592730","longitude":"106.44341080"},{"name":"Sükhbaatar Province","isoCode":"051","countryCode":"MN","latitude":"46.56531630","longitude":"113.53808360"},{"name":"Ömnögovi Province","isoCode":"053","countryCode":"MN","latitude":"43.50002400","longitude":"104.28611160"},{"name":"Övörkhangai Province","isoCode":"055","countryCode":"MN","latitude":"45.76243920","longitude":"103.09170320"},{"name":"Zavkhan Province","isoCode":"057","countryCode":"MN","latitude":"48.23881470","longitude":"96.07030190"},{"name":"Dundgovi Province","isoCode":"059","countryCode":"MN","latitude":"45.58227860","longitude":"106.76442090"},{"name":"Dornod Province","isoCode":"061","countryCode":"MN","latitude":"47.46581540","longitude":"115.39271200"},{"name":"Dornogovi Province","isoCode":"063","countryCode":"MN","latitude":"43.96538890","longitude":"109.17734590"},{"name":"Govisümber Province","isoCode":"064","countryCode":"MN","latitude":"46.47627540","longitude":"108.55706270"},{"name":"Govi-Altai Province","isoCode":"065","countryCode":"MN","latitude":"45.45112270","longitude":"95.85057660"},{"name":"Bulgan Province","isoCode":"067","countryCode":"MN","latitude":"48.96909130","longitude":"102.88317230"},{"name":"Bayankhongor Province","isoCode":"069","countryCode":"MN","latitude":"45.15267070","longitude":"100.10736670"},{"name":"Bayan-Ölgii Province","isoCode":"071","countryCode":"MN","latitude":"48.39832540","longitude":"89.66259150"},{"name":"Arkhangai Province","isoCode":"073","countryCode":"MN","latitude":"47.89711010","longitude":"100.72401650"},{"name":"Hodh Ech Chargui Region","isoCode":"01","countryCode":"MR","latitude":"18.67370260","longitude":"-7.09287700"},{"name":"Hodh El Gharbi Region","isoCode":"02","countryCode":"MR","latitude":"16.69121490","longitude":"-9.54509740"},{"name":"Assaba Region","isoCode":"03","countryCode":"MR","latitude":"16.77595580","longitude":"-11.52480550"},{"name":"Gorgol Region","isoCode":"04","countryCode":"MR","latitude":"15.97173570","longitude":"-12.62162110"},{"name":"Brakna Region","isoCode":"05","countryCode":"MR","latitude":"17.23175610","longitude":"-13.17403480"},{"name":"Trarza Region","isoCode":"06","countryCode":"MR","latitude":"17.86649640","longitude":"-14.65878210"},{"name":"Adrar Region","isoCode":"07","countryCode":"MR","latitude":"19.86521760","longitude":"-12.80547530"},{"name":"Dakhlet Nouadhibou","isoCode":"08","countryCode":"MR","latitude":"20.59855880","longitude":"-16.25221430"},{"name":"Tagant Region","isoCode":"09","countryCode":"MR","latitude":"18.54675270","longitude":"-9.90181310"},{"name":"Guidimaka Region","isoCode":"10","countryCode":"MR","latitude":"15.25573310","longitude":"-12.25479190"},{"name":"Tiris Zemmour Region","isoCode":"11","countryCode":"MR","latitude":"24.57737640","longitude":"-9.90181310"},{"name":"Inchiri Region","isoCode":"12","countryCode":"MR","latitude":"20.02805610","longitude":"-15.40680790"},{"name":"Nouakchott-Ouest Region","isoCode":"13","countryCode":"MR","latitude":"18.15113570","longitude":"-15.99349100"},{"name":"Nouakchott-Nord Region","isoCode":"14","countryCode":"MR","latitude":"18.11302050","longitude":"-15.89949560"},{"name":"Nouakchott-Sud Region","isoCode":"15","countryCode":"MR","latitude":"17.97092880","longitude":"-15.94648740"},{"name":"Attard","isoCode":"01","countryCode":"MT","latitude":"35.89049670","longitude":"14.41993220"},{"name":"Balzan","isoCode":"02","countryCode":"MT","latitude":"35.89574140","longitude":"14.45340650"},{"name":"Birgu","isoCode":"03","countryCode":"MT","latitude":"35.88792140","longitude":"14.52256200"},{"name":"Birkirkara","isoCode":"04","countryCode":"MT","latitude":"35.89547060","longitude":"14.46650720"},{"name":"Birżebbuġa","isoCode":"05","countryCode":"MT","latitude":"35.81359890","longitude":"14.52474630"},{"name":"Cospicua","isoCode":"06","countryCode":"MT","latitude":"35.88067530","longitude":"14.52183380"},{"name":"Dingli","isoCode":"07","countryCode":"MT","latitude":"35.86273090","longitude":"14.38501070"},{"name":"Fgura","isoCode":"08","countryCode":"MT","latitude":"35.87382690","longitude":"14.52329010"},{"name":"Floriana","isoCode":"09","countryCode":"MT","latitude":"45.49521850","longitude":"-73.71395760"},{"name":"Fontana","isoCode":"10","countryCode":"MT","latitude":"34.09223350","longitude":"-117.43504800"},{"name":"Gudja","isoCode":"11","countryCode":"MT","latitude":"35.84698030","longitude":"14.50290400"},{"name":"Gżira","isoCode":"12","countryCode":"MT","latitude":"35.90589700","longitude":"14.49533380"},{"name":"Għajnsielem","isoCode":"13","countryCode":"MT","latitude":"36.02479660","longitude":"14.28029610"},{"name":"Għarb","isoCode":"14","countryCode":"MT","latitude":"36.06890900","longitude":"14.20180980"},{"name":"Għargħur","isoCode":"15","countryCode":"MT","latitude":"35.92205690","longitude":"14.45631760"},{"name":"Għasri","isoCode":"16","countryCode":"MT","latitude":"36.06680750","longitude":"14.21924750"},{"name":"Għaxaq","isoCode":"17","countryCode":"MT","latitude":"35.84403590","longitude":"14.51600900"},{"name":"Ħamrun","isoCode":"18","countryCode":"MT","latitude":"35.88612370","longitude":"14.48834420"},{"name":"Iklin","isoCode":"19","countryCode":"MT","latitude":"35.90987740","longitude":"14.45777320"},{"name":"Senglea","isoCode":"20","countryCode":"MT","latitude":"35.88730410","longitude":"14.51673710"},{"name":"Kalkara","isoCode":"21","countryCode":"MT","latitude":"35.89142420","longitude":"14.53202780"},{"name":"Kerċem","isoCode":"22","countryCode":"MT","latitude":"36.04479390","longitude":"14.22506050"},{"name":"Kirkop","isoCode":"23","countryCode":"MT","latitude":"35.84378620","longitude":"14.48543240"},{"name":"Lija","isoCode":"24","countryCode":"MT","latitude":"49.18007600","longitude":"-123.10331700"},{"name":"Luqa","isoCode":"25","countryCode":"MT","latitude":"35.85828650","longitude":"14.48688830"},{"name":"Marsa","isoCode":"26","countryCode":"MT","latitude":"34.03195870","longitude":"-118.44555350"},{"name":"Marsaskala","isoCode":"27","countryCode":"MT","latitude":"35.86036400","longitude":"14.55678760"},{"name":"Marsaxlokk","isoCode":"28","countryCode":"MT","latitude":"35.84116990","longitude":"14.53930970"},{"name":"Mdina","isoCode":"29","countryCode":"MT","latitude":"35.88809300","longitude":"14.40683570"},{"name":"Mellieħa","isoCode":"30","countryCode":"MT","latitude":"35.95235290","longitude":"14.35009750"},{"name":"Mġarr","isoCode":"31","countryCode":"MT","latitude":"35.91893270","longitude":"14.36173430"},{"name":"Mosta","isoCode":"32","countryCode":"MT","latitude":"35.91415040","longitude":"14.42284270"},{"name":"Mqabba","isoCode":"33","countryCode":"MT","latitude":"35.84441430","longitude":"14.46941860"},{"name":"Msida","isoCode":"34","countryCode":"MT","latitude":"35.89563880","longitude":"14.48688830"},{"name":"Mtarfa","isoCode":"35","countryCode":"MT","latitude":"35.88951250","longitude":"14.39519530"},{"name":"Munxar","isoCode":"36","countryCode":"MT","latitude":"36.02880580","longitude":"14.22506050"},{"name":"Nadur","isoCode":"37","countryCode":"MT","latitude":"36.04470190","longitude":"14.29192730"},{"name":"Naxxar","isoCode":"38","countryCode":"MT","latitude":"35.93175180","longitude":"14.43157460"},{"name":"Paola","isoCode":"39","countryCode":"MT","latitude":"38.57223530","longitude":"-94.87912940"},{"name":"Pembroke","isoCode":"40","countryCode":"MT","latitude":"34.68016260","longitude":"-79.19503730"},{"name":"Pietà","isoCode":"41","countryCode":"MT","latitude":"42.21862000","longitude":"-83.73464700"},{"name":"Qala","isoCode":"42","countryCode":"MT","latitude":"36.03886280","longitude":"14.31810100"},{"name":"Qormi","isoCode":"43","countryCode":"MT","latitude":"35.87643880","longitude":"14.46941860"},{"name":"Qrendi","isoCode":"44","countryCode":"MT","latitude":"35.83284880","longitude":"14.45486210"},{"name":"Victoria","isoCode":"45","countryCode":"MT","latitude":"28.80526740","longitude":"-97.00359820"},{"name":"Rabat","isoCode":"46","countryCode":"MT","latitude":"33.97159040","longitude":"-6.84981290"},{"name":"St. Julian\'s","isoCode":"48","countryCode":"MT","latitude":"42.21225130","longitude":"-85.89171270"},{"name":"San Ġwann","isoCode":"49","countryCode":"MT","latitude":"35.90773650","longitude":"14.47524160"},{"name":"Saint Lawrence","isoCode":"50","countryCode":"MT","latitude":"38.95780560","longitude":"-95.25656890"},{"name":"St. Paul\'s Bay","isoCode":"51","countryCode":"MT","latitude":"35.93601700","longitude":"14.39665030"},{"name":"Sannat","isoCode":"52","countryCode":"MT","latitude":"36.01926430","longitude":"14.25994370"},{"name":"Santa Luċija","isoCode":"53","countryCode":"MT","latitude":"35.85614200","longitude":"14.50436000"},{"name":"Santa Venera","isoCode":"54","countryCode":"MT","latitude":"35.89022010","longitude":"14.47669740"},{"name":"Siġġiewi","isoCode":"55","countryCode":"MT","latitude":"35.84637420","longitude":"14.43157460"},{"name":"Sliema","isoCode":"56","countryCode":"MT","latitude":"35.91100810","longitude":"14.50290400"},{"name":"Swieqi","isoCode":"57","countryCode":"MT","latitude":"35.91911820","longitude":"14.46941860"},{"name":"Ta\' Xbiex","isoCode":"58","countryCode":"MT","latitude":"35.89914480","longitude":"14.49635190"},{"name":"Tarxien","isoCode":"59","countryCode":"MT","latitude":"35.86725520","longitude":"14.51164050"},{"name":"Valletta","isoCode":"60","countryCode":"MT","latitude":"35.89890850","longitude":"14.51455280"},{"name":"Xagħra","isoCode":"61","countryCode":"MT","latitude":"36.05084500","longitude":"14.26748200"},{"name":"Xewkija","isoCode":"62","countryCode":"MT","latitude":"36.02992360","longitude":"14.25994370"},{"name":"Xgħajra","isoCode":"63","countryCode":"MT","latitude":"35.88682820","longitude":"14.54723910"},{"name":"Żabbar","isoCode":"64","countryCode":"MT","latitude":"35.87247150","longitude":"14.54513540"},{"name":"Żebbuġ Gozo","isoCode":"65","countryCode":"MT","latitude":"36.07164030","longitude":"14.24540800"},{"name":"Żebbuġ Malta","isoCode":"66","countryCode":"MT","latitude":"35.87646480","longitude":"14.43908400"},{"name":"Żejtun","isoCode":"67","countryCode":"MT","latitude":"35.85487140","longitude":"14.53639690"},{"name":"Żurrieq","isoCode":"68","countryCode":"MT","latitude":"35.82163060","longitude":"14.48106480"},{"name":"Agaléga","isoCode":"AG","countryCode":"MU","latitude":"-10.40000000","longitude":"56.61666670"},{"name":"Rivière Noire District","isoCode":"BL","countryCode":"MU","latitude":"-20.37084920","longitude":"57.39486490"},{"name":"Beau Bassin-Rose Hill","isoCode":"BR","countryCode":"MU","latitude":"-20.22303050","longitude":"57.46838300"},{"name":"Cargados Carajos","isoCode":"CC","countryCode":"MU","latitude":"-16.58333300","longitude":"59.61666700"},{"name":"Curepipe","isoCode":"CU","countryCode":"MU","latitude":"-20.31708720","longitude":"57.52652890"},{"name":"Flacq District","isoCode":"FL","countryCode":"MU","latitude":"-20.22578360","longitude":"57.71192740"},{"name":"Grand Port District","isoCode":"GP","countryCode":"MU","latitude":"-20.38515460","longitude":"57.66657420"},{"name":"Moka District","isoCode":"MO","countryCode":"MU","latitude":"-20.23997820","longitude":"57.57592600"},{"name":"Pamplemousses District","isoCode":"PA","countryCode":"MU","latitude":"-20.11360080","longitude":"57.57592600"},{"name":"Port Louis District","isoCode":"PL","countryCode":"MU","latitude":"-20.16089120","longitude":"57.50122220"},{"name":"Port Louis","isoCode":"PU","countryCode":"MU","latitude":"-20.16089120","longitude":"57.50122220"},{"name":"Plaines Wilhems District","isoCode":"PW","countryCode":"MU","latitude":"-20.30548720","longitude":"57.48535610"},{"name":"Quatre Bornes","isoCode":"QB","countryCode":"MU","latitude":"-20.26747180","longitude":"57.47969810"},{"name":"Rodrigues","isoCode":"RO","countryCode":"MU","latitude":"-19.72453850","longitude":"63.42721850"},{"name":"Rivière du Rempart District","isoCode":"RR","countryCode":"MU","latitude":"-20.05609830","longitude":"57.65523890"},{"name":"Savanne District","isoCode":"SA","countryCode":"MU","latitude":"-20.47395300","longitude":"57.48535610"},{"name":"Vacoas-Phoenix","isoCode":"VP","countryCode":"MU","latitude":"-20.29840260","longitude":"57.49383550"},{"name":"Alif Dhaal Atoll","isoCode":"00","countryCode":"MV","latitude":"3.65433020","longitude":"72.80427970"},{"name":"Addu Atoll","isoCode":"01","countryCode":"MV","latitude":"-0.63009950","longitude":"73.15856260"},{"name":"Alif Alif Atoll","isoCode":"02","countryCode":"MV","latitude":"4.08500000","longitude":"72.85154790"},{"name":"Lhaviyani Atoll","isoCode":"03","countryCode":"MV","latitude":"5.37470210","longitude":"73.51229280"},{"name":"Vaavu Atoll","isoCode":"04","countryCode":"MV","latitude":"3.39554380","longitude":"73.51229280"},{"name":"Laamu Atoll","isoCode":"05","countryCode":"MV","latitude":"1.94307370","longitude":"73.41802110"},{"name":"Haa Alif Atoll","isoCode":"07","countryCode":"MV","latitude":"6.99034880","longitude":"72.94605660"},{"name":"Thaa Atoll","isoCode":"08","countryCode":"MV","latitude":"2.43111610","longitude":"73.18216230"},{"name":"Meemu Atoll","isoCode":"12","countryCode":"MV","latitude":"3.00903450","longitude":"73.51229280"},{"name":"Raa Atoll","isoCode":"13","countryCode":"MV","latitude":"5.60064570","longitude":"72.94605660"},{"name":"Faafu Atoll","isoCode":"14","countryCode":"MV","latitude":"3.23094090","longitude":"72.94605660"},{"name":"Dhaalu Atoll","isoCode":"17","countryCode":"MV","latitude":"2.84685020","longitude":"72.94605660"},{"name":"Haa Dhaalu Atoll","isoCode":"23","countryCode":"MV","latitude":"6.57827170","longitude":"72.94605660"},{"name":"Shaviyani Atoll","isoCode":"24","countryCode":"MV","latitude":"6.17511000","longitude":"73.13496050"},{"name":"Noonu Atoll","isoCode":"25","countryCode":"MV","latitude":"5.85512760","longitude":"73.32370800"},{"name":"Kaafu Atoll","isoCode":"26","countryCode":"MV","latitude":"4.45589790","longitude":"73.55941280"},{"name":"Gaafu Alif Atoll","isoCode":"27","countryCode":"MV","latitude":"0.61248130","longitude":"73.32370800"},{"name":"Gaafu Dhaalu Atoll","isoCode":"28","countryCode":"MV","latitude":"0.35880400","longitude":"73.18216230"},{"name":"Gnaviyani Atoll","isoCode":"29","countryCode":"MV","latitude":"-0.30064250","longitude":"73.42391430"},{"name":"Central Province","isoCode":"CE","countryCode":"MV","latitude":null,"longitude":null},{"name":"Malé","isoCode":"MLE","countryCode":"MV","latitude":"46.34888670","longitude":"10.90724890"},{"name":"North Central Province","isoCode":"NC","countryCode":"MV","latitude":null,"longitude":null},{"name":"North Province","isoCode":"NO","countryCode":"MV","latitude":"8.88550270","longitude":"80.27673270"},{"name":"South Central Province","isoCode":"SC","countryCode":"MV","latitude":"7.25649960","longitude":"80.72144170"},{"name":"South Province","isoCode":"SU","countryCode":"MV","latitude":"-21.74820060","longitude":"166.17837390"},{"name":"Upper South Province","isoCode":"US","countryCode":"MV","latitude":"0.23070000","longitude":"73.27948460"},{"name":"Balaka District","isoCode":"BA","countryCode":"MW","latitude":"-15.05065950","longitude":"35.08285880"},{"name":"Blantyre District","isoCode":"BL","countryCode":"MW","latitude":"-15.67785410","longitude":"34.95066250"},{"name":"Central Region","isoCode":"C","countryCode":"MW","latitude":null,"longitude":null},{"name":"Chikwawa District","isoCode":"CK","countryCode":"MW","latitude":"-16.19584460","longitude":"34.77407930"},{"name":"Chiradzulu District","isoCode":"CR","countryCode":"MW","latitude":"-15.74231510","longitude":"35.25879640"},{"name":"Chitipa district","isoCode":"CT","countryCode":"MW","latitude":"-9.70376550","longitude":"33.27002530"},{"name":"Dedza District","isoCode":"DE","countryCode":"MW","latitude":"-14.18945850","longitude":"34.24215970"},{"name":"Dowa District","isoCode":"DO","countryCode":"MW","latitude":"-13.60412560","longitude":"33.88577470"},{"name":"Karonga District","isoCode":"KR","countryCode":"MW","latitude":"-9.90363650","longitude":"33.97500180"},{"name":"Kasungu District","isoCode":"KS","countryCode":"MW","latitude":"-13.13670650","longitude":"33.25879300"},{"name":"Lilongwe District","isoCode":"LI","countryCode":"MW","latitude":"-14.04752280","longitude":"33.61757700"},{"name":"Likoma District","isoCode":"LK","countryCode":"MW","latitude":"-12.05840050","longitude":"34.73540310"},{"name":"Mchinji District","isoCode":"MC","countryCode":"MW","latitude":"-13.74015250","longitude":"32.98883190"},{"name":"Mangochi District","isoCode":"MG","countryCode":"MW","latitude":"-14.13882480","longitude":"35.03881640"},{"name":"Machinga District","isoCode":"MH","countryCode":"MW","latitude":"-14.94072630","longitude":"35.47819260"},{"name":"Mulanje District","isoCode":"MU","countryCode":"MW","latitude":"-15.93464340","longitude":"35.52200120"},{"name":"Mwanza District","isoCode":"MW","countryCode":"MW","latitude":"-2.46711970","longitude":"32.89868120"},{"name":"Mzimba District","isoCode":"MZ","countryCode":"MW","latitude":"-11.74754520","longitude":"33.52800720"},{"name":"Northern Region","isoCode":"N","countryCode":"MW","latitude":null,"longitude":null},{"name":"Nkhata Bay District","isoCode":"NB","countryCode":"MW","latitude":"-11.71850420","longitude":"34.33103640"},{"name":"Ntchisi District","isoCode":"NI","countryCode":"MW","latitude":"-13.28419920","longitude":"33.88577470"},{"name":"Nkhotakota District","isoCode":"NK","countryCode":"MW","latitude":"-12.75419610","longitude":"34.24215970"},{"name":"Nsanje District","isoCode":"NS","countryCode":"MW","latitude":"-16.72882020","longitude":"35.17087410"},{"name":"Ntcheu District","isoCode":"NU","countryCode":"MW","latitude":"-14.90375380","longitude":"34.77407930"},{"name":"Phalombe District","isoCode":"PH","countryCode":"MW","latitude":"-15.70920380","longitude":"35.65328480"},{"name":"Rumphi District","isoCode":"RU","countryCode":"MW","latitude":"-10.78515370","longitude":"34.33103640"},{"name":"Southern Region","isoCode":"S","countryCode":"MW","latitude":"32.75049570","longitude":"-97.33154760"},{"name":"Salima District","isoCode":"SA","countryCode":"MW","latitude":"-13.68095860","longitude":"34.41982430"},{"name":"Thyolo District","isoCode":"TH","countryCode":"MW","latitude":"-16.12991770","longitude":"35.12687810"},{"name":"Zomba District","isoCode":"ZO","countryCode":"MW","latitude":"-15.37658570","longitude":"35.33565180"},{"name":"Aguascalientes","isoCode":"AGU","countryCode":"MX","latitude":"21.88525620","longitude":"-102.29156770"},{"name":"Baja California","isoCode":"BCN","countryCode":"MX","latitude":"30.84063380","longitude":"-115.28375850"},{"name":"Baja California Sur","isoCode":"BCS","countryCode":"MX","latitude":"26.04444460","longitude":"-111.66607250"},{"name":"Campeche","isoCode":"CAM","countryCode":"MX","latitude":"19.83012510","longitude":"-90.53490870"},{"name":"Ciudad de México","isoCode":"CDMX","countryCode":"MX","latitude":"19.43260770","longitude":"-99.13320800"},{"name":"Chihuahua","isoCode":"CHH","countryCode":"MX","latitude":"28.63299570","longitude":"-106.06910040"},{"name":"Chiapas","isoCode":"CHP","countryCode":"MX","latitude":"16.75693180","longitude":"-93.12923530"},{"name":"Coahuila de Zaragoza","isoCode":"COA","countryCode":"MX","latitude":"27.05867600","longitude":"-101.70682940"},{"name":"Colima","isoCode":"COL","countryCode":"MX","latitude":"19.24523420","longitude":"-103.72408680"},{"name":"Durango","isoCode":"DUR","countryCode":"MX","latitude":"37.27528000","longitude":"-107.88006670"},{"name":"Guerrero","isoCode":"GRO","countryCode":"MX","latitude":"17.43919260","longitude":"-99.54509740"},{"name":"Guanajuato","isoCode":"GUA","countryCode":"MX","latitude":"21.01901450","longitude":"-101.25735860"},{"name":"Hidalgo","isoCode":"HID","countryCode":"MX","latitude":"26.10035470","longitude":"-98.26306840"},{"name":"Jalisco","isoCode":"JAL","countryCode":"MX","latitude":"20.65953820","longitude":"-103.34943760"},{"name":"Estado de México","isoCode":"MEX","countryCode":"MX","latitude":"23.63450100","longitude":"-102.55278400"},{"name":"Michoacán de Ocampo","isoCode":"MIC","countryCode":"MX","latitude":"19.56651920","longitude":"-101.70682940"},{"name":"Morelos","isoCode":"MOR","countryCode":"MX","latitude":"18.68130490","longitude":"-99.10134980"},{"name":"Nayarit","isoCode":"NAY","countryCode":"MX","latitude":"21.75138440","longitude":"-104.84546190"},{"name":"Nuevo León","isoCode":"NLE","countryCode":"MX","latitude":"25.59217200","longitude":"-99.99619470"},{"name":"Oaxaca","isoCode":"OAX","countryCode":"MX","latitude":"17.07318420","longitude":"-96.72658890"},{"name":"Puebla","isoCode":"PUE","countryCode":"MX","latitude":"19.04143980","longitude":"-98.20627270"},{"name":"Querétaro","isoCode":"QUE","countryCode":"MX","latitude":"20.58879320","longitude":"-100.38988810"},{"name":"Quintana Roo","isoCode":"ROO","countryCode":"MX","latitude":"19.18173930","longitude":"-88.47913760"},{"name":"Sinaloa","isoCode":"SIN","countryCode":"MX","latitude":"25.17210910","longitude":"-107.47951730"},{"name":"San Luis Potosí","isoCode":"SLP","countryCode":"MX","latitude":"22.15646990","longitude":"-100.98554090"},{"name":"Sonora","isoCode":"SON","countryCode":"MX","latitude":"37.98294960","longitude":"-120.38217240"},{"name":"Tabasco","isoCode":"TAB","countryCode":"MX","latitude":"17.84091730","longitude":"-92.61892730"},{"name":"Tamaulipas","isoCode":"TAM","countryCode":"MX","latitude":"24.26694000","longitude":"-98.83627550"},{"name":"Tlaxcala","isoCode":"TLA","countryCode":"MX","latitude":"19.31815400","longitude":"-98.23749540"},{"name":"Veracruz de Ignacio de la Llave","isoCode":"VER","countryCode":"MX","latitude":"19.17377300","longitude":"-96.13422410"},{"name":"Yucatán","isoCode":"YUC","countryCode":"MX","latitude":"20.70987860","longitude":"-89.09433770"},{"name":"Zacatecas","isoCode":"ZAC","countryCode":"MX","latitude":"22.77085550","longitude":"-102.58324260"},{"name":"Johor","isoCode":"01","countryCode":"MY","latitude":"1.48536820","longitude":"103.76181540"},{"name":"Kedah","isoCode":"02","countryCode":"MY","latitude":"6.11839640","longitude":"100.36845950"},{"name":"Kelantan","isoCode":"03","countryCode":"MY","latitude":"6.12539690","longitude":"102.23807100"},{"name":"Malacca","isoCode":"04","countryCode":"MY","latitude":"2.18959400","longitude":"102.25008680"},{"name":"Negeri Sembilan","isoCode":"05","countryCode":"MY","latitude":"2.72580580","longitude":"101.94237820"},{"name":"Pahang","isoCode":"06","countryCode":"MY","latitude":"3.81263180","longitude":"103.32562040"},{"name":"Penang","isoCode":"07","countryCode":"MY","latitude":"5.41639350","longitude":"100.33267860"},{"name":"Perak","isoCode":"08","countryCode":"MY","latitude":"4.59211260","longitude":"101.09010900"},{"name":"Perlis","isoCode":"09","countryCode":"MY","latitude":"29.92270940","longitude":"-90.12285590"},{"name":"Selangor","isoCode":"10","countryCode":"MY","latitude":"3.07383790","longitude":"101.51834690"},{"name":"Terengganu","isoCode":"11","countryCode":"MY","latitude":"5.31169160","longitude":"103.13241540"},{"name":"Sabah","isoCode":"12","countryCode":"MY","latitude":"5.97883980","longitude":"116.07531990"},{"name":"Sarawak","isoCode":"13","countryCode":"MY","latitude":"1.55327830","longitude":"110.35921270"},{"name":"Kuala Lumpur","isoCode":"14","countryCode":"MY","latitude":"3.13900300","longitude":"101.68685500"},{"name":"Labuan","isoCode":"15","countryCode":"MY","latitude":"5.28314560","longitude":"115.23082500"},{"name":"Putrajaya","isoCode":"16","countryCode":"MY","latitude":"2.92636100","longitude":"101.69644500"},{"name":"Niassa Province","isoCode":"A","countryCode":"MZ","latitude":"-12.78262020","longitude":"36.60939260"},{"name":"Manica Province","isoCode":"B","countryCode":"MZ","latitude":"-19.50597870","longitude":"33.43835300"},{"name":"Gaza Province","isoCode":"G","countryCode":"MZ","latitude":"-23.02219280","longitude":"32.71813750"},{"name":"Inhambane Province","isoCode":"I","countryCode":"MZ","latitude":"-22.85279970","longitude":"34.55087580"},{"name":"Maputo Province","isoCode":"L","countryCode":"MZ","latitude":"-25.25698760","longitude":"32.53727410"},{"name":"Maputo","isoCode":"MPM","countryCode":"MZ","latitude":"-25.96924800","longitude":"32.57317460"},{"name":"Nampula Province","isoCode":"N","countryCode":"MZ","latitude":"-14.76049310","longitude":"39.32062410"},{"name":"Cabo Delgado Province","isoCode":"P","countryCode":"MZ","latitude":"-12.33354740","longitude":"39.32062410"},{"name":"Zambezia Province","isoCode":"Q","countryCode":"MZ","latitude":"-16.56389870","longitude":"36.60939260"},{"name":"Sofala Province","isoCode":"S","countryCode":"MZ","latitude":"-19.20390730","longitude":"34.86241660"},{"name":"Tete Province","isoCode":"T","countryCode":"MZ","latitude":"-15.65960560","longitude":"32.71813750"},{"name":"Zambezi Region","isoCode":"CA","countryCode":"NA","latitude":"-17.81934190","longitude":"23.95364660"},{"name":"Erongo Region","isoCode":"ER","countryCode":"NA","latitude":"-22.25656820","longitude":"15.40680790"},{"name":"Hardap Region","isoCode":"HA","countryCode":"NA","latitude":"-24.23101340","longitude":"17.66888700"},{"name":"Karas Region","isoCode":"KA","countryCode":"NA","latitude":"-26.84296450","longitude":"17.29028390"},{"name":"Kavango East Region","isoCode":"KE","countryCode":"NA","latitude":"-18.27104800","longitude":"18.42760470"},{"name":"Khomas Region","isoCode":"KH","countryCode":"NA","latitude":"-22.63778540","longitude":"17.10119310"},{"name":"Kunene Region","isoCode":"KU","countryCode":"NA","latitude":"-19.40863170","longitude":"13.91439900"},{"name":"Kavango West Region","isoCode":"KW","countryCode":"NA","latitude":"-18.27104800","longitude":"18.42760470"},{"name":"Otjozondjupa Region","isoCode":"OD","countryCode":"NA","latitude":"-20.54869160","longitude":"17.66888700"},{"name":"Omaheke Region","isoCode":"OH","countryCode":"NA","latitude":"-21.84666510","longitude":"19.18800470"},{"name":"Oshana Region","isoCode":"ON","countryCode":"NA","latitude":"-18.43050640","longitude":"15.68817880"},{"name":"Omusati Region","isoCode":"OS","countryCode":"NA","latitude":"-18.40702940","longitude":"14.84546190"},{"name":"Oshikoto Region","isoCode":"OT","countryCode":"NA","latitude":"-18.41525750","longitude":"16.91225100"},{"name":"Ohangwena Region","isoCode":"OW","countryCode":"NA","latitude":"-17.59792910","longitude":"16.81783770"},{"name":"Agadez Region","isoCode":"1","countryCode":"NE","latitude":"20.66707520","longitude":"12.07182810"},{"name":"Diffa Region","isoCode":"2","countryCode":"NE","latitude":"13.67686470","longitude":"12.71351210"},{"name":"Dosso Region","isoCode":"3","countryCode":"NE","latitude":"13.15139470","longitude":"3.41955270"},{"name":"Maradi Region","isoCode":"4","countryCode":"NE","latitude":"13.80180740","longitude":"7.43813550"},{"name":"Tahoua Region","isoCode":"5","countryCode":"NE","latitude":"16.09025430","longitude":"5.39395510"},{"name":"Tillabéri Region","isoCode":"6","countryCode":"NE","latitude":"14.64895250","longitude":"2.14502450"},{"name":"Zinder Region","isoCode":"7","countryCode":"NE","latitude":"15.17188810","longitude":"10.26001250"},{"name":"Abia","isoCode":"AB","countryCode":"NG","latitude":"5.45273540","longitude":"7.52484140"},{"name":"Adamawa","isoCode":"AD","countryCode":"NG","latitude":"9.32647510","longitude":"12.39838530"},{"name":"Akwa Ibom","isoCode":"AK","countryCode":"NG","latitude":"4.90573710","longitude":"7.85366750"},{"name":"Anambra","isoCode":"AN","countryCode":"NG","latitude":"6.22089970","longitude":"6.93695590"},{"name":"Bauchi","isoCode":"BA","countryCode":"NG","latitude":"10.77606240","longitude":"9.99919430"},{"name":"Benue","isoCode":"BE","countryCode":"NG","latitude":"7.33690240","longitude":"8.74036870"},{"name":"Borno","isoCode":"BO","countryCode":"NG","latitude":"11.88463560","longitude":"13.15196650"},{"name":"Bayelsa","isoCode":"BY","countryCode":"NG","latitude":"4.77190710","longitude":"6.06985260"},{"name":"Cross River","isoCode":"CR","countryCode":"NG","latitude":"5.87017240","longitude":"8.59880140"},{"name":"Delta","isoCode":"DE","countryCode":"NG","latitude":"33.74537840","longitude":"-90.73545080"},{"name":"Ebonyi","isoCode":"EB","countryCode":"NG","latitude":"6.26492320","longitude":"8.01373020"},{"name":"Edo","isoCode":"ED","countryCode":"NG","latitude":"6.63418310","longitude":"5.93040560"},{"name":"Ekiti","isoCode":"EK","countryCode":"NG","latitude":"7.71898620","longitude":"5.31095050"},{"name":"Enugu","isoCode":"EN","countryCode":"NG","latitude":"6.53635300","longitude":"7.43561940"},{"name":"Abuja Federal Capital Territory","isoCode":"FC","countryCode":"NG","latitude":"8.89406910","longitude":"7.18604020"},{"name":"Gombe","isoCode":"GO","countryCode":"NG","latitude":"10.36377950","longitude":"11.19275870"},{"name":"Imo","isoCode":"IM","countryCode":"NG","latitude":"5.57201220","longitude":"7.05882190"},{"name":"Jigawa","isoCode":"JI","countryCode":"NG","latitude":"12.22801200","longitude":"9.56158670"},{"name":"Kaduna","isoCode":"KD","countryCode":"NG","latitude":"10.37640060","longitude":"7.70945370"},{"name":"Kebbi","isoCode":"KE","countryCode":"NG","latitude":"11.49420030","longitude":"4.23333550"},{"name":"Kano","isoCode":"KN","countryCode":"NG","latitude":"11.74706980","longitude":"8.52471070"},{"name":"Kogi","isoCode":"KO","countryCode":"NG","latitude":"7.73373250","longitude":"6.69058360"},{"name":"Katsina","isoCode":"KT","countryCode":"NG","latitude":"12.37967070","longitude":"7.63057480"},{"name":"Kwara","isoCode":"KW","countryCode":"NG","latitude":"8.96689610","longitude":"4.38740510"},{"name":"Lagos","isoCode":"LA","countryCode":"NG","latitude":"6.52437930","longitude":"3.37920570"},{"name":"Nasarawa","isoCode":"NA","countryCode":"NG","latitude":"8.49979080","longitude":"8.19969370"},{"name":"Niger","isoCode":"NI","countryCode":"NG","latitude":"9.93092240","longitude":"5.59832100"},{"name":"Ogun","isoCode":"OG","countryCode":"NG","latitude":"6.99797470","longitude":"3.47373780"},{"name":"Ondo","isoCode":"ON","countryCode":"NG","latitude":"6.91486820","longitude":"5.14781440"},{"name":"Osun","isoCode":"OS","countryCode":"NG","latitude":"7.56289640","longitude":"4.51995930"},{"name":"Oyo","isoCode":"OY","countryCode":"NG","latitude":"8.15738090","longitude":"3.61465340"},{"name":"Plateau","isoCode":"PL","countryCode":"NG","latitude":"9.21820930","longitude":"9.51794880"},{"name":"Rivers","isoCode":"RI","countryCode":"NG","latitude":"5.02134200","longitude":"6.43760220"},{"name":"Sokoto","isoCode":"SO","countryCode":"NG","latitude":"13.05331430","longitude":"5.32227220"},{"name":"Taraba","isoCode":"TA","countryCode":"NG","latitude":"7.99936160","longitude":"10.77398630"},{"name":"Yobe","isoCode":"YO","countryCode":"NG","latitude":"12.29387600","longitude":"11.43904110"},{"name":"Zamfara","isoCode":"ZA","countryCode":"NG","latitude":"12.12218050","longitude":"6.22358190"},{"name":"North Caribbean Coast","isoCode":"AN","countryCode":"NI","latitude":"13.83944560","longitude":"-83.93208060"},{"name":"South Caribbean Coast","isoCode":"AS","countryCode":"NI","latitude":"12.19185020","longitude":"-84.10128610"},{"name":"Boaco","isoCode":"BO","countryCode":"NI","latitude":"12.46928400","longitude":"-85.66146820"},{"name":"Carazo","isoCode":"CA","countryCode":"NI","latitude":"11.72747290","longitude":"-86.21584970"},{"name":"Chinandega","isoCode":"CI","countryCode":"NI","latitude":"12.88200620","longitude":"-87.14228950"},{"name":"Chontales","isoCode":"CO","countryCode":"NI","latitude":"11.93947170","longitude":"-85.18940450"},{"name":"Estelí","isoCode":"ES","countryCode":"NI","latitude":"13.08511390","longitude":"-86.36301970"},{"name":"Granada","isoCode":"GR","countryCode":"NI","latitude":"11.93440730","longitude":"-85.95600050"},{"name":"Jinotega","isoCode":"JI","countryCode":"NI","latitude":"13.08839070","longitude":"-85.99939970"},{"name":"León","isoCode":"LE","countryCode":"NI","latitude":"12.50920370","longitude":"-86.66110830"},{"name":"Madriz","isoCode":"MD","countryCode":"NI","latitude":"13.47260050","longitude":"-86.45920910"},{"name":"Managua","isoCode":"MN","countryCode":"NI","latitude":"12.13916990","longitude":"-86.33767610"},{"name":"Masaya","isoCode":"MS","countryCode":"NI","latitude":"11.97593280","longitude":"-86.07334980"},{"name":"Matagalpa","isoCode":"MT","countryCode":"NI","latitude":"12.94984360","longitude":"-85.43755740"},{"name":"Nueva Segovia","isoCode":"NS","countryCode":"NI","latitude":"13.76570610","longitude":"-86.53700390"},{"name":"Rivas","isoCode":"RI","countryCode":"NI","latitude":"11.40234900","longitude":"-85.68457800"},{"name":"Río San Juan","isoCode":"SJ","countryCode":"NI","latitude":"11.47816100","longitude":"-84.77333250"},{"name":"Bonaire","isoCode":"BQ1","countryCode":"NL","latitude":"12.20189020","longitude":"-68.26238220"},{"name":"Saba","isoCode":"BQ2","countryCode":"NL","latitude":"17.63546420","longitude":"-63.23267630"},{"name":"Sint Eustatius","isoCode":"BQ3","countryCode":"NL","latitude":"17.48903060","longitude":"-62.97355500"},{"name":"Drenthe","isoCode":"DR","countryCode":"NL","latitude":"52.94760120","longitude":"6.62305860"},{"name":"Flevoland","isoCode":"FL","countryCode":"NL","latitude":"52.52797810","longitude":"5.59535080"},{"name":"Friesland","isoCode":"FR","countryCode":"NL","latitude":"53.16416420","longitude":"5.78175420"},{"name":"Gelderland","isoCode":"GE","countryCode":"NL","latitude":"52.04515500","longitude":"5.87182350"},{"name":"Groningen","isoCode":"GR","countryCode":"NL","latitude":"53.21938350","longitude":"6.56650170"},{"name":"Limburg","isoCode":"LI","countryCode":"NL","latitude":"51.44272380","longitude":"6.06087260"},{"name":"North Brabant","isoCode":"NB","countryCode":"NL","latitude":"51.48265370","longitude":"5.23216870"},{"name":"North Holland","isoCode":"NH","countryCode":"NL","latitude":"52.52058690","longitude":"4.78847400"},{"name":"Overijssel","isoCode":"OV","countryCode":"NL","latitude":"52.43878140","longitude":"6.50164110"},{"name":"Utrecht","isoCode":"UT","countryCode":"NL","latitude":"52.09073740","longitude":"5.12142010"},{"name":"Zeeland","isoCode":"ZE","countryCode":"NL","latitude":"51.49403090","longitude":"3.84968150"},{"name":"South Holland","isoCode":"ZH","countryCode":"NL","latitude":"41.60086810","longitude":"-87.60698940"},{"name":"Østfold","isoCode":"01","countryCode":"NO","latitude":"59.25582860","longitude":"11.32790060"},{"name":"Akershus","isoCode":"02","countryCode":"NO","latitude":"28.37042030","longitude":"-81.54680580"},{"name":"Oslo","isoCode":"03","countryCode":"NO","latitude":"59.91386880","longitude":"10.75224540"},{"name":"Hedmark","isoCode":"04","countryCode":"NO","latitude":"61.39673110","longitude":"11.56273690"},{"name":"Oppland","isoCode":"05","countryCode":"NO","latitude":"61.54227520","longitude":"9.71663150"},{"name":"Buskerud","isoCode":"06","countryCode":"NO","latitude":"60.48460250","longitude":"8.69837640"},{"name":"Vestfold","isoCode":"07","countryCode":"NO","latitude":"59.17078620","longitude":"10.11443550"},{"name":"Telemark","isoCode":"08","countryCode":"NO","latitude":"59.39139850","longitude":"8.32112090"},{"name":"Vest-Agder","isoCode":"10","countryCode":"NO","latitude":"58.09990810","longitude":"6.58698090"},{"name":"Rogaland","isoCode":"11","countryCode":"NO","latitude":"59.14895440","longitude":"6.01434320"},{"name":"Hordaland","isoCode":"12","countryCode":"NO","latitude":"60.27336740","longitude":"5.72201940"},{"name":"Sogn og Fjordane","isoCode":"14","countryCode":"NO","latitude":"61.55394350","longitude":"6.33258790"},{"name":"Møre og Romsdal","isoCode":"15","countryCode":"NO","latitude":"62.84068330","longitude":"7.00714300"},{"name":"Sør-Trøndelag","isoCode":"16","countryCode":"NO","latitude":"63.01368230","longitude":"10.34871360"},{"name":"Nord-Trøndelag","isoCode":"17","countryCode":"NO","latitude":"64.43707920","longitude":"11.74629500"},{"name":"Nordland","isoCode":"18","countryCode":"NO","latitude":"67.69305800","longitude":"12.70739360"},{"name":"Troms","isoCode":"19","countryCode":"NO","latitude":"69.81782420","longitude":"18.78193650"},{"name":"Finnmark","isoCode":"20","countryCode":"NO","latitude":"70.48303880","longitude":"26.01351070"},{"name":"Svalbard","isoCode":"21","countryCode":"NO","latitude":"77.87497250","longitude":"20.97518210"},{"name":"Jan Mayen","isoCode":"22","countryCode":"NO","latitude":"71.03181800","longitude":"-8.29203460"},{"name":"Trøndelag","isoCode":"50","countryCode":"NO","latitude":"63.54201250","longitude":"10.93692670"},{"name":"Central Region","isoCode":"1","countryCode":"NP","latitude":null,"longitude":null},{"name":"Mid-Western Region","isoCode":"2","countryCode":"NP","latitude":"38.41118410","longitude":"-90.38320980"},{"name":"Western Region","isoCode":"3","countryCode":"NP","latitude":null,"longitude":null},{"name":"Eastern Development Region","isoCode":"4","countryCode":"NP","latitude":"27.33090720","longitude":"87.06242610"},{"name":"Far-Western Development Region","isoCode":"5","countryCode":"NP","latitude":"29.29878710","longitude":"80.98710740"},{"name":"Bagmati Zone","isoCode":"BA","countryCode":"NP","latitude":"28.03675770","longitude":"85.43755740"},{"name":"Bheri Zone","isoCode":"BH","countryCode":"NP","latitude":"28.51745600","longitude":"81.77870210"},{"name":"Dhaulagiri Zone","isoCode":"DH","countryCode":"NP","latitude":"28.61117600","longitude":"83.50702030"},{"name":"Gandaki Zone","isoCode":"GA","countryCode":"NP","latitude":"28.37320370","longitude":"84.43827210"},{"name":"Janakpur Zone","isoCode":"JA","countryCode":"NP","latitude":"27.21108990","longitude":"86.01215730"},{"name":"Karnali Zone","isoCode":"KA","countryCode":"NP","latitude":"29.38625550","longitude":"82.38857830"},{"name":"Kosi Zone","isoCode":"KO","countryCode":"NP","latitude":"27.05365240","longitude":"87.30161320"},{"name":"Lumbini Zone","isoCode":"LU","countryCode":"NP","latitude":"27.45000000","longitude":"83.25000000"},{"name":"Mahakali Zone","isoCode":"MA","countryCode":"NP","latitude":"29.36010790","longitude":"80.54384500"},{"name":"Mechi Zone","isoCode":"ME","countryCode":"NP","latitude":"26.87600070","longitude":"87.93348030"},{"name":"Narayani Zone","isoCode":"NA","countryCode":"NP","latitude":"27.36117660","longitude":"84.85679320"},{"name":"Rapti Zone","isoCode":"RA","countryCode":"NP","latitude":"28.27434700","longitude":"82.38857830"},{"name":"Sagarmatha Zone","isoCode":"SA","countryCode":"NP","latitude":"27.32382630","longitude":"86.74163740"},{"name":"Seti Zone","isoCode":"SE","countryCode":"NP","latitude":"29.69054270","longitude":"81.33994140"},{"name":"Aiwo District","isoCode":"01","countryCode":"NR","latitude":"-0.53400120","longitude":"166.91388730"},{"name":"Anabar District","isoCode":"02","countryCode":"NR","latitude":"-0.51335170","longitude":"166.94846240"},{"name":"Anetan District","isoCode":"03","countryCode":"NR","latitude":"-0.50643430","longitude":"166.94270060"},{"name":"Anibare District","isoCode":"04","countryCode":"NR","latitude":"-0.52947580","longitude":"166.95134320"},{"name":"Baiti District","isoCode":"05","countryCode":"NR","latitude":"-0.51043100","longitude":"166.92757440"},{"name":"Boe District","isoCode":"06","countryCode":"NR","latitude":"39.07327760","longitude":"-94.57104980"},{"name":"Buada District","isoCode":"07","countryCode":"NR","latitude":"-0.53287770","longitude":"166.92685410"},{"name":"Denigomodu District","isoCode":"08","countryCode":"NR","latitude":"-0.52479640","longitude":"166.91676890"},{"name":"Ewa District","isoCode":"09","countryCode":"NR","latitude":"-0.50872410","longitude":"166.93693840"},{"name":"Ijuw District","isoCode":"10","countryCode":"NR","latitude":"-0.52027670","longitude":"166.95710460"},{"name":"Meneng District","isoCode":"11","countryCode":"NR","latitude":"-0.54672400","longitude":"166.93837900"},{"name":"Nibok District","isoCode":"12","countryCode":"NR","latitude":"-0.51962080","longitude":"166.91893010"},{"name":"Uaboe District","isoCode":"13","countryCode":"NR","latitude":"-0.52022220","longitude":"166.93117610"},{"name":"Yaren District","isoCode":"14","countryCode":"NR","latitude":"-0.54668570","longitude":"166.92109130"},{"name":"Auckland Region","isoCode":"AUK","countryCode":"NZ","latitude":"-36.66753280","longitude":"174.77333250"},{"name":"Bay of Plenty Region","isoCode":"BOP","countryCode":"NZ","latitude":"-37.42339170","longitude":"176.74163740"},{"name":"Canterbury Region","isoCode":"CAN","countryCode":"NZ","latitude":"-43.75422750","longitude":"171.16372450"},{"name":"Chatham Islands","isoCode":"CIT","countryCode":"NZ","latitude":"-44.00575230","longitude":"-176.54006740"},{"name":"Gisborne District","isoCode":"GIS","countryCode":"NZ","latitude":"-38.13581740","longitude":"178.32393090"},{"name":"Hawke\'s Bay Region","isoCode":"HKB","countryCode":"NZ","latitude":"-39.60165970","longitude":"176.58044730"},{"name":"Marlborough Region","isoCode":"MBH","countryCode":"NZ","latitude":"-41.59168830","longitude":"173.76240530"},{"name":"Manawatu-Wanganui Region","isoCode":"MWT","countryCode":"NZ","latitude":"-39.72733560","longitude":"175.43755740"},{"name":"Nelson Region","isoCode":"NSN","countryCode":"NZ","latitude":"-41.29853970","longitude":"173.24414910"},{"name":"Northland Region","isoCode":"NTL","countryCode":"NZ","latitude":"-35.41361720","longitude":"173.93208060"},{"name":"Otago Region","isoCode":"OTA","countryCode":"NZ","latitude":"-45.47906710","longitude":"170.15475670"},{"name":"Southland Region","isoCode":"STL","countryCode":"NZ","latitude":"-45.84891590","longitude":"167.67553870"},{"name":"Tasman District","isoCode":"TAS","countryCode":"NZ","latitude":"-41.45711840","longitude":"172.82097400"},{"name":"Taranaki Region","isoCode":"TKI","countryCode":"NZ","latitude":"-39.35381490","longitude":"174.43827210"},{"name":"Wellington Region","isoCode":"WGN","countryCode":"NZ","latitude":"-41.02993230","longitude":"175.43755740"},{"name":"Waikato Region","isoCode":"WKO","countryCode":"NZ","latitude":"-37.61908620","longitude":"175.02334600"},{"name":"West Coast Region","isoCode":"WTC","countryCode":"NZ","latitude":"62.41136340","longitude":"-149.07297140"},{"name":"Al Batinah Region","isoCode":"BA","countryCode":"OM","latitude":"24.34198460","longitude":"56.72989040"},{"name":"Al Batinah South Governorate","isoCode":"BJ","countryCode":"OM","latitude":"23.43149030","longitude":"57.42397960"},{"name":"Al Batinah North Governorate","isoCode":"BS","countryCode":"OM","latitude":"24.34198460","longitude":"56.72989040"},{"name":"Al Buraimi Governorate","isoCode":"BU","countryCode":"OM","latitude":"24.16714130","longitude":"56.11422530"},{"name":"Ad Dakhiliyah Governorate","isoCode":"DA","countryCode":"OM","latitude":"22.85887580","longitude":"57.53943560"},{"name":"Muscat Governorate","isoCode":"MA","countryCode":"OM","latitude":"23.58803070","longitude":"58.38287170"},{"name":"Musandam Governorate","isoCode":"MU","countryCode":"OM","latitude":"26.19861440","longitude":"56.24609490"},{"name":"Ash Sharqiyah Region","isoCode":"SH","countryCode":"OM","latitude":"22.71411960","longitude":"58.53080640"},{"name":"Ash Sharqiyah South Governorate","isoCode":"SJ","countryCode":"OM","latitude":"22.01582490","longitude":"59.32519220"},{"name":"Ash Sharqiyah North Governorate","isoCode":"SS","countryCode":"OM","latitude":"22.71411960","longitude":"58.53080640"},{"name":"Al Wusta Governorate","isoCode":"WU","countryCode":"OM","latitude":"19.95710780","longitude":"56.27568460"},{"name":"Ad Dhahirah Governorate","isoCode":"ZA","countryCode":"OM","latitude":"23.21616740","longitude":"56.49074440"},{"name":"Dhofar Governorate","isoCode":"ZU","countryCode":"OM","latitude":"17.03221210","longitude":"54.14252140"},{"name":"Bocas del Toro Province","isoCode":"1","countryCode":"PA","latitude":"9.41655210","longitude":"-82.52077870"},{"name":"Panamá Oeste Province","isoCode":"10","countryCode":"PA","latitude":"9.11967510","longitude":"-79.29021330"},{"name":"Coclé Province","isoCode":"2","countryCode":"PA","latitude":"8.62660680","longitude":"-80.36586500"},{"name":"Colón Province","isoCode":"3","countryCode":"PA","latitude":"9.18519890","longitude":"-80.05349230"},{"name":"Chiriquí Province","isoCode":"4","countryCode":"PA","latitude":"8.58489800","longitude":"-82.38857830"},{"name":"Darién Province","isoCode":"5","countryCode":"PA","latitude":"7.86817130","longitude":"-77.83672820"},{"name":"Herrera Province","isoCode":"6","countryCode":"PA","latitude":"7.77042820","longitude":"-80.72144170"},{"name":"Los Santos Province","isoCode":"7","countryCode":"PA","latitude":"7.59093020","longitude":"-80.36586500"},{"name":"Panamá Province","isoCode":"8","countryCode":"PA","latitude":"9.11967510","longitude":"-79.29021330"},{"name":"Veraguas Province","isoCode":"9","countryCode":"PA","latitude":"8.12310330","longitude":"-81.07546570"},{"name":"Emberá-Wounaan Comarca","isoCode":"EM","countryCode":"PA","latitude":"8.37669830","longitude":"-77.65361250"},{"name":"Guna Yala","isoCode":"KY","countryCode":"PA","latitude":"9.23443950","longitude":"-78.19262500"},{"name":"Ngöbe-Buglé Comarca","isoCode":"NB","countryCode":"PA","latitude":"8.65958330","longitude":"-81.77870210"},{"name":"Amazonas","isoCode":"AMA","countryCode":"PE","latitude":null,"longitude":null},{"name":"Áncash","isoCode":"ANC","countryCode":"PE","latitude":"-9.32504970","longitude":"-77.56194190"},{"name":"Apurímac","isoCode":"APU","countryCode":"PE","latitude":"-14.05045330","longitude":"-73.08774900"},{"name":"Arequipa","isoCode":"ARE","countryCode":"PE","latitude":"-16.40904740","longitude":"-71.53745100"},{"name":"Ayacucho","isoCode":"AYA","countryCode":"PE","latitude":"-13.16387370","longitude":"-74.22356410"},{"name":"Cajamarca","isoCode":"CAJ","countryCode":"PE","latitude":"-7.16174650","longitude":"-78.51278550"},{"name":"Callao","isoCode":"CAL","countryCode":"PE","latitude":"-12.05084910","longitude":"-77.12598430"},{"name":"Cusco","isoCode":"CUS","countryCode":"PE","latitude":"-13.53195000","longitude":"-71.96746260"},{"name":"Huanuco","isoCode":"HUC","countryCode":"PE","latitude":"-9.92076480","longitude":"-76.24108430"},{"name":"Huancavelica","isoCode":"HUV","countryCode":"PE","latitude":"-12.78619780","longitude":"-74.97640240"},{"name":"Ica","isoCode":"ICA","countryCode":"PE","latitude":"42.35288320","longitude":"-71.04300970"},{"name":"Junín","isoCode":"JUN","countryCode":"PE","latitude":"-11.15819250","longitude":"-75.99263060"},{"name":"La Libertad","isoCode":"LAL","countryCode":"PE","latitude":"13.49069700","longitude":"-89.30846070"},{"name":"Lambayeque","isoCode":"LAM","countryCode":"PE","latitude":"-6.71976660","longitude":"-79.90807570"},{"name":"Lima","isoCode":"LIM","countryCode":"PE","latitude":"-12.04637310","longitude":"-77.04275400"},{"name":"Loreto","isoCode":"LOR","countryCode":"PE","latitude":"-4.37416430","longitude":"-76.13042640"},{"name":"Madre de Dios","isoCode":"MDD","countryCode":"PE","latitude":"-11.76687050","longitude":"-70.81199530"},{"name":"Moquegua","isoCode":"MOQ","countryCode":"PE","latitude":"-17.19273610","longitude":"-70.93281380"},{"name":"Pasco","isoCode":"PAS","countryCode":"PE","latitude":"46.23050490","longitude":"-119.09223160"},{"name":"Piura","isoCode":"PIU","countryCode":"PE","latitude":"-5.17828840","longitude":"-80.65488820"},{"name":"Puno","isoCode":"PUN","countryCode":"PE","latitude":"-15.84022180","longitude":"-70.02188050"},{"name":"San Martín","isoCode":"SAM","countryCode":"PE","latitude":"37.08494640","longitude":"-121.61022160"},{"name":"Tacna","isoCode":"TAC","countryCode":"PE","latitude":"-18.00656790","longitude":"-70.24627410"},{"name":"Tumbes","isoCode":"TUM","countryCode":"PE","latitude":"-3.55649210","longitude":"-80.42708850"},{"name":"Ucayali","isoCode":"UCA","countryCode":"PE","latitude":"-9.82511830","longitude":"-73.08774900"},{"name":"Chimbu Province","isoCode":"CPK","countryCode":"PG","latitude":"-6.30876820","longitude":"144.87312190"},{"name":"Central Province","isoCode":"CPM","countryCode":"PG","latitude":null,"longitude":null},{"name":"East New Britain","isoCode":"EBR","countryCode":"PG","latitude":"-4.61289430","longitude":"151.88773210"},{"name":"Eastern Highlands Province","isoCode":"EHG","countryCode":"PG","latitude":"-6.58616740","longitude":"145.66896360"},{"name":"Enga Province","isoCode":"EPW","countryCode":"PG","latitude":"-5.30058490","longitude":"143.56356370"},{"name":"Gulf","isoCode":"GPK","countryCode":"PG","latitude":"37.05483150","longitude":"-94.43704190"},{"name":"Hela","isoCode":"HLA","countryCode":"PG","latitude":"42.33295160","longitude":"-83.04826180"},{"name":"Jiwaka Province","isoCode":"JWK","countryCode":"PG","latitude":"-5.86911540","longitude":"144.69727740"},{"name":"Milne Bay Province","isoCode":"MBA","countryCode":"PG","latitude":"-9.52214510","longitude":"150.67496530"},{"name":"Morobe Province","isoCode":"MPL","countryCode":"PG","latitude":"-6.80137370","longitude":"146.56164700"},{"name":"Madang Province","isoCode":"MPM","countryCode":"PG","latitude":"-4.98497330","longitude":"145.13758340"},{"name":"Manus Province","isoCode":"MRL","countryCode":"PG","latitude":"-2.09411690","longitude":"146.87609510"},{"name":"Port Moresby","isoCode":"NCD","countryCode":"PG","latitude":"-9.44380040","longitude":"147.18026710"},{"name":"New Ireland Province","isoCode":"NIK","countryCode":"PG","latitude":"-4.28532560","longitude":"152.92059180"},{"name":"Oro Province","isoCode":"NPP","countryCode":"PG","latitude":"-8.89880630","longitude":"148.18929210"},{"name":"Bougainville","isoCode":"NSB","countryCode":"PG","latitude":"-6.37539190","longitude":"155.38071010"},{"name":"Sandaun Province","isoCode":"SAN","countryCode":"PG","latitude":"-3.71261790","longitude":"141.68342750"},{"name":"Southern Highlands Province","isoCode":"SHM","countryCode":"PG","latitude":"-6.41790830","longitude":"143.56356370"},{"name":"West New Britain Province","isoCode":"WBK","countryCode":"PG","latitude":"-5.70474320","longitude":"150.02594660"},{"name":"Western Highlands Province","isoCode":"WHM","countryCode":"PG","latitude":"-5.62681280","longitude":"144.25931180"},{"name":"Western Province","isoCode":"WPD","countryCode":"PG","latitude":null,"longitude":null},{"name":"Ilocos Region","isoCode":"01","countryCode":"PH","latitude":"16.08321440","longitude":"120.61998950"},{"name":"Cagayan Valley","isoCode":"02","countryCode":"PH","latitude":"16.97537580","longitude":"121.81070790"},{"name":"Central Luzon","isoCode":"03","countryCode":"PH","latitude":"15.48277220","longitude":"120.71200230"},{"name":"Bicol Region","isoCode":"05","countryCode":"PH","latitude":"13.42098850","longitude":"123.41367360"},{"name":"Western Visayas","isoCode":"06","countryCode":"PH","latitude":"11.00498360","longitude":"122.53727410"},{"name":"Central Visayas","isoCode":"07","countryCode":"PH","latitude":"9.81687500","longitude":"124.06414190"},{"name":"Eastern Visayas","isoCode":"08","countryCode":"PH","latitude":"12.24455330","longitude":"125.03881640"},{"name":"Zamboanga Peninsula","isoCode":"09","countryCode":"PH","latitude":"8.15407700","longitude":"123.25879300"},{"name":"Northern Mindanao","isoCode":"10","countryCode":"PH","latitude":"8.02016350","longitude":"124.68565090"},{"name":"Davao Region","isoCode":"11","countryCode":"PH","latitude":"7.30416220","longitude":"126.08934060"},{"name":"Soccsksargen","isoCode":"12","countryCode":"PH","latitude":"6.27069180","longitude":"124.68565090"},{"name":"Caraga","isoCode":"13","countryCode":"PH","latitude":"8.80145620","longitude":"125.74068820"},{"name":"Autonomous Region in Muslim Mindanao","isoCode":"14","countryCode":"PH","latitude":"6.95683130","longitude":"124.24215970"},{"name":"Cordillera Administrative Region","isoCode":"15","countryCode":"PH","latitude":"17.35125420","longitude":"121.17188510"},{"name":"Calabarzon","isoCode":"40","countryCode":"PH","latitude":"14.10078030","longitude":"121.07937050"},{"name":"Mimaropa","isoCode":"41","countryCode":"PH","latitude":"9.84320650","longitude":"118.73647830"},{"name":"Abra","isoCode":"ABR","countryCode":"PH","latitude":"42.49708300","longitude":"-96.38441000"},{"name":"Agusan del Norte","isoCode":"AGN","countryCode":"PH","latitude":"8.94562590","longitude":"125.53192340"},{"name":"Agusan del Sur","isoCode":"AGS","countryCode":"PH","latitude":"8.04638880","longitude":"126.06153840"},{"name":"Aklan","isoCode":"AKL","countryCode":"PH","latitude":"11.81661090","longitude":"122.09415410"},{"name":"Albay","isoCode":"ALB","countryCode":"PH","latitude":"13.17748270","longitude":"123.52800720"},{"name":"Antique","isoCode":"ANT","countryCode":"PH","latitude":"37.03586950","longitude":"-95.63616940"},{"name":"Apayao","isoCode":"APA","countryCode":"PH","latitude":"18.01203040","longitude":"121.17103890"},{"name":"Aurora","isoCode":"AUR","countryCode":"PH","latitude":"36.97089100","longitude":"-93.71797900"},{"name":"Bataan","isoCode":"BAN","countryCode":"PH","latitude":"14.64168420","longitude":"120.48184460"},{"name":"Basilan","isoCode":"BAS","countryCode":"PH","latitude":"6.42963490","longitude":"121.98701650"},{"name":"Benguet","isoCode":"BEN","countryCode":"PH","latitude":"16.55772570","longitude":"120.80394740"},{"name":"Biliran","isoCode":"BIL","countryCode":"PH","latitude":"11.58331520","longitude":"124.46418480"},{"name":"Bohol","isoCode":"BOH","countryCode":"PH","latitude":"9.84999110","longitude":"124.14354270"},{"name":"Batangas","isoCode":"BTG","countryCode":"PH","latitude":"13.75646510","longitude":"121.05830760"},{"name":"Batanes","isoCode":"BTN","countryCode":"PH","latitude":"20.44850740","longitude":"121.97081290"},{"name":"Bukidnon","isoCode":"BUK","countryCode":"PH","latitude":"8.05150540","longitude":"124.92299460"},{"name":"Bulacan","isoCode":"BUL","countryCode":"PH","latitude":"14.79427350","longitude":"120.87990080"},{"name":"Cagayan","isoCode":"CAG","countryCode":"PH","latitude":"18.24896290","longitude":"121.87878330"},{"name":"Camiguin","isoCode":"CAM","countryCode":"PH","latitude":"9.17321640","longitude":"124.72987650"},{"name":"Camarines Norte","isoCode":"CAN","countryCode":"PH","latitude":"14.13902650","longitude":"122.76330360"},{"name":"Capiz","isoCode":"CAP","countryCode":"PH","latitude":"11.55288160","longitude":"122.74072300"},{"name":"Camarines Sur","isoCode":"CAS","countryCode":"PH","latitude":"13.52501970","longitude":"123.34861470"},{"name":"Catanduanes","isoCode":"CAT","countryCode":"PH","latitude":"13.70886840","longitude":"124.24215970"},{"name":"Cavite","isoCode":"CAV","countryCode":"PH","latitude":"14.47912970","longitude":"120.89696340"},{"name":"Cebu","isoCode":"CEB","countryCode":"PH","latitude":"10.31569920","longitude":"123.88543660"},{"name":"Compostela Valley","isoCode":"COM","countryCode":"PH","latitude":"7.51251500","longitude":"126.17626150"},{"name":"Davao Oriental","isoCode":"DAO","countryCode":"PH","latitude":"7.31715850","longitude":"126.54198870"},{"name":"Davao del Sur","isoCode":"DAS","countryCode":"PH","latitude":"6.76626870","longitude":"125.32842690"},{"name":"Davao del Norte","isoCode":"DAV","countryCode":"PH","latitude":"7.56176990","longitude":"125.65328480"},{"name":"Dinagat Islands","isoCode":"DIN","countryCode":"PH","latitude":"10.12818160","longitude":"125.60954740"},{"name":"Davao Occidental","isoCode":"DVO","countryCode":"PH","latitude":"6.09413960","longitude":"125.60954740"},{"name":"Eastern Samar","isoCode":"EAS","countryCode":"PH","latitude":"11.50007310","longitude":"125.49999080"},{"name":"Guimaras","isoCode":"GUI","countryCode":"PH","latitude":"10.59286610","longitude":"122.63250810"},{"name":"Ifugao","isoCode":"IFU","countryCode":"PH","latitude":"16.83307920","longitude":"121.17103890"},{"name":"Iloilo","isoCode":"ILI","countryCode":"PH","latitude":"10.72015010","longitude":"122.56210630"},{"name":"Ilocos Norte","isoCode":"ILN","countryCode":"PH","latitude":"18.16472810","longitude":"120.71155920"},{"name":"Ilocos Sur","isoCode":"ILS","countryCode":"PH","latitude":"17.22786640","longitude":"120.57395790"},{"name":"Isabela","isoCode":"ISA","countryCode":"PH","latitude":"18.50077590","longitude":"-67.02434620"},{"name":"Kalinga","isoCode":"KAL","countryCode":"PH","latitude":"17.47404220","longitude":"121.35416310"},{"name":"Laguna","isoCode":"LAG","countryCode":"PH","latitude":"33.54271890","longitude":"-117.78535680"},{"name":"Lanao del Norte","isoCode":"LAN","countryCode":"PH","latitude":"7.87218110","longitude":"123.88577470"},{"name":"Lanao del Sur","isoCode":"LAS","countryCode":"PH","latitude":"7.82317600","longitude":"124.41982430"},{"name":"Leyte","isoCode":"LEY","countryCode":"PH","latitude":"10.86245360","longitude":"124.88111950"},{"name":"La Union","isoCode":"LUN","countryCode":"PH","latitude":"38.87668780","longitude":"-77.12809120"},{"name":"Marinduque","isoCode":"MAD","countryCode":"PH","latitude":"13.47671710","longitude":"121.90321920"},{"name":"Maguindanao","isoCode":"MAG","countryCode":"PH","latitude":"6.94225810","longitude":"124.41982430"},{"name":"Masbate","isoCode":"MAS","countryCode":"PH","latitude":"12.35743460","longitude":"123.55040760"},{"name":"Occidental Mindoro","isoCode":"MDC","countryCode":"PH","latitude":"13.10241110","longitude":"120.76512840"},{"name":"Oriental Mindoro","isoCode":"MDR","countryCode":"PH","latitude":"13.05645980","longitude":"121.40694170"},{"name":"Mountain Province","isoCode":"MOU","countryCode":"PH","latitude":"40.70754370","longitude":"-73.95010330"},{"name":"Misamis Occidental","isoCode":"MSC","countryCode":"PH","latitude":"8.33749030","longitude":"123.70706190"},{"name":"Misamis Oriental","isoCode":"MSR","countryCode":"PH","latitude":"8.50455580","longitude":"124.62195920"},{"name":"Cotabato","isoCode":"NCO","countryCode":"PH","latitude":"7.20466680","longitude":"124.23104390"},{"name":"Metro Manila","isoCode":"NCR","countryCode":"PH","latitude":"14.60905370","longitude":"121.02225650"},{"name":"Negros Occidental","isoCode":"NEC","countryCode":"PH","latitude":"10.29256090","longitude":"123.02465180"},{"name":"Negros Oriental","isoCode":"NER","countryCode":"PH","latitude":"9.62820830","longitude":"122.98883190"},{"name":"Northern Samar","isoCode":"NSA","countryCode":"PH","latitude":"12.36131990","longitude":"124.77407930"},{"name":"Nueva Ecija","isoCode":"NUE","countryCode":"PH","latitude":"15.57837500","longitude":"121.11126150"},{"name":"Nueva Vizcaya","isoCode":"NUV","countryCode":"PH","latitude":"16.33011070","longitude":"121.17103890"},{"name":"Pampanga","isoCode":"PAM","countryCode":"PH","latitude":"15.07940900","longitude":"120.61998950"},{"name":"Pangasinan","isoCode":"PAN","countryCode":"PH","latitude":"15.89490550","longitude":"120.28631830"},{"name":"Palawan","isoCode":"PLW","countryCode":"PH","latitude":"9.83494930","longitude":"118.73836150"},{"name":"Quezon","isoCode":"QUE","countryCode":"PH","latitude":"14.03139060","longitude":"122.11309090"},{"name":"Quirino","isoCode":"QUI","countryCode":"PH","latitude":"16.27004240","longitude":"121.53700030"},{"name":"Rizal","isoCode":"RIZ","countryCode":"PH","latitude":"14.60374460","longitude":"121.30840880"},{"name":"Romblon","isoCode":"ROM","countryCode":"PH","latitude":"12.57780160","longitude":"122.26914600"},{"name":"Sarangani","isoCode":"SAR","countryCode":"PH","latitude":"5.92671750","longitude":"124.99475100"},{"name":"South Cotabato","isoCode":"SCO","countryCode":"PH","latitude":"6.33575650","longitude":"124.77407930"},{"name":"Siquijor","isoCode":"SIG","countryCode":"PH","latitude":"9.19987790","longitude":"123.59519250"},{"name":"Southern Leyte","isoCode":"SLE","countryCode":"PH","latitude":"10.33462060","longitude":"125.17087410"},{"name":"Sulu","isoCode":"SLU","countryCode":"PH","latitude":"5.97490110","longitude":"121.03351000"},{"name":"Sorsogon","isoCode":"SOR","countryCode":"PH","latitude":"12.99270950","longitude":"124.01474640"},{"name":"Sultan Kudarat","isoCode":"SUK","countryCode":"PH","latitude":"6.50694010","longitude":"124.41982430"},{"name":"Surigao del Norte","isoCode":"SUN","countryCode":"PH","latitude":"9.51482800","longitude":"125.69699840"},{"name":"Surigao del Sur","isoCode":"SUR","countryCode":"PH","latitude":"8.54049060","longitude":"126.11447580"},{"name":"Tarlac","isoCode":"TAR","countryCode":"PH","latitude":"15.47547860","longitude":"120.59634920"},{"name":"Tawi-Tawi","isoCode":"TAW","countryCode":"PH","latitude":"5.13381100","longitude":"119.95092600"},{"name":"Zamboanga del Norte","isoCode":"ZAN","countryCode":"PH","latitude":"8.38862820","longitude":"123.16888830"},{"name":"Zamboanga del Sur","isoCode":"ZAS","countryCode":"PH","latitude":"7.83830540","longitude":"123.29666570"},{"name":"Zambales","isoCode":"ZMB","countryCode":"PH","latitude":"15.50817660","longitude":"119.96978080"},{"name":"Zamboanga Sibugay","isoCode":"ZSI","countryCode":"PH","latitude":"7.52252470","longitude":"122.31075170"},{"name":"Balochistan","isoCode":"BA","countryCode":"PK","latitude":"28.49073320","longitude":"65.09577920"},{"name":"Gilgit-Baltistan","isoCode":"GB","countryCode":"PK","latitude":"35.80256670","longitude":"74.98318080"},{"name":"Islamabad Capital Territory","isoCode":"IS","countryCode":"PK","latitude":"33.72049970","longitude":"73.04052770"},{"name":"Azad Kashmir","isoCode":"JK","countryCode":"PK","latitude":"33.92590550","longitude":"73.78103340"},{"name":"Khyber Pakhtunkhwa","isoCode":"KP","countryCode":"PK","latitude":"34.95262050","longitude":"72.33111300"},{"name":"Punjab","isoCode":"PB","countryCode":"PK","latitude":"31.14713050","longitude":"75.34121790"},{"name":"Sindh","isoCode":"SD","countryCode":"PK","latitude":"25.89430180","longitude":"68.52471490"},{"name":"Federally Administered Tribal Areas","isoCode":"TA","countryCode":"PK","latitude":"32.66747600","longitude":"69.85974060"},{"name":"Lower Silesian Voivodeship","isoCode":"DS","countryCode":"PL","latitude":"51.13398610","longitude":"16.88419610"},{"name":"Kuyavian-Pomeranian Voivodeship","isoCode":"KP","countryCode":"PL","latitude":"53.16483630","longitude":"18.48342240"},{"name":"Lubusz Voivodeship","isoCode":"LB","countryCode":"PL","latitude":"52.22746120","longitude":"15.25591030"},{"name":"Łódź Voivodeship","isoCode":"LD","countryCode":"PL","latitude":"51.46347710","longitude":"19.17269740"},{"name":"Lublin Voivodeship","isoCode":"LU","countryCode":"PL","latitude":"51.24935190","longitude":"23.10113920"},{"name":"Lesser Poland Voivodeship","isoCode":"MA","countryCode":"PL","latitude":"49.72253060","longitude":"20.25033580"},{"name":"Masovian Voivodeship","isoCode":"MZ","countryCode":"PL","latitude":"51.89271820","longitude":"21.00216790"},{"name":"Opole Voivodeship","isoCode":"OP","countryCode":"PL","latitude":"50.80037610","longitude":"17.93798900"},{"name":"Podlaskie Voivodeship","isoCode":"PD","countryCode":"PL","latitude":"53.06971590","longitude":"22.96746390"},{"name":"Podkarpackie Voivodeship","isoCode":"PK","countryCode":"PL","latitude":"50.05747490","longitude":"22.08956910"},{"name":"Pomeranian Voivodeship","isoCode":"PM","countryCode":"PL","latitude":"54.29442520","longitude":"18.15311640"},{"name":"Świętokrzyskie Voivodeship","isoCode":"SK","countryCode":"PL","latitude":"50.62610410","longitude":"20.94062790"},{"name":"Silesian Voivodeship","isoCode":"SL","countryCode":"PL","latitude":"50.57165950","longitude":"19.32197680"},{"name":"Warmian-Masurian Voivodeship","isoCode":"WN","countryCode":"PL","latitude":"53.86711170","longitude":"20.70278610"},{"name":"Greater Poland Voivodeship","isoCode":"WP","countryCode":"PL","latitude":"52.27998600","longitude":"17.35229390"},{"name":"West Pomeranian Voivodeship","isoCode":"ZP","countryCode":"PL","latitude":"53.46578910","longitude":"15.18225810"},{"name":"Aveiro","isoCode":"01","countryCode":"PT","latitude":"40.72090230","longitude":"-8.57210160"},{"name":"Beja","isoCode":"02","countryCode":"PT","latitude":"37.96877860","longitude":"-7.87216000"},{"name":"Braga","isoCode":"03","countryCode":"PT","latitude":"41.55038800","longitude":"-8.42613010"},{"name":"Bragança","isoCode":"04","countryCode":"PT","latitude":"41.80616520","longitude":"-6.75674270"},{"name":"Castelo Branco","isoCode":"05","countryCode":"PT","latitude":"39.86313230","longitude":"-7.48141630"},{"name":"Coimbra","isoCode":"06","countryCode":"PT","latitude":"40.20579940","longitude":"-8.41369000"},{"name":"Évora","isoCode":"07","countryCode":"PT","latitude":"38.57444680","longitude":"-7.90765530"},{"name":"Faro","isoCode":"08","countryCode":"PT","latitude":"37.01935480","longitude":"-7.93043970"},{"name":"Guarda","isoCode":"09","countryCode":"PT","latitude":"40.53859720","longitude":"-7.26757720"},{"name":"Leiria","isoCode":"10","countryCode":"PT","latitude":"39.77095320","longitude":"-8.79218360"},{"name":"Lisbon","isoCode":"11","countryCode":"PT","latitude":"38.72232630","longitude":"-9.13927140"},{"name":"Portalegre","isoCode":"12","countryCode":"PT","latitude":"39.29670860","longitude":"-7.42847550"},{"name":"Porto","isoCode":"13","countryCode":"PT","latitude":"41.14766290","longitude":"-8.60789730"},{"name":"Santarém","isoCode":"14","countryCode":"PT","latitude":"39.23666870","longitude":"-8.68599440"},{"name":"Setúbal","isoCode":"15","countryCode":"PT","latitude":"38.52409330","longitude":"-8.89258760"},{"name":"Viana do Castelo","isoCode":"16","countryCode":"PT","latitude":"41.69180460","longitude":"-8.83445100"},{"name":"Vila Real","isoCode":"17","countryCode":"PT","latitude":"41.30035270","longitude":"-7.74572740"},{"name":"Viseu","isoCode":"18","countryCode":"PT","latitude":"40.65884240","longitude":"-7.91475600"},{"name":"Açores","isoCode":"20","countryCode":"PT","latitude":"37.74124880","longitude":"-25.67559440"},{"name":"Madeira","isoCode":"30","countryCode":"PT","latitude":"32.76070740","longitude":"-16.95947230"},{"name":"Aimeliik","isoCode":"002","countryCode":"PW","latitude":"7.44558590","longitude":"134.50308780"},{"name":"Airai","isoCode":"004","countryCode":"PW","latitude":"7.39661180","longitude":"134.56902250"},{"name":"Angaur","isoCode":"010","countryCode":"PW","latitude":"6.90922300","longitude":"134.13879340"},{"name":"Hatohobei","isoCode":"050","countryCode":"PW","latitude":"3.00706580","longitude":"131.12377810"},{"name":"Kayangel","isoCode":"100","countryCode":"PW","latitude":"8.07000000","longitude":"134.70277800"},{"name":"Koror","isoCode":"150","countryCode":"PW","latitude":"7.33756460","longitude":"134.48894690"},{"name":"Melekeok","isoCode":"212","countryCode":"PW","latitude":"7.51502860","longitude":"134.59725180"},{"name":"Ngaraard","isoCode":"214","countryCode":"PW","latitude":"7.60794000","longitude":"134.63486450"},{"name":"Ngarchelong","isoCode":"218","countryCode":"PW","latitude":"7.71054690","longitude":"134.63016460"},{"name":"Ngardmau","isoCode":"222","countryCode":"PW","latitude":"7.58504860","longitude":"134.55960890"},{"name":"Ngatpang","isoCode":"224","countryCode":"PW","latitude":"7.47109940","longitude":"134.52664660"},{"name":"Ngchesar","isoCode":"226","countryCode":"PW","latitude":"7.45232800","longitude":"134.57843420"},{"name":"Ngeremlengui","isoCode":"227","countryCode":"PW","latitude":"7.51983970","longitude":"134.55960890"},{"name":"Ngiwal","isoCode":"228","countryCode":"PW","latitude":"7.56147640","longitude":"134.61606190"},{"name":"Peleliu","isoCode":"350","countryCode":"PW","latitude":"7.00229060","longitude":"134.24316280"},{"name":"Sonsorol","isoCode":"370","countryCode":"PW","latitude":"5.32681190","longitude":"132.22391170"},{"name":"Concepción Department","isoCode":"1","countryCode":"PY","latitude":"-23.42142640","longitude":"-57.43444510"},{"name":"Alto Paraná Department","isoCode":"10","countryCode":"PY","latitude":"-25.60755460","longitude":"-54.96118360"},{"name":"Central Department","isoCode":"11","countryCode":"PY","latitude":"36.15592290","longitude":"-95.96620750"},{"name":"Ñeembucú Department","isoCode":"12","countryCode":"PY","latitude":"-27.02991140","longitude":"-57.82539500"},{"name":"Amambay Department","isoCode":"13","countryCode":"PY","latitude":"-22.55902720","longitude":"-56.02499820"},{"name":"Canindeyú","isoCode":"14","countryCode":"PY","latitude":"-24.13787350","longitude":"-55.66896360"},{"name":"Presidente Hayes Department","isoCode":"15","countryCode":"PY","latitude":"-23.35126050","longitude":"-58.73736340"},{"name":"Alto Paraguay Department","isoCode":"16","countryCode":"PY","latitude":"-20.08525080","longitude":"-59.47209040"},{"name":"Boquerón Department","isoCode":"19","countryCode":"PY","latitude":"-21.74492540","longitude":"-60.95400730"},{"name":"San Pedro Department","isoCode":"2","countryCode":"PY","latitude":"-24.19486680","longitude":"-56.56164700"},{"name":"Cordillera Department","isoCode":"3","countryCode":"PY","latitude":"-25.22894910","longitude":"-57.01116810"},{"name":"Guairá Department","isoCode":"4","countryCode":"PY","latitude":"-25.88109320","longitude":"-56.29293810"},{"name":"Caaguazú","isoCode":"5","countryCode":"PY","latitude":"-25.46458180","longitude":"-56.01385100"},{"name":"Caazapá","isoCode":"6","countryCode":"PY","latitude":"-26.18277130","longitude":"-56.37123270"},{"name":"Itapúa","isoCode":"7","countryCode":"PY","latitude":"-26.79236230","longitude":"-55.66896360"},{"name":"Misiones Department","isoCode":"8","countryCode":"PY","latitude":"-26.84335120","longitude":"-57.10131880"},{"name":"Paraguarí Department","isoCode":"9","countryCode":"PY","latitude":"-25.62621740","longitude":"-57.15206420"},{"name":"Doha","isoCode":"DA","countryCode":"QA","latitude":"25.28544730","longitude":"51.53103980"},{"name":"Al Khor","isoCode":"KH","countryCode":"QA","latitude":"25.68040780","longitude":"51.49685020"},{"name":"Madinat ash Shamal","isoCode":"MS","countryCode":"QA","latitude":"26.11827430","longitude":"51.21572650"},{"name":"Al Rayyan Municipality","isoCode":"RA","countryCode":"QA","latitude":"25.25225510","longitude":"51.43887130"},{"name":"Al-Shahaniya","isoCode":"SH","countryCode":"QA","latitude":"25.41063860","longitude":"51.18460250"},{"name":"Umm Salal Municipality","isoCode":"US","countryCode":"QA","latitude":"25.48752420","longitude":"51.39656800"},{"name":"Al Wakrah","isoCode":"WA","countryCode":"QA","latitude":"25.16593140","longitude":"51.59755240"},{"name":"Al Daayen","isoCode":"ZA","countryCode":"QA","latitude":"25.57845590","longitude":"51.48213870"},{"name":"Alba","isoCode":"AB","countryCode":"RO","latitude":"44.70091530","longitude":"8.03569110"},{"name":"Arges","isoCode":"AG","countryCode":"RO","latitude":"45.07225270","longitude":"24.81427260"},{"name":"Arad County","isoCode":"AR","countryCode":"RO","latitude":"46.22836510","longitude":"21.65978190"},{"name":"Bucharest","isoCode":"B","countryCode":"RO","latitude":"44.42676740","longitude":"26.10253840"},{"name":"Bacău County","isoCode":"BC","countryCode":"RO","latitude":"46.32581840","longitude":"26.66237800"},{"name":"Bihor County","isoCode":"BH","countryCode":"RO","latitude":"47.01575160","longitude":"22.17226600"},{"name":"Bistrița-Năsăud County","isoCode":"BN","countryCode":"RO","latitude":"47.24861070","longitude":"24.53228140"},{"name":"Braila","isoCode":"BR","countryCode":"RO","latitude":"45.26524630","longitude":"27.95947140"},{"name":"Botoșani County","isoCode":"BT","countryCode":"RO","latitude":"47.89240420","longitude":"26.75917810"},{"name":"Brașov County","isoCode":"BV","countryCode":"RO","latitude":"45.77818440","longitude":"25.22258000"},{"name":"Buzău County","isoCode":"BZ","countryCode":"RO","latitude":"45.33509120","longitude":"26.71075780"},{"name":"Cluj County","isoCode":"CJ","countryCode":"RO","latitude":"46.79417970","longitude":"23.61214920"},{"name":"Călărași County","isoCode":"CL","countryCode":"RO","latitude":"44.36587150","longitude":"26.75486070"},{"name":"Caraș-Severin County","isoCode":"CS","countryCode":"RO","latitude":"45.11396460","longitude":"22.07409930"},{"name":"Constanța County","isoCode":"CT","countryCode":"RO","latitude":"44.21298700","longitude":"28.25500550"},{"name":"Covasna County","isoCode":"CV","countryCode":"RO","latitude":"45.94263470","longitude":"25.89189840"},{"name":"Dâmbovița County","isoCode":"DB","countryCode":"RO","latitude":"44.92898930","longitude":"25.42538500"},{"name":"Dolj County","isoCode":"DJ","countryCode":"RO","latitude":"44.16230220","longitude":"23.63250540"},{"name":"Gorj County","isoCode":"GJ","countryCode":"RO","latitude":"44.94855950","longitude":"23.24270790"},{"name":"Galați County","isoCode":"GL","countryCode":"RO","latitude":"45.78005690","longitude":"27.82515760"},{"name":"Giurgiu County","isoCode":"GR","countryCode":"RO","latitude":"43.90370760","longitude":"25.96992650"},{"name":"Hunedoara County","isoCode":"HD","countryCode":"RO","latitude":"45.79363800","longitude":"22.99759930"},{"name":"Harghita County","isoCode":"HR","countryCode":"RO","latitude":"46.49285070","longitude":"25.64566960"},{"name":"Ilfov County","isoCode":"IF","countryCode":"RO","latitude":"44.53554800","longitude":"26.23248860"},{"name":"Ialomița County","isoCode":"IL","countryCode":"RO","latitude":"44.60313300","longitude":"27.37899140"},{"name":"Iași County","isoCode":"IS","countryCode":"RO","latitude":"47.26796530","longitude":"27.21856620"},{"name":"Mehedinți County","isoCode":"MH","countryCode":"RO","latitude":"44.55150530","longitude":"22.90441570"},{"name":"Maramureș County","isoCode":"MM","countryCode":"RO","latitude":"46.55699040","longitude":"24.67232150"},{"name":"Mureș County","isoCode":"MS","countryCode":"RO","latitude":"46.55699040","longitude":"24.67232150"},{"name":"Neamț County","isoCode":"NT","countryCode":"RO","latitude":"46.97586850","longitude":"26.38187640"},{"name":"Olt County","isoCode":"OT","countryCode":"RO","latitude":"44.20079700","longitude":"24.50229810"},{"name":"Prahova County","isoCode":"PH","countryCode":"RO","latitude":"45.08919060","longitude":"26.08293130"},{"name":"Sibiu County","isoCode":"SB","countryCode":"RO","latitude":"45.92691060","longitude":"24.22548070"},{"name":"Sălaj County","isoCode":"SJ","countryCode":"RO","latitude":"47.20908130","longitude":"23.21219010"},{"name":"Satu Mare County","isoCode":"SM","countryCode":"RO","latitude":"47.76689050","longitude":"22.92413770"},{"name":"Suceava County","isoCode":"SV","countryCode":"RO","latitude":"47.55055480","longitude":"25.74106200"},{"name":"Tulcea County","isoCode":"TL","countryCode":"RO","latitude":"45.04505650","longitude":"29.03249120"},{"name":"Timiș County","isoCode":"TM","countryCode":"RO","latitude":"45.81389020","longitude":"21.33310550"},{"name":"Teleorman County","isoCode":"TR","countryCode":"RO","latitude":"44.01604910","longitude":"25.29866280"},{"name":"Vâlcea County","isoCode":"VL","countryCode":"RO","latitude":"45.07980510","longitude":"24.08352830"},{"name":"Vrancea County","isoCode":"VN","countryCode":"RO","latitude":"45.81348760","longitude":"27.06575310"},{"name":"Vaslui County","isoCode":"VS","countryCode":"RO","latitude":"46.46310590","longitude":"27.73980310"},{"name":"Belgrade","isoCode":"00","countryCode":"RS","latitude":"44.78656800","longitude":"20.44892160"},{"name":"North Bačka District","isoCode":"01","countryCode":"RS","latitude":"45.98033940","longitude":"19.59070010"},{"name":"Central Banat District","isoCode":"02","countryCode":"RS","latitude":"45.47884850","longitude":"20.60825220"},{"name":"North Banat District","isoCode":"03","countryCode":"RS","latitude":"45.90683900","longitude":"19.99934170"},{"name":"South Banat District","isoCode":"04","countryCode":"RS","latitude":"45.00274570","longitude":"21.05425090"},{"name":"West Bačka District","isoCode":"05","countryCode":"RS","latitude":"45.73553850","longitude":"19.18973640"},{"name":"South Bačka District","isoCode":"06","countryCode":"RS","latitude":"45.48903440","longitude":"19.69761870"},{"name":"Srem District","isoCode":"07","countryCode":"RS","latitude":"45.00291710","longitude":"19.80137730"},{"name":"Mačva District","isoCode":"08","countryCode":"RS","latitude":"44.59253140","longitude":"19.50822460"},{"name":"Kolubara District","isoCode":"09","countryCode":"RS","latitude":"44.35098110","longitude":"20.00043050"},{"name":"Podunavlje District","isoCode":"10","countryCode":"RS","latitude":"44.47291560","longitude":"20.99014260"},{"name":"Braničevo District","isoCode":"11","countryCode":"RS","latitude":"44.69822460","longitude":"21.54467750"},{"name":"Šumadija District","isoCode":"12","countryCode":"RS","latitude":"44.20506780","longitude":"20.78565650"},{"name":"Pomoravlje District","isoCode":"13","countryCode":"RS","latitude":"43.95913790","longitude":"21.27135300"},{"name":"Bor District","isoCode":"14","countryCode":"RS","latitude":"44.06989180","longitude":"22.09850860"},{"name":"Zaječar District","isoCode":"15","countryCode":"RS","latitude":"43.90150480","longitude":"22.27380110"},{"name":"Zlatibor District","isoCode":"16","countryCode":"RS","latitude":"43.64541700","longitude":"19.71014550"},{"name":"Moravica District","isoCode":"17","countryCode":"RS","latitude":"43.84147000","longitude":"20.29049870"},{"name":"Raška District","isoCode":"18","countryCode":"RS","latitude":"43.33734610","longitude":"20.57340050"},{"name":"Rasina District","isoCode":"19","countryCode":"RS","latitude":"43.52635250","longitude":"21.15881780"},{"name":"Nišava District","isoCode":"20","countryCode":"RS","latitude":"43.37389020","longitude":"21.93223310"},{"name":"Toplica District","isoCode":"21","countryCode":"RS","latitude":"43.19065920","longitude":"21.34077620"},{"name":"Pirot District","isoCode":"22","countryCode":"RS","latitude":"43.08740360","longitude":"22.59830440"},{"name":"Jablanica District","isoCode":"23","countryCode":"RS","latitude":"42.94815600","longitude":"21.81293210"},{"name":"Pčinja District","isoCode":"24","countryCode":"RS","latitude":"42.58363620","longitude":"22.14302150"},{"name":"Vojvodina","isoCode":"VO","countryCode":"RS","latitude":"45.26086510","longitude":"19.83193380"},{"name":"Republic of Adygea","isoCode":"AD","countryCode":"RU","latitude":"44.82291550","longitude":"40.17544630"},{"name":"Altai Republic","isoCode":"AL","countryCode":"RU","latitude":"50.61819240","longitude":"86.21993080"},{"name":"Altai Krai","isoCode":"ALT","countryCode":"RU","latitude":"51.79362980","longitude":"82.67585960"},{"name":"Amur Oblast","isoCode":"AMU","countryCode":"RU","latitude":"54.60350650","longitude":"127.48017210"},{"name":"Arkhangelsk","isoCode":"ARK","countryCode":"RU","latitude":"64.54585490","longitude":"40.55057690"},{"name":"Astrakhan Oblast","isoCode":"AST","countryCode":"RU","latitude":"46.13211660","longitude":"48.06101150"},{"name":"Republic of Bashkortostan","isoCode":"BA","countryCode":"RU","latitude":"54.23121720","longitude":"56.16452570"},{"name":"Belgorod Oblast","isoCode":"BEL","countryCode":"RU","latitude":"50.71069260","longitude":"37.75333770"},{"name":"Bryansk Oblast","isoCode":"BRY","countryCode":"RU","latitude":"53.04085990","longitude":"33.26909000"},{"name":"Republic of Buryatia","isoCode":"BU","countryCode":"RU","latitude":"54.83311460","longitude":"112.40605300"},{"name":"Chechen Republic","isoCode":"CE","countryCode":"RU","latitude":"43.40233010","longitude":"45.71874680"},{"name":"Chelyabinsk Oblast","isoCode":"CHE","countryCode":"RU","latitude":"54.43194220","longitude":"60.87889630"},{"name":"Chukotka Autonomous Okrug","isoCode":"CHU","countryCode":"RU","latitude":"65.62983550","longitude":"171.69521590"},{"name":"Chuvash Republic","isoCode":"CU","countryCode":"RU","latitude":"55.55959920","longitude":"46.92835350"},{"name":"Republic of Dagestan","isoCode":"DA","countryCode":"RU","latitude":"42.14318860","longitude":"47.09497990"},{"name":"Republic of Ingushetia","isoCode":"IN","countryCode":"RU","latitude":"43.40516980","longitude":"44.82029990"},{"name":"Irkutsk","isoCode":"IRK","countryCode":"RU","latitude":"52.28548340","longitude":"104.28902220"},{"name":"Ivanovo Oblast","isoCode":"IVA","countryCode":"RU","latitude":"57.10568540","longitude":"41.48300840"},{"name":"Kamchatka Krai","isoCode":"KAM","countryCode":"RU","latitude":"61.43439810","longitude":"166.78841310"},{"name":"Kabardino-Balkar Republic","isoCode":"KB","countryCode":"RU","latitude":"43.39324690","longitude":"43.56284980"},{"name":"Karachay-Cherkess Republic","isoCode":"KC","countryCode":"RU","latitude":"43.88451430","longitude":"41.73039390"},{"name":"Krasnodar Krai","isoCode":"KDA","countryCode":"RU","latitude":"45.64152890","longitude":"39.70559770"},{"name":"Kemerovo Oblast","isoCode":"KEM","countryCode":"RU","latitude":"54.75746480","longitude":"87.40552880"},{"name":"Kaliningrad","isoCode":"KGD","countryCode":"RU","latitude":"54.71042640","longitude":"20.45221440"},{"name":"Kurgan Oblast","isoCode":"KGN","countryCode":"RU","latitude":"55.44815480","longitude":"65.11809750"},{"name":"Khabarovsk Krai","isoCode":"KHA","countryCode":"RU","latitude":"50.58884310","longitude":"135.00000000"},{"name":"Khanty-Mansi Autonomous Okrug","isoCode":"KHM","countryCode":"RU","latitude":"62.22870620","longitude":"70.64100570"},{"name":"Kirov Oblast","isoCode":"KIR","countryCode":"RU","latitude":"58.41985290","longitude":"50.20972480"},{"name":"Republic of Khakassia","isoCode":"KK","countryCode":"RU","latitude":"53.04522810","longitude":"90.39821450"},{"name":"Republic of Kalmykia","isoCode":"KL","countryCode":"RU","latitude":"46.18671760","longitude":"45.00000000"},{"name":"Kaluga Oblast","isoCode":"KLU","countryCode":"RU","latitude":"54.38726660","longitude":"35.18890940"},{"name":"Komi Republic","isoCode":"KO","countryCode":"RU","latitude":"63.86305390","longitude":"54.83126900"},{"name":"Kostroma Oblast","isoCode":"KOS","countryCode":"RU","latitude":"58.55010690","longitude":"43.95411020"},{"name":"Republic of Karelia","isoCode":"KR","countryCode":"RU","latitude":"63.15587020","longitude":"32.99055520"},{"name":"Kursk Oblast","isoCode":"KRS","countryCode":"RU","latitude":"51.76340260","longitude":"35.38118120"},{"name":"Krasnoyarsk Krai","isoCode":"KYA","countryCode":"RU","latitude":"64.24797580","longitude":"95.11041760"},{"name":"Leningrad Oblast","isoCode":"LEN","countryCode":"RU","latitude":"60.07932080","longitude":"31.89266450"},{"name":"Lipetsk Oblast","isoCode":"LIP","countryCode":"RU","latitude":"52.52647020","longitude":"39.20322690"},{"name":"Magadan Oblast","isoCode":"MAG","countryCode":"RU","latitude":"62.66434170","longitude":"153.91499100"},{"name":"Mari El Republic","isoCode":"ME","countryCode":"RU","latitude":"56.43845700","longitude":"47.96077580"},{"name":"Republic of Mordovia","isoCode":"MO","countryCode":"RU","latitude":"54.23694410","longitude":"44.06839700"},{"name":"Moscow Oblast","isoCode":"MOS","countryCode":"RU","latitude":"55.34039600","longitude":"38.29176510"},{"name":"Moscow","isoCode":"MOW","countryCode":"RU","latitude":"55.75582600","longitude":"37.61729990"},{"name":"Murmansk Oblast","isoCode":"MUR","countryCode":"RU","latitude":"67.84426740","longitude":"35.08841020"},{"name":"Nenets Autonomous Okrug","isoCode":"NEN","countryCode":"RU","latitude":"67.60783370","longitude":"57.63383310"},{"name":"Novgorod Oblast","isoCode":"NGR","countryCode":"RU","latitude":"58.24275520","longitude":"32.56651900"},{"name":"Nizhny Novgorod Oblast","isoCode":"NIZ","countryCode":"RU","latitude":"55.79951590","longitude":"44.02967690"},{"name":"Novosibirsk","isoCode":"NVS","countryCode":"RU","latitude":"54.98326930","longitude":"82.89638310"},{"name":"Omsk Oblast","isoCode":"OMS","countryCode":"RU","latitude":"55.05546690","longitude":"73.31673420"},{"name":"Orenburg Oblast","isoCode":"ORE","countryCode":"RU","latitude":"51.76340260","longitude":"54.61881880"},{"name":"Oryol Oblast","isoCode":"ORL","countryCode":"RU","latitude":"52.78564140","longitude":"36.92423440"},{"name":"Perm Krai","isoCode":"PER","countryCode":"RU","latitude":"58.82319290","longitude":"56.58724810"},{"name":"Penza Oblast","isoCode":"PNZ","countryCode":"RU","latitude":"53.14121050","longitude":"44.09400480"},{"name":"Primorsky Krai","isoCode":"PRI","countryCode":"RU","latitude":"45.05256410","longitude":"135.00000000"},{"name":"Pskov Oblast","isoCode":"PSK","countryCode":"RU","latitude":"56.77085990","longitude":"29.09400900"},{"name":"Rostov Oblast","isoCode":"ROS","countryCode":"RU","latitude":"47.68532470","longitude":"41.82589520"},{"name":"Ryazan Oblast","isoCode":"RYA","countryCode":"RU","latitude":"54.38759640","longitude":"41.25956610"},{"name":"Sakha Republic","isoCode":"SA","countryCode":"RU","latitude":"66.76134510","longitude":"124.12375300"},{"name":"Sakhalin","isoCode":"SAK","countryCode":"RU","latitude":"50.69098480","longitude":"142.95056890"},{"name":"Samara Oblast","isoCode":"SAM","countryCode":"RU","latitude":"53.41838390","longitude":"50.47255280"},{"name":"Saratov Oblast","isoCode":"SAR","countryCode":"RU","latitude":"51.83692630","longitude":"46.75393970"},{"name":"Republic of North Ossetia-Alania","isoCode":"SE","countryCode":"RU","latitude":"43.04513020","longitude":"44.28709720"},{"name":"Smolensk Oblast","isoCode":"SMO","countryCode":"RU","latitude":"54.98829940","longitude":"32.66773780"},{"name":"Saint Petersburg","isoCode":"SPE","countryCode":"RU","latitude":"59.93105840","longitude":"30.36090960"},{"name":"Stavropol Krai","isoCode":"STA","countryCode":"RU","latitude":"44.66809930","longitude":"43.52021400"},{"name":"Sverdlovsk","isoCode":"SVE","countryCode":"RU","latitude":"56.84309930","longitude":"60.64540860"},{"name":"Republic of Tatarstan","isoCode":"TA","countryCode":"RU","latitude":"55.18023640","longitude":"50.72639450"},{"name":"Tambov Oblast","isoCode":"TAM","countryCode":"RU","latitude":"52.64165890","longitude":"41.42164510"},{"name":"Tomsk Oblast","isoCode":"TOM","countryCode":"RU","latitude":"58.89698820","longitude":"82.67655000"},{"name":"Tula Oblast","isoCode":"TUL","countryCode":"RU","latitude":"54.16376800","longitude":"37.56495070"},{"name":"Tver Oblast","isoCode":"TVE","countryCode":"RU","latitude":"57.00216540","longitude":"33.98531420"},{"name":"Tuva Republic","isoCode":"TY","countryCode":"RU","latitude":"51.88726690","longitude":"95.62601720"},{"name":"Tyumen Oblast","isoCode":"TYU","countryCode":"RU","latitude":"56.96343870","longitude":"66.94827800"},{"name":"Sevastopol","isoCode":"UA-40","countryCode":"RU","latitude":"44.61665000","longitude":"33.52536710"},{"name":"Udmurt Republic","isoCode":"UD","countryCode":"RU","latitude":"57.06702180","longitude":"53.02779480"},{"name":"Ulyanovsk Oblast","isoCode":"ULY","countryCode":"RU","latitude":"53.97933570","longitude":"47.77624250"},{"name":"Volgograd Oblast","isoCode":"VGG","countryCode":"RU","latitude":"49.25873930","longitude":"39.81544630"},{"name":"Vladimir Oblast","isoCode":"VLA","countryCode":"RU","latitude":"56.15534650","longitude":"40.59266850"},{"name":"Vologda Oblast","isoCode":"VLG","countryCode":"RU","latitude":"59.87067110","longitude":"40.65554110"},{"name":"Voronezh Oblast","isoCode":"VOR","countryCode":"RU","latitude":"50.85897130","longitude":"39.86443740"},{"name":"Yamalo-Nenets Autonomous Okrug","isoCode":"YAN","countryCode":"RU","latitude":"66.06530570","longitude":"76.93451930"},{"name":"Yaroslavl Oblast","isoCode":"YAR","countryCode":"RU","latitude":"57.89915230","longitude":"38.83886330"},{"name":"Jewish Autonomous Oblast","isoCode":"YEV","countryCode":"RU","latitude":"48.48081470","longitude":"131.76573670"},{"name":"Zabaykalsky Krai","isoCode":"ZAB","countryCode":"RU","latitude":"53.09287710","longitude":"116.96765610"},{"name":"Kigali district","isoCode":"01","countryCode":"RW","latitude":"-1.94407270","longitude":"30.06188510"},{"name":"Eastern Province","isoCode":"02","countryCode":"RW","latitude":null,"longitude":null},{"name":"Northern Province","isoCode":"03","countryCode":"RW","latitude":null,"longitude":null},{"name":"Western Province","isoCode":"04","countryCode":"RW","latitude":null,"longitude":null},{"name":"Southern Province","isoCode":"05","countryCode":"RW","latitude":null,"longitude":null},{"name":"Riyadh","isoCode":"01","countryCode":"SA","latitude":"22.75543850","longitude":"46.20915470"},{"name":"Makkah","isoCode":"02","countryCode":"SA","latitude":"21.52355840","longitude":"41.91964710"},{"name":"Al Madinah","isoCode":"03","countryCode":"SA","latitude":"24.84039770","longitude":"39.32062410"},{"name":"Eastern Province","isoCode":"04","countryCode":"SA","latitude":"24.04399320","longitude":"45.65892250"},{"name":"Al-Qassim","isoCode":"05","countryCode":"SA","latitude":"26.20782600","longitude":"43.48373800"},{"name":"Ha\'il","isoCode":"06","countryCode":"SA","latitude":"27.70761430","longitude":"41.91964710"},{"name":"Tabuk","isoCode":"07","countryCode":"SA","latitude":"28.24533350","longitude":"37.63866220"},{"name":"Northern Borders","isoCode":"08","countryCode":"SA","latitude":"30.07991620","longitude":"42.86378750"},{"name":"Jizan","isoCode":"09","countryCode":"SA","latitude":"17.17381760","longitude":"42.70761070"},{"name":"Najran","isoCode":"10","countryCode":"SA","latitude":"18.35146640","longitude":"45.60071080"},{"name":"Al Bahah","isoCode":"11","countryCode":"SA","latitude":"20.27227390","longitude":"41.44125100"},{"name":"Al Jawf","isoCode":"12","countryCode":"SA","latitude":"29.88735600","longitude":"39.32062410"},{"name":"\'Asir","isoCode":"14","countryCode":"SA","latitude":"19.09690620","longitude":"42.86378750"},{"name":"Central Province","isoCode":"CE","countryCode":"SB","latitude":null,"longitude":null},{"name":"Choiseul Province","isoCode":"CH","countryCode":"SB","latitude":"-7.05014940","longitude":"156.95114590"},{"name":"Honiara","isoCode":"CT","countryCode":"SB","latitude":"-9.44563810","longitude":"159.97289990"},{"name":"Guadalcanal Province","isoCode":"GU","countryCode":"SB","latitude":"-9.57732840","longitude":"160.14558050"},{"name":"Isabel Province","isoCode":"IS","countryCode":"SB","latitude":"-8.05923530","longitude":"159.14470810"},{"name":"Makira-Ulawa Province","isoCode":"MK","countryCode":"SB","latitude":"-10.57374470","longitude":"161.80969410"},{"name":"Malaita Province","isoCode":"ML","countryCode":"SB","latitude":"-8.94461680","longitude":"160.90712360"},{"name":"Rennell and Bellona Province","isoCode":"RB","countryCode":"SB","latitude":"-11.61314350","longitude":"160.16939490"},{"name":"Temotu Province","isoCode":"TE","countryCode":"SB","latitude":"-10.68692900","longitude":"166.06239790"},{"name":"Western Province","isoCode":"WE","countryCode":"SB","latitude":null,"longitude":null},{"name":"Anse-aux-Pins","isoCode":"01","countryCode":"SC","latitude":"-4.69004430","longitude":"55.51502890"},{"name":"Anse Boileau","isoCode":"02","countryCode":"SC","latitude":"-4.70472680","longitude":"55.48593630"},{"name":"Au Cap","isoCode":"04","countryCode":"SC","latitude":"-4.70597230","longitude":"55.50810120"},{"name":"Anse Royale","isoCode":"05","countryCode":"SC","latitude":"-4.74079880","longitude":"55.50810120"},{"name":"Baie Lazare","isoCode":"06","countryCode":"SC","latitude":"-4.74825250","longitude":"55.48593630"},{"name":"Baie Sainte Anne","isoCode":"07","countryCode":"SC","latitude":"47.05259000","longitude":"-64.95245790"},{"name":"Beau Vallon","isoCode":"08","countryCode":"SC","latitude":"-4.62109670","longitude":"55.42778020"},{"name":"Bel Air","isoCode":"09","countryCode":"SC","latitude":"34.10024550","longitude":"-118.45946300"},{"name":"Bel Ombre","isoCode":"10","countryCode":"SC","latitude":"-20.50100950","longitude":"57.42596240"},{"name":"Cascade","isoCode":"11","countryCode":"SC","latitude":"44.51628210","longitude":"-116.04179830"},{"name":"Glacis","isoCode":"12","countryCode":"SC","latitude":"47.11573030","longitude":"-70.30281830"},{"name":"Grand\'Anse Mahé","isoCode":"13","countryCode":"SC","latitude":"-4.67739200","longitude":"55.46377700"},{"name":"Grand\'Anse Praslin","isoCode":"14","countryCode":"SC","latitude":"-4.31762190","longitude":"55.70783630"},{"name":"La Digue","isoCode":"15","countryCode":"SC","latitude":"49.76669220","longitude":"-97.15466290"},{"name":"La Rivière Anglaise","isoCode":"16","countryCode":"SC","latitude":"-4.61061500","longitude":"55.45408410"},{"name":"Mont Buxton","isoCode":"17","countryCode":"SC","latitude":"-4.61666670","longitude":"55.44577680"},{"name":"Mont Fleuri","isoCode":"18","countryCode":"SC","latitude":"-4.63565430","longitude":"55.45546880"},{"name":"Plaisance","isoCode":"19","countryCode":"SC","latitude":"45.60709500","longitude":"-75.11427450"},{"name":"Pointe La Rue","isoCode":"20","countryCode":"SC","latitude":"-4.68048900","longitude":"55.51918570"},{"name":"Port Glaud","isoCode":"21","countryCode":"SC","latitude":"-4.64885230","longitude":"55.41947530"},{"name":"Saint Louis","isoCode":"22","countryCode":"SC","latitude":"38.62700250","longitude":"-90.19940420"},{"name":"Takamaka","isoCode":"23","countryCode":"SC","latitude":"37.96459170","longitude":"-1.22177270"},{"name":"Les Mamelles","isoCode":"24","countryCode":"SC","latitude":"38.82505050","longitude":"-90.48345170"},{"name":"Roche Caiman","isoCode":"25","countryCode":"SC","latitude":"-4.63960280","longitude":"55.46793150"},{"name":"Central Darfur","isoCode":"DC","countryCode":"SD","latitude":"14.37827470","longitude":"24.90422080"},{"name":"East Darfur","isoCode":"DE","countryCode":"SD","latitude":"14.37827470","longitude":"24.90422080"},{"name":"North Darfur","isoCode":"DN","countryCode":"SD","latitude":"15.76619690","longitude":"24.90422080"},{"name":"South Darfur","isoCode":"DS","countryCode":"SD","latitude":"11.64886390","longitude":"24.90422080"},{"name":"West Darfur","isoCode":"DW","countryCode":"SD","latitude":"12.84635610","longitude":"23.00119890"},{"name":"Al Qadarif","isoCode":"GD","countryCode":"SD","latitude":"14.02430700","longitude":"35.36856790"},{"name":"West Kordofan","isoCode":"GK","countryCode":"SD","latitude":"11.19901920","longitude":"29.41793240"},{"name":"Al Jazirah","isoCode":"GZ","countryCode":"SD","latitude":"14.88596110","longitude":"33.43835300"},{"name":"Kassala","isoCode":"KA","countryCode":"SD","latitude":"15.45813320","longitude":"36.40396290"},{"name":"Khartoum","isoCode":"KH","countryCode":"SD","latitude":"15.50065440","longitude":"32.55989940"},{"name":"North Kordofan","isoCode":"KN","countryCode":"SD","latitude":"13.83064410","longitude":"29.41793240"},{"name":"South Kordofan","isoCode":"KS","countryCode":"SD","latitude":"11.19901920","longitude":"29.41793240"},{"name":"Blue Nile","isoCode":"NB","countryCode":"SD","latitude":"47.59867300","longitude":"-122.33441900"},{"name":"Northern","isoCode":"NO","countryCode":"SD","latitude":"38.06381700","longitude":"-84.46286480"},{"name":"River Nile","isoCode":"NR","countryCode":"SD","latitude":"23.97275950","longitude":"32.87492060"},{"name":"White Nile","isoCode":"NW","countryCode":"SD","latitude":"9.33215160","longitude":"31.46153000"},{"name":"Red Sea","isoCode":"RS","countryCode":"SD","latitude":"20.28023200","longitude":"38.51257300"},{"name":"Sennar","isoCode":"SI","countryCode":"SD","latitude":"13.56746900","longitude":"33.56720450"},{"name":"Stockholm County","isoCode":"AB","countryCode":"SE","latitude":"59.60249580","longitude":"18.13843830"},{"name":"Västerbotten County","isoCode":"AC","countryCode":"SE","latitude":"65.33373110","longitude":"16.51616940"},{"name":"Norrbotten County","isoCode":"BD","countryCode":"SE","latitude":"66.83092160","longitude":"20.39919660"},{"name":"Uppsala County","isoCode":"C","countryCode":"SE","latitude":"60.00922620","longitude":"17.27145880"},{"name":"Södermanland County","isoCode":"D","countryCode":"SE","latitude":"59.03363490","longitude":"16.75188990"},{"name":"Östergötland County","isoCode":"E","countryCode":"SE","latitude":"58.34536350","longitude":"15.51978440"},{"name":"Jönköping County","isoCode":"F","countryCode":"SE","latitude":"57.37084340","longitude":"14.34391740"},{"name":"Kronoberg County","isoCode":"G","countryCode":"SE","latitude":"56.71834030","longitude":"14.41146730"},{"name":"Kalmar County","isoCode":"H","countryCode":"SE","latitude":"57.23501560","longitude":"16.18493490"},{"name":"Gotland County","isoCode":"I","countryCode":"SE","latitude":"57.46841210","longitude":"18.48674470"},{"name":"Blekinge","isoCode":"K","countryCode":"SE","latitude":"56.27838370","longitude":"15.01800580"},{"name":"Skåne County","isoCode":"M","countryCode":"SE","latitude":"55.99025720","longitude":"13.59576920"},{"name":"Halland County","isoCode":"N","countryCode":"SE","latitude":"56.89668050","longitude":"12.80339930"},{"name":"Västra Götaland County","isoCode":"O","countryCode":"SE","latitude":"58.25279260","longitude":"13.05964250"},{"name":"Värmland County","isoCode":"S","countryCode":"SE","latitude":"59.72940650","longitude":"13.23540240"},{"name":"Örebro County","isoCode":"T","countryCode":"SE","latitude":"59.53503600","longitude":"15.00657310"},{"name":"Västmanland County","isoCode":"U","countryCode":"SE","latitude":"59.67138790","longitude":"16.21589530"},{"name":"Dalarna County","isoCode":"W","countryCode":"SE","latitude":"61.09170120","longitude":"14.66636530"},{"name":"Gävleborg County","isoCode":"X","countryCode":"SE","latitude":"61.30119930","longitude":"16.15342140"},{"name":"Västernorrland County","isoCode":"Y","countryCode":"SE","latitude":"63.42764730","longitude":"17.72924440"},{"name":"Central Singapore Community Development Council","isoCode":"01","countryCode":"SG","latitude":"1.29868","longitude":"103.85367"},{"name":"North East Community Development Council","isoCode":"02","countryCode":"SG","latitude":"1.31421","longitude":"103.85822"},{"name":"North West Community Development Council","isoCode":"03","countryCode":"SG","latitude":"1.29868","longitude":"103.81986"},{"name":"South East Community Development Council","isoCode":"04","countryCode":"SG","latitude":"1.30683","longitude":"103.88698"},{"name":"South West Community Development Council","isoCode":"05","countryCode":"SG","latitude":"1.31464","longitude":"103.83007"},{"name":"Ajdovščina Municipality","isoCode":"001","countryCode":"SI","latitude":"45.88707760","longitude":"13.90428180"},{"name":"Beltinci Municipality","isoCode":"002","countryCode":"SI","latitude":"46.60791530","longitude":"16.23651270"},{"name":"Bled Municipality","isoCode":"003","countryCode":"SI","latitude":"46.36832660","longitude":"14.11457980"},{"name":"Bohinj Municipality","isoCode":"004","countryCode":"SI","latitude":"46.30056520","longitude":"13.94271950"},{"name":"Borovnica Municipality","isoCode":"005","countryCode":"SI","latitude":"45.90445250","longitude":"14.38241890"},{"name":"Bovec Municipality","isoCode":"006","countryCode":"SI","latitude":"46.33804950","longitude":"13.55241740"},{"name":"Brda Municipality","isoCode":"007","countryCode":"SI","latitude":"45.99756520","longitude":"13.52704740"},{"name":"Brezovica Municipality","isoCode":"008","countryCode":"SI","latitude":"45.95593510","longitude":"14.43499520"},{"name":"Brežice Municipality","isoCode":"009","countryCode":"SI","latitude":"45.90410960","longitude":"15.59436390"},{"name":"Tišina Municipality","isoCode":"010","countryCode":"SI","latitude":"46.65418840","longitude":"16.07547810"},{"name":"City Municipality of Celje","isoCode":"011","countryCode":"SI","latitude":"46.23974950","longitude":"15.26770630"},{"name":"Cerklje na Gorenjskem Municipality","isoCode":"012","countryCode":"SI","latitude":"46.25170540","longitude":"14.48579790"},{"name":"Cerknica Municipality","isoCode":"013","countryCode":"SI","latitude":"45.79662550","longitude":"14.39217700"},{"name":"Cerkno Municipality","isoCode":"014","countryCode":"SI","latitude":"46.12884140","longitude":"13.98940270"},{"name":"Črenšovci Municipality","isoCode":"015","countryCode":"SI","latitude":"46.57200290","longitude":"16.28773460"},{"name":"Črna na Koroškem Municipality","isoCode":"016","countryCode":"SI","latitude":"46.47045290","longitude":"14.84999980"},{"name":"Črnomelj Municipality","isoCode":"017","countryCode":"SI","latitude":"45.53612250","longitude":"15.19441430"},{"name":"Destrnik Municipality","isoCode":"018","countryCode":"SI","latitude":"46.49223680","longitude":"15.87779560"},{"name":"Divača Municipality","isoCode":"019","countryCode":"SI","latitude":"45.68060690","longitude":"13.97203120"},{"name":"Dobrepolje Municipality","isoCode":"020","countryCode":"SI","latitude":"45.85249510","longitude":"14.70831090"},{"name":"Dobrova–Polhov Gradec Municipality","isoCode":"021","countryCode":"SI","latitude":"46.06488960","longitude":"14.31681950"},{"name":"Dol pri Ljubljani Municipality","isoCode":"022","countryCode":"SI","latitude":"46.08843860","longitude":"14.64247920"},{"name":"Domžale Municipality","isoCode":"023","countryCode":"SI","latitude":"46.14382690","longitude":"14.63752790"},{"name":"Dornava Municipality","isoCode":"024","countryCode":"SI","latitude":"46.44435130","longitude":"15.98891590"},{"name":"Dravograd Municipality","isoCode":"025","countryCode":"SI","latitude":"46.58921900","longitude":"15.02460210"},{"name":"Duplek Municipality","isoCode":"026","countryCode":"SI","latitude":"46.50100160","longitude":"15.75463070"},{"name":"Gorenja Vas–Poljane Municipality","isoCode":"027","countryCode":"SI","latitude":"46.11165820","longitude":"14.11493480"},{"name":"Gorišnica Municipality","isoCode":"028","countryCode":"SI","latitude":"46.41202710","longitude":"16.01330890"},{"name":"Gornja Radgona Municipality","isoCode":"029","countryCode":"SI","latitude":"46.67670990","longitude":"15.99108470"},{"name":"Gornji Grad Municipality","isoCode":"030","countryCode":"SI","latitude":"46.29617120","longitude":"14.80623470"},{"name":"Gornji Petrovci Municipality","isoCode":"031","countryCode":"SI","latitude":"46.80371280","longitude":"16.21913790"},{"name":"Grosuplje Municipality","isoCode":"032","countryCode":"SI","latitude":"45.95576450","longitude":"14.65889900"},{"name":"Šalovci Municipality","isoCode":"033","countryCode":"SI","latitude":"46.85335680","longitude":"16.25917910"},{"name":"Hrastnik Municipality","isoCode":"034","countryCode":"SI","latitude":"46.14172880","longitude":"15.08448940"},{"name":"Hrpelje–Kozina Municipality","isoCode":"035","countryCode":"SI","latitude":"45.60911920","longitude":"13.93791480"},{"name":"Idrija Municipality","isoCode":"036","countryCode":"SI","latitude":"46.00409390","longitude":"13.97754930"},{"name":"Ig Municipality","isoCode":"037","countryCode":"SI","latitude":"45.95888680","longitude":"14.52705280"},{"name":"Municipality of Ilirska Bistrica","isoCode":"038","countryCode":"SI","latitude":"45.57913230","longitude":"14.28097290"},{"name":"Ivančna Gorica Municipality","isoCode":"039","countryCode":"SI","latitude":"45.93958410","longitude":"14.80476260"},{"name":"Izola Municipality","isoCode":"040","countryCode":"SI","latitude":"45.53135570","longitude":"13.66646490"},{"name":"Jesenice Municipality","isoCode":"041","countryCode":"SI","latitude":"46.43670470","longitude":"14.05260570"},{"name":"Juršinci Municipality","isoCode":"042","countryCode":"SI","latitude":"46.48986510","longitude":"15.98092300"},{"name":"Kamnik Municipality","isoCode":"043","countryCode":"SI","latitude":"46.22216660","longitude":"14.60707270"},{"name":"Kanal ob Soči Municipality","isoCode":"044","countryCode":"SI","latitude":"46.06735300","longitude":"13.62033500"},{"name":"Kidričevo Municipality","isoCode":"045","countryCode":"SI","latitude":"46.39575720","longitude":"15.79259060"},{"name":"Kobarid Municipality","isoCode":"046","countryCode":"SI","latitude":"46.24569710","longitude":"13.57869490"},{"name":"Kobilje Municipality","isoCode":"047","countryCode":"SI","latitude":"46.68518000","longitude":"16.39367190"},{"name":"Kočevje Municipality","isoCode":"048","countryCode":"SI","latitude":"45.64280000","longitude":"14.86158380"},{"name":"Komen Municipality","isoCode":"049","countryCode":"SI","latitude":"45.81752350","longitude":"13.74827110"},{"name":"Koper City Municipality","isoCode":"050","countryCode":"SI","latitude":"45.54805900","longitude":"13.73018770"},{"name":"Kozje Municipality","isoCode":"051","countryCode":"SI","latitude":"46.07332110","longitude":"15.55967190"},{"name":"Kranj City Municipality","isoCode":"052","countryCode":"SI","latitude":"46.25850210","longitude":"14.35435690"},{"name":"Kranjska Gora Municipality","isoCode":"053","countryCode":"SI","latitude":"46.48452930","longitude":"13.78571450"},{"name":"Municipality of Krško","isoCode":"054","countryCode":"SI","latitude":"45.95896090","longitude":"15.49235550"},{"name":"Kungota","isoCode":"055","countryCode":"SI","latitude":"46.64187930","longitude":"15.60362880"},{"name":"Kuzma Municipality","isoCode":"056","countryCode":"SI","latitude":"46.83510380","longitude":"16.08071000"},{"name":"Laško Municipality","isoCode":"057","countryCode":"SI","latitude":"46.15422360","longitude":"15.23614910"},{"name":"Lenart Municipality","isoCode":"058","countryCode":"SI","latitude":"46.58344240","longitude":"15.82621250"},{"name":"Lendava Municipality","isoCode":"059","countryCode":"SI","latitude":"46.55134830","longitude":"16.44198390"},{"name":"Litija Municipality","isoCode":"060","countryCode":"SI","latitude":"46.05732260","longitude":"14.83096360"},{"name":"Ljubljana City Municipality","isoCode":"061","countryCode":"SI","latitude":"46.05694650","longitude":"14.50575150"},{"name":"Ljubno Municipality","isoCode":"062","countryCode":"SI","latitude":"46.34431250","longitude":"14.83354920"},{"name":"Ljutomer Municipality","isoCode":"063","countryCode":"SI","latitude":"46.51908480","longitude":"16.18932160"},{"name":"Logatec Municipality","isoCode":"064","countryCode":"SI","latitude":"45.91761100","longitude":"14.23514510"},{"name":"Loška Dolina Municipality","isoCode":"065","countryCode":"SI","latitude":"45.64779080","longitude":"14.49731470"},{"name":"Loški Potok Municipality","isoCode":"066","countryCode":"SI","latitude":"45.69096370","longitude":"14.59859700"},{"name":"Luče Municipality","isoCode":"067","countryCode":"SI","latitude":"46.35449250","longitude":"14.74715040"},{"name":"Lukovica Municipality","isoCode":"068","countryCode":"SI","latitude":"46.16962930","longitude":"14.69072590"},{"name":"Majšperk Municipality","isoCode":"069","countryCode":"SI","latitude":"46.35030190","longitude":"15.73405950"},{"name":"Maribor City Municipality","isoCode":"070","countryCode":"SI","latitude":"46.55064960","longitude":"15.62054390"},{"name":"Medvode Municipality","isoCode":"071","countryCode":"SI","latitude":"46.14190800","longitude":"14.40325960"},{"name":"Mengeš Municipality","isoCode":"072","countryCode":"SI","latitude":"46.16591220","longitude":"14.57196940"},{"name":"Metlika Municipality","isoCode":"073","countryCode":"SI","latitude":"45.64807150","longitude":"15.31778380"},{"name":"Mežica Municipality","isoCode":"074","countryCode":"SI","latitude":"46.52150270","longitude":"14.85213400"},{"name":"Miren–Kostanjevica Municipality","isoCode":"075","countryCode":"SI","latitude":"45.84360290","longitude":"13.62766470"},{"name":"Mislinja Municipality","isoCode":"076","countryCode":"SI","latitude":"46.44294030","longitude":"15.19876780"},{"name":"Moravče Municipality","isoCode":"077","countryCode":"SI","latitude":"46.13627810","longitude":"14.74600100"},{"name":"Moravske Toplice Municipality","isoCode":"078","countryCode":"SI","latitude":"46.68569320","longitude":"16.22245820"},{"name":"Mozirje Municipality","isoCode":"079","countryCode":"SI","latitude":"46.33943500","longitude":"14.96024130"},{"name":"Murska Sobota City Municipality","isoCode":"080","countryCode":"SI","latitude":"46.64321470","longitude":"16.15157540"},{"name":"Muta Municipality","isoCode":"081","countryCode":"SI","latitude":"46.60973660","longitude":"15.16299950"},{"name":"Naklo Municipality","isoCode":"082","countryCode":"SI","latitude":"46.27186630","longitude":"14.31569320"},{"name":"Nazarje Municipality","isoCode":"083","countryCode":"SI","latitude":"46.28217410","longitude":"14.92256290"},{"name":"Nova Gorica City Municipality","isoCode":"084","countryCode":"SI","latitude":"45.97627600","longitude":"13.73088810"},{"name":"City Municipality of Novo Mesto","isoCode":"085","countryCode":"SI","latitude":"45.80108240","longitude":"15.17100890"},{"name":"Odranci Municipality","isoCode":"086","countryCode":"SI","latitude":"46.59010170","longitude":"16.27881650"},{"name":"Ormož Municipality","isoCode":"087","countryCode":"SI","latitude":"46.43533330","longitude":"16.15437400"},{"name":"Osilnica Municipality","isoCode":"088","countryCode":"SI","latitude":"45.54184670","longitude":"14.71563030"},{"name":"Pesnica Municipality","isoCode":"089","countryCode":"SI","latitude":"46.60887550","longitude":"15.67570510"},{"name":"Piran Municipality","isoCode":"090","countryCode":"SI","latitude":"45.52888560","longitude":"13.56807350"},{"name":"Pivka Municipality","isoCode":"091","countryCode":"SI","latitude":"45.67892960","longitude":"14.25426890"},{"name":"Podčetrtek Municipality","isoCode":"092","countryCode":"SI","latitude":"46.17395420","longitude":"15.60138160"},{"name":"Podvelka Municipality","isoCode":"093","countryCode":"SI","latitude":"46.62219520","longitude":"15.38899220"},{"name":"Postojna Municipality","isoCode":"094","countryCode":"SI","latitude":"45.77493900","longitude":"14.21342630"},{"name":"Preddvor Municipality","isoCode":"095","countryCode":"SI","latitude":"46.30171390","longitude":"14.42181650"},{"name":"Ptuj City Municipality","isoCode":"096","countryCode":"SI","latitude":"46.41995350","longitude":"15.86968840"},{"name":"Puconci Municipality","isoCode":"097","countryCode":"SI","latitude":"46.72004180","longitude":"16.09977920"},{"name":"Rače–Fram Municipality","isoCode":"098","countryCode":"SI","latitude":"46.45420830","longitude":"15.63294670"},{"name":"Radeče Municipality","isoCode":"099","countryCode":"SI","latitude":"46.06669540","longitude":"15.18204380"},{"name":"Radenci Municipality","isoCode":"100","countryCode":"SI","latitude":"46.62311210","longitude":"16.05069030"},{"name":"Radlje ob Dravi Municipality","isoCode":"101","countryCode":"SI","latitude":"46.61357320","longitude":"15.23544380"},{"name":"Radovljica Municipality","isoCode":"102","countryCode":"SI","latitude":"46.33558270","longitude":"14.20945340"},{"name":"Ravne na Koroškem Municipality","isoCode":"103","countryCode":"SI","latitude":"46.55211940","longitude":"14.95990840"},{"name":"Ribnica Municipality","isoCode":"104","countryCode":"SI","latitude":"45.74003030","longitude":"14.72657820"},{"name":"Rogašovci Municipality","isoCode":"105","countryCode":"SI","latitude":"46.80557850","longitude":"16.03452370"},{"name":"Rogaška Slatina Municipality","isoCode":"106","countryCode":"SI","latitude":"46.24539730","longitude":"15.62650140"},{"name":"Rogatec Municipality","isoCode":"107","countryCode":"SI","latitude":"46.22866260","longitude":"15.69913380"},{"name":"Ruše Municipality","isoCode":"108","countryCode":"SI","latitude":"46.52062650","longitude":"15.48178690"},{"name":"Semič Municipality","isoCode":"109","countryCode":"SI","latitude":"45.65205340","longitude":"15.18207010"},{"name":"Sevnica Municipality","isoCode":"110","countryCode":"SI","latitude":"46.00703170","longitude":"15.30456790"},{"name":"Sežana Municipality","isoCode":"111","countryCode":"SI","latitude":"45.72751090","longitude":"13.86619310"},{"name":"Slovenj Gradec City Municipality","isoCode":"112","countryCode":"SI","latitude":"46.48777180","longitude":"15.07294780"},{"name":"Slovenska Bistrica Municipality","isoCode":"113","countryCode":"SI","latitude":"46.39198130","longitude":"15.57278690"},{"name":"Slovenske Konjice Municipality","isoCode":"114","countryCode":"SI","latitude":"46.33691910","longitude":"15.42147080"},{"name":"Starše Municipality","isoCode":"115","countryCode":"SI","latitude":"46.46743310","longitude":"15.76405460"},{"name":"Sveti Jurij ob Ščavnici Municipality","isoCode":"116","countryCode":"SI","latitude":"46.56874520","longitude":"16.02225280"},{"name":"Šenčur Municipality","isoCode":"117","countryCode":"SI","latitude":"46.24336990","longitude":"14.41922230"},{"name":"Šentilj Municipality","isoCode":"118","countryCode":"SI","latitude":"46.68628390","longitude":"15.71035670"},{"name":"Šentjernej Municipality","isoCode":"119","countryCode":"SI","latitude":"45.84341300","longitude":"15.33783120"},{"name":"Šentjur Municipality","isoCode":"120","countryCode":"SI","latitude":"46.26543390","longitude":"15.40800000"},{"name":"Škocjan Municipality","isoCode":"121","countryCode":"SI","latitude":"45.91754540","longitude":"15.31017360"},{"name":"Škofja Loka Municipality","isoCode":"122","countryCode":"SI","latitude":"46.14098440","longitude":"14.28118730"},{"name":"Municipality of Škofljica","isoCode":"123","countryCode":"SI","latitude":"45.98409620","longitude":"14.57466260"},{"name":"Šmarje pri Jelšah Municipality","isoCode":"124","countryCode":"SI","latitude":"46.22870250","longitude":"15.51903530"},{"name":"Šmartno ob Paki Municipality","isoCode":"125","countryCode":"SI","latitude":"46.32903720","longitude":"15.03339370"},{"name":"Šoštanj Municipality","isoCode":"126","countryCode":"SI","latitude":"46.37828360","longitude":"15.04613780"},{"name":"Štore Municipality","isoCode":"127","countryCode":"SI","latitude":"46.22225140","longitude":"15.31261160"},{"name":"Tolmin Municipality","isoCode":"128","countryCode":"SI","latitude":"46.18571880","longitude":"13.73198380"},{"name":"Trbovlje Municipality","isoCode":"129","countryCode":"SI","latitude":"46.15035630","longitude":"15.04531370"},{"name":"Trebnje Municipality","isoCode":"130","countryCode":"SI","latitude":"45.90801630","longitude":"15.01319050"},{"name":"Tržič Municipality","isoCode":"131","countryCode":"SI","latitude":"46.35935140","longitude":"14.30066230"},{"name":"Turnišče Municipality","isoCode":"132","countryCode":"SI","latitude":"46.61375040","longitude":"16.32021000"},{"name":"Velike Lašče Municipality","isoCode":"134","countryCode":"SI","latitude":"45.83365910","longitude":"14.63623630"},{"name":"Videm Municipality","isoCode":"135","countryCode":"SI","latitude":"46.36383300","longitude":"15.87812120"},{"name":"Vipava Municipality","isoCode":"136","countryCode":"SI","latitude":"45.84126740","longitude":"13.96096130"},{"name":"Vitanje Municipality","isoCode":"137","countryCode":"SI","latitude":"46.38153230","longitude":"15.29506870"},{"name":"Vodice Municipality","isoCode":"138","countryCode":"SI","latitude":"46.18966430","longitude":"14.49385390"},{"name":"Vojnik Municipality","isoCode":"139","countryCode":"SI","latitude":"46.29205810","longitude":"15.30205800"},{"name":"Vrhnika Municipality","isoCode":"140","countryCode":"SI","latitude":"45.95027190","longitude":"14.32764220"},{"name":"Vuzenica Municipality","isoCode":"141","countryCode":"SI","latitude":"46.59808360","longitude":"15.16572370"},{"name":"Zagorje ob Savi Municipality","isoCode":"142","countryCode":"SI","latitude":"46.13452020","longitude":"14.99643840"},{"name":"Zavrč Municipality","isoCode":"143","countryCode":"SI","latitude":"46.35713000","longitude":"16.04777470"},{"name":"Zreče Municipality","isoCode":"144","countryCode":"SI","latitude":"46.41777860","longitude":"15.37094310"},{"name":"Železniki Municipality","isoCode":"146","countryCode":"SI","latitude":"46.22563770","longitude":"14.16936170"},{"name":"Žiri Municipality","isoCode":"147","countryCode":"SI","latitude":"46.04724990","longitude":"14.10984510"},{"name":"Benedikt Municipality","isoCode":"148","countryCode":"SI","latitude":"46.61558410","longitude":"15.89572810"},{"name":"Bistrica ob Sotli Municipality","isoCode":"149","countryCode":"SI","latitude":"46.05655790","longitude":"15.66259470"},{"name":"Bloke Municipality","isoCode":"150","countryCode":"SI","latitude":"45.77281410","longitude":"14.50634590"},{"name":"Braslovče Municipality","isoCode":"151","countryCode":"SI","latitude":"46.28361920","longitude":"15.04183200"},{"name":"Cankova Municipality","isoCode":"152","countryCode":"SI","latitude":"46.71823700","longitude":"16.01972220"},{"name":"Cerkvenjak Municipality","isoCode":"153","countryCode":"SI","latitude":"46.56707110","longitude":"15.94297530"},{"name":"Dobje Municipality","isoCode":"154","countryCode":"SI","latitude":"46.13700370","longitude":"15.39412900"},{"name":"Dobrna Municipality","isoCode":"155","countryCode":"SI","latitude":"46.33561410","longitude":"15.22597320"},{"name":"Dobrovnik Municipality","isoCode":"156","countryCode":"SI","latitude":"46.65386620","longitude":"16.35065940"},{"name":"Dolenjske Toplice Municipality","isoCode":"157","countryCode":"SI","latitude":"45.73457110","longitude":"15.01294930"},{"name":"Grad Municipality","isoCode":"158","countryCode":"SI","latitude":"46.80873200","longitude":"16.10920600"},{"name":"Hajdina Municipality","isoCode":"159","countryCode":"SI","latitude":"46.41850140","longitude":"15.82447220"},{"name":"Hoče–Slivnica Municipality","isoCode":"160","countryCode":"SI","latitude":"46.47785800","longitude":"15.64760050"},{"name":"Hodoš Municipality","isoCode":"161","countryCode":"SI","latitude":"46.83141340","longitude":"16.32106800"},{"name":"Horjul Municipality","isoCode":"162","countryCode":"SI","latitude":"46.02253780","longitude":"14.29862690"},{"name":"Jezersko Municipality","isoCode":"163","countryCode":"SI","latitude":"46.39427940","longitude":"14.49855590"},{"name":"Komenda Municipality","isoCode":"164","countryCode":"SI","latitude":"46.20648800","longitude":"14.53824990"},{"name":"Kostel Municipality","isoCode":"165","countryCode":"SI","latitude":"45.49282550","longitude":"14.87082350"},{"name":"Križevci Municipality","isoCode":"166","countryCode":"SI","latitude":"46.57018210","longitude":"16.10926530"},{"name":"Lovrenc na Pohorju Municipality","isoCode":"167","countryCode":"SI","latitude":"46.54196380","longitude":"15.40004430"},{"name":"Markovci Municipality","isoCode":"168","countryCode":"SI","latitude":"46.38793090","longitude":"15.95860140"},{"name":"Miklavž na Dravskem Polju Municipality","isoCode":"169","countryCode":"SI","latitude":"46.50826280","longitude":"15.69520650"},{"name":"Mirna Peč Municipality","isoCode":"170","countryCode":"SI","latitude":"45.84815740","longitude":"15.08794500"},{"name":"Oplotnica","isoCode":"171","countryCode":"SI","latitude":"46.38716300","longitude":"15.44581310"},{"name":"Podlehnik Municipality","isoCode":"172","countryCode":"SI","latitude":"46.33107820","longitude":"15.87858360"},{"name":"Polzela Municipality","isoCode":"173","countryCode":"SI","latitude":"46.28089700","longitude":"15.07373210"},{"name":"Prebold Municipality","isoCode":"174","countryCode":"SI","latitude":"46.23591360","longitude":"15.09369120"},{"name":"Prevalje Municipality","isoCode":"175","countryCode":"SI","latitude":"46.56211460","longitude":"14.88478610"},{"name":"Razkrižje Municipality","isoCode":"176","countryCode":"SI","latitude":"46.52263390","longitude":"16.26686380"},{"name":"Ribnica na Pohorju Municipality","isoCode":"177","countryCode":"SI","latitude":"46.53561450","longitude":"15.26745380"},{"name":"Selnica ob Dravi Municipality","isoCode":"178","countryCode":"SI","latitude":"46.55139180","longitude":"15.49294100"},{"name":"Sodražica Municipality","isoCode":"179","countryCode":"SI","latitude":"45.76165650","longitude":"14.63528530"},{"name":"Solčava Municipality","isoCode":"180","countryCode":"SI","latitude":"46.40235260","longitude":"14.68023040"},{"name":"Sveta Ana Municipality","isoCode":"181","countryCode":"SI","latitude":"46.65000000","longitude":"15.84527800"},{"name":"Sveti Andraž v Slovenskih Goricah Municipality","isoCode":"182","countryCode":"SI","latitude":"46.51897470","longitude":"15.94982620"},{"name":"Šempeter–Vrtojba Municipality","isoCode":"183","countryCode":"SI","latitude":"45.92900950","longitude":"13.64155940"},{"name":"Tabor Municipality","isoCode":"184","countryCode":"SI","latitude":"46.21079210","longitude":"15.01742490"},{"name":"Trnovska Vas Municipality","isoCode":"185","countryCode":"SI","latitude":"46.52940350","longitude":"15.88531180"},{"name":"Trzin Municipality","isoCode":"186","countryCode":"SI","latitude":"46.12982410","longitude":"14.55776370"},{"name":"Velika Polana Municipality","isoCode":"187","countryCode":"SI","latitude":"46.57317150","longitude":"16.34441260"},{"name":"Veržej Municipality","isoCode":"188","countryCode":"SI","latitude":"46.58411350","longitude":"16.16208000"},{"name":"Vransko Municipality","isoCode":"189","countryCode":"SI","latitude":"46.23900600","longitude":"14.95272490"},{"name":"Žalec Municipality","isoCode":"190","countryCode":"SI","latitude":"46.25197120","longitude":"15.16500720"},{"name":"Žetale Municipality","isoCode":"191","countryCode":"SI","latitude":"46.27428330","longitude":"15.79133590"},{"name":"Žirovnica Municipality","isoCode":"192","countryCode":"SI","latitude":"46.39544030","longitude":"14.15396320"},{"name":"Žužemberk Municipality","isoCode":"193","countryCode":"SI","latitude":"45.82003500","longitude":"14.95359190"},{"name":"Šmartno pri Litiji Municipality","isoCode":"194","countryCode":"SI","latitude":"46.04549710","longitude":"14.84101330"},{"name":"Municipality of Apače","isoCode":"195","countryCode":"SI","latitude":"46.69746790","longitude":"15.91025340"},{"name":"Municipality of Cirkulane","isoCode":"196","countryCode":"SI","latitude":"46.32983220","longitude":"15.99806660"},{"name":"Kostanjevica na Krki Municipality","isoCode":"197","countryCode":"SI","latitude":"45.83166380","longitude":"15.44119060"},{"name":"Makole Municipality","isoCode":"198","countryCode":"SI","latitude":"46.31686970","longitude":"15.66641260"},{"name":"Mokronog–Trebelno Municipality","isoCode":"199","countryCode":"SI","latitude":"45.90885290","longitude":"15.15967360"},{"name":"Poljčane Municipality","isoCode":"200","countryCode":"SI","latitude":"46.31398530","longitude":"15.57847910"},{"name":"Renče–Vogrsko Municipality","isoCode":"201","countryCode":"SI","latitude":"45.89546170","longitude":"13.67856730"},{"name":"Središče ob Dravi","isoCode":"202","countryCode":"SI","latitude":"46.39592820","longitude":"16.27049150"},{"name":"Straža Municipality","isoCode":"203","countryCode":"SI","latitude":"45.77684280","longitude":"15.09486940"},{"name":"Sveta Trojica v Slovenskih Goricah Municipality","isoCode":"204","countryCode":"SI","latitude":"46.56808090","longitude":"15.88230640"},{"name":"Sveti Tomaž Municipality","isoCode":"205","countryCode":"SI","latitude":"46.48352830","longitude":"16.07944200"},{"name":"Šmarješke Toplice Municipality","isoCode":"206","countryCode":"SI","latitude":"45.86803770","longitude":"15.23474220"},{"name":"Gorje Municipality","isoCode":"207","countryCode":"SI","latitude":"46.38024580","longitude":"14.06853390"},{"name":"Log–Dragomer Municipality","isoCode":"208","countryCode":"SI","latitude":"46.01787470","longitude":"14.36877670"},{"name":"Rečica ob Savinji Municipality","isoCode":"209","countryCode":"SI","latitude":"46.32337900","longitude":"14.92236700"},{"name":"Sveti Jurij v Slovenskih Goricah Municipality","isoCode":"210","countryCode":"SI","latitude":"46.61707910","longitude":"15.78046770"},{"name":"Šentrupert Municipality","isoCode":"211","countryCode":"SI","latitude":"45.98731420","longitude":"15.08297830"},{"name":"Mirna Municipality","isoCode":"212","countryCode":"SI","latitude":"45.95156470","longitude":"15.06209770"},{"name":"Ankaran Municipality","isoCode":"213","countryCode":"SI","latitude":"45.57845100","longitude":"13.73691740"},{"name":"Banská Bystrica Region","isoCode":"BC","countryCode":"SK","latitude":"48.53124990","longitude":"19.38287400"},{"name":"Bratislava Region","isoCode":"BL","countryCode":"SK","latitude":"48.31183040","longitude":"17.19732990"},{"name":"Košice Region","isoCode":"KI","countryCode":"SK","latitude":"48.63757370","longitude":"21.08342250"},{"name":"Nitra Region","isoCode":"NI","countryCode":"SK","latitude":"48.01437650","longitude":"18.54165040"},{"name":"Prešov Region","isoCode":"PV","countryCode":"SK","latitude":"49.17167730","longitude":"21.37420010"},{"name":"Trnava Region","isoCode":"TA","countryCode":"SK","latitude":"48.39438980","longitude":"17.72162050"},{"name":"Trenčín Region","isoCode":"TC","countryCode":"SK","latitude":"48.80867580","longitude":"18.23240260"},{"name":"Žilina Region","isoCode":"ZI","countryCode":"SK","latitude":"49.20314350","longitude":"19.36457330"},{"name":"Eastern Province","isoCode":"E","countryCode":"SL","latitude":null,"longitude":null},{"name":"Northern Province","isoCode":"N","countryCode":"SL","latitude":null,"longitude":null},{"name":"Southern Province","isoCode":"S","countryCode":"SL","latitude":null,"longitude":null},{"name":"Western Area","isoCode":"W","countryCode":"SL","latitude":"40.25459690","longitude":"-80.24554440"},{"name":"Acquaviva","isoCode":"01","countryCode":"SM","latitude":"41.86715970","longitude":"14.74694790"},{"name":"Chiesanuova","isoCode":"02","countryCode":"SM","latitude":"45.42261720","longitude":"7.65038540"},{"name":"Domagnano","isoCode":"03","countryCode":"SM","latitude":"43.95019290","longitude":"12.46815370"},{"name":"Faetano","isoCode":"04","countryCode":"SM","latitude":"43.93489670","longitude":"12.48965540"},{"name":"Fiorentino","isoCode":"05","countryCode":"SM","latitude":"43.90783370","longitude":"12.45812090"},{"name":"Borgo Maggiore","isoCode":"06","countryCode":"SM","latitude":"43.95748820","longitude":"12.45525460"},{"name":"San Marino","isoCode":"07","countryCode":"SM","latitude":"43.94236000","longitude":"12.45777700"},{"name":"Montegiardino","isoCode":"08","countryCode":"SM","latitude":"43.90529990","longitude":"12.48105420"},{"name":"Serravalle","isoCode":"09","countryCode":"SM","latitude":"44.72320840","longitude":"8.85740050"},{"name":"Diourbel Region","isoCode":"DB","countryCode":"SN","latitude":"14.72830850","longitude":"-16.25221430"},{"name":"Dakar","isoCode":"DK","countryCode":"SN","latitude":"14.71667700","longitude":"-17.46768610"},{"name":"Fatick","isoCode":"FK","countryCode":"SN","latitude":"14.33901670","longitude":"-16.41114250"},{"name":"Kaffrine","isoCode":"KA","countryCode":"SN","latitude":"14.10520200","longitude":"-15.54157550"},{"name":"Kolda","isoCode":"KD","countryCode":"SN","latitude":"12.91074950","longitude":"-14.95056710"},{"name":"Kédougou","isoCode":"KE","countryCode":"SN","latitude":"12.56046070","longitude":"-12.17470770"},{"name":"Kaolack","isoCode":"KL","countryCode":"SN","latitude":"14.16520830","longitude":"-16.07577490"},{"name":"Louga","isoCode":"LG","countryCode":"SN","latitude":"15.61417680","longitude":"-16.22868000"},{"name":"Matam","isoCode":"MT","countryCode":"SN","latitude":"15.66002250","longitude":"-13.25769060"},{"name":"Sédhiou","isoCode":"SE","countryCode":"SN","latitude":"12.70460400","longitude":"-15.55623040"},{"name":"Saint-Louis","isoCode":"SL","countryCode":"SN","latitude":"38.62700250","longitude":"-90.19940420"},{"name":"Tambacounda Region","isoCode":"TC","countryCode":"SN","latitude":"13.56190110","longitude":"-13.17403480"},{"name":"Thiès Region","isoCode":"TH","countryCode":"SN","latitude":"14.79100520","longitude":"-16.93586040"},{"name":"Ziguinchor","isoCode":"ZG","countryCode":"SN","latitude":"12.56414790","longitude":"-16.26398250"},{"name":"Awdal Region","isoCode":"AW","countryCode":"SO","latitude":"10.63342850","longitude":"43.32946600"},{"name":"Bakool","isoCode":"BK","countryCode":"SO","latitude":"4.36572210","longitude":"44.09603110"},{"name":"Banaadir","isoCode":"BN","countryCode":"SO","latitude":"2.11873750","longitude":"45.33694590"},{"name":"Bari","isoCode":"BR","countryCode":"SO","latitude":"41.11714320","longitude":"16.87187150"},{"name":"Bay","isoCode":"BY","countryCode":"SO","latitude":"37.03655340","longitude":"-95.61747670"},{"name":"Galguduud","isoCode":"GA","countryCode":"SO","latitude":"5.18501280","longitude":"46.82528380"},{"name":"Gedo","isoCode":"GE","countryCode":"SO","latitude":"3.50392270","longitude":"42.23624350"},{"name":"Hiran","isoCode":"HI","countryCode":"SO","latitude":"4.32101500","longitude":"45.29938620"},{"name":"Middle Juba","isoCode":"JD","countryCode":"SO","latitude":"2.07804880","longitude":"41.60118140"},{"name":"Lower Juba","isoCode":"JH","countryCode":"SO","latitude":"0.22402100","longitude":"41.60118140"},{"name":"Mudug","isoCode":"MU","countryCode":"SO","latitude":"6.56567260","longitude":"47.76375650"},{"name":"Nugal","isoCode":"NU","countryCode":"SO","latitude":"43.27938610","longitude":"17.03392050"},{"name":"Sanaag Region","isoCode":"SA","countryCode":"SO","latitude":"10.39382180","longitude":"47.76375650"},{"name":"Middle Shebelle","isoCode":"SD","countryCode":"SO","latitude":"2.92502470","longitude":"45.90396890"},{"name":"Lower Shebelle","isoCode":"SH","countryCode":"SO","latitude":"1.87664580","longitude":"44.24790150"},{"name":"Togdheer Region","isoCode":"TO","countryCode":"SO","latitude":"9.44605870","longitude":"45.29938620"},{"name":"Brokopondo District","isoCode":"BR","countryCode":"SR","latitude":"4.77102470","longitude":"-55.04933750"},{"name":"Commewijne District","isoCode":"CM","countryCode":"SR","latitude":"5.74021100","longitude":"-54.87312190"},{"name":"Coronie District","isoCode":"CR","countryCode":"SR","latitude":"5.69432710","longitude":"-56.29293810"},{"name":"Marowijne District","isoCode":"MA","countryCode":"SR","latitude":"5.62681280","longitude":"-54.25931180"},{"name":"Nickerie District","isoCode":"NI","countryCode":"SR","latitude":"5.58554690","longitude":"-56.83111170"},{"name":"Paramaribo District","isoCode":"PM","countryCode":"SR","latitude":"5.85203550","longitude":"-55.20382780"},{"name":"Para District","isoCode":"PR","countryCode":"SR","latitude":"5.48173180","longitude":"-55.22592070"},{"name":"Saramacca District","isoCode":"SA","countryCode":"SR","latitude":"5.72408130","longitude":"-55.66896360"},{"name":"Sipaliwini District","isoCode":"SI","countryCode":"SR","latitude":"3.65673820","longitude":"-56.20353870"},{"name":"Wanica District","isoCode":"WA","countryCode":"SR","latitude":"5.73237620","longitude":"-55.27012350"},{"name":"Northern Bahr el Ghazal","isoCode":"BN","countryCode":"SS","latitude":"8.53604490","longitude":"26.79678490"},{"name":"Western Bahr el Ghazal","isoCode":"BW","countryCode":"SS","latitude":"8.64523990","longitude":"25.28375850"},{"name":"Central Equatoria","isoCode":"EC","countryCode":"SS","latitude":"4.61440630","longitude":"31.26263660"},{"name":"Eastern Equatoria","isoCode":"EE","countryCode":"SS","latitude":"5.06929950","longitude":"33.43835300"},{"name":"Western Equatoria","isoCode":"EW","countryCode":"SS","latitude":"5.34717990","longitude":"28.29943500"},{"name":"Jonglei State","isoCode":"JG","countryCode":"SS","latitude":"7.18196190","longitude":"32.35609520"},{"name":"Lakes","isoCode":"LK","countryCode":"SS","latitude":"37.16282550","longitude":"-95.69116230"},{"name":"Upper Nile","isoCode":"NU","countryCode":"SS","latitude":"9.88942020","longitude":"32.71813750"},{"name":"Unity","isoCode":"UY","countryCode":"SS","latitude":"37.78712760","longitude":"-122.40340790"},{"name":"Warrap","isoCode":"WR","countryCode":"SS","latitude":"8.08862380","longitude":"28.64106410"},{"name":"Príncipe Province","isoCode":"P","countryCode":"ST","latitude":"1.61393810","longitude":"7.40569280"},{"name":"São Tomé Province","isoCode":"S","countryCode":"ST","latitude":"0.33019240","longitude":"6.73334300"},{"name":"Ahuachapán Department","isoCode":"AH","countryCode":"SV","latitude":"13.82161480","longitude":"-89.92532330"},{"name":"Cabañas Department","isoCode":"CA","countryCode":"SV","latitude":"13.86482880","longitude":"-88.74939980"},{"name":"Chalatenango Department","isoCode":"CH","countryCode":"SV","latitude":"14.19166480","longitude":"-89.17059980"},{"name":"Cuscatlán Department","isoCode":"CU","countryCode":"SV","latitude":"13.86619570","longitude":"-89.05615320"},{"name":"La Libertad Department","isoCode":"LI","countryCode":"SV","latitude":"13.68176610","longitude":"-89.36062980"},{"name":"Morazán Department","isoCode":"MO","countryCode":"SV","latitude":"13.76820000","longitude":"-88.12913870"},{"name":"La Paz Department","isoCode":"PA","countryCode":"SV","latitude":null,"longitude":null},{"name":"Santa Ana Department","isoCode":"SA","countryCode":"SV","latitude":"14.14611210","longitude":"-89.51200840"},{"name":"San Miguel Department","isoCode":"SM","countryCode":"SV","latitude":"13.44510410","longitude":"-88.24611830"},{"name":"Sonsonate Department","isoCode":"SO","countryCode":"SV","latitude":"13.68235800","longitude":"-89.66281110"},{"name":"San Salvador Department","isoCode":"SS","countryCode":"SV","latitude":"13.77399970","longitude":"-89.20867730"},{"name":"San Vicente Department","isoCode":"SV","countryCode":"SV","latitude":"13.58685610","longitude":"-88.74939980"},{"name":"La Unión Department","isoCode":"UN","countryCode":"SV","latitude":"13.48864430","longitude":"-87.89424510"},{"name":"Usulután Department","isoCode":"US","countryCode":"SV","latitude":"13.44706340","longitude":"-88.55653100"},{"name":"Damascus Governorate","isoCode":"DI","countryCode":"SY","latitude":"33.51514440","longitude":"36.39313540"},{"name":"Daraa Governorate","isoCode":"DR","countryCode":"SY","latitude":"32.92488130","longitude":"36.17626150"},{"name":"Deir ez-Zor Governorate","isoCode":"DY","countryCode":"SY","latitude":"35.28797980","longitude":"40.30886260"},{"name":"Al-Hasakah Governorate","isoCode":"HA","countryCode":"SY","latitude":"36.40551500","longitude":"40.79691490"},{"name":"Homs Governorate","isoCode":"HI","countryCode":"SY","latitude":"34.25671230","longitude":"38.31657250"},{"name":"Aleppo Governorate","isoCode":"HL","countryCode":"SY","latitude":"36.22623930","longitude":"37.46813960"},{"name":"Hama Governorate","isoCode":"HM","countryCode":"SY","latitude":"35.18878650","longitude":"37.21158290"},{"name":"Idlib Governorate","isoCode":"ID","countryCode":"SY","latitude":"35.82687980","longitude":"36.69572160"},{"name":"Latakia Governorate","isoCode":"LA","countryCode":"SY","latitude":"35.61297910","longitude":"36.00232250"},{"name":"Quneitra Governorate","isoCode":"QU","countryCode":"SY","latitude":"33.07763180","longitude":"35.89341360"},{"name":"Al-Raqqah Governorate","isoCode":"RA","countryCode":"SY","latitude":"35.95941060","longitude":"38.99810520"},{"name":"Rif Dimashq Governorate","isoCode":"RD","countryCode":"SY","latitude":"33.51672890","longitude":"36.95410700"},{"name":"As-Suwayda Governorate","isoCode":"SU","countryCode":"SY","latitude":"32.79891560","longitude":"36.78195050"},{"name":"Tartus Governorate","isoCode":"TA","countryCode":"SY","latitude":"35.00066520","longitude":"36.00232250"},{"name":"Hhohho District","isoCode":"HH","countryCode":"SZ","latitude":"-26.13656620","longitude":"31.35416310"},{"name":"Lubombo District","isoCode":"LU","countryCode":"SZ","latitude":"-26.78517730","longitude":"31.81070790"},{"name":"Manzini District","isoCode":"MA","countryCode":"SZ","latitude":"-26.50819990","longitude":"31.37131640"},{"name":"Shiselweni District","isoCode":"SH","countryCode":"SZ","latitude":"-26.98275770","longitude":"31.35416310"},{"name":"Batha Region","isoCode":"BA","countryCode":"TD","latitude":"13.93717750","longitude":"18.42760470"},{"name":"Bahr el Gazel","isoCode":"BG","countryCode":"TD","latitude":"14.77022660","longitude":"16.91225100"},{"name":"Borkou","isoCode":"BO","countryCode":"TD","latitude":"17.86888450","longitude":"18.80761950"},{"name":"Ennedi-Est","isoCode":"EE","countryCode":"TD","latitude":"16.34204960","longitude":"23.00119890"},{"name":"Ennedi Region","isoCode":"EN","countryCode":"TD","latitude":"17.54145780","longitude":"21.85685860"},{"name":"Ennedi-Ouest","isoCode":"EO","countryCode":"TD","latitude":"18.97756300","longitude":"21.85685860"},{"name":"Guéra Region","isoCode":"GR","countryCode":"TD","latitude":"11.12190150","longitude":"18.42760470"},{"name":"Hadjer-Lamis","isoCode":"HL","countryCode":"TD","latitude":"12.45772730","longitude":"16.72346390"},{"name":"Kanem Region","isoCode":"KA","countryCode":"TD","latitude":"14.87812620","longitude":"15.40680790"},{"name":"Lac Region","isoCode":"LC","countryCode":"TD","latitude":"13.69153770","longitude":"14.10013260"},{"name":"Logone Occidental Region","isoCode":"LO","countryCode":"TD","latitude":"8.75967600","longitude":"15.87600400"},{"name":"Logone Oriental Region","isoCode":"LR","countryCode":"TD","latitude":"8.31499490","longitude":"16.34637910"},{"name":"Mandoul Region","isoCode":"MA","countryCode":"TD","latitude":"8.60309100","longitude":"17.47951730"},{"name":"Moyen-Chari Region","isoCode":"MC","countryCode":"TD","latitude":"9.06399980","longitude":"18.42760470"},{"name":"Mayo-Kebbi Est Region","isoCode":"ME","countryCode":"TD","latitude":"9.40460390","longitude":"14.84546190"},{"name":"Mayo-Kebbi Ouest Region","isoCode":"MO","countryCode":"TD","latitude":"10.41130140","longitude":"15.59433880"},{"name":"N\'Djamena","isoCode":"ND","countryCode":"TD","latitude":"12.13484570","longitude":"15.05574150"},{"name":"Ouaddaï Region","isoCode":"OD","countryCode":"TD","latitude":"13.74847600","longitude":"20.71224650"},{"name":"Salamat Region","isoCode":"SA","countryCode":"TD","latitude":"10.96916010","longitude":"20.71224650"},{"name":"Sila Region","isoCode":"SI","countryCode":"TD","latitude":"12.13074000","longitude":"21.28450250"},{"name":"Tandjilé Region","isoCode":"TA","countryCode":"TD","latitude":"9.66257290","longitude":"16.72346390"},{"name":"Tibesti Region","isoCode":"TI","countryCode":"TD","latitude":"21.36500310","longitude":"16.91225100"},{"name":"Wadi Fira Region","isoCode":"WF","countryCode":"TD","latitude":"15.08924160","longitude":"21.47528510"},{"name":"Centrale Region","isoCode":"C","countryCode":"TG","latitude":"8.65860290","longitude":"1.05861350"},{"name":"Kara Region","isoCode":"K","countryCode":"TG","latitude":"9.72163930","longitude":"1.05861350"},{"name":"Maritime","isoCode":"M","countryCode":"TG","latitude":"41.65514930","longitude":"-83.52784670"},{"name":"Plateaux Region","isoCode":"P","countryCode":"TG","latitude":"7.61013780","longitude":"1.05861350"},{"name":"Savanes Region","isoCode":"S","countryCode":"TG","latitude":"10.52917810","longitude":"0.52578230"},{"name":"Bangkok","isoCode":"10","countryCode":"TH","latitude":"13.75633090","longitude":"100.50176510"},{"name":"Samut Prakan","isoCode":"11","countryCode":"TH","latitude":"13.59909610","longitude":"100.59983190"},{"name":"Nonthaburi","isoCode":"12","countryCode":"TH","latitude":"13.85910840","longitude":"100.52165080"},{"name":"Pathum Thani","isoCode":"13","countryCode":"TH","latitude":"14.02083910","longitude":"100.52502760"},{"name":"Phra Nakhon Si Ayutthaya","isoCode":"14","countryCode":"TH","latitude":"14.36923250","longitude":"100.58766340"},{"name":"Ang Thong","isoCode":"15","countryCode":"TH","latitude":"14.58960540","longitude":"100.45505200"},{"name":"Lop Buri","isoCode":"16","countryCode":"TH","latitude":"14.79950810","longitude":"100.65337060"},{"name":"Sing Buri","isoCode":"17","countryCode":"TH","latitude":"14.89362530","longitude":"100.39673140"},{"name":"Chai Nat","isoCode":"18","countryCode":"TH","latitude":"15.18519710","longitude":"100.12512500"},{"name":"Saraburi","isoCode":"19","countryCode":"TH","latitude":"14.52891540","longitude":"100.91014210"},{"name":"Chon Buri","isoCode":"20","countryCode":"TH","latitude":"13.36114310","longitude":"100.98467170"},{"name":"Rayong","isoCode":"21","countryCode":"TH","latitude":"12.68139570","longitude":"101.28162610"},{"name":"Chanthaburi","isoCode":"22","countryCode":"TH","latitude":"12.61124850","longitude":"102.10378060"},{"name":"Trat","isoCode":"23","countryCode":"TH","latitude":"12.24275630","longitude":"102.51747340"},{"name":"Chachoengsao","isoCode":"24","countryCode":"TH","latitude":"13.69041940","longitude":"101.07795960"},{"name":"Prachin Buri","isoCode":"25","countryCode":"TH","latitude":"14.04206990","longitude":"101.66008740"},{"name":"Nakhon Nayok","isoCode":"26","countryCode":"TH","latitude":"14.20694660","longitude":"101.21305110"},{"name":"Sa Kaeo","isoCode":"27","countryCode":"TH","latitude":"13.82403800","longitude":"102.06458390"},{"name":"Nakhon Ratchasima","isoCode":"30","countryCode":"TH","latitude":"14.97384930","longitude":"102.08365200"},{"name":"Buri Ram","isoCode":"31","countryCode":"TH","latitude":"14.99510030","longitude":"103.11159150"},{"name":"Surin","isoCode":"32","countryCode":"TH","latitude":"37.03582710","longitude":"-95.62763670"},{"name":"Si Sa Ket","isoCode":"33","countryCode":"TH","latitude":"15.11860090","longitude":"104.32200950"},{"name":"Ubon Ratchathani","isoCode":"34","countryCode":"TH","latitude":"15.24484530","longitude":"104.84729950"},{"name":"Yasothon","isoCode":"35","countryCode":"TH","latitude":"15.79264100","longitude":"104.14528270"},{"name":"Chaiyaphum","isoCode":"36","countryCode":"TH","latitude":"16.00749740","longitude":"101.61291720"},{"name":"Amnat Charoen","isoCode":"37","countryCode":"TH","latitude":"15.86567830","longitude":"104.62577740"},{"name":"Bueng Kan","isoCode":"38","countryCode":"TH","latitude":"18.36091040","longitude":"103.64644630"},{"name":"Nong Bua Lam Phu","isoCode":"39","countryCode":"TH","latitude":"17.22182470","longitude":"102.42603680"},{"name":"Khon Kaen","isoCode":"40","countryCode":"TH","latitude":"16.43219380","longitude":"102.82362140"},{"name":"Udon Thani","isoCode":"41","countryCode":"TH","latitude":"17.36469690","longitude":"102.81589240"},{"name":"Loei","isoCode":"42","countryCode":"TH","latitude":"17.48602320","longitude":"101.72230020"},{"name":"Nong Khai","isoCode":"43","countryCode":"TH","latitude":"17.87828030","longitude":"102.74126380"},{"name":"Maha Sarakham","isoCode":"44","countryCode":"TH","latitude":"16.01320150","longitude":"103.16151690"},{"name":"Roi Et","isoCode":"45","countryCode":"TH","latitude":"16.05381960","longitude":"103.65200360"},{"name":"Kalasin","isoCode":"46","countryCode":"TH","latitude":"16.43850800","longitude":"103.50609940"},{"name":"Sakon Nakhon","isoCode":"47","countryCode":"TH","latitude":"17.16642110","longitude":"104.14860550"},{"name":"Nakhon Phanom","isoCode":"48","countryCode":"TH","latitude":"17.39203900","longitude":"104.76955080"},{"name":"Mukdahan","isoCode":"49","countryCode":"TH","latitude":"16.54359140","longitude":"104.70241210"},{"name":"Chiang Mai","isoCode":"50","countryCode":"TH","latitude":"18.78834390","longitude":"98.98530080"},{"name":"Lamphun","isoCode":"51","countryCode":"TH","latitude":"18.57446060","longitude":"99.00872210"},{"name":"Lampang","isoCode":"52","countryCode":"TH","latitude":"18.28553950","longitude":"99.51278950"},{"name":"Uttaradit","isoCode":"53","countryCode":"TH","latitude":"17.62008860","longitude":"100.09929420"},{"name":"Phrae","isoCode":"54","countryCode":"TH","latitude":"18.14457740","longitude":"100.14028310"},{"name":"Nan","isoCode":"55","countryCode":"TH","latitude":"45.52220800","longitude":"-122.98632810"},{"name":"Phayao","isoCode":"56","countryCode":"TH","latitude":"19.21543670","longitude":"100.20236920"},{"name":"Chiang Rai","isoCode":"57","countryCode":"TH","latitude":"19.91047980","longitude":"99.84057600"},{"name":"Mae Hong Son","isoCode":"58","countryCode":"TH","latitude":"19.30202960","longitude":"97.96543680"},{"name":"Nakhon Sawan","isoCode":"60","countryCode":"TH","latitude":"15.69873820","longitude":"100.11996000"},{"name":"Uthai Thani","isoCode":"61","countryCode":"TH","latitude":"15.38350010","longitude":"100.02455270"},{"name":"Kamphaeng Phet","isoCode":"62","countryCode":"TH","latitude":"16.48277980","longitude":"99.52266180"},{"name":"Tak","isoCode":"63","countryCode":"TH","latitude":"45.02996460","longitude":"-93.10498150"},{"name":"Sukhothai","isoCode":"64","countryCode":"TH","latitude":"43.64855560","longitude":"-79.37466390"},{"name":"Phitsanulok","isoCode":"65","countryCode":"TH","latitude":"16.82112380","longitude":"100.26585160"},{"name":"Phichit","isoCode":"66","countryCode":"TH","latitude":"16.27408760","longitude":"100.33469910"},{"name":"Phetchabun","isoCode":"67","countryCode":"TH","latitude":"16.30166900","longitude":"101.11928040"},{"name":"Ratchaburi","isoCode":"70","countryCode":"TH","latitude":"13.52828930","longitude":"99.81342110"},{"name":"Kanchanaburi","isoCode":"71","countryCode":"TH","latitude":"14.10113930","longitude":"99.41794310"},{"name":"Suphan Buri","isoCode":"72","countryCode":"TH","latitude":"14.47448920","longitude":"100.11771280"},{"name":"Nakhon Pathom","isoCode":"73","countryCode":"TH","latitude":"13.81402930","longitude":"100.03729290"},{"name":"Samut Sakhon","isoCode":"74","countryCode":"TH","latitude":"13.54752160","longitude":"100.27439560"},{"name":"Samut Songkhram","isoCode":"75","countryCode":"TH","latitude":"13.40982170","longitude":"100.00226450"},{"name":"Phetchaburi","isoCode":"76","countryCode":"TH","latitude":"12.96492150","longitude":"99.64258830"},{"name":"Prachuap Khiri Khan","isoCode":"77","countryCode":"TH","latitude":"11.79383890","longitude":"99.79575640"},{"name":"Nakhon Si Thammarat","isoCode":"80","countryCode":"TH","latitude":"8.43248310","longitude":"99.95990330"},{"name":"Krabi","isoCode":"81","countryCode":"TH","latitude":"8.08629970","longitude":"98.90628350"},{"name":"Phangnga","isoCode":"82","countryCode":"TH","latitude":"8.45014140","longitude":"98.52553170"},{"name":"Phuket","isoCode":"83","countryCode":"TH","latitude":"7.88044790","longitude":"98.39225040"},{"name":"Surat Thani","isoCode":"84","countryCode":"TH","latitude":"9.13419490","longitude":"99.33341980"},{"name":"Ranong","isoCode":"85","countryCode":"TH","latitude":"9.95287020","longitude":"98.60846410"},{"name":"Chumphon","isoCode":"86","countryCode":"TH","latitude":"10.49304960","longitude":"99.18001990"},{"name":"Songkhla","isoCode":"90","countryCode":"TH","latitude":"7.18976590","longitude":"100.59538130"},{"name":"Satun","isoCode":"91","countryCode":"TH","latitude":"6.62381580","longitude":"100.06737440"},{"name":"Trang","isoCode":"92","countryCode":"TH","latitude":"7.56448330","longitude":"99.62393340"},{"name":"Phatthalung","isoCode":"93","countryCode":"TH","latitude":"7.61668230","longitude":"100.07402310"},{"name":"Pattani","isoCode":"94","countryCode":"TH","latitude":"6.76183080","longitude":"101.32325490"},{"name":"Yala","isoCode":"95","countryCode":"TH","latitude":"44.05791170","longitude":"-123.16538480"},{"name":"Narathiwat","isoCode":"96","countryCode":"TH","latitude":"6.42546070","longitude":"101.82531430"},{"name":"Pattaya","isoCode":"S","countryCode":"TH","latitude":"12.92355570","longitude":"100.88245510"},{"name":"Gorno-Badakhshan Autonomous Province","isoCode":"GB","countryCode":"TJ","latitude":"38.41273200","longitude":"73.08774900"},{"name":"Khatlon Province","isoCode":"KT","countryCode":"TJ","latitude":"37.91135620","longitude":"69.09702300"},{"name":"districts of Republican Subordination","isoCode":"RA","countryCode":"TJ","latitude":"39.08579020","longitude":"70.24083250"},{"name":"Sughd Province","isoCode":"SU","countryCode":"TJ","latitude":"39.51553260","longitude":"69.09702300"},{"name":"Aileu municipality","isoCode":"AL","countryCode":"TL","latitude":"-8.70439940","longitude":"125.60954740"},{"name":"Ainaro Municipality","isoCode":"AN","countryCode":"TL","latitude":"-9.01131710","longitude":"125.52200120"},{"name":"Baucau Municipality","isoCode":"BA","countryCode":"TL","latitude":"-8.47143080","longitude":"126.45759910"},{"name":"Bobonaro Municipality","isoCode":"BO","countryCode":"TL","latitude":"-8.96554060","longitude":"125.25879640"},{"name":"Cova Lima Municipality","isoCode":"CO","countryCode":"TL","latitude":"-9.26503750","longitude":"125.25879640"},{"name":"Dili municipality","isoCode":"DI","countryCode":"TL","latitude":"-8.24496130","longitude":"125.58766970"},{"name":"Ermera District","isoCode":"ER","countryCode":"TL","latitude":"-8.75248020","longitude":"125.39872940"},{"name":"Lautém Municipality","isoCode":"LA","countryCode":"TL","latitude":"-8.36423070","longitude":"126.90438450"},{"name":"Liquiçá Municipality","isoCode":"LI","countryCode":"TL","latitude":"-8.66740950","longitude":"125.25879640"},{"name":"Manufahi Municipality","isoCode":"MF","countryCode":"TL","latitude":"-9.01454950","longitude":"125.82799590"},{"name":"Manatuto District","isoCode":"MT","countryCode":"TL","latitude":"-8.51556080","longitude":"126.01592550"},{"name":"Viqueque Municipality","isoCode":"VI","countryCode":"TL","latitude":"-8.85979180","longitude":"126.36335160"},{"name":"Ahal Region","isoCode":"A","countryCode":"TM","latitude":"38.63993980","longitude":"59.47209040"},{"name":"Balkan Region","isoCode":"B","countryCode":"TM","latitude":"41.81014720","longitude":"21.09373110"},{"name":"Daşoguz Region","isoCode":"D","countryCode":"TM","latitude":"41.83687370","longitude":"59.96519040"},{"name":"Lebap Region","isoCode":"L","countryCode":"TM","latitude":"38.12724620","longitude":"64.71624150"},{"name":"Mary Region","isoCode":"M","countryCode":"TM","latitude":"36.94816230","longitude":"62.45041540"},{"name":"Ashgabat","isoCode":"S","countryCode":"TM","latitude":"37.96007660","longitude":"58.32606290"},{"name":"Tunis Governorate","isoCode":"11","countryCode":"TN","latitude":"36.83749460","longitude":"10.19273890"},{"name":"Ariana Governorate","isoCode":"12","countryCode":"TN","latitude":"36.99227510","longitude":"10.12551640"},{"name":"Ben Arous Governorate","isoCode":"13","countryCode":"TN","latitude":"36.64356060","longitude":"10.21515780"},{"name":"Manouba Governorate","isoCode":"14","countryCode":"TN","latitude":"36.84465040","longitude":"9.85714160"},{"name":"Zaghouan Governorate","isoCode":"22","countryCode":"TN","latitude":"36.40911880","longitude":"10.14231720"},{"name":"Bizerte Governorate","isoCode":"23","countryCode":"TN","latitude":"37.16093970","longitude":"9.63413500"},{"name":"Kassrine","isoCode":"31","countryCode":"TN","latitude":"35.17227160","longitude":"8.83076260"},{"name":"Jendouba Governorate","isoCode":"32","countryCode":"TN","latitude":"36.71818620","longitude":"8.74811670"},{"name":"Kef Governorate","isoCode":"33","countryCode":"TN","latitude":"36.12305120","longitude":"8.66005860"},{"name":"Siliana Governorate","isoCode":"34","countryCode":"TN","latitude":"36.08872080","longitude":"9.36453350"},{"name":"Kairouan Governorate","isoCode":"41","countryCode":"TN","latitude":"35.67116630","longitude":"10.10054690"},{"name":"Kasserine Governorate","isoCode":"42","countryCode":"TN","latitude":"35.08091480","longitude":"8.66005860"},{"name":"Sidi Bouzid Governorate","isoCode":"43","countryCode":"TN","latitude":"35.03543860","longitude":"9.48393920"},{"name":"Sousse Governorate","isoCode":"51","countryCode":"TN","latitude":"35.90222670","longitude":"10.34978950"},{"name":"Monastir Governorate","isoCode":"52","countryCode":"TN","latitude":"35.76425150","longitude":"10.81128850"},{"name":"Mahdia Governorate","isoCode":"53","countryCode":"TN","latitude":"35.33525580","longitude":"10.89030990"},{"name":"Sfax Governorate","isoCode":"61","countryCode":"TN","latitude":"34.86065810","longitude":"10.34978950"},{"name":"Gafsa Governorate","isoCode":"71","countryCode":"TN","latitude":"34.37885050","longitude":"8.66005860"},{"name":"Tozeur Governorate","isoCode":"72","countryCode":"TN","latitude":"33.97894910","longitude":"8.04651850"},{"name":"Kebili Governorate","isoCode":"73","countryCode":"TN","latitude":"33.70715510","longitude":"8.97146230"},{"name":"Gabès Governorate","isoCode":"81","countryCode":"TN","latitude":"33.94596480","longitude":"9.72326730"},{"name":"Medenine Governorate","isoCode":"82","countryCode":"TN","latitude":"33.22805650","longitude":"10.89030990"},{"name":"Tataouine Governorate","isoCode":"83","countryCode":"TN","latitude":"32.13441220","longitude":"10.08072980"},{"name":"ʻEua","isoCode":"01","countryCode":"TO","latitude":"37.09024000","longitude":"-95.71289100"},{"name":"Haʻapai","isoCode":"02","countryCode":"TO","latitude":"-19.75000000","longitude":"-174.36666700"},{"name":"Niuas","isoCode":"03","countryCode":"TO","latitude":"-15.95940000","longitude":"-173.78300000"},{"name":"Tongatapu","isoCode":"04","countryCode":"TO","latitude":"-21.14659680","longitude":"-175.25154820"},{"name":"Vavaʻu","isoCode":"05","countryCode":"TO","latitude":"-18.62275600","longitude":"-173.99029820"},{"name":"Adana","isoCode":"01","countryCode":"TR","latitude":"37.26123150","longitude":"35.39050460"},{"name":"Adıyaman","isoCode":"02","countryCode":"TR","latitude":"37.90782910","longitude":"38.48499230"},{"name":"Afyonkarahisar","isoCode":"03","countryCode":"TR","latitude":"38.73910990","longitude":"30.71200230"},{"name":"Ağrı","isoCode":"04","countryCode":"TR","latitude":"39.62692180","longitude":"43.02159650"},{"name":"Amasya","isoCode":"05","countryCode":"TR","latitude":"40.65166080","longitude":"35.90379660"},{"name":"Ankara","isoCode":"06","countryCode":"TR","latitude":"39.78052450","longitude":"32.71813750"},{"name":"Antalya","isoCode":"07","countryCode":"TR","latitude":"37.09516720","longitude":"31.07937050"},{"name":"Artvin","isoCode":"08","countryCode":"TR","latitude":"41.07866400","longitude":"41.76282230"},{"name":"Aydın","isoCode":"09","countryCode":"TR","latitude":"37.81170330","longitude":"28.48639630"},{"name":"Balıkesir","isoCode":"10","countryCode":"TR","latitude":"39.76167820","longitude":"28.11226790"},{"name":"Bilecik","isoCode":"11","countryCode":"TR","latitude":"40.05665550","longitude":"30.06652360"},{"name":"Bingöl","isoCode":"12","countryCode":"TR","latitude":"39.06263540","longitude":"40.76960950"},{"name":"Bitlis","isoCode":"13","countryCode":"TR","latitude":"38.65231330","longitude":"42.42020280"},{"name":"Bolu","isoCode":"14","countryCode":"TR","latitude":"40.57597660","longitude":"31.57880860"},{"name":"Burdur","isoCode":"15","countryCode":"TR","latitude":"37.46126690","longitude":"30.06652360"},{"name":"Bursa","isoCode":"16","countryCode":"TR","latitude":"40.06554590","longitude":"29.23207840"},{"name":"Çanakkale","isoCode":"17","countryCode":"TR","latitude":"40.05101040","longitude":"26.98524220"},{"name":"Çankırı","isoCode":"18","countryCode":"TR","latitude":"40.53690730","longitude":"33.58838930"},{"name":"Çorum","isoCode":"19","countryCode":"TR","latitude":"40.49982110","longitude":"34.59862630"},{"name":"Denizli","isoCode":"20","countryCode":"TR","latitude":"37.61283950","longitude":"29.23207840"},{"name":"Diyarbakır","isoCode":"21","countryCode":"TR","latitude":"38.10663720","longitude":"40.54268960"},{"name":"Edirne","isoCode":"22","countryCode":"TR","latitude":"41.15172220","longitude":"26.51379640"},{"name":"Elazığ","isoCode":"23","countryCode":"TR","latitude":"38.49648040","longitude":"39.21990290"},{"name":"Erzincan","isoCode":"24","countryCode":"TR","latitude":"39.76819140","longitude":"39.05013060"},{"name":"Erzurum","isoCode":"25","countryCode":"TR","latitude":"40.07467990","longitude":"41.66945620"},{"name":"Eskişehir","isoCode":"26","countryCode":"TR","latitude":"39.63296570","longitude":"31.26263660"},{"name":"Gaziantep","isoCode":"27","countryCode":"TR","latitude":"37.07638820","longitude":"37.38272340"},{"name":"Giresun","isoCode":"28","countryCode":"TR","latitude":"40.64616720","longitude":"38.59355110"},{"name":"Gümüşhane","isoCode":"29","countryCode":"TR","latitude":"40.28036730","longitude":"39.31432530"},{"name":"Hakkâri","isoCode":"30","countryCode":"TR","latitude":"37.44593190","longitude":"43.74498410"},{"name":"Hatay","isoCode":"31","countryCode":"TR","latitude":"36.40184880","longitude":"36.34980970"},{"name":"Isparta","isoCode":"32","countryCode":"TR","latitude":"38.02114640","longitude":"31.07937050"},{"name":"Mersin","isoCode":"33","countryCode":"TR","latitude":"36.81208580","longitude":"34.64147500"},{"name":"Istanbul","isoCode":"34","countryCode":"TR","latitude":"41.16343020","longitude":"28.76644080"},{"name":"İzmir","isoCode":"35","countryCode":"TR","latitude":"38.35916930","longitude":"27.26761160"},{"name":"Kars","isoCode":"36","countryCode":"TR","latitude":"40.28076360","longitude":"42.99195270"},{"name":"Kastamonu","isoCode":"37","countryCode":"TR","latitude":"41.41038630","longitude":"33.69983340"},{"name":"Kayseri","isoCode":"38","countryCode":"TR","latitude":"38.62568540","longitude":"35.74068820"},{"name":"Kırklareli","isoCode":"39","countryCode":"TR","latitude":"41.72597950","longitude":"27.48383900"},{"name":"Kırşehir","isoCode":"40","countryCode":"TR","latitude":"39.22689050","longitude":"33.97500180"},{"name":"Kocaeli","isoCode":"41","countryCode":"TR","latitude":"40.85327040","longitude":"29.88152030"},{"name":"Konya","isoCode":"42","countryCode":"TR","latitude":"37.98381340","longitude":"32.71813750"},{"name":"Kütahya","isoCode":"43","countryCode":"TR","latitude":"39.35813700","longitude":"29.60354950"},{"name":"Malatya","isoCode":"44","countryCode":"TR","latitude":"38.40150570","longitude":"37.95362980"},{"name":"Manisa","isoCode":"45","countryCode":"TR","latitude":"38.84193730","longitude":"28.11226790"},{"name":"Kahramanmaraş","isoCode":"46","countryCode":"TR","latitude":"37.75030360","longitude":"36.95410700"},{"name":"Mardin","isoCode":"47","countryCode":"TR","latitude":"37.34429290","longitude":"40.61964870"},{"name":"Muğla","isoCode":"48","countryCode":"TR","latitude":"37.18358190","longitude":"28.48639630"},{"name":"Muş","isoCode":"49","countryCode":"TR","latitude":"38.94618880","longitude":"41.75389310"},{"name":"Nevşehir","isoCode":"50","countryCode":"TR","latitude":"38.69393990","longitude":"34.68565090"},{"name":"Niğde","isoCode":"51","countryCode":"TR","latitude":"38.09930860","longitude":"34.68565090"},{"name":"Ordu","isoCode":"52","countryCode":"TR","latitude":"40.79905800","longitude":"37.38990050"},{"name":"Rize","isoCode":"53","countryCode":"TR","latitude":"40.95814970","longitude":"40.92269850"},{"name":"Sakarya","isoCode":"54","countryCode":"TR","latitude":"40.78885500","longitude":"30.40595400"},{"name":"Samsun","isoCode":"55","countryCode":"TR","latitude":"41.18648590","longitude":"36.13226780"},{"name":"Siirt","isoCode":"56","countryCode":"TR","latitude":"37.86588620","longitude":"42.14945230"},{"name":"Sinop","isoCode":"57","countryCode":"TR","latitude":"41.55947490","longitude":"34.85805320"},{"name":"Sivas","isoCode":"58","countryCode":"TR","latitude":"39.44880390","longitude":"37.12944970"},{"name":"Tekirdağ","isoCode":"59","countryCode":"TR","latitude":"41.11212270","longitude":"27.26761160"},{"name":"Tokat","isoCode":"60","countryCode":"TR","latitude":"40.39027130","longitude":"36.62518630"},{"name":"Trabzon","isoCode":"61","countryCode":"TR","latitude":"40.79924100","longitude":"39.58479440"},{"name":"Tunceli","isoCode":"62","countryCode":"TR","latitude":"39.30735540","longitude":"39.43877780"},{"name":"Şanlıurfa","isoCode":"63","countryCode":"TR","latitude":"37.35691020","longitude":"39.15436770"},{"name":"Uşak","isoCode":"64","countryCode":"TR","latitude":"38.54313190","longitude":"29.23207840"},{"name":"Van","isoCode":"65","countryCode":"TR","latitude":"38.36794170","longitude":"43.71827870"},{"name":"Yozgat","isoCode":"66","countryCode":"TR","latitude":"39.72719790","longitude":"35.10778580"},{"name":"Zonguldak","isoCode":"67","countryCode":"TR","latitude":"41.31249170","longitude":"31.85982510"},{"name":"Aksaray","isoCode":"68","countryCode":"TR","latitude":"38.33520430","longitude":"33.97500180"},{"name":"Bayburt","isoCode":"69","countryCode":"TR","latitude":"40.26032000","longitude":"40.22804800"},{"name":"Karaman","isoCode":"70","countryCode":"TR","latitude":"37.24363360","longitude":"33.61757700"},{"name":"Kırıkkale","isoCode":"71","countryCode":"TR","latitude":"39.88768780","longitude":"33.75552480"},{"name":"Batman","isoCode":"72","countryCode":"TR","latitude":"37.83624960","longitude":"41.36057390"},{"name":"Şırnak","isoCode":"73","countryCode":"TR","latitude":"37.41874810","longitude":"42.49183380"},{"name":"Bartın","isoCode":"74","countryCode":"TR","latitude":"41.58105090","longitude":"32.46097940"},{"name":"Ardahan","isoCode":"75","countryCode":"TR","latitude":"41.11129640","longitude":"42.78316740"},{"name":"Iğdır","isoCode":"76","countryCode":"TR","latitude":"39.88798410","longitude":"44.00483650"},{"name":"Yalova","isoCode":"77","countryCode":"TR","latitude":"40.57759860","longitude":"29.20883030"},{"name":"Karabük","isoCode":"78","countryCode":"TR","latitude":"41.18748900","longitude":"32.74174190"},{"name":"Kilis","isoCode":"79","countryCode":"TR","latitude":"36.82047750","longitude":"37.16873390"},{"name":"Osmaniye","isoCode":"80","countryCode":"TR","latitude":"37.21302580","longitude":"36.17626150"},{"name":"Düzce","isoCode":"81","countryCode":"TR","latitude":"40.87705310","longitude":"31.31927130"},{"name":"Arima","isoCode":"ARI","countryCode":"TT","latitude":"46.79316040","longitude":"-71.25843110"},{"name":"Chaguanas","isoCode":"CHA","countryCode":"TT","latitude":"10.51683870","longitude":"-61.41144820"},{"name":"Couva-Tabaquite-Talparo Regional Corporation","isoCode":"CTT","countryCode":"TT","latitude":"10.42971450","longitude":"-61.37352100"},{"name":"Diego Martin Regional Corporation","isoCode":"DMN","countryCode":"TT","latitude":"10.73622860","longitude":"-61.55448360"},{"name":"Eastern Tobago","isoCode":"ETO","countryCode":"TT","latitude":"11.29793480","longitude":"-60.55885240"},{"name":"Rio Claro-Mayaro Regional Corporation","isoCode":"MRC","countryCode":"TT","latitude":"10.24128320","longitude":"-61.09372060"},{"name":"Penal-Debe Regional Corporation","isoCode":"PED","countryCode":"TT","latitude":"10.13374020","longitude":"-61.44354740"},{"name":"Port of Spain","isoCode":"POS","countryCode":"TT","latitude":"10.66031960","longitude":"-61.50856250"},{"name":"Princes Town Regional Corporation","isoCode":"PRT","countryCode":"TT","latitude":"10.17867460","longitude":"-61.28019960"},{"name":"Point Fortin","isoCode":"PTF","countryCode":"TT","latitude":"10.17027370","longitude":"-61.67133860"},{"name":"San Fernando","isoCode":"SFO","countryCode":"TT","latitude":"34.28194610","longitude":"-118.43897190"},{"name":"Sangre Grande Regional Corporation","isoCode":"SGE","countryCode":"TT","latitude":"10.58529390","longitude":"-61.13158130"},{"name":"Siparia Regional Corporation","isoCode":"SIP","countryCode":"TT","latitude":"10.12456260","longitude":"-61.56032440"},{"name":"San Juan-Laventille Regional Corporation","isoCode":"SJL","countryCode":"TT","latitude":"10.69085780","longitude":"-61.45522130"},{"name":"Tunapuna-Piarco Regional Corporation","isoCode":"TUP","countryCode":"TT","latitude":"10.68590960","longitude":"-61.30352480"},{"name":"Western Tobago","isoCode":"WTO","countryCode":"TT","latitude":"11.18970720","longitude":"-60.77954520"},{"name":"Funafuti","isoCode":"FUN","countryCode":"TV","latitude":"-8.52114710","longitude":"179.19619260"},{"name":"Niutao Island Council","isoCode":"NIT","countryCode":"TV","latitude":"-6.10642580","longitude":"177.34384290"},{"name":"Nukufetau","isoCode":"NKF","countryCode":"TV","latitude":"-8.00000000","longitude":"178.50000000"},{"name":"Nukulaelae","isoCode":"NKL","countryCode":"TV","latitude":"-9.38111100","longitude":"179.85222200"},{"name":"Nanumea","isoCode":"NMA","countryCode":"TV","latitude":"-5.68816170","longitude":"176.13701480"},{"name":"Nanumanga","isoCode":"NMG","countryCode":"TV","latitude":"-6.28580190","longitude":"176.31992800"},{"name":"Nui","isoCode":"NUI","countryCode":"TV","latitude":"-7.23887680","longitude":"177.14852320"},{"name":"Vaitupu","isoCode":"VAI","countryCode":"TV","latitude":"-7.47673270","longitude":"178.67476750"},{"name":"Changhua","isoCode":"CHA","countryCode":"TW","latitude":"24.05179630","longitude":"120.51613520"},{"name":"Chiayi","isoCode":"CYI","countryCode":"TW","latitude":"23.45184280","longitude":"120.25546150"},{"name":"Chiayi","isoCode":"CYQ","countryCode":"TW","latitude":"23.48007510","longitude":"120.44911130"},{"name":"Hsinchu","isoCode":"HSQ","countryCode":"TW","latitude":"24.83872260","longitude":"121.01772460"},{"name":"Hsinchu","isoCode":"HSZ","countryCode":"TW","latitude":"24.81382870","longitude":"120.96747980"},{"name":"Hualien","isoCode":"HUA","countryCode":"TW","latitude":"23.98715890","longitude":"121.60157140"},{"name":"Yilan","isoCode":"ILA","countryCode":"TW","latitude":"24.70210730","longitude":"121.73775020"},{"name":"Keelung","isoCode":"KEE","countryCode":"TW","latitude":"25.12418620","longitude":"121.64758340"},{"name":"Kaohsiung","isoCode":"KHH","countryCode":"TW","latitude":"22.62727840","longitude":"120.30143530"},{"name":"Kinmen","isoCode":"KIN","countryCode":"TW","latitude":"24.34877920","longitude":"118.32856440"},{"name":"Lienchiang","isoCode":"LIE","countryCode":"TW","latitude":"26.15055560","longitude":"119.92888890"},{"name":"Miaoli","isoCode":"MIA","countryCode":"TW","latitude":"24.56015900","longitude":"120.82142650"},{"name":"Nantou","isoCode":"NAN","countryCode":"TW","latitude":"23.96099810","longitude":"120.97186380"},{"name":"New Taipei","isoCode":"NWT","countryCode":"TW","latitude":"24.98752780","longitude":"121.36459470"},{"name":"Penghu","isoCode":"PEN","countryCode":"TW","latitude":"23.57118990","longitude":"119.57931570"},{"name":"Pingtung","isoCode":"PIF","countryCode":"TW","latitude":"22.55197590","longitude":"120.54875970"},{"name":"Taoyuan","isoCode":"TAO","countryCode":"TW","latitude":"24.99362810","longitude":"121.30097980"},{"name":"Tainan","isoCode":"TNN","countryCode":"TW","latitude":"22.99972810","longitude":"120.22702770"},{"name":"Taipei","isoCode":"TPE","countryCode":"TW","latitude":"25.03296940","longitude":"121.56541770"},{"name":"Taitung","isoCode":"TTT","countryCode":"TW","latitude":"22.79724470","longitude":"121.07137020"},{"name":"Taichung","isoCode":"TXG","countryCode":"TW","latitude":"24.14773580","longitude":"120.67364820"},{"name":"Yunlin","isoCode":"YUN","countryCode":"TW","latitude":"23.70920330","longitude":"120.43133730"},{"name":"Arusha","isoCode":"01","countryCode":"TZ","latitude":"-3.38692540","longitude":"36.68299270"},{"name":"Dar es Salaam","isoCode":"02","countryCode":"TZ","latitude":"-6.79235400","longitude":"39.20832840"},{"name":"Dodoma","isoCode":"03","countryCode":"TZ","latitude":"-6.57382280","longitude":"36.26308460"},{"name":"Iringa","isoCode":"04","countryCode":"TZ","latitude":"-7.78874420","longitude":"35.56578620"},{"name":"Kagera","isoCode":"05","countryCode":"TZ","latitude":"-1.30011150","longitude":"31.26263660"},{"name":"Pemba North","isoCode":"06","countryCode":"TZ","latitude":"-5.03193520","longitude":"39.77555710"},{"name":"Zanzibar North","isoCode":"07","countryCode":"TZ","latitude":"-5.93950930","longitude":"39.27910110"},{"name":"Kigoma","isoCode":"08","countryCode":"TZ","latitude":"-4.88240920","longitude":"29.66150550"},{"name":"Kilimanjaro","isoCode":"09","countryCode":"TZ","latitude":"-4.13369270","longitude":"37.80876930"},{"name":"Pemba South","isoCode":"10","countryCode":"TZ","latitude":"-5.31469610","longitude":"39.75495110"},{"name":"Zanzibar South","isoCode":"11","countryCode":"TZ","latitude":"-6.26428510","longitude":"39.44502810"},{"name":"Lindi","isoCode":"12","countryCode":"TZ","latitude":"-9.23433940","longitude":"38.31657250"},{"name":"Mara","isoCode":"13","countryCode":"TZ","latitude":"-1.77535380","longitude":"34.15319470"},{"name":"Mbeya","isoCode":"14","countryCode":"TZ","latitude":"-8.28661120","longitude":"32.81325370"},{"name":"Zanzibar West","isoCode":"15","countryCode":"TZ","latitude":"-6.22981360","longitude":"39.25832930"},{"name":"Morogoro","isoCode":"16","countryCode":"TZ","latitude":"-8.81371730","longitude":"36.95410700"},{"name":"Mtwara","isoCode":"17","countryCode":"TZ","latitude":"-10.33984550","longitude":"40.16574660"},{"name":"Mwanza","isoCode":"18","countryCode":"TZ","latitude":"-2.46711970","longitude":"32.89868120"},{"name":"Pwani","isoCode":"19","countryCode":"TZ","latitude":"-7.32377140","longitude":"38.82054540"},{"name":"Rukwa","isoCode":"20","countryCode":"TZ","latitude":"-8.01094440","longitude":"31.44561790"},{"name":"Ruvuma","isoCode":"21","countryCode":"TZ","latitude":"-10.68787170","longitude":"36.26308460"},{"name":"Shinyanga","isoCode":"22","countryCode":"TZ","latitude":"-3.68099610","longitude":"33.42714030"},{"name":"Singida","isoCode":"23","countryCode":"TZ","latitude":"-6.74533520","longitude":"34.15319470"},{"name":"Tabora","isoCode":"24","countryCode":"TZ","latitude":"-5.03421380","longitude":"32.80844960"},{"name":"Tanga","isoCode":"25","countryCode":"TZ","latitude":"-5.30497890","longitude":"38.31657250"},{"name":"Manyara","isoCode":"26","countryCode":"TZ","latitude":"-4.31500580","longitude":"36.95410700"},{"name":"Geita","isoCode":"27","countryCode":"TZ","latitude":"-2.82422570","longitude":"32.26538870"},{"name":"Katavi","isoCode":"28","countryCode":"TZ","latitude":"-6.36771250","longitude":"31.26263660"},{"name":"Njombe","isoCode":"29","countryCode":"TZ","latitude":"-9.24226320","longitude":"35.12687810"},{"name":"Simiyu","isoCode":"30","countryCode":"TZ","latitude":"-2.83087380","longitude":"34.15319470"},{"name":"Songwe","isoCode":"31","countryCode":"TZ","latitude":"-8.27261200","longitude":"31.71131740"},{"name":"Vinnytska oblast","isoCode":"05","countryCode":"UA","latitude":"49.23308300","longitude":"28.46821690"},{"name":"Volynska oblast","isoCode":"07","countryCode":"UA","latitude":"50.74723300","longitude":"25.32538300"},{"name":"Luhanska oblast","isoCode":"09","countryCode":"UA","latitude":"48.57404100","longitude":"39.30781500"},{"name":"Dnipropetrovska oblast","isoCode":"12","countryCode":"UA","latitude":"48.46471700","longitude":"35.04618300"},{"name":"Donetska oblast","isoCode":"14","countryCode":"UA","latitude":"48.01588300","longitude":"37.80285000"},{"name":"Zhytomyrska oblast","isoCode":"18","countryCode":"UA","latitude":"50.25465000","longitude":"28.65866690"},{"name":"Zakarpatska Oblast","isoCode":"21","countryCode":"UA","latitude":"48.62080000","longitude":"22.28788300"},{"name":"Zaporizka oblast","isoCode":"23","countryCode":"UA","latitude":"47.83880000","longitude":"35.13956700"},{"name":"Ivano-Frankivska oblast","isoCode":"26","countryCode":"UA","latitude":"48.92263300","longitude":"24.71111700"},{"name":"Kyiv","isoCode":"30","countryCode":"UA","latitude":"50.45010000","longitude":"30.52340000"},{"name":"Kyivska oblast","isoCode":"32","countryCode":"UA","latitude":"50.05295060","longitude":"30.76671340"},{"name":"Kirovohradska oblast","isoCode":"35","countryCode":"UA","latitude":"48.50793300","longitude":"32.26231700"},{"name":"Autonomous Republic of Crimea","isoCode":"43","countryCode":"UA","latitude":"44.95211700","longitude":"34.10241700"},{"name":"Lvivska oblast","isoCode":"46","countryCode":"UA","latitude":"49.83968300","longitude":"24.02971700"},{"name":"Mykolaivska oblast","isoCode":"48","countryCode":"UA","latitude":"46.97503300","longitude":"31.99458290"},{"name":"Odeska oblast","isoCode":"51","countryCode":"UA","latitude":"46.48458300","longitude":"30.73260000"},{"name":"Poltavska oblast","isoCode":"53","countryCode":"UA","latitude":"49.64291960","longitude":"32.66753390"},{"name":"Rivnenska oblast","isoCode":"56","countryCode":"UA","latitude":"50.61990000","longitude":"26.25161700"},{"name":"Sumska oblast","isoCode":"59","countryCode":"UA","latitude":"50.90770000","longitude":"34.79810000"},{"name":"Ternopilska oblast","isoCode":"61","countryCode":"UA","latitude":"49.55351700","longitude":"25.59476700"},{"name":"Kharkivska oblast","isoCode":"63","countryCode":"UA","latitude":"49.99350000","longitude":"36.23038300"},{"name":"Khersonska oblast","isoCode":"65","countryCode":"UA","latitude":"46.63541700","longitude":"32.61686700"},{"name":"Khmelnytska oblast","isoCode":"68","countryCode":"UA","latitude":"49.42298300","longitude":"26.98713310"},{"name":"Cherkaska oblast","isoCode":"71","countryCode":"UA","latitude":"49.44443300","longitude":"32.05976700"},{"name":"Chernihivska oblast","isoCode":"74","countryCode":"UA","latitude":"51.49820000","longitude":"31.28934990"},{"name":"Chernivetska oblast","isoCode":"77","countryCode":"UA","latitude":"48.29168300","longitude":"25.93521700"},{"name":"Kalangala District","isoCode":"101","countryCode":"UG","latitude":"-0.63505780","longitude":"32.53727410"},{"name":"Kampala District","isoCode":"102","countryCode":"UG","latitude":"0.34759640","longitude":"32.58251970"},{"name":"Kiboga District","isoCode":"103","countryCode":"UG","latitude":"0.96575900","longitude":"31.71954590"},{"name":"Luwero District","isoCode":"104","countryCode":"UG","latitude":"0.82711180","longitude":"32.62774550"},{"name":"Masaka District","isoCode":"105","countryCode":"UG","latitude":"-0.44636910","longitude":"31.90179540"},{"name":"Mpigi District","isoCode":"106","countryCode":"UG","latitude":"0.22735280","longitude":"32.32492360"},{"name":"Mubende District","isoCode":"107","countryCode":"UG","latitude":"0.57727580","longitude":"31.53700030"},{"name":"Mukono District","isoCode":"108","countryCode":"UG","latitude":"0.28354760","longitude":"32.76330360"},{"name":"Nakasongola District","isoCode":"109","countryCode":"UG","latitude":"1.34897210","longitude":"32.44672380"},{"name":"Rakai District","isoCode":"110","countryCode":"UG","latitude":"-0.70691350","longitude":"31.53700030"},{"name":"Sembabule District","isoCode":"111","countryCode":"UG","latitude":"0.06377150","longitude":"31.35416310"},{"name":"Kayunga District","isoCode":"112","countryCode":"UG","latitude":"0.98601820","longitude":"32.85357550"},{"name":"Wakiso District","isoCode":"113","countryCode":"UG","latitude":"0.06301900","longitude":"32.44672380"},{"name":"Lyantonde District","isoCode":"114","countryCode":"UG","latitude":"-0.22406960","longitude":"31.21684660"},{"name":"Mityana District","isoCode":"115","countryCode":"UG","latitude":"0.44548450","longitude":"32.08374450"},{"name":"Nakaseke District","isoCode":"116","countryCode":"UG","latitude":"1.22308480","longitude":"32.08374450"},{"name":"Buikwe District","isoCode":"117","countryCode":"UG","latitude":"0.31440460","longitude":"32.98883190"},{"name":"Bukomansimbi District","isoCode":"118","countryCode":"UG","latitude":"-0.14327520","longitude":"31.60548930"},{"name":"Butambala District","isoCode":"119","countryCode":"UG","latitude":"0.17425000","longitude":"32.10646680"},{"name":"Buvuma District","isoCode":"120","countryCode":"UG","latitude":"-0.37649120","longitude":"33.25879300"},{"name":"Gomba District","isoCode":"121","countryCode":"UG","latitude":"0.22297910","longitude":"31.67393710"},{"name":"Kalungu District","isoCode":"122","countryCode":"UG","latitude":"-0.09528310","longitude":"31.76513620"},{"name":"Kyankwanzi District","isoCode":"123","countryCode":"UG","latitude":"1.09660370","longitude":"31.71954590"},{"name":"Lwengo District","isoCode":"124","countryCode":"UG","latitude":"-0.41652880","longitude":"31.39989950"},{"name":"Kyotera District","isoCode":"125","countryCode":"UG","latitude":"-0.63589880","longitude":"31.54556370"},{"name":"Bugiri District","isoCode":"201","countryCode":"UG","latitude":"0.53161270","longitude":"33.75177230"},{"name":"Busia District","isoCode":"202","countryCode":"UG","latitude":"0.40447310","longitude":"34.01958270"},{"name":"Iganga District","isoCode":"203","countryCode":"UG","latitude":"0.66001370","longitude":"33.48319060"},{"name":"Jinja District","isoCode":"204","countryCode":"UG","latitude":"0.53437430","longitude":"33.30371430"},{"name":"Kamuli District","isoCode":"205","countryCode":"UG","latitude":"0.91871070","longitude":"33.12390490"},{"name":"Kapchorwa District","isoCode":"206","countryCode":"UG","latitude":"1.33502050","longitude":"34.39763560"},{"name":"Katakwi District","isoCode":"207","countryCode":"UG","latitude":"1.97310300","longitude":"34.06414190"},{"name":"Kumi District","isoCode":"208","countryCode":"UG","latitude":"1.48769990","longitude":"33.93039910"},{"name":"Mbale District","isoCode":"209","countryCode":"UG","latitude":"1.03442740","longitude":"34.19768820"},{"name":"Pallisa District","isoCode":"210","countryCode":"UG","latitude":"1.23242060","longitude":"33.75177230"},{"name":"Soroti District","isoCode":"211","countryCode":"UG","latitude":"1.72291170","longitude":"33.52800720"},{"name":"Tororo District","isoCode":"212","countryCode":"UG","latitude":"0.68709940","longitude":"34.06414190"},{"name":"Kaberamaido District","isoCode":"213","countryCode":"UG","latitude":"1.69633220","longitude":"33.21385100"},{"name":"Mayuge District","isoCode":"214","countryCode":"UG","latitude":"-0.21829820","longitude":"33.57280270"},{"name":"Sironko District","isoCode":"215","countryCode":"UG","latitude":"1.23022740","longitude":"34.24910640"},{"name":"Amuria District","isoCode":"216","countryCode":"UG","latitude":"2.03017000","longitude":"33.64275330"},{"name":"Budaka District","isoCode":"217","countryCode":"UG","latitude":"1.10162770","longitude":"33.93039910"},{"name":"Bududa District","isoCode":"218","countryCode":"UG","latitude":"1.00296930","longitude":"34.33381230"},{"name":"Bukedea District","isoCode":"219","countryCode":"UG","latitude":"1.35568980","longitude":"34.10867930"},{"name":"Bukwo District","isoCode":"220","countryCode":"UG","latitude":"1.28186510","longitude":"34.72987650"},{"name":"Butaleja District","isoCode":"221","countryCode":"UG","latitude":"0.84749220","longitude":"33.84112880"},{"name":"Kaliro District","isoCode":"222","countryCode":"UG","latitude":"1.04311070","longitude":"33.48319060"},{"name":"Manafwa District","isoCode":"223","countryCode":"UG","latitude":"0.90635990","longitude":"34.28660910"},{"name":"Namutumba District","isoCode":"224","countryCode":"UG","latitude":"0.84926100","longitude":"33.66233010"},{"name":"Bulambuli District","isoCode":"225","countryCode":"UG","latitude":"1.47988460","longitude":"34.37544140"},{"name":"Buyende District","isoCode":"226","countryCode":"UG","latitude":"1.24136820","longitude":"33.12390490"},{"name":"Kibuku District","isoCode":"227","countryCode":"UG","latitude":"1.04528740","longitude":"33.79925360"},{"name":"Kween District","isoCode":"228","countryCode":"UG","latitude":"1.44387900","longitude":"34.59713200"},{"name":"Luuka District","isoCode":"229","countryCode":"UG","latitude":"0.72505990","longitude":"33.30371430"},{"name":"Namayingo District","isoCode":"230","countryCode":"UG","latitude":"-0.28035750","longitude":"33.75177230"},{"name":"Ngora District","isoCode":"231","countryCode":"UG","latitude":"1.49081150","longitude":"33.75177230"},{"name":"Serere District","isoCode":"232","countryCode":"UG","latitude":"1.49940330","longitude":"33.54900780"},{"name":"Butebo District","isoCode":"233","countryCode":"UG","latitude":"1.21411240","longitude":"33.90808960"},{"name":"Namisindwa District","isoCode":"234","countryCode":"UG","latitude":"0.90710100","longitude":"34.35740370"},{"name":"Adjumani District","isoCode":"301","countryCode":"UG","latitude":"3.25485270","longitude":"31.71954590"},{"name":"Apac District","isoCode":"302","countryCode":"UG","latitude":"1.87302630","longitude":"32.62774550"},{"name":"Arua District","isoCode":"303","countryCode":"UG","latitude":"2.99598460","longitude":"31.17103890"},{"name":"Gulu District","isoCode":"304","countryCode":"UG","latitude":"2.81857760","longitude":"32.44672380"},{"name":"Kitgum District","isoCode":"305","countryCode":"UG","latitude":"3.33968290","longitude":"33.16888830"},{"name":"Kotido District","isoCode":"306","countryCode":"UG","latitude":"3.04156790","longitude":"33.88577470"},{"name":"Lira District","isoCode":"307","countryCode":"UG","latitude":"2.23161690","longitude":"32.94376670"},{"name":"Moroto District","isoCode":"308","countryCode":"UG","latitude":"2.61685450","longitude":"34.59713200"},{"name":"Moyo District","isoCode":"309","countryCode":"UG","latitude":"3.56964640","longitude":"31.67393710"},{"name":"Nebbi District","isoCode":"310","countryCode":"UG","latitude":"2.44093920","longitude":"31.35416310"},{"name":"Nakapiripirit District","isoCode":"311","countryCode":"UG","latitude":"1.96061730","longitude":"34.59713200"},{"name":"Pader District","isoCode":"312","countryCode":"UG","latitude":"2.94306820","longitude":"32.80844960"},{"name":"Yumbe District","isoCode":"313","countryCode":"UG","latitude":"3.46980230","longitude":"31.24832910"},{"name":"Abim District","isoCode":"314","countryCode":"UG","latitude":"2.70669800","longitude":"33.65953370"},{"name":"Amolatar District","isoCode":"315","countryCode":"UG","latitude":"1.60544020","longitude":"32.80844960"},{"name":"Amuru District","isoCode":"316","countryCode":"UG","latitude":"2.96678780","longitude":"32.08374450"},{"name":"Dokolo District","isoCode":"317","countryCode":"UG","latitude":"1.96364210","longitude":"33.03387670"},{"name":"Kaabong District","isoCode":"318","countryCode":"UG","latitude":"3.51262150","longitude":"33.97500180"},{"name":"Koboko District","isoCode":"319","countryCode":"UG","latitude":"3.52370580","longitude":"31.03351000"},{"name":"Maracha District","isoCode":"320","countryCode":"UG","latitude":"3.28731270","longitude":"30.94030230"},{"name":"Oyam District","isoCode":"321","countryCode":"UG","latitude":"2.27762810","longitude":"32.44672380"},{"name":"Agago District","isoCode":"322","countryCode":"UG","latitude":"2.92508200","longitude":"33.34861470"},{"name":"Alebtong District","isoCode":"323","countryCode":"UG","latitude":"2.25457730","longitude":"33.34861470"},{"name":"Amudat District","isoCode":"324","countryCode":"UG","latitude":"1.79162240","longitude":"34.90655100"},{"name":"Kole District","isoCode":"325","countryCode":"UG","latitude":"2.37010970","longitude":"32.76330360"},{"name":"Lamwo District","isoCode":"326","countryCode":"UG","latitude":"3.57075680","longitude":"32.53727410"},{"name":"Napak District","isoCode":"327","countryCode":"UG","latitude":"2.36299450","longitude":"34.24215970"},{"name":"Nwoya District","isoCode":"328","countryCode":"UG","latitude":"2.56244400","longitude":"31.90179540"},{"name":"Otuke District","isoCode":"329","countryCode":"UG","latitude":"2.52140590","longitude":"33.34861470"},{"name":"Zombo District","isoCode":"330","countryCode":"UG","latitude":"2.55442930","longitude":"30.94173680"},{"name":"Omoro District","isoCode":"331","countryCode":"UG","latitude":"2.71522300","longitude":"32.49200880"},{"name":"Pakwach District","isoCode":"332","countryCode":"UG","latitude":"2.46071410","longitude":"31.49417380"},{"name":"Bundibugyo District","isoCode":"401","countryCode":"UG","latitude":"0.68517630","longitude":"30.02029640"},{"name":"Bushenyi District","isoCode":"402","countryCode":"UG","latitude":"-0.48709180","longitude":"30.20510960"},{"name":"Kabale District","isoCode":"404","countryCode":"UG","latitude":"-1.24930840","longitude":"30.06652360"},{"name":"Kabarole District","isoCode":"405","countryCode":"UG","latitude":"0.58507910","longitude":"30.25127280"},{"name":"Kasese District","isoCode":"406","countryCode":"UG","latitude":"0.06462850","longitude":"30.06652360"},{"name":"Kibaale District","isoCode":"407","countryCode":"UG","latitude":"0.90668020","longitude":"31.07937050"},{"name":"Kisoro District","isoCode":"408","countryCode":"UG","latitude":"-1.22094300","longitude":"29.64991620"},{"name":"Masindi District","isoCode":"409","countryCode":"UG","latitude":"1.49203630","longitude":"31.71954590"},{"name":"Mbarara District","isoCode":"410","countryCode":"UG","latitude":"-0.60715960","longitude":"30.65450220"},{"name":"Ntungamo District","isoCode":"411","countryCode":"UG","latitude":"-0.98073410","longitude":"30.25127280"},{"name":"Rukungiri District","isoCode":"412","countryCode":"UG","latitude":"-0.75184900","longitude":"29.92779470"},{"name":"Kamwenge District","isoCode":"413","countryCode":"UG","latitude":"0.22579300","longitude":"30.48184460"},{"name":"Kanungu District","isoCode":"414","countryCode":"UG","latitude":"-0.81952530","longitude":"29.74260400"},{"name":"Kyenjojo District","isoCode":"415","countryCode":"UG","latitude":"0.60929230","longitude":"30.64012310"},{"name":"Buliisa District","isoCode":"416","countryCode":"UG","latitude":"2.02996070","longitude":"31.53700030"},{"name":"Ibanda District","isoCode":"417","countryCode":"UG","latitude":"-0.09648900","longitude":"30.57395790"},{"name":"Isingiro District","isoCode":"418","countryCode":"UG","latitude":"-0.84354300","longitude":"30.80394740"},{"name":"Kiruhura District","isoCode":"419","countryCode":"UG","latitude":"-0.19279980","longitude":"30.80394740"},{"name":"Buhweju District","isoCode":"420","countryCode":"UG","latitude":"-0.29113590","longitude":"30.29741990"},{"name":"Kiryandongo District","isoCode":"421","countryCode":"UG","latitude":"2.01799070","longitude":"32.08374450"},{"name":"Kyegegwa District","isoCode":"422","countryCode":"UG","latitude":"0.48181930","longitude":"31.05500930"},{"name":"Mitooma District","isoCode":"423","countryCode":"UG","latitude":"-0.61932760","longitude":"30.02029640"},{"name":"Ntoroko District","isoCode":"424","countryCode":"UG","latitude":"1.07881780","longitude":"30.38966510"},{"name":"Rubirizi District","isoCode":"425","countryCode":"UG","latitude":"-0.26424100","longitude":"30.10840330"},{"name":"Sheema District","isoCode":"426","countryCode":"UG","latitude":"-0.55152980","longitude":"30.38966510"},{"name":"Kagadi District","isoCode":"427","countryCode":"UG","latitude":"0.94007610","longitude":"30.81256380"},{"name":"Kakumiro District","isoCode":"428","countryCode":"UG","latitude":"0.78080350","longitude":"31.32413890"},{"name":"Rubanda District","isoCode":"429","countryCode":"UG","latitude":"-1.18611900","longitude":"29.84535760"},{"name":"Bunyangabu District","isoCode":"430","countryCode":"UG","latitude":"0.48709180","longitude":"30.20510960"},{"name":"Rukiga District","isoCode":"431","countryCode":"UG","latitude":"-1.13263370","longitude":"30.04341200"},{"name":"Central Region","isoCode":"C","countryCode":"UG","latitude":"44.29687500","longitude":"-94.74017330"},{"name":"Eastern Region","isoCode":"E","countryCode":"UG","latitude":"6.23740360","longitude":"-0.45023680"},{"name":"Northern Region","isoCode":"N","countryCode":"UG","latitude":"9.54392690","longitude":"-0.90566230"},{"name":"Western Region","isoCode":"W","countryCode":"UG","latitude":"40.76672150","longitude":"-111.88772030"},{"name":"Alaska","isoCode":"AK","countryCode":"US","latitude":"64.20084130","longitude":"-149.49367330"},{"name":"Alabama","isoCode":"AL","countryCode":"US","latitude":"32.31823140","longitude":"-86.90229800"},{"name":"Arkansas","isoCode":"AR","countryCode":"US","latitude":"35.20105000","longitude":"-91.83183340"},{"name":"American Samoa","isoCode":"AS","countryCode":"US","latitude":"-14.27097200","longitude":"-170.13221700"},{"name":"Arizona","isoCode":"AZ","countryCode":"US","latitude":"34.04892810","longitude":"-111.09373110"},{"name":"California","isoCode":"CA","countryCode":"US","latitude":"36.77826100","longitude":"-119.41793240"},{"name":"Colorado","isoCode":"CO","countryCode":"US","latitude":"39.55005070","longitude":"-105.78206740"},{"name":"Connecticut","isoCode":"CT","countryCode":"US","latitude":"41.60322070","longitude":"-73.08774900"},{"name":"District of Columbia","isoCode":"DC","countryCode":"US","latitude":"38.90719230","longitude":"-77.03687070"},{"name":"Delaware","isoCode":"DE","countryCode":"US","latitude":"38.91083250","longitude":"-75.52766990"},{"name":"Florida","isoCode":"FL","countryCode":"US","latitude":"27.66482740","longitude":"-81.51575350"},{"name":"Georgia","isoCode":"GA","countryCode":"US","latitude":"32.16562210","longitude":"-82.90007510"},{"name":"Guam","isoCode":"GU","countryCode":"US","latitude":"13.44430400","longitude":"144.79373100"},{"name":"Hawaii","isoCode":"HI","countryCode":"US","latitude":"19.89676620","longitude":"-155.58278180"},{"name":"Iowa","isoCode":"IA","countryCode":"US","latitude":"41.87800250","longitude":"-93.09770200"},{"name":"Idaho","isoCode":"ID","countryCode":"US","latitude":"44.06820190","longitude":"-114.74204080"},{"name":"Illinois","isoCode":"IL","countryCode":"US","latitude":"40.63312490","longitude":"-89.39852830"},{"name":"Indiana","isoCode":"IN","countryCode":"US","latitude":"40.26719410","longitude":"-86.13490190"},{"name":"Kansas","isoCode":"KS","countryCode":"US","latitude":"39.01190200","longitude":"-98.48424650"},{"name":"Kentucky","isoCode":"KY","countryCode":"US","latitude":"37.83933320","longitude":"-84.27001790"},{"name":"Louisiana","isoCode":"LA","countryCode":"US","latitude":"30.98429770","longitude":"-91.96233270"},{"name":"Massachusetts","isoCode":"MA","countryCode":"US","latitude":"42.40721070","longitude":"-71.38243740"},{"name":"Maryland","isoCode":"MD","countryCode":"US","latitude":"39.04575490","longitude":"-76.64127120"},{"name":"Maine","isoCode":"ME","countryCode":"US","latitude":"45.25378300","longitude":"-69.44546890"},{"name":"Michigan","isoCode":"MI","countryCode":"US","latitude":"44.31484430","longitude":"-85.60236430"},{"name":"Minnesota","isoCode":"MN","countryCode":"US","latitude":"46.72955300","longitude":"-94.68589980"},{"name":"Missouri","isoCode":"MO","countryCode":"US","latitude":"37.96425290","longitude":"-91.83183340"},{"name":"Northern Mariana Islands","isoCode":"MP","countryCode":"US","latitude":"15.09790000","longitude":"145.67390000"},{"name":"Mississippi","isoCode":"MS","countryCode":"US","latitude":"32.35466790","longitude":"-89.39852830"},{"name":"Montana","isoCode":"MT","countryCode":"US","latitude":"46.87968220","longitude":"-110.36256580"},{"name":"North Carolina","isoCode":"NC","countryCode":"US","latitude":"35.75957310","longitude":"-79.01929970"},{"name":"North Dakota","isoCode":"ND","countryCode":"US","latitude":"47.55149260","longitude":"-101.00201190"},{"name":"Nebraska","isoCode":"NE","countryCode":"US","latitude":"41.49253740","longitude":"-99.90181310"},{"name":"New Hampshire","isoCode":"NH","countryCode":"US","latitude":"43.19385160","longitude":"-71.57239530"},{"name":"New Jersey","isoCode":"NJ","countryCode":"US","latitude":"40.05832380","longitude":"-74.40566120"},{"name":"New Mexico","isoCode":"NM","countryCode":"US","latitude":"34.51994020","longitude":"-105.87009010"},{"name":"Nevada","isoCode":"NV","countryCode":"US","latitude":"38.80260970","longitude":"-116.41938900"},{"name":"New York","isoCode":"NY","countryCode":"US","latitude":"40.71277530","longitude":"-74.00597280"},{"name":"Ohio","isoCode":"OH","countryCode":"US","latitude":"40.41728710","longitude":"-82.90712300"},{"name":"Oklahoma","isoCode":"OK","countryCode":"US","latitude":"35.46756020","longitude":"-97.51642760"},{"name":"Oregon","isoCode":"OR","countryCode":"US","latitude":"43.80413340","longitude":"-120.55420120"},{"name":"Pennsylvania","isoCode":"PA","countryCode":"US","latitude":"41.20332160","longitude":"-77.19452470"},{"name":"Puerto Rico","isoCode":"PR","countryCode":"US","latitude":"18.22083300","longitude":"-66.59014900"},{"name":"Rhode Island","isoCode":"RI","countryCode":"US","latitude":"41.58009450","longitude":"-71.47742910"},{"name":"South Carolina","isoCode":"SC","countryCode":"US","latitude":"33.83608100","longitude":"-81.16372450"},{"name":"South Dakota","isoCode":"SD","countryCode":"US","latitude":"43.96951480","longitude":"-99.90181310"},{"name":"Tennessee","isoCode":"TN","countryCode":"US","latitude":"35.51749130","longitude":"-86.58044730"},{"name":"Texas","isoCode":"TX","countryCode":"US","latitude":"31.96859880","longitude":"-99.90181310"},{"name":"United States Minor Outlying Islands","isoCode":"UM","countryCode":"US","latitude":"19.28231920","longitude":"166.64704700"},{"name":"Johnston Atoll","isoCode":"UM-67","countryCode":"US","latitude":"16.72950350","longitude":"-169.53364770"},{"name":"Midway Atoll","isoCode":"UM-71","countryCode":"US","latitude":"28.20721680","longitude":"-177.37349260"},{"name":"Navassa Island","isoCode":"UM-76","countryCode":"US","latitude":"18.41006890","longitude":"-75.01146120"},{"name":"Wake Island","isoCode":"UM-79","countryCode":"US","latitude":"19.27961900","longitude":"166.64993480"},{"name":"Baker Island","isoCode":"UM-81","countryCode":"US","latitude":"0.19362660","longitude":"-176.47690800"},{"name":"Howland Island","isoCode":"UM-84","countryCode":"US","latitude":"0.81132190","longitude":"-176.61827360"},{"name":"Jarvis Island","isoCode":"UM-86","countryCode":"US","latitude":"-0.37435030","longitude":"-159.99672060"},{"name":"Kingman Reef","isoCode":"UM-89","countryCode":"US","latitude":"6.38333300","longitude":"-162.41666700"},{"name":"Palmyra Atoll","isoCode":"UM-95","countryCode":"US","latitude":"5.88850260","longitude":"-162.07866560"},{"name":"Utah","isoCode":"UT","countryCode":"US","latitude":"39.32098010","longitude":"-111.09373110"},{"name":"Virginia","isoCode":"VA","countryCode":"US","latitude":"37.43157340","longitude":"-78.65689420"},{"name":"United States Virgin Islands","isoCode":"VI","countryCode":"US","latitude":"18.33576500","longitude":"-64.89633500"},{"name":"Vermont","isoCode":"VT","countryCode":"US","latitude":"44.55880280","longitude":"-72.57784150"},{"name":"Washington","isoCode":"WA","countryCode":"US","latitude":"47.75107410","longitude":"-120.74013850"},{"name":"Wisconsin","isoCode":"WI","countryCode":"US","latitude":"43.78443970","longitude":"-88.78786780"},{"name":"West Virginia","isoCode":"WV","countryCode":"US","latitude":"38.59762620","longitude":"-80.45490260"},{"name":"Wyoming","isoCode":"WY","countryCode":"US","latitude":"43.07596780","longitude":"-107.29028390"},{"name":"Artigas Department","isoCode":"AR","countryCode":"UY","latitude":"-30.61751120","longitude":"-56.95945590"},{"name":"Canelones Department","isoCode":"CA","countryCode":"UY","latitude":"-34.54087170","longitude":"-55.93076000"},{"name":"Cerro Largo Department","isoCode":"CL","countryCode":"UY","latitude":"-32.44110320","longitude":"-54.35217530"},{"name":"Colonia Department","isoCode":"CO","countryCode":"UY","latitude":"-34.12946780","longitude":"-57.66051840"},{"name":"Durazno Department","isoCode":"DU","countryCode":"UY","latitude":"-33.02324540","longitude":"-56.02846440"},{"name":"Florida Department","isoCode":"FD","countryCode":"UY","latitude":"28.03594950","longitude":"-82.45792890"},{"name":"Flores Department","isoCode":"FS","countryCode":"UY","latitude":"-33.57337530","longitude":"-56.89450280"},{"name":"Lavalleja Department","isoCode":"LA","countryCode":"UY","latitude":"-33.92261750","longitude":"-54.97657940"},{"name":"Maldonado Department","isoCode":"MA","countryCode":"UY","latitude":"-34.55979320","longitude":"-54.86285520"},{"name":"Montevideo Department","isoCode":"MO","countryCode":"UY","latitude":"-34.81815870","longitude":"-56.21382560"},{"name":"Paysandú Department","isoCode":"PA","countryCode":"UY","latitude":"-32.06673660","longitude":"-57.33647890"},{"name":"Río Negro Department","isoCode":"RN","countryCode":"UY","latitude":"-32.76763560","longitude":"-57.42952070"},{"name":"Rocha Department","isoCode":"RO","countryCode":"UY","latitude":"-33.96900810","longitude":"-54.02148500"},{"name":"Rivera Department","isoCode":"RV","countryCode":"UY","latitude":"-31.48174210","longitude":"-55.24357590"},{"name":"Salto Department","isoCode":"SA","countryCode":"UY","latitude":"-31.38802800","longitude":"-57.96124550"},{"name":"San José Department","isoCode":"SJ","countryCode":"UY","latitude":"37.34929680","longitude":"-121.90560490"},{"name":"Soriano Department","isoCode":"SO","countryCode":"UY","latitude":"-33.51027920","longitude":"-57.74981030"},{"name":"Tacuarembó Department","isoCode":"TA","countryCode":"UY","latitude":"-31.72068370","longitude":"-55.98598870"},{"name":"Treinta y Tres Department","isoCode":"TT","countryCode":"UY","latitude":"-33.06850860","longitude":"-54.28586270"},{"name":"Andijan Region","isoCode":"AN","countryCode":"UZ","latitude":"40.76859410","longitude":"72.23637900"},{"name":"Bukhara Region","isoCode":"BU","countryCode":"UZ","latitude":"40.25041620","longitude":"63.20321510"},{"name":"Fergana Region","isoCode":"FA","countryCode":"UZ","latitude":"40.45680810","longitude":"71.28742090"},{"name":"Jizzakh Region","isoCode":"JI","countryCode":"UZ","latitude":"40.47064150","longitude":"67.57085360"},{"name":"Namangan Region","isoCode":"NG","countryCode":"UZ","latitude":"41.05100370","longitude":"71.09731700"},{"name":"Navoiy Region","isoCode":"NW","countryCode":"UZ","latitude":"42.69885750","longitude":"64.63376850"},{"name":"Qashqadaryo Region","isoCode":"QA","countryCode":"UZ","latitude":"38.89862310","longitude":"66.04635340"},{"name":"Karakalpakstan","isoCode":"QR","countryCode":"UZ","latitude":"43.80413340","longitude":"59.44579880"},{"name":"Samarqand Region","isoCode":"SA","countryCode":"UZ","latitude":"39.62701200","longitude":"66.97497310"},{"name":"Sirdaryo Region","isoCode":"SI","countryCode":"UZ","latitude":"40.38638080","longitude":"68.71549750"},{"name":"Surxondaryo Region","isoCode":"SU","countryCode":"UZ","latitude":"37.94090050","longitude":"67.57085360"},{"name":"Tashkent","isoCode":"TK","countryCode":"UZ","latitude":"41.29949580","longitude":"69.24007340"},{"name":"Tashkent Region","isoCode":"TO","countryCode":"UZ","latitude":"41.22132340","longitude":"69.85974060"},{"name":"Xorazm Region","isoCode":"XO","countryCode":"UZ","latitude":"41.35653360","longitude":"60.85666860"},{"name":"Charlotte Parish","isoCode":"01","countryCode":"VC","latitude":"13.21754510","longitude":"-61.16362440"},{"name":"Saint Andrew Parish","isoCode":"02","countryCode":"VC","latitude":"43.02429990","longitude":"-81.20250000"},{"name":"Saint David Parish","isoCode":"03","countryCode":"VC","latitude":"43.85230950","longitude":"-79.52366540"},{"name":"Saint George Parish","isoCode":"04","countryCode":"VC","latitude":"42.95760900","longitude":"-81.32670500"},{"name":"Saint Patrick Parish","isoCode":"05","countryCode":"VC","latitude":"39.75091860","longitude":"-94.84505560"},{"name":"Grenadines Parish","isoCode":"06","countryCode":"VC","latitude":"13.01229650","longitude":"-61.22773010"},{"name":"Distrito Capital","isoCode":"A","countryCode":"VE","latitude":"41.26148460","longitude":"-95.93108070"},{"name":"Anzoátegui","isoCode":"B","countryCode":"VE","latitude":"8.59130730","longitude":"-63.95861110"},{"name":"Apure","isoCode":"C","countryCode":"VE","latitude":"6.92694830","longitude":"-68.52471490"},{"name":"Aragua","isoCode":"D","countryCode":"VE","latitude":"10.06357580","longitude":"-67.28478750"},{"name":"Barinas","isoCode":"E","countryCode":"VE","latitude":"8.62314980","longitude":"-70.23710450"},{"name":"Bolívar","isoCode":"F","countryCode":"VE","latitude":"37.61448380","longitude":"-93.41047490"},{"name":"Carabobo","isoCode":"G","countryCode":"VE","latitude":"10.11764330","longitude":"-68.04775090"},{"name":"Cojedes","isoCode":"H","countryCode":"VE","latitude":"9.38166820","longitude":"-68.33392750"},{"name":"Falcón","isoCode":"I","countryCode":"VE","latitude":"11.18106740","longitude":"-69.85974060"},{"name":"Guárico","isoCode":"J","countryCode":"VE","latitude":"8.74893090","longitude":"-66.23671720"},{"name":"Lara","isoCode":"K","countryCode":"VE","latitude":"33.98221650","longitude":"-118.13227470"},{"name":"Mérida","isoCode":"L","countryCode":"VE","latitude":"20.96737020","longitude":"-89.59258570"},{"name":"Miranda","isoCode":"M","countryCode":"VE","latitude":"42.35193830","longitude":"-71.52907660"},{"name":"Monagas","isoCode":"N","countryCode":"VE","latitude":"9.32416520","longitude":"-63.01475780"},{"name":"Nueva Esparta","isoCode":"O","countryCode":"VE","latitude":"10.99707230","longitude":"-63.91132960"},{"name":"Portuguesa","isoCode":"P","countryCode":"VE","latitude":"9.09439990","longitude":"-69.09702300"},{"name":"Sucre","isoCode":"R","countryCode":"VE","latitude":"-19.03534500","longitude":"-65.25921280"},{"name":"Táchira","isoCode":"S","countryCode":"VE","latitude":"7.91370010","longitude":"-72.14161320"},{"name":"Trujillo","isoCode":"T","countryCode":"VE","latitude":"36.67343430","longitude":"-121.62875880"},{"name":"Yaracuy","isoCode":"U","countryCode":"VE","latitude":"10.33938900","longitude":"-68.81088490"},{"name":"Zulia","isoCode":"V","countryCode":"VE","latitude":"10.29102370","longitude":"-72.14161320"},{"name":"Federal Dependencies of Venezuela","isoCode":"W","countryCode":"VE","latitude":"10.93770530","longitude":"-65.35695730"},{"name":"La Guaira","isoCode":"X","countryCode":"VE","latitude":"29.30522680","longitude":"-94.79138540"},{"name":"Delta Amacuro","isoCode":"Y","countryCode":"VE","latitude":"8.84993070","longitude":"-61.14031960"},{"name":"Amazonas","isoCode":"Z","countryCode":"VE","latitude":"-3.41684270","longitude":"-65.85606460"},{"name":"Lai Châu","isoCode":"01","countryCode":"VN","latitude":"22.38622270","longitude":"103.47026310"},{"name":"Lào Cai","isoCode":"02","countryCode":"VN","latitude":"22.48094310","longitude":"103.97549590"},{"name":"Hà Giang","isoCode":"03","countryCode":"VN","latitude":"22.80255880","longitude":"104.97844940"},{"name":"Cao Bằng","isoCode":"04","countryCode":"VN","latitude":"22.63568900","longitude":"106.25221430"},{"name":"Sơn La","isoCode":"05","countryCode":"VN","latitude":"21.10222840","longitude":"103.72891670"},{"name":"Yên Bái","isoCode":"06","countryCode":"VN","latitude":"21.71676890","longitude":"104.89858780"},{"name":"Tuyên Quang","isoCode":"07","countryCode":"VN","latitude":"21.77672460","longitude":"105.22801960"},{"name":"Lạng Sơn","isoCode":"09","countryCode":"VN","latitude":"21.85370800","longitude":"106.76151900"},{"name":"Quảng Ninh","isoCode":"13","countryCode":"VN","latitude":"21.00638200","longitude":"107.29251440"},{"name":"Hòa Bình","isoCode":"14","countryCode":"VN","latitude":"20.68612650","longitude":"105.31311850"},{"name":"Ninh Bình","isoCode":"18","countryCode":"VN","latitude":"20.25061490","longitude":"105.97445360"},{"name":"Thái Bình","isoCode":"20","countryCode":"VN","latitude":"20.44634710","longitude":"106.33658280"},{"name":"Thanh Hóa","isoCode":"21","countryCode":"VN","latitude":"19.80669200","longitude":"105.78518160"},{"name":"Nghệ An","isoCode":"22","countryCode":"VN","latitude":"19.23424890","longitude":"104.92003650"},{"name":"Hà Tĩnh","isoCode":"23","countryCode":"VN","latitude":"18.35595370","longitude":"105.88774940"},{"name":"Quảng Bình","isoCode":"24","countryCode":"VN","latitude":"17.61027150","longitude":"106.34874740"},{"name":"Quảng Trị","isoCode":"25","countryCode":"VN","latitude":"16.74030740","longitude":"107.18546790"},{"name":"Thừa Thiên-Huế","isoCode":"26","countryCode":"VN","latitude":"16.46739700","longitude":"107.59053260"},{"name":"Quảng Nam","isoCode":"27","countryCode":"VN","latitude":"15.53935380","longitude":"108.01910200"},{"name":"Kon Tum","isoCode":"28","countryCode":"VN","latitude":"14.34974030","longitude":"108.00046060"},{"name":"Quảng Ngãi","isoCode":"29","countryCode":"VN","latitude":"15.12138730","longitude":"108.80441450"},{"name":"Gia Lai","isoCode":"30","countryCode":"VN","latitude":"13.80789430","longitude":"108.10937500"},{"name":"Bình Định","isoCode":"31","countryCode":"VN","latitude":"14.16653240","longitude":"108.90268300"},{"name":"Phú Yên","isoCode":"32","countryCode":"VN","latitude":"13.08818610","longitude":"109.09287640"},{"name":"Đắk Lắk","isoCode":"33","countryCode":"VN","latitude":"12.71001160","longitude":"108.23775190"},{"name":"Khánh Hòa","isoCode":"34","countryCode":"VN","latitude":"12.25850980","longitude":"109.05260760"},{"name":"Lâm Đồng","isoCode":"35","countryCode":"VN","latitude":"11.57527910","longitude":"108.14286690"},{"name":"Ninh Thuận","isoCode":"36","countryCode":"VN","latitude":"11.67387670","longitude":"108.86295720"},{"name":"Tây Ninh","isoCode":"37","countryCode":"VN","latitude":"11.33515540","longitude":"106.10988540"},{"name":"Đồng Nai","isoCode":"39","countryCode":"VN","latitude":"11.06863050","longitude":"107.16759760"},{"name":"Bình Thuận","isoCode":"40","countryCode":"VN","latitude":"11.09037030","longitude":"108.07207810"},{"name":"Long An","isoCode":"41","countryCode":"VN","latitude":"10.56071680","longitude":"106.64976230"},{"name":"Bà Rịa-Vũng Tàu","isoCode":"43","countryCode":"VN","latitude":"10.54173970","longitude":"107.24299760"},{"name":"An Giang","isoCode":"44","countryCode":"VN","latitude":"10.52158360","longitude":"105.12589550"},{"name":"Đồng Tháp","isoCode":"45","countryCode":"VN","latitude":"10.49379890","longitude":"105.68817880"},{"name":"Tiền Giang","isoCode":"46","countryCode":"VN","latitude":"10.44933240","longitude":"106.34205040"},{"name":"Kiên Giang","isoCode":"47","countryCode":"VN","latitude":"9.82495870","longitude":"105.12589550"},{"name":"Vĩnh Long","isoCode":"49","countryCode":"VN","latitude":"10.23957400","longitude":"105.95719280"},{"name":"Bến Tre","isoCode":"50","countryCode":"VN","latitude":"10.24335560","longitude":"106.37555100"},{"name":"Trà Vinh","isoCode":"51","countryCode":"VN","latitude":"9.81274100","longitude":"106.29929120"},{"name":"Sóc Trăng","isoCode":"52","countryCode":"VN","latitude":"9.60252100","longitude":"105.97390490"},{"name":"Bắc Kạn","isoCode":"53","countryCode":"VN","latitude":"22.30329230","longitude":"105.87600400"},{"name":"Bắc Giang","isoCode":"54","countryCode":"VN","latitude":"21.28199210","longitude":"106.19747690"},{"name":"Bạc Liêu","isoCode":"55","countryCode":"VN","latitude":"9.29400270","longitude":"105.72156630"},{"name":"Bắc Ninh","isoCode":"56","countryCode":"VN","latitude":"21.12144400","longitude":"106.11105010"},{"name":"Bình Dương","isoCode":"57","countryCode":"VN","latitude":"11.32540240","longitude":"106.47701700"},{"name":"Bình Phước","isoCode":"58","countryCode":"VN","latitude":"11.75118940","longitude":"106.72346390"},{"name":"Cà Mau","isoCode":"59","countryCode":"VN","latitude":"9.15267280","longitude":"105.19607950"},{"name":"Hải Dương","isoCode":"61","countryCode":"VN","latitude":"20.93734130","longitude":"106.31455420"},{"name":"Hà Nam","isoCode":"63","countryCode":"VN","latitude":"20.58351960","longitude":"105.92299000"},{"name":"Hưng Yên","isoCode":"66","countryCode":"VN","latitude":"20.85257110","longitude":"106.01699710"},{"name":"Nam Định","isoCode":"67","countryCode":"VN","latitude":"20.43882250","longitude":"106.16210530"},{"name":"Phú Thọ","isoCode":"68","countryCode":"VN","latitude":"21.26844300","longitude":"105.20455730"},{"name":"Thái Nguyên","isoCode":"69","countryCode":"VN","latitude":"21.56715590","longitude":"105.82520380"},{"name":"Vĩnh Phúc","isoCode":"70","countryCode":"VN","latitude":"21.36088050","longitude":"105.54743730"},{"name":"Điện Biên","isoCode":"71","countryCode":"VN","latitude":"21.80423090","longitude":"103.10765250"},{"name":"Đắk Nông","isoCode":"72","countryCode":"VN","latitude":"12.26464760","longitude":"107.60980600"},{"name":"Hậu Giang","isoCode":"73","countryCode":"VN","latitude":"9.75789800","longitude":"105.64125270"},{"name":"Cần Thơ","isoCode":"CT","countryCode":"VN","latitude":"10.03418510","longitude":"105.72255070"},{"name":"Đà Nẵng","isoCode":"DN","countryCode":"VN","latitude":"16.05440680","longitude":"108.20216670"},{"name":"Hà Nội","isoCode":"HN","countryCode":"VN","latitude":"21.02776440","longitude":"105.83415980"},{"name":"Hải Phòng","isoCode":"HP","countryCode":"VN","latitude":"20.84491150","longitude":"106.68808410"},{"name":"Hồ Chí Minh","isoCode":"SG","countryCode":"VN","latitude":"10.82309890","longitude":"106.62966380"},{"name":"Malampa","isoCode":"MAP","countryCode":"VU","latitude":"-16.40114050","longitude":"167.60778650"},{"name":"Penama","isoCode":"PAM","countryCode":"VU","latitude":"-15.37957580","longitude":"167.90531820"},{"name":"Sanma","isoCode":"SAM","countryCode":"VU","latitude":"-15.48400170","longitude":"166.91820970"},{"name":"Shefa","isoCode":"SEE","countryCode":"VU","latitude":"32.80576500","longitude":"35.16997100"},{"name":"Tafea","isoCode":"TAE","countryCode":"VU","latitude":"-18.72378270","longitude":"169.06450560"},{"name":"Torba","isoCode":"TOB","countryCode":"VU","latitude":"37.07653000","longitude":"27.45657300"},{"name":"A\'ana","isoCode":"AA","countryCode":"WS","latitude":"-13.89841800","longitude":"-171.97529950"},{"name":"Aiga-i-le-Tai","isoCode":"AL","countryCode":"WS","latitude":"-13.85137910","longitude":"-172.03254010"},{"name":"Atua","isoCode":"AT","countryCode":"WS","latitude":"-13.97870530","longitude":"-171.62542830"},{"name":"Fa\'asaleleaga","isoCode":"FA","countryCode":"WS","latitude":"-13.63076380","longitude":"-172.23659810"},{"name":"Gaga\'emauga","isoCode":"GE","countryCode":"WS","latitude":"-13.54286660","longitude":"-172.36688700"},{"name":"Gaga\'ifomauga","isoCode":"GI","countryCode":"WS","latitude":"-13.54680070","longitude":"-172.49693310"},{"name":"Palauli","isoCode":"PA","countryCode":"WS","latitude":"-13.72945790","longitude":"-172.45361150"},{"name":"Satupa\'itea","isoCode":"SA","countryCode":"WS","latitude":"-13.65382140","longitude":"-172.61592710"},{"name":"Tuamasaga","isoCode":"TU","countryCode":"WS","latitude":"-13.91635920","longitude":"-171.82243620"},{"name":"Va\'a-o-Fonoti","isoCode":"VF","countryCode":"WS","latitude":"-13.94709030","longitude":"-171.54318720"},{"name":"Vaisigano","isoCode":"VS","countryCode":"WS","latitude":"-13.54138270","longitude":"-172.70233830"},{"name":"Đakovica District (Gjakove)","isoCode":"XDG","countryCode":"XK","latitude":"42.43757560","longitude":"20.37854380"},{"name":"Gjilan District","isoCode":"XGJ","countryCode":"XK","latitude":"42.46352060","longitude":"21.46940110"},{"name":"Kosovska Mitrovica District","isoCode":"XKM","countryCode":"XK","latitude":"42.89139090","longitude":"20.86599950"},{"name":"Peć District","isoCode":"XPE","countryCode":"XK","latitude":"42.65921550","longitude":"20.28876240"},{"name":"Pristina (Priştine)","isoCode":"XPI","countryCode":"XK","latitude":"42.66291380","longitude":"21.16550280"},{"name":"Prizren District","isoCode":"XPR","countryCode":"XK","latitude":"42.21525220","longitude":"20.74147720"},{"name":"Uroševac District (Ferizaj)","isoCode":"XUF","countryCode":"XK","latitude":"42.37018440","longitude":"21.14832810"},{"name":"Abyan Governorate","isoCode":"AB","countryCode":"YE","latitude":"13.63434130","longitude":"46.05632120"},{"name":"\'Adan Governorate","isoCode":"AD","countryCode":"YE","latitude":"12.82574810","longitude":"44.79438040"},{"name":"\'Amran Governorate","isoCode":"AM","countryCode":"YE","latitude":"16.25692140","longitude":"43.94367880"},{"name":"Al Bayda\' Governorate","isoCode":"BA","countryCode":"YE","latitude":"14.35886620","longitude":"45.44980650"},{"name":"Dhamar Governorate","isoCode":"DH","countryCode":"YE","latitude":"14.71953440","longitude":"44.24790150"},{"name":"Hadhramaut Governorate","isoCode":"HD","countryCode":"YE","latitude":"16.93041350","longitude":"49.36531490"},{"name":"Hajjah Governorate","isoCode":"HJ","countryCode":"YE","latitude":"16.11806310","longitude":"43.32946600"},{"name":"Al Hudaydah Governorate","isoCode":"HU","countryCode":"YE","latitude":"15.30530720","longitude":"43.01948970"},{"name":"Ibb Governorate","isoCode":"IB","countryCode":"YE","latitude":"14.14157170","longitude":"44.24790150"},{"name":"Al Jawf Governorate","isoCode":"JA","countryCode":"YE","latitude":"16.79018190","longitude":"45.29938620"},{"name":"Lahij Governorate","isoCode":"LA","countryCode":"YE","latitude":"13.14895880","longitude":"44.85054950"},{"name":"Ma\'rib Governorate","isoCode":"MA","countryCode":"YE","latitude":"15.51588800","longitude":"45.44980650"},{"name":"Al Mahrah Governorate","isoCode":"MR","countryCode":"YE","latitude":"16.52384230","longitude":"51.68342750"},{"name":"Al Mahwit Governorate","isoCode":"MW","countryCode":"YE","latitude":"15.39632290","longitude":"43.56069460"},{"name":"Raymah Governorate","isoCode":"RA","countryCode":"YE","latitude":"14.62776820","longitude":"43.71424840"},{"name":"Sana\'a","isoCode":"SA","countryCode":"YE","latitude":"15.36944510","longitude":"44.19100660"},{"name":"Saada Governorate","isoCode":"SD","countryCode":"YE","latitude":"16.84765280","longitude":"43.94367880"},{"name":"Shabwah Governorate","isoCode":"SH","countryCode":"YE","latitude":"14.75463030","longitude":"46.51626200"},{"name":"Sana\'a Governorate","isoCode":"SN","countryCode":"YE","latitude":"15.31689130","longitude":"44.47480180"},{"name":"Socotra Governorate","isoCode":"SU","countryCode":"YE","latitude":"12.46342050","longitude":"53.82373850"},{"name":"Ta\'izz Governorate","isoCode":"TA","countryCode":"YE","latitude":"13.57758860","longitude":"44.01779890"},{"name":"Eastern Cape","isoCode":"EC","countryCode":"ZA","latitude":"-32.29684020","longitude":"26.41938900"},{"name":"Free State","isoCode":"FS","countryCode":"ZA","latitude":"37.68585250","longitude":"-97.28112560"},{"name":"Gauteng","isoCode":"GP","countryCode":"ZA","latitude":"-26.27075930","longitude":"28.11226790"},{"name":"KwaZulu-Natal","isoCode":"KZN","countryCode":"ZA","latitude":"-28.53055390","longitude":"30.89582420"},{"name":"Limpopo","isoCode":"LP","countryCode":"ZA","latitude":"-23.40129460","longitude":"29.41793240"},{"name":"Mpumalanga","isoCode":"MP","countryCode":"ZA","latitude":"-25.56533600","longitude":"30.52790960"},{"name":"Northern Cape","isoCode":"NC","countryCode":"ZA","latitude":"-29.04668080","longitude":"21.85685860"},{"name":"North West","isoCode":"NW","countryCode":"ZA","latitude":"32.75885200","longitude":"-97.32880600"},{"name":"Western Cape","isoCode":"WC","countryCode":"ZA","latitude":"-33.22779180","longitude":"21.85685860"},{"name":"Western Province","isoCode":"01","countryCode":"ZM","latitude":"6.90160860","longitude":"80.00877460"},{"name":"Central Province","isoCode":"02","countryCode":"ZM","latitude":"7.25649960","longitude":"80.72144170"},{"name":"Eastern Province","isoCode":"03","countryCode":"ZM","latitude":"23.16696880","longitude":"49.36531490"},{"name":"Luapula Province","isoCode":"04","countryCode":"ZM","latitude":"-11.56483100","longitude":"29.04599270"},{"name":"Northern Province","isoCode":"05","countryCode":"ZM","latitude":"8.88550270","longitude":"80.27673270"},{"name":"Northwestern Province","isoCode":"06","countryCode":"ZM","latitude":"-13.00502580","longitude":"24.90422080"},{"name":"Southern Province","isoCode":"07","countryCode":"ZM","latitude":"6.23737500","longitude":"80.54384500"},{"name":"Copperbelt Province","isoCode":"08","countryCode":"ZM","latitude":"-13.05700730","longitude":"27.54958460"},{"name":"Lusaka Province","isoCode":"09","countryCode":"ZM","latitude":"-15.36571290","longitude":"29.23207840"},{"name":"Muchinga Province","isoCode":"10","countryCode":"ZM","latitude":"-15.38219300","longitude":"28.26158000"},{"name":"Bulawayo Province","isoCode":"BU","countryCode":"ZW","latitude":"-20.14895050","longitude":"28.53310380"},{"name":"Harare Province","isoCode":"HA","countryCode":"ZW","latitude":"-17.82162880","longitude":"31.04922590"},{"name":"Manicaland","isoCode":"MA","countryCode":"ZW","latitude":"-18.92163860","longitude":"32.17460500"},{"name":"Mashonaland Central Province","isoCode":"MC","countryCode":"ZW","latitude":"-16.76442950","longitude":"31.07937050"},{"name":"Mashonaland East Province","isoCode":"ME","countryCode":"ZW","latitude":"-18.58716420","longitude":"31.26263660"},{"name":"Midlands Province","isoCode":"MI","countryCode":"ZW","latitude":"-19.05520090","longitude":"29.60354950"},{"name":"Matabeleland North Province","isoCode":"MN","countryCode":"ZW","latitude":"-18.53315660","longitude":"27.54958460"},{"name":"Matabeleland South Province","isoCode":"MS","countryCode":"ZW","latitude":"-21.05233700","longitude":"29.04599270"},{"name":"Masvingo Province","isoCode":"MV","countryCode":"ZW","latitude":"-20.62415090","longitude":"31.26263660"},{"name":"Mashonaland West Province","isoCode":"MW","countryCode":"ZW","latitude":"-17.48510290","longitude":"29.78892480"}]');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
/*!******************************************!*\
  !*** ./resources/blocks/invoice/view.js ***!
  \******************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _inscss_invoice_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @inscss/invoice.scss */ "./resources/scss/invoice.scss");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/dom-ready */ "@wordpress/dom-ready");
/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react-router-dom */ "./node_modules/.pnpm/react-router@7.1.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-K6AXKMTT.mjs");
/* harmony import */ var _src_views_Invoices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/views/Invoices */ "./resources/blocks/invoice/src/views/Invoices.jsx");
/* harmony import */ var _src_views_Settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/views/Settings */ "./resources/blocks/invoice/src/views/Settings.jsx");
/* harmony import */ var _src_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/contexts/SettingsContext */ "./resources/blocks/invoice/src/contexts/SettingsContext.js");
/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-toastify */ "./node_modules/.pnpm/react-toastify@11.0.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-toastify/dist/index.mjs");
/* harmony import */ var _src_views_Business__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/views/Business */ "./resources/blocks/invoice/src/views/Business.jsx");
/* harmony import */ var _src_views_InvoiceNew__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/views/InvoiceNew */ "./resources/blocks/invoice/src/views/InvoiceNew.jsx");
/* harmony import */ var _src_views_InvoiceEdit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/views/InvoiceEdit */ "./resources/blocks/invoice/src/views/InvoiceEdit.jsx");
/* harmony import */ var _src_views_InvoiceView__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/views/InvoiceView */ "./resources/blocks/invoice/src/views/InvoiceView.jsx");
/* harmony import */ var _src_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/contexts/InvoicesContext */ "./resources/blocks/invoice/src/contexts/InvoicesContext.js");
/* harmony import */ var _src_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/contexts/InvoiceContext */ "./resources/blocks/invoice/src/contexts/InvoiceContext.js");















const InvoiceContainer = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_contexts_SettingsContext__WEBPACK_IMPORTED_MODULE_6__.SettingsProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_contexts_InvoicesContext__WEBPACK_IMPORTED_MODULE_12__.InvoicesProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_contexts_InvoiceContext__WEBPACK_IMPORTED_MODULE_13__.InvoiceProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.BrowserRouter, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Routes, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_Invoices__WEBPACK_IMPORTED_MODULE_4__["default"], null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices/new",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_InvoiceNew__WEBPACK_IMPORTED_MODULE_9__["default"], null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices/edit/:uuid",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_InvoiceEdit__WEBPACK_IMPORTED_MODULE_10__["default"], null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices/view/:uuid",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_InvoiceView__WEBPACK_IMPORTED_MODULE_11__["default"], null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices/business",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_Business__WEBPACK_IMPORTED_MODULE_8__["default"], null)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_14__.Route, {
    path: "/invoices/settings",
    element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_src_views_Settings__WEBPACK_IMPORTED_MODULE_5__["default"], null)
  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_toastify__WEBPACK_IMPORTED_MODULE_7__.ToastContainer, {
    draggable: true,
    position: "bottom-right"
  }))));
};
const AppInvoiceContainer = document.getElementById('app-invoice-container');
if (AppInvoiceContainer) {
  _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_2___default()(() => {
    const root = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.createRoot)(AppInvoiceContainer);
    root.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(InvoiceContainer, null));
  });
}
})();

/******/ })()
;
//# sourceMappingURL=view.js.map